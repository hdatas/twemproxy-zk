cscope 15 /home/hcd/swinstall/twemproxy-su               0001509164
	@config.h

5 
	#HAVE_ARPA_INET_H
 1

	)

11 
	#HAVE_ASSERT_PANIC
 1

	)

14 
	#HAVE_BACKTRACE
 1

	)

17 
	#HAVE_DEBUG_LOG
 1

	)

20 
	#HAVE_DLFCN_H
 1

	)

23 
	#HAVE_DUP2
 1

	)

26 
	#HAVE_EPOLL
 1

	)

32 
	#HAVE_EXECINFO_H
 1

	)

35 
	#HAVE_FCNTL_H
 1

	)

38 
	#HAVE_FLOAT_H
 1

	)

41 
	#HAVE_FORK
 1

	)

44 
	#HAVE_GETHOSTNAME
 1

	)

47 
	#HAVE_GETTIMEOFDAY
 1

	)

50 
	#HAVE_INTMAX_T
 1

	)

53 
	#HAVE_INTPTR_T
 1

	)

56 
	#HAVE_INTTYPES_H
 1

	)

62 
	#HAVE_LIBM
 1

	)

65 
	#HAVE_LIBPTHREAD
 1

	)

68 
	#HAVE_LIMITS_H
 1

	)

71 
	#HAVE_LITTLE_ENDIAN
 1

	)

77 
	#HAVE_LONG_LONG_INT
 1

	)

81 
	#HAVE_MALLOC
 1

	)

84 
	#HAVE_MEMCHR
 1

	)

87 
	#HAVE_MEMMOVE
 1

	)

90 
	#HAVE_MEMORY_H
 1

	)

93 
	#HAVE_MEMSET
 1

	)

96 
	#HAVE_NETDB_H
 1

	)

99 
	#HAVE_NETINET_IN_H
 1

	)

103 
	#HAVE_REALLOC
 1

	)

106 
	#HAVE_SOCKET
 1

	)

109 
	#HAVE_STATS
 1

	)

112 
	#HAVE_STDBOOL_H
 1

	)

115 
	#HAVE_STDDEF_H
 1

	)

118 
	#HAVE_STDINT_H
 1

	)

121 
	#HAVE_STDLIB_H
 1

	)

124 
	#HAVE_STRCHR
 1

	)

127 
	#HAVE_STRERROR
 1

	)

130 
	#HAVE_STRINGS_H
 1

	)

133 
	#HAVE_STRING_H
 1

	)

136 
	#HAVE_STRNDUP
 1

	)

139 
	#HAVE_STRTOUL
 1

	)

142 
	#HAVE_SYS_EPOLL_H
 1

	)

148 
	#HAVE_SYS_IOCTL_H
 1

	)

151 
	#HAVE_SYS_SOCKET_H
 1

	)

154 
	#HAVE_SYS_STAT_H
 1

	)

157 
	#HAVE_SYS_TIME_H
 1

	)

160 
	#HAVE_SYS_TYPES_H
 1

	)

163 
	#HAVE_SYS_UIO_H
 1

	)

166 
	#HAVE_SYS_UN_H
 1

	)

169 
	#HAVE_UINTMAX_T
 1

	)

172 
	#HAVE_UINTPTR_T
 1

	)

175 
	#HAVE_UNISTD_H
 1

	)

178 
	#HAVE_UNSIGNED_LONG_LONG_INT
 1

	)

181 
	#HAVE_VFORK
 1

	)

187 
	#HAVE_WORKING_FORK
 1

	)

190 
	#HAVE_WORKING_VFORK
 1

	)

193 
	#HAVE__BOOL
 1

	)

197 
	#LT_OBJDIR
 ".libs/"

	)

200 
	#NC_VERSION_MAJOR
 0

	)

203 
	#NC_VERSION_MINOR
 4

	)

206 
	#NC_VERSION_PATCH
 1

	)

209 
	#NC_VERSION_STRING
 "0.4.1"

	)

212 
	#PACKAGE
 "nut¸ackî"

	)

215 
	#PACKAGE_BUGREPORT
 "m™j@cs.°™f‹d.edu"

	)

218 
	#PACKAGE_NAME
 "nut¸ackî"

	)

221 
	#PACKAGE_STRING
 "nut¸ackî 0.4.1"

	)

224 
	#PACKAGE_TARNAME
 "nut¸ackî"

	)

227 
	#PACKAGE_URL
 ""

	)

230 
	#PACKAGE_VERSION
 "0.4.1"

	)

233 
	#STDC_HEADERS
 1

	)

236 
	#VERSION
 "0.4.1"

	)

240 #i‡
deföed
 
AC_APPLE_UNIVERSAL_BUILD


241 #i‡
deföed
 
__BIG_ENDIAN__


242 
	#WORDS_BIGENDIAN
 1

	)

245 #i‚de‡
WORDS_BIGENDIAN


267 #i‚de‡
__˝lu•lus


	@contrib/yaml-0.1.4/config.h

5 
	#HAVE_DLFCN_H
 1

	)

8 
	#HAVE_INTTYPES_H
 1

	)

11 
	#HAVE_MEMORY_H
 1

	)

14 
	#HAVE_STDINT_H
 1

	)

17 
	#HAVE_STDLIB_H
 1

	)

20 
	#HAVE_STRINGS_H
 1

	)

23 
	#HAVE_STRING_H
 1

	)

26 
	#HAVE_SYS_STAT_H
 1

	)

29 
	#HAVE_SYS_TYPES_H
 1

	)

32 
	#HAVE_UNISTD_H
 1

	)

36 
	#LT_OBJDIR
 ".libs/"

	)

39 
	#PACKAGE
 "yaml"

	)

42 
	#PACKAGE_BUGREPORT
 "hâp://pyyaml.‹g/√wtickë?comp⁄ítˆibyaml"

	)

45 
	#PACKAGE_NAME
 "yaml"

	)

48 
	#PACKAGE_STRING
 "yam»0.1.4"

	)

51 
	#PACKAGE_TARNAME
 "yaml"

	)

54 
	#PACKAGE_URL
 ""

	)

57 
	#PACKAGE_VERSION
 "0.1.4"

	)

60 
	#STDC_HEADERS
 1

	)

63 
	#VERSION
 "0.1.4"

	)

66 
	#YAML_VERSION_MAJOR
 0

	)

69 
	#YAML_VERSION_MINOR
 1

	)

72 
	#YAML_VERSION_PATCH
 4

	)

75 
	#YAML_VERSION_STRING
 "0.1.4"

	)

	@contrib/yaml-0.1.4/include/yaml.h

11 #i‚de‡
YAML_H


12 
	#YAML_H


	)

14 #ifde‡
__˝lu•lus


18 
	~<°dlib.h
>

19 
	~<°dio.h
>

20 
	~<°rög.h
>

29 #ifde‡
_WIN32


30 #i‡
deföed
(
YAML_DECLARE_STATIC
)

31 
	#YAML_DECLARE
(
ty≥
Ë
	)
type

32 #ñi‡
deföed
(
YAML_DECLARE_EXPORT
)

33 
	#YAML_DECLARE
(
ty≥
Ë
	`__de˛•ec
(
dŒexp‹t
Ë
	)
type

35 
	#YAML_DECLARE
(
ty≥
Ë
	`__de˛•ec
(
dŒimp‹t
Ë
	)
type

38 
	#YAML_DECLARE
(
ty≥
Ë
	)
type

56 
YAML_DECLARE
(const *)

57 
yaml_gë_vîsi⁄_°rög
();

67 
YAML_DECLARE
()

68 
yaml_gë_vîsi⁄
(*
maj‹
, *
mö‹
, *
∑tch
);

78 
	tyaml_ch¨_t
;

81 
	syaml_vîsi⁄_dúe˘ive_s
 {

83 
maj‹
;

85 
mö‹
;

86 } 
	tyaml_vîsi⁄_dúe˘ive_t
;

89 
	syaml_èg_dúe˘ive_s
 {

91 
yaml_ch¨_t
 *
h™dÀ
;

93 
yaml_ch¨_t
 *
¥efix
;

94 } 
	tyaml_èg_dúe˘ive_t
;

97 
	eyaml_ícodög_e
 {

99 
YAML_ANY_ENCODING
,

101 
YAML_UTF8_ENCODING
,

103 
YAML_UTF16LE_ENCODING
,

105 
YAML_UTF16BE_ENCODING


106 } 
	tyaml_ícodög_t
;

110 
	eyaml_bªak_e
 {

112 
YAML_ANY_BREAK
,

114 
YAML_CR_BREAK
,

116 
YAML_LN_BREAK
,

118 
YAML_CRLN_BREAK


119 } 
	tyaml_bªak_t
;

122 
	eyaml_îr‹_ty≥_e
 {

124 
YAML_NO_ERROR
,

127 
YAML_MEMORY_ERROR
,

130 
YAML_READER_ERROR
,

132 
YAML_SCANNER_ERROR
,

134 
YAML_PARSER_ERROR
,

136 
YAML_COMPOSER_ERROR
,

139 
YAML_WRITER_ERROR
,

141 
YAML_EMITTER_ERROR


142 } 
	tyaml_îr‹_ty≥_t
;

145 
	syaml_m¨k_s
 {

147 
size_t
 
ödex
;

150 
size_t
 
löe
;

153 
size_t
 
cﬁumn
;

154 } 
	tyaml_m¨k_t
;

164 
	eyaml_sˇœr_°yÀ_e
 {

166 
YAML_ANY_SCALAR_STYLE
,

169 
YAML_PLAIN_SCALAR_STYLE
,

172 
YAML_SINGLE_QUOTED_SCALAR_STYLE
,

174 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
,

177 
YAML_LITERAL_SCALAR_STYLE
,

179 
YAML_FOLDED_SCALAR_STYLE


180 } 
	tyaml_sˇœr_°yÀ_t
;

183 
	eyaml_£quí˚_°yÀ_e
 {

185 
YAML_ANY_SEQUENCE_STYLE
,

188 
YAML_BLOCK_SEQUENCE_STYLE
,

190 
YAML_FLOW_SEQUENCE_STYLE


191 } 
	tyaml_£quí˚_°yÀ_t
;

194 
	eyaml_m≠pög_°yÀ_e
 {

196 
YAML_ANY_MAPPING_STYLE
,

199 
YAML_BLOCK_MAPPING_STYLE
,

201 
YAML_FLOW_MAPPING_STYLE


203 } 
	tyaml_m≠pög_°yÀ_t
;

213 
	eyaml_tokí_ty≥_e
 {

215 
YAML_NO_TOKEN
,

218 
YAML_STREAM_START_TOKEN
,

220 
YAML_STREAM_END_TOKEN
,

223 
YAML_VERSION_DIRECTIVE_TOKEN
,

225 
YAML_TAG_DIRECTIVE_TOKEN
,

227 
YAML_DOCUMENT_START_TOKEN
,

229 
YAML_DOCUMENT_END_TOKEN
,

232 
YAML_BLOCK_SEQUENCE_START_TOKEN
,

234 
YAML_BLOCK_MAPPING_START_TOKEN
,

236 
YAML_BLOCK_END_TOKEN
,

239 
YAML_FLOW_SEQUENCE_START_TOKEN
,

241 
YAML_FLOW_SEQUENCE_END_TOKEN
,

243 
YAML_FLOW_MAPPING_START_TOKEN
,

245 
YAML_FLOW_MAPPING_END_TOKEN
,

248 
YAML_BLOCK_ENTRY_TOKEN
,

250 
YAML_FLOW_ENTRY_TOKEN
,

252 
YAML_KEY_TOKEN
,

254 
YAML_VALUE_TOKEN
,

257 
YAML_ALIAS_TOKEN
,

259 
YAML_ANCHOR_TOKEN
,

261 
YAML_TAG_TOKEN
,

263 
YAML_SCALAR_TOKEN


264 } 
	tyaml_tokí_ty≥_t
;

267 
	syaml_tokí_s
 {

270 
yaml_tokí_ty≥_t
 
ty≥
;

278 
yaml_ícodög_t
 
ícodög
;

279 } 
°ªam_°¨t
;

284 
yaml_ch¨_t
 *
vÆue
;

285 } 
Æüs
;

290 
yaml_ch¨_t
 *
vÆue
;

291 } 
™ch‹
;

296 
yaml_ch¨_t
 *
h™dÀ
;

298 
yaml_ch¨_t
 *
suffix
;

299 } 
èg
;

304 
yaml_ch¨_t
 *
vÆue
;

306 
size_t
 
Àngth
;

308 
yaml_sˇœr_°yÀ_t
 
°yÀ
;

309 } 
sˇœr
;

314 
maj‹
;

316 
mö‹
;

317 } 
vîsi⁄_dúe˘ive
;

322 
yaml_ch¨_t
 *
h™dÀ
;

324 
yaml_ch¨_t
 *
¥efix
;

325 } 
èg_dúe˘ive
;

327 } 
d©a
;

330 
yaml_m¨k_t
 
°¨t_m¨k
;

332 
yaml_m¨k_t
 
íd_m¨k
;

334 } 
	tyaml_tokí_t
;

342 
YAML_DECLARE
()

343 
yaml_tokí_dñëe
(
yaml_tokí_t
 *
tokí
);

353 
	eyaml_evít_ty≥_e
 {

355 
YAML_NO_EVENT
,

358 
YAML_STREAM_START_EVENT
,

360 
YAML_STREAM_END_EVENT
,

363 
YAML_DOCUMENT_START_EVENT
,

365 
YAML_DOCUMENT_END_EVENT
,

368 
YAML_ALIAS_EVENT
,

370 
YAML_SCALAR_EVENT
,

373 
YAML_SEQUENCE_START_EVENT
,

375 
YAML_SEQUENCE_END_EVENT
,

378 
YAML_MAPPING_START_EVENT
,

380 
YAML_MAPPING_END_EVENT


381 } 
	tyaml_evít_ty≥_t
;

384 
	syaml_evít_s
 {

387 
yaml_evít_ty≥_t
 
ty≥
;

395 
yaml_ícodög_t
 
ícodög
;

396 } 
°ªam_°¨t
;

401 
yaml_vîsi⁄_dúe˘ive_t
 *
vîsi⁄_dúe˘ive
;

406 
yaml_èg_dúe˘ive_t
 *
°¨t
;

408 
yaml_èg_dúe˘ive_t
 *
íd
;

409 } 
èg_dúe˘ives
;

412 
im∂icô
;

413 } 
documít_°¨t
;

418 
im∂icô
;

419 } 
documít_íd
;

424 
yaml_ch¨_t
 *
™ch‹
;

425 } 
Æüs
;

430 
yaml_ch¨_t
 *
™ch‹
;

432 
yaml_ch¨_t
 *
èg
;

434 
yaml_ch¨_t
 *
vÆue
;

436 
size_t
 
Àngth
;

438 
∂aö_im∂icô
;

440 
quŸed_im∂icô
;

442 
yaml_sˇœr_°yÀ_t
 
°yÀ
;

443 } 
sˇœr
;

448 
yaml_ch¨_t
 *
™ch‹
;

450 
yaml_ch¨_t
 *
èg
;

452 
im∂icô
;

454 
yaml_£quí˚_°yÀ_t
 
°yÀ
;

455 } 
£quí˚_°¨t
;

460 
yaml_ch¨_t
 *
™ch‹
;

462 
yaml_ch¨_t
 *
èg
;

464 
im∂icô
;

466 
yaml_m≠pög_°yÀ_t
 
°yÀ
;

467 } 
m≠pög_°¨t
;

469 } 
d©a
;

472 
yaml_m¨k_t
 
°¨t_m¨k
;

474 
yaml_m¨k_t
 
íd_m¨k
;

476 } 
	tyaml_evít_t
;

487 
YAML_DECLARE
()

488 
yaml_°ªam_°¨t_evít_öôülize
(
yaml_evít_t
 *
evít
,

489 
yaml_ícodög_t
 
ícodög
);

499 
YAML_DECLARE
()

500 
yaml_°ªam_íd_evít_öôülize
(
yaml_evít_t
 *
evít
);

521 
YAML_DECLARE
()

522 
yaml_documít_°¨t_evít_öôülize
(
yaml_evít_t
 *
evít
,

523 
yaml_vîsi⁄_dúe˘ive_t
 *
vîsi⁄_dúe˘ive
,

524 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ives_°¨t
,

525 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ives_íd
,

526 
im∂icô
);

540 
YAML_DECLARE
()

541 
yaml_documít_íd_evít_öôülize
(
yaml_evít_t
 *
evít
, 
im∂icô
);

552 
YAML_DECLARE
()

553 
yaml_Æüs_evít_öôülize
(
yaml_evít_t
 *
evít
, 
yaml_ch¨_t
 *
™ch‹
);

577 
YAML_DECLARE
()

578 
yaml_sˇœr_evít_öôülize
(
yaml_evít_t
 *
evít
,

579 
yaml_ch¨_t
 *
™ch‹
, yaml_ch¨_à*
èg
,

580 
yaml_ch¨_t
 *
vÆue
, 
Àngth
,

581 
∂aö_im∂icô
, 
quŸed_im∂icô
,

582 
yaml_sˇœr_°yÀ_t
 
°yÀ
);

600 
YAML_DECLARE
()

601 
yaml_£quí˚_°¨t_evít_öôülize
(
yaml_evít_t
 *
evít
,

602 
yaml_ch¨_t
 *
™ch‹
, yaml_ch¨_à*
èg
, 
im∂icô
,

603 
yaml_£quí˚_°yÀ_t
 
°yÀ
);

613 
YAML_DECLARE
()

614 
yaml_£quí˚_íd_evít_öôülize
(
yaml_evít_t
 *
evít
);

632 
YAML_DECLARE
()

633 
yaml_m≠pög_°¨t_evít_öôülize
(
yaml_evít_t
 *
evít
,

634 
yaml_ch¨_t
 *
™ch‹
, yaml_ch¨_à*
èg
, 
im∂icô
,

635 
yaml_m≠pög_°yÀ_t
 
°yÀ
);

645 
YAML_DECLARE
()

646 
yaml_m≠pög_íd_evít_öôülize
(
yaml_evít_t
 *
evít
);

654 
YAML_DECLARE
()

655 
yaml_evít_dñëe
(
yaml_evít_t
 *
evít
);

665 
	#YAML_NULL_TAG
 "èg:yaml.‹g,2002:nuŒ"

	)

667 
	#YAML_BOOL_TAG
 "èg:yaml.‹g,2002:boﬁ"

	)

669 
	#YAML_STR_TAG
 "èg:yaml.‹g,2002:°r"

	)

671 
	#YAML_INT_TAG
 "èg:yaml.‹g,2002:öt"

	)

673 
	#YAML_FLOAT_TAG
 "èg:yaml.‹g,2002:Êﬂt"

	)

675 
	#YAML_TIMESTAMP_TAG
 "èg:yaml.‹g,2002:time°amp"

	)

678 
	#YAML_SEQ_TAG
 "èg:yaml.‹g,2002:£q"

	)

680 
	#YAML_MAP_TAG
 "èg:yaml.‹g,2002:m≠"

	)

683 
	#YAML_DEFAULT_SCALAR_TAG
 
YAML_STR_TAG


	)

685 
	#YAML_DEFAULT_SEQUENCE_TAG
 
YAML_SEQ_TAG


	)

687 
	#YAML_DEFAULT_MAPPING_TAG
 
YAML_MAP_TAG


	)

690 
	eyaml_node_ty≥_e
 {

692 
YAML_NO_NODE
,

695 
YAML_SCALAR_NODE
,

697 
YAML_SEQUENCE_NODE
,

699 
YAML_MAPPING_NODE


700 } 
	tyaml_node_ty≥_t
;

703 
yaml_node_s
 
	tyaml_node_t
;

706 
	tyaml_node_ôem_t
;

709 
	syaml_node_∑ú_s
 {

711 
key
;

713 
vÆue
;

714 } 
	tyaml_node_∑ú_t
;

717 
	syaml_node_s
 {

720 
yaml_node_ty≥_t
 
ty≥
;

723 
yaml_ch¨_t
 *
èg
;

731 
yaml_ch¨_t
 *
vÆue
;

733 
size_t
 
Àngth
;

735 
yaml_sˇœr_°yÀ_t
 
°yÀ
;

736 } 
sˇœr
;

743 
yaml_node_ôem_t
 *
°¨t
;

745 
yaml_node_ôem_t
 *
íd
;

747 
yaml_node_ôem_t
 *
t›
;

748 } 
ôems
;

750 
yaml_£quí˚_°yÀ_t
 
°yÀ
;

751 } 
£quí˚
;

758 
yaml_node_∑ú_t
 *
°¨t
;

760 
yaml_node_∑ú_t
 *
íd
;

762 
yaml_node_∑ú_t
 *
t›
;

763 } 
∑ús
;

765 
yaml_m≠pög_°yÀ_t
 
°yÀ
;

766 } 
m≠pög
;

768 } 
d©a
;

771 
yaml_m¨k_t
 
°¨t_m¨k
;

773 
yaml_m¨k_t
 
íd_m¨k
;

778 
	syaml_documít_s
 {

783 
yaml_node_t
 *
°¨t
;

785 
yaml_node_t
 *
íd
;

787 
yaml_node_t
 *
t›
;

788 } 
nodes
;

791 
yaml_vîsi⁄_dúe˘ive_t
 *
vîsi⁄_dúe˘ive
;

796 
yaml_èg_dúe˘ive_t
 *
°¨t
;

798 
yaml_èg_dúe˘ive_t
 *
íd
;

799 } 
èg_dúe˘ives
;

802 
°¨t_im∂icô
;

804 
íd_im∂icô
;

807 
yaml_m¨k_t
 
°¨t_m¨k
;

809 
yaml_m¨k_t
 
íd_m¨k
;

811 } 
	tyaml_documít_t
;

831 
YAML_DECLARE
()

832 
yaml_documít_öôülize
(
yaml_documít_t
 *
documít
,

833 
yaml_vîsi⁄_dúe˘ive_t
 *
vîsi⁄_dúe˘ive
,

834 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ives_°¨t
,

835 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ives_íd
,

836 
°¨t_im∂icô
, 
íd_im∂icô
);

844 
YAML_DECLARE
()

845 
yaml_documít_dñëe
(
yaml_documít_t
 *
documít
);

859 
YAML_DECLARE
(
yaml_node_t
 *)

860 
yaml_documít_gë_node
(
yaml_documít_t
 *
documít
, 
ödex
);

878 
YAML_DECLARE
(
yaml_node_t
 *)

879 
yaml_documít_gë_roŸ_node
(
yaml_documít_t
 *
documít
);

895 
YAML_DECLARE
()

896 
yaml_documít_add_sˇœr
(
yaml_documít_t
 *
documít
,

897 
yaml_ch¨_t
 *
èg
, yaml_ch¨_à*
vÆue
, 
Àngth
,

898 
yaml_sˇœr_°yÀ_t
 
°yÀ
);

912 
YAML_DECLARE
()

913 
yaml_documít_add_£quí˚
(
yaml_documít_t
 *
documít
,

914 
yaml_ch¨_t
 *
èg
, 
yaml_£quí˚_°yÀ_t
 
°yÀ
);

928 
YAML_DECLARE
()

929 
yaml_documít_add_m≠pög
(
yaml_documít_t
 *
documít
,

930 
yaml_ch¨_t
 *
èg
, 
yaml_m≠pög_°yÀ_t
 
°yÀ
);

942 
YAML_DECLARE
()

943 
yaml_documít_≠≥nd_£quí˚_ôem
(
yaml_documít_t
 *
documít
,

944 
£quí˚
, 
ôem
);

957 
YAML_DECLARE
()

958 
yaml_documít_≠≥nd_m≠pög_∑ú
(
yaml_documít_t
 *
documít
,

959 
m≠pög
, 
key
, 
vÆue
);

986 
	tyaml_ªad_h™dÀr_t
(*
	td©a
, *
	tbuf„r
, 
	tsize_t
 
	tsize
,

987 
	tsize_t
 *
	tsize_ªad
);

993 
	syaml_sim∂e_key_s
 {

995 
possibÀ
;

998 
ªquúed
;

1001 
size_t
 
tokí_numbî
;

1004 
yaml_m¨k_t
 
m¨k
;

1005 } 
	tyaml_sim∂e_key_t
;

1010 
	eyaml_∑r£r_°©e_e
 {

1012 
YAML_PARSE_STREAM_START_STATE
,

1014 
YAML_PARSE_IMPLICIT_DOCUMENT_START_STATE
,

1016 
YAML_PARSE_DOCUMENT_START_STATE
,

1018 
YAML_PARSE_DOCUMENT_CONTENT_STATE
,

1020 
YAML_PARSE_DOCUMENT_END_STATE
,

1022 
YAML_PARSE_BLOCK_NODE_STATE
,

1024 
YAML_PARSE_BLOCK_NODE_OR_INDENTLESS_SEQUENCE_STATE
,

1026 
YAML_PARSE_FLOW_NODE_STATE
,

1028 
YAML_PARSE_BLOCK_SEQUENCE_FIRST_ENTRY_STATE
,

1030 
YAML_PARSE_BLOCK_SEQUENCE_ENTRY_STATE
,

1032 
YAML_PARSE_INDENTLESS_SEQUENCE_ENTRY_STATE
,

1034 
YAML_PARSE_BLOCK_MAPPING_FIRST_KEY_STATE
,

1036 
YAML_PARSE_BLOCK_MAPPING_KEY_STATE
,

1038 
YAML_PARSE_BLOCK_MAPPING_VALUE_STATE
,

1040 
YAML_PARSE_FLOW_SEQUENCE_FIRST_ENTRY_STATE
,

1042 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_STATE
,

1044 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_KEY_STATE
,

1046 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_VALUE_STATE
,

1048 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_END_STATE
,

1050 
YAML_PARSE_FLOW_MAPPING_FIRST_KEY_STATE
,

1052 
YAML_PARSE_FLOW_MAPPING_KEY_STATE
,

1054 
YAML_PARSE_FLOW_MAPPING_VALUE_STATE
,

1056 
YAML_PARSE_FLOW_MAPPING_EMPTY_VALUE_STATE
,

1058 
YAML_PARSE_END_STATE


1059 } 
	tyaml_∑r£r_°©e_t
;

1065 
	syaml_Æüs_d©a_s
 {

1067 
yaml_ch¨_t
 *
™ch‹
;

1069 
ödex
;

1071 
yaml_m¨k_t
 
m¨k
;

1072 } 
	tyaml_Æüs_d©a_t
;

1081 
	syaml_∑r£r_s
 {

1089 
yaml_îr‹_ty≥_t
 
îr‹
;

1091 c⁄° *
¥obÀm
;

1093 
size_t
 
¥obÀm_off£t
;

1095 
¥obÀm_vÆue
;

1097 
yaml_m¨k_t
 
¥obÀm_m¨k
;

1099 c⁄° *
c⁄ãxt
;

1101 
yaml_m¨k_t
 
c⁄ãxt_m¨k
;

1113 
yaml_ªad_h™dÀr_t
 *
ªad_h™dÀr
;

1116 *
ªad_h™dÀr_d©a
;

1123 c⁄° *
°¨t
;

1125 c⁄° *
íd
;

1127 c⁄° *
cuºít
;

1128 } 
°rög
;

1131 
FILE
 *
fûe
;

1132 } 
öput
;

1135 
eof
;

1140 
yaml_ch¨_t
 *
°¨t
;

1142 
yaml_ch¨_t
 *
íd
;

1144 
yaml_ch¨_t
 *
poöãr
;

1146 
yaml_ch¨_t
 *
œ°
;

1147 } 
buf„r
;

1150 
size_t
 
uƒód
;

1155 *
°¨t
;

1157 *
íd
;

1159 *
poöãr
;

1161 *
œ°
;

1162 } 
øw_buf„r
;

1165 
yaml_ícodög_t
 
ícodög
;

1168 
size_t
 
off£t
;

1171 
yaml_m¨k_t
 
m¨k
;

1183 
°ªam_°¨t_¥odu˚d
;

1186 
°ªam_íd_¥odu˚d
;

1189 
Êow_Àvñ
;

1194 
yaml_tokí_t
 *
°¨t
;

1196 
yaml_tokí_t
 *
íd
;

1198 
yaml_tokí_t
 *
hód
;

1200 
yaml_tokí_t
 *
èû
;

1201 } 
tokís
;

1204 
size_t
 
tokís_∑r£d
;

1207 
tokí_avaûabÀ
;

1212 *
°¨t
;

1214 *
íd
;

1216 *
t›
;

1217 } 
ödíts
;

1220 
ödít
;

1223 
sim∂e_key_Ælowed
;

1228 
yaml_sim∂e_key_t
 *
°¨t
;

1230 
yaml_sim∂e_key_t
 *
íd
;

1232 
yaml_sim∂e_key_t
 *
t›
;

1233 } 
sim∂e_keys
;

1247 
yaml_∑r£r_°©e_t
 *
°¨t
;

1249 
yaml_∑r£r_°©e_t
 *
íd
;

1251 
yaml_∑r£r_°©e_t
 *
t›
;

1252 } 
°©es
;

1255 
yaml_∑r£r_°©e_t
 
°©e
;

1260 
yaml_m¨k_t
 *
°¨t
;

1262 
yaml_m¨k_t
 *
íd
;

1264 
yaml_m¨k_t
 *
t›
;

1265 } 
m¨ks
;

1270 
yaml_èg_dúe˘ive_t
 *
°¨t
;

1272 
yaml_èg_dúe˘ive_t
 *
íd
;

1274 
yaml_èg_dúe˘ive_t
 *
t›
;

1275 } 
èg_dúe˘ives
;

1289 
yaml_Æüs_d©a_t
 *
°¨t
;

1291 
yaml_Æüs_d©a_t
 *
íd
;

1293 
yaml_Æüs_d©a_t
 *
t›
;

1294 } 
Æü£s
;

1297 
yaml_documít_t
 *
documít
;

1303 } 
	tyaml_∑r£r_t
;

1316 
YAML_DECLARE
()

1317 
yaml_∑r£r_öôülize
(
yaml_∑r£r_t
 *
∑r£r
);

1325 
YAML_DECLARE
()

1326 
yaml_∑r£r_dñëe
(
yaml_∑r£r_t
 *
∑r£r
);

1340 
YAML_DECLARE
()

1341 
yaml_∑r£r_£t_öput_°rög
(
yaml_∑r£r_t
 *
∑r£r
,

1342 c⁄° *
öput
, 
size_t
 
size
);

1354 
YAML_DECLARE
()

1355 
yaml_∑r£r_£t_öput_fûe
(
yaml_∑r£r_t
 *
∑r£r
, 
FILE
 *
fûe
);

1366 
YAML_DECLARE
()

1367 
yaml_∑r£r_£t_öput
(
yaml_∑r£r_t
 *
∑r£r
,

1368 
yaml_ªad_h™dÀr_t
 *
h™dÀr
, *
d©a
);

1377 
YAML_DECLARE
()

1378 
yaml_∑r£r_£t_ícodög
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_ícodög_t
 
ícodög
);

1401 
YAML_DECLARE
()

1402 
yaml_∑r£r_sˇn
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
);

1425 
YAML_DECLARE
()

1426 
yaml_∑r£r_∑r£
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
);

1450 
YAML_DECLARE
()

1451 
yaml_∑r£r_lﬂd
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_documít_t
 *
documít
);

1476 
	tyaml_wrôe_h™dÀr_t
(*
	td©a
, *
	tbuf„r
, 
	tsize_t
 
	tsize
);

1479 
	eyaml_emôãr_°©e_e
 {

1481 
YAML_EMIT_STREAM_START_STATE
,

1483 
YAML_EMIT_FIRST_DOCUMENT_START_STATE
,

1485 
YAML_EMIT_DOCUMENT_START_STATE
,

1487 
YAML_EMIT_DOCUMENT_CONTENT_STATE
,

1489 
YAML_EMIT_DOCUMENT_END_STATE
,

1491 
YAML_EMIT_FLOW_SEQUENCE_FIRST_ITEM_STATE
,

1493 
YAML_EMIT_FLOW_SEQUENCE_ITEM_STATE
,

1495 
YAML_EMIT_FLOW_MAPPING_FIRST_KEY_STATE
,

1497 
YAML_EMIT_FLOW_MAPPING_KEY_STATE
,

1499 
YAML_EMIT_FLOW_MAPPING_SIMPLE_VALUE_STATE
,

1501 
YAML_EMIT_FLOW_MAPPING_VALUE_STATE
,

1503 
YAML_EMIT_BLOCK_SEQUENCE_FIRST_ITEM_STATE
,

1505 
YAML_EMIT_BLOCK_SEQUENCE_ITEM_STATE
,

1507 
YAML_EMIT_BLOCK_MAPPING_FIRST_KEY_STATE
,

1509 
YAML_EMIT_BLOCK_MAPPING_KEY_STATE
,

1511 
YAML_EMIT_BLOCK_MAPPING_SIMPLE_VALUE_STATE
,

1513 
YAML_EMIT_BLOCK_MAPPING_VALUE_STATE
,

1515 
YAML_EMIT_END_STATE


1516 } 
	tyaml_emôãr_°©e_t
;

1525 
	syaml_emôãr_s
 {

1533 
yaml_îr‹_ty≥_t
 
îr‹
;

1535 c⁄° *
¥obÀm
;

1547 
yaml_wrôe_h™dÀr_t
 *
wrôe_h™dÀr
;

1550 *
wrôe_h™dÀr_d©a
;

1557 *
buf„r
;

1559 
size_t
 
size
;

1561 
size_t
 *
size_wrôãn
;

1562 } 
°rög
;

1565 
FILE
 *
fûe
;

1566 } 
ouçut
;

1571 
yaml_ch¨_t
 *
°¨t
;

1573 
yaml_ch¨_t
 *
íd
;

1575 
yaml_ch¨_t
 *
poöãr
;

1577 
yaml_ch¨_t
 *
œ°
;

1578 } 
buf„r
;

1583 *
°¨t
;

1585 *
íd
;

1587 *
poöãr
;

1589 *
œ°
;

1590 } 
øw_buf„r
;

1593 
yaml_ícodög_t
 
ícodög
;

1605 
ˇn⁄iˇl
;

1607 
be°_ödít
;

1609 
be°_width
;

1611 
unicode
;

1613 
yaml_bªak_t
 
löe_bªak
;

1618 
yaml_emôãr_°©e_t
 *
°¨t
;

1620 
yaml_emôãr_°©e_t
 *
íd
;

1622 
yaml_emôãr_°©e_t
 *
t›
;

1623 } 
°©es
;

1626 
yaml_emôãr_°©e_t
 
°©e
;

1631 
yaml_evít_t
 *
°¨t
;

1633 
yaml_evít_t
 *
íd
;

1635 
yaml_evít_t
 *
hód
;

1637 
yaml_evít_t
 *
èû
;

1638 } 
evíts
;

1643 *
°¨t
;

1645 *
íd
;

1647 *
t›
;

1648 } 
ödíts
;

1653 
yaml_èg_dúe˘ive_t
 *
°¨t
;

1655 
yaml_èg_dúe˘ive_t
 *
íd
;

1657 
yaml_èg_dúe˘ive_t
 *
t›
;

1658 } 
èg_dúe˘ives
;

1661 
ödít
;

1664 
Êow_Àvñ
;

1667 
roŸ_c⁄ãxt
;

1669 
£quí˚_c⁄ãxt
;

1671 
m≠pög_c⁄ãxt
;

1673 
sim∂e_key_c⁄ãxt
;

1676 
löe
;

1678 
cﬁumn
;

1680 
whôe•a˚
;

1682 
ödíti⁄
;

1684 
›í_íded
;

1689 
yaml_ch¨_t
 *
™ch‹
;

1691 
size_t
 
™ch‹_Àngth
;

1693 
Æüs
;

1694 } 
™ch‹_d©a
;

1699 
yaml_ch¨_t
 *
h™dÀ
;

1701 
size_t
 
h™dÀ_Àngth
;

1703 
yaml_ch¨_t
 *
suffix
;

1705 
size_t
 
suffix_Àngth
;

1706 } 
èg_d©a
;

1711 
yaml_ch¨_t
 *
vÆue
;

1713 
size_t
 
Àngth
;

1715 
mu…ûöe
;

1717 
Êow_∂aö_Ælowed
;

1719 
block_∂aö_Ælowed
;

1721 
sögÀ_quŸed_Ælowed
;

1723 
block_Ælowed
;

1725 
yaml_sˇœr_°yÀ_t
 
°yÀ
;

1726 } 
sˇœr_d©a
;

1738 
›íed
;

1740 
˛o£d
;

1745 
ª„ªn˚s
;

1747 
™ch‹
;

1749 
£rülized
;

1750 } *
™ch‹s
;

1753 
œ°_™ch‹_id
;

1756 
yaml_documít_t
 *
documít
;

1762 } 
	tyaml_emôãr_t
;

1775 
YAML_DECLARE
()

1776 
yaml_emôãr_öôülize
(
yaml_emôãr_t
 *
emôãr
);

1784 
YAML_DECLARE
()

1785 
yaml_emôãr_dñëe
(
yaml_emôãr_t
 *
emôãr
);

1802 
YAML_DECLARE
()

1803 
yaml_emôãr_£t_ouçut_°rög
(
yaml_emôãr_t
 *
emôãr
,

1804 *
ouçut
, 
size_t
 
size
, size_à*
size_wrôãn
);

1816 
YAML_DECLARE
()

1817 
yaml_emôãr_£t_ouçut_fûe
(
yaml_emôãr_t
 *
emôãr
, 
FILE
 *
fûe
);

1828 
YAML_DECLARE
()

1829 
yaml_emôãr_£t_ouçut
(
yaml_emôãr_t
 *
emôãr
,

1830 
yaml_wrôe_h™dÀr_t
 *
h™dÀr
, *
d©a
);

1839 
YAML_DECLARE
()

1840 
yaml_emôãr_£t_ícodög
(
yaml_emôãr_t
 *
emôãr
, 
yaml_ícodög_t
 
ícodög
);

1850 
YAML_DECLARE
()

1851 
yaml_emôãr_£t_ˇn⁄iˇl
(
yaml_emôãr_t
 *
emôãr
, 
ˇn⁄iˇl
);

1860 
YAML_DECLARE
()

1861 
yaml_emôãr_£t_ödít
(
yaml_emôãr_t
 *
emôãr
, 
ödít
);

1870 
YAML_DECLARE
()

1871 
yaml_emôãr_£t_width
(
yaml_emôãr_t
 *
emôãr
, 
width
);

1880 
YAML_DECLARE
()

1881 
yaml_emôãr_£t_unicode
(
yaml_emôãr_t
 *
emôãr
, 
unicode
);

1890 
YAML_DECLARE
()

1891 
yaml_emôãr_£t_bªak
(
yaml_emôãr_t
 *
emôãr
, 
yaml_bªak_t
 
löe_bªak
);

1907 
YAML_DECLARE
()

1908 
yaml_emôãr_emô
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
);

1920 
YAML_DECLARE
()

1921 
yaml_emôãr_›í
(
yaml_emôãr_t
 *
emôãr
);

1933 
YAML_DECLARE
()

1934 
yaml_emôãr_˛o£
(
yaml_emôãr_t
 *
emôãr
);

1950 
YAML_DECLARE
()

1951 
yaml_emôãr_dump
(
yaml_emôãr_t
 *
emôãr
, 
yaml_documít_t
 *
documít
);

1961 
YAML_DECLARE
()

1962 
yaml_emôãr_Êush
(
yaml_emôãr_t
 *
emôãr
);

1966 #ifde‡
__˝lu•lus


	@contrib/yaml-0.1.4/src/api.c

2 
	~"yaml_¥iv©e.h
"

8 
	$YAML_DECLARE
(const *)

9 
	$yaml_gë_vîsi⁄_°rög
()

11  
YAML_VERSION_STRING
;

12 
	}
}

18 
	$YAML_DECLARE
()

19 
	$yaml_gë_vîsi⁄
(*
maj‹
, *
mö‹
, *
∑tch
)

21 *
maj‹
 = 
YAML_VERSION_MAJOR
;

22 *
mö‹
 = 
YAML_VERSION_MINOR
;

23 *
∑tch
 = 
YAML_VERSION_PATCH
;

24 
	}
}

30 
	$YAML_DECLARE
(*)

31 
	$yaml_mÆloc
(
size_t
 
size
)

33  
	`mÆloc
(
size
 ? size : 1);

34 
	}
}

40 
	$YAML_DECLARE
(*)

41 
	$yaml_ªÆloc
(*
±r
, 
size_t
 
size
)

43  
±r
 ? 
	`ªÆloc
’å, 
size
 ? sizê: 1Ë: 
	`mÆloc
(size ? size : 1);

44 
	}
}

50 
	$YAML_DECLARE
()

51 
	$yaml_‰ì
(*
±r
)

53 i‡(
±r
Ë
	`‰ì
(ptr);

54 
	}
}

60 
	$YAML_DECLARE
(
yaml_ch¨_t
 *)

61 
	$yaml_°rdup
(c⁄° 
yaml_ch¨_t
 *
°r
)

63 i‡(!
°r
)

64  
NULL
;

66  (
yaml_ch¨_t
 *)
	`°rdup
((*)
°r
);

67 
	}
}

73 
	$YAML_DECLARE
()

74 
	$yaml_°rög_exãnd
(
yaml_ch¨_t
 **
°¨t
,

75 
yaml_ch¨_t
 **
poöãr
, yaml_ch¨_à**
íd
)

77 
yaml_ch¨_t
 *
√w_°¨t
 = 
	`yaml_ªÆloc
(*
°¨t
, (*
íd
 - *start)*2);

79 i‡(!
√w_°¨t
)  0;

81 
	`mem£t
(
√w_°¨t
 + (*
íd
 - *
°¨t
), 0, *end - *start);

83 *
poöãr
 = 
√w_°¨t
 + (*poöã∏- *
°¨t
);

84 *
íd
 = 
√w_°¨t
 + (*íd - *
°¨t
)*2;

85 *
°¨t
 = 
√w_°¨t
;

88 
	}
}

94 
	$YAML_DECLARE
()

95 
	$yaml_°rög_joö
(

96 
yaml_ch¨_t
 **
a_°¨t
, yaml_ch¨_à**
a_poöãr
, yaml_ch¨_à**
a_íd
,

97 
yaml_ch¨_t
 **
b_°¨t
, yaml_ch¨_à**
b_poöãr
, yaml_ch¨_à**
b_íd
)

99 i‡(*
b_°¨t
 =*
b_poöãr
)

102 *
a_íd
 - *
a_poöãr
 <*
b_poöãr
 - *
b_°¨t
) {

103 i‡(!
	`yaml_°rög_exãnd
(
a_°¨t
, 
a_poöãr
, 
a_íd
))

107 
	`mem˝y
(*
a_poöãr
, *
b_°¨t
, *
b_poöãr
 - *b_start);

108 *
a_poöãr
 +*
b_poöãr
 - *
b_°¨t
;

111 
	}
}

117 
	$YAML_DECLARE
()

118 
	$yaml_°ack_exãnd
(**
°¨t
, **
t›
, **
íd
)

120 *
√w_°¨t
 = 
	`yaml_ªÆloc
(*
°¨t
, ((*)*
íd
 - (*)*start)*2);

122 i‡(!
√w_°¨t
)  0;

124 *
t›
 = (*)
√w_°¨t
 + ((*)*t› - (*)*
°¨t
);

125 *
íd
 = (*)
√w_°¨t
 + ((*)*íd - (*)*
°¨t
)*2;

126 *
°¨t
 = 
√w_°¨t
;

129 
	}
}

135 
	$YAML_DECLARE
()

136 
	$yaml_queue_exãnd
(**
°¨t
, **
hód
, **
èû
, **
íd
)

140 i‡(*
°¨t
 =*
hód
 && *
èû
 =*
íd
) {

141 *
√w_°¨t
 = 
	`yaml_ªÆloc
(*
°¨t
,

142 ((*)*
íd
 - (*)*
°¨t
)*2);

144 i‡(!
√w_°¨t
)  0;

146 *
hód
 = (*)
√w_°¨t
 + ((*)*hód - (*)*
°¨t
);

147 *
èû
 = (*)
√w_°¨t
 + ((*)*èû - (*)*
°¨t
);

148 *
íd
 = (*)
√w_°¨t
 + ((*)*íd - (*)*
°¨t
)*2;

149 *
°¨t
 = 
√w_°¨t
;

154 i‡(*
èû
 =*
íd
) {

155 i‡(*
hód
 !*
èû
) {

156 
	`memmove
(*
°¨t
, *
hód
, (*)*
èû
 - (*)*head);

158 *
èû
 = (*)*èû - (*)*
hód
 + (*)*
°¨t
;

159 *
hód
 = *
°¨t
;

163 
	}
}

170 
	$YAML_DECLARE
()

171 
	$yaml_∑r£r_öôülize
(
yaml_∑r£r_t
 *
∑r£r
)

173 
	`as£π
(
∑r£r
);

175 
	`mem£t
(
∑r£r
, 0, (
yaml_∑r£r_t
));

176 i‡(!
	`BUFFER_INIT
(
∑r£r
,Ö¨£r->
øw_buf„r
, 
INPUT_RAW_BUFFER_SIZE
))

177 
îr‹
;

178 i‡(!
	`BUFFER_INIT
(
∑r£r
,Ö¨£r->
buf„r
, 
INPUT_BUFFER_SIZE
))

179 
îr‹
;

180 i‡(!
	`QUEUE_INIT
(
∑r£r
,Ö¨£r->
tokís
, 
INITIAL_QUEUE_SIZE
))

181 
îr‹
;

182 i‡(!
	`STACK_INIT
(
∑r£r
,Ö¨£r->
ödíts
, 
INITIAL_STACK_SIZE
))

183 
îr‹
;

184 i‡(!
	`STACK_INIT
(
∑r£r
,Ö¨£r->
sim∂e_keys
, 
INITIAL_STACK_SIZE
))

185 
îr‹
;

186 i‡(!
	`STACK_INIT
(
∑r£r
,Ö¨£r->
°©es
, 
INITIAL_STACK_SIZE
))

187 
îr‹
;

188 i‡(!
	`STACK_INIT
(
∑r£r
,Ö¨£r->
m¨ks
, 
INITIAL_STACK_SIZE
))

189 
îr‹
;

190 i‡(!
	`STACK_INIT
(
∑r£r
,Ö¨£r->
èg_dúe˘ives
, 
INITIAL_STACK_SIZE
))

191 
îr‹
;

195 
îr‹
:

197 
	`BUFFER_DEL
(
∑r£r
,Ö¨£r->
øw_buf„r
);

198 
	`BUFFER_DEL
(
∑r£r
,Ö¨£r->
buf„r
);

199 
	`QUEUE_DEL
(
∑r£r
,Ö¨£r->
tokís
);

200 
	`STACK_DEL
(
∑r£r
,Ö¨£r->
ödíts
);

201 
	`STACK_DEL
(
∑r£r
,Ö¨£r->
sim∂e_keys
);

202 
	`STACK_DEL
(
∑r£r
,Ö¨£r->
°©es
);

203 
	`STACK_DEL
(
∑r£r
,Ö¨£r->
m¨ks
);

204 
	`STACK_DEL
(
∑r£r
,Ö¨£r->
èg_dúe˘ives
);

207 
	}
}

213 
	$YAML_DECLARE
()

214 
	$yaml_∑r£r_dñëe
(
yaml_∑r£r_t
 *
∑r£r
)

216 
	`as£π
(
∑r£r
);

218 
	`BUFFER_DEL
(
∑r£r
,Ö¨£r->
øw_buf„r
);

219 
	`BUFFER_DEL
(
∑r£r
,Ö¨£r->
buf„r
);

220 !
	`QUEUE_EMPTY
(
∑r£r
,Ö¨£r->
tokís
)) {

221 
	`yaml_tokí_dñëe
(&
	`DEQUEUE
(
∑r£r
,Ö¨£r->
tokís
));

223 
	`QUEUE_DEL
(
∑r£r
,Ö¨£r->
tokís
);

224 
	`STACK_DEL
(
∑r£r
,Ö¨£r->
ödíts
);

225 
	`STACK_DEL
(
∑r£r
,Ö¨£r->
sim∂e_keys
);

226 
	`STACK_DEL
(
∑r£r
,Ö¨£r->
°©es
);

227 
	`STACK_DEL
(
∑r£r
,Ö¨£r->
m¨ks
);

228 !
	`STACK_EMPTY
(
∑r£r
,Ö¨£r->
èg_dúe˘ives
)) {

229 
yaml_èg_dúe˘ive_t
 
èg_dúe˘ive
 = 
	`POP
(
∑r£r
,Ö¨£r->
èg_dúe˘ives
);

230 
	`yaml_‰ì
(
èg_dúe˘ive
.
h™dÀ
);

231 
	`yaml_‰ì
(
èg_dúe˘ive
.
¥efix
);

233 
	`STACK_DEL
(
∑r£r
,Ö¨£r->
èg_dúe˘ives
);

235 
	`mem£t
(
∑r£r
, 0, (
yaml_∑r£r_t
));

236 
	}
}

243 
	$yaml_°rög_ªad_h™dÀr
(*
d©a
, *
buf„r
, 
size_t
 
size
,

244 
size_t
 *
size_ªad
)

246 
yaml_∑r£r_t
 *
∑r£r
 = 
d©a
;

248 i‡(
∑r£r
->
öput
.
°rög
.
cuºít
 =∑r£r->öput.°rög.
íd
) {

249 *
size_ªad
 = 0;

253 i‡(
size
 > (
size_t
)(
∑r£r
->
öput
.
°rög
.
íd


254 - 
∑r£r
->
öput
.
°rög
.
cuºít
)) {

255 
size
 = 
∑r£r
->
öput
.
°rög
.
íd
 -Ö¨£r->öput.°rög.
cuºít
;

258 
	`mem˝y
(
buf„r
, 
∑r£r
->
öput
.
°rög
.
cuºít
, 
size
);

259 
∑r£r
->
öput
.
°rög
.
cuºít
 +
size
;

260 *
size_ªad
 = 
size
;

262 
	}
}

269 
	$yaml_fûe_ªad_h™dÀr
(*
d©a
, *
buf„r
, 
size_t
 
size
,

270 
size_t
 *
size_ªad
)

272 
yaml_∑r£r_t
 *
∑r£r
 = 
d©a
;

274 *
size_ªad
 = 
	`‰ód
(
buf„r
, 1, 
size
, 
∑r£r
->
öput
.
fûe
);

275  !
	`„º‹
(
∑r£r
->
öput
.
fûe
);

276 
	}
}

282 
	$YAML_DECLARE
()

283 
	$yaml_∑r£r_£t_öput_°rög
(
yaml_∑r£r_t
 *
∑r£r
,

284 c⁄° *
öput
, 
size_t
 
size
)

286 
	`as£π
(
∑r£r
);

287 
	`as£π
(!
∑r£r
->
ªad_h™dÀr
);

288 
	`as£π
(
öput
);

290 
∑r£r
->
ªad_h™dÀr
 = 
yaml_°rög_ªad_h™dÀr
;

291 
∑r£r
->
ªad_h™dÀr_d©a
 =Öarser;

293 
∑r£r
->
öput
.
°rög
.
°¨t
 = input;

294 
∑r£r
->
öput
.
°rög
.
cuºít
 = input;

295 
∑r£r
->
öput
.
°rög
.
íd
 = i≈ut+
size
;

296 
	}
}

302 
	$YAML_DECLARE
()

303 
	$yaml_∑r£r_£t_öput_fûe
(
yaml_∑r£r_t
 *
∑r£r
, 
FILE
 *
fûe
)

305 
	`as£π
(
∑r£r
);

306 
	`as£π
(!
∑r£r
->
ªad_h™dÀr
);

307 
	`as£π
(
fûe
);

309 
∑r£r
->
ªad_h™dÀr
 = 
yaml_fûe_ªad_h™dÀr
;

310 
∑r£r
->
ªad_h™dÀr_d©a
 =Öarser;

312 
∑r£r
->
öput
.
fûe
 = file;

313 
	}
}

319 
	$YAML_DECLARE
()

320 
	$yaml_∑r£r_£t_öput
(
yaml_∑r£r_t
 *
∑r£r
,

321 
yaml_ªad_h™dÀr_t
 *
h™dÀr
, *
d©a
)

323 
	`as£π
(
∑r£r
);

324 
	`as£π
(!
∑r£r
->
ªad_h™dÀr
);

325 
	`as£π
(
h™dÀr
);

327 
∑r£r
->
ªad_h™dÀr
 = 
h™dÀr
;

328 
∑r£r
->
ªad_h™dÀr_d©a
 = 
d©a
;

329 
	}
}

335 
	$YAML_DECLARE
()

336 
	$yaml_∑r£r_£t_ícodög
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_ícodög_t
 
ícodög
)

338 
	`as£π
(
∑r£r
);

339 
	`as£π
(!
∑r£r
->
ícodög
);

341 
∑r£r
->
ícodög
 =Éncoding;

342 
	}
}

348 
	$YAML_DECLARE
()

349 
	$yaml_emôãr_öôülize
(
yaml_emôãr_t
 *
emôãr
)

351 
	`as£π
(
emôãr
);

353 
	`mem£t
(
emôãr
, 0, (
yaml_emôãr_t
));

354 i‡(!
	`BUFFER_INIT
(
emôãr
,Émôãr->
buf„r
, 
OUTPUT_BUFFER_SIZE
))

355 
îr‹
;

356 i‡(!
	`BUFFER_INIT
(
emôãr
,Émôãr->
øw_buf„r
, 
OUTPUT_RAW_BUFFER_SIZE
))

357 
îr‹
;

358 i‡(!
	`STACK_INIT
(
emôãr
,Émôãr->
°©es
, 
INITIAL_STACK_SIZE
))

359 
îr‹
;

360 i‡(!
	`QUEUE_INIT
(
emôãr
,Émôãr->
evíts
, 
INITIAL_QUEUE_SIZE
))

361 
îr‹
;

362 i‡(!
	`STACK_INIT
(
emôãr
,Émôãr->
ödíts
, 
INITIAL_STACK_SIZE
))

363 
îr‹
;

364 i‡(!
	`STACK_INIT
(
emôãr
,Émôãr->
èg_dúe˘ives
, 
INITIAL_STACK_SIZE
))

365 
îr‹
;

369 
îr‹
:

371 
	`BUFFER_DEL
(
emôãr
,Émôãr->
buf„r
);

372 
	`BUFFER_DEL
(
emôãr
,Émôãr->
øw_buf„r
);

373 
	`STACK_DEL
(
emôãr
,Émôãr->
°©es
);

374 
	`QUEUE_DEL
(
emôãr
,Émôãr->
evíts
);

375 
	`STACK_DEL
(
emôãr
,Émôãr->
ödíts
);

376 
	`STACK_DEL
(
emôãr
,Émôãr->
èg_dúe˘ives
);

379 
	}
}

385 
	$YAML_DECLARE
()

386 
	$yaml_emôãr_dñëe
(
yaml_emôãr_t
 *
emôãr
)

388 
	`as£π
(
emôãr
);

390 
	`BUFFER_DEL
(
emôãr
,Émôãr->
buf„r
);

391 
	`BUFFER_DEL
(
emôãr
,Émôãr->
øw_buf„r
);

392 
	`STACK_DEL
(
emôãr
,Émôãr->
°©es
);

393 !
	`QUEUE_EMPTY
(
emôãr
,Émôãr->
evíts
)) {

394 
	`yaml_evít_dñëe
(&
	`DEQUEUE
(
emôãr
,Émôãr->
evíts
));

396 
	`QUEUE_DEL
(
emôãr
,Émôãr->
evíts
);

397 
	`STACK_DEL
(
emôãr
,Émôãr->
ödíts
);

398 !
	`STACK_EMPTY
(
em±y
, 
emôãr
->
èg_dúe˘ives
)) {

399 
yaml_èg_dúe˘ive_t
 
èg_dúe˘ive
 = 
	`POP
(
emôãr
,Émôãr->
èg_dúe˘ives
);

400 
	`yaml_‰ì
(
èg_dúe˘ive
.
h™dÀ
);

401 
	`yaml_‰ì
(
èg_dúe˘ive
.
¥efix
);

403 
	`STACK_DEL
(
emôãr
,Émôãr->
èg_dúe˘ives
);

404 
	`yaml_‰ì
(
emôãr
->
™ch‹s
);

406 
	`mem£t
(
emôãr
, 0, (
yaml_emôãr_t
));

407 
	}
}

414 
	$yaml_°rög_wrôe_h™dÀr
(*
d©a
, *
buf„r
, 
size_t
 
size
)

416 
yaml_emôãr_t
 *
emôãr
 = 
d©a
;

418 i‡(
emôãr
->
ouçut
.
°rög
.
size
 + *emôãr->ouçut.°rög.
size_wrôãn


419 < 
size
) {

420 
	`mem˝y
(
emôãr
->
ouçut
.
°rög
.
buf„r


421 + *
emôãr
->
ouçut
.
°rög
.
size_wrôãn
,

422 
buf„r
,

423 
emôãr
->
ouçut
.
°rög
.
size


424 - *
emôãr
->
ouçut
.
°rög
.
size_wrôãn
);

425 *
emôãr
->
ouçut
.
°rög
.
size_wrôãn
 =Émôãr->ouçut.°rög.
size
;

429 
	`mem˝y
(
emôãr
->
ouçut
.
°rög
.
buf„r


430 + *
emôãr
->
ouçut
.
°rög
.
size_wrôãn
, 
buf„r
, 
size
);

431 *
emôãr
->
ouçut
.
°rög
.
size_wrôãn
 +
size
;

433 
	}
}

440 
	$yaml_fûe_wrôe_h™dÀr
(*
d©a
, *
buf„r
, 
size_t
 
size
)

442 
yaml_emôãr_t
 *
emôãr
 = 
d©a
;

444  (
	`fwrôe
(
buf„r
, 1, 
size
, 
emôãr
->
ouçut
.
fûe
) == size);

445 
	}
}

450 
	$YAML_DECLARE
()

451 
	$yaml_emôãr_£t_ouçut_°rög
(
yaml_emôãr_t
 *
emôãr
,

452 *
ouçut
, 
size_t
 
size
, size_à*
size_wrôãn
)

454 
	`as£π
(
emôãr
);

455 
	`as£π
(!
emôãr
->
wrôe_h™dÀr
);

456 
	`as£π
(
ouçut
);

458 
emôãr
->
wrôe_h™dÀr
 = 
yaml_°rög_wrôe_h™dÀr
;

459 
emôãr
->
wrôe_h™dÀr_d©a
 =Émitter;

461 
emôãr
->
ouçut
.
°rög
.
buf„r
 = output;

462 
emôãr
->
ouçut
.
°rög
.
size
 = size;

463 
emôãr
->
ouçut
.
°rög
.
size_wrôãn
 = size_written;

464 *
size_wrôãn
 = 0;

465 
	}
}

471 
	$YAML_DECLARE
()

472 
	$yaml_emôãr_£t_ouçut_fûe
(
yaml_emôãr_t
 *
emôãr
, 
FILE
 *
fûe
)

474 
	`as£π
(
emôãr
);

475 
	`as£π
(!
emôãr
->
wrôe_h™dÀr
);

476 
	`as£π
(
fûe
);

478 
emôãr
->
wrôe_h™dÀr
 = 
yaml_fûe_wrôe_h™dÀr
;

479 
emôãr
->
wrôe_h™dÀr_d©a
 =Émitter;

481 
emôãr
->
ouçut
.
fûe
 = file;

482 
	}
}

488 
	$YAML_DECLARE
()

489 
	$yaml_emôãr_£t_ouçut
(
yaml_emôãr_t
 *
emôãr
,

490 
yaml_wrôe_h™dÀr_t
 *
h™dÀr
, *
d©a
)

492 
	`as£π
(
emôãr
);

493 
	`as£π
(!
emôãr
->
wrôe_h™dÀr
);

494 
	`as£π
(
h™dÀr
);

496 
emôãr
->
wrôe_h™dÀr
 = 
h™dÀr
;

497 
emôãr
->
wrôe_h™dÀr_d©a
 = 
d©a
;

498 
	}
}

504 
	$YAML_DECLARE
()

505 
	$yaml_emôãr_£t_ícodög
(
yaml_emôãr_t
 *
emôãr
, 
yaml_ícodög_t
 
ícodög
)

507 
	`as£π
(
emôãr
);

508 
	`as£π
(!
emôãr
->
ícodög
);

510 
emôãr
->
ícodög
 =Éncoding;

511 
	}
}

517 
	$YAML_DECLARE
()

518 
	$yaml_emôãr_£t_ˇn⁄iˇl
(
yaml_emôãr_t
 *
emôãr
, 
ˇn⁄iˇl
)

520 
	`as£π
(
emôãr
);

522 
emôãr
->
ˇn⁄iˇl
 = (canonical != 0);

523 
	}
}

529 
	$YAML_DECLARE
()

530 
	$yaml_emôãr_£t_ödít
(
yaml_emôãr_t
 *
emôãr
, 
ödít
)

532 
	`as£π
(
emôãr
);

534 
emôãr
->
be°_ödít
 = (1 < 
ödít
 && indent < 10) ? indent : 2;

535 
	}
}

541 
	$YAML_DECLARE
()

542 
	$yaml_emôãr_£t_width
(
yaml_emôãr_t
 *
emôãr
, 
width
)

544 
	`as£π
(
emôãr
);

546 
emôãr
->
be°_width
 = (
width
 >= 0) ? width : -1;

547 
	}
}

553 
	$YAML_DECLARE
()

554 
	$yaml_emôãr_£t_unicode
(
yaml_emôãr_t
 *
emôãr
, 
unicode
)

556 
	`as£π
(
emôãr
);

558 
emôãr
->
unicode
 = (unicode != 0);

559 
	}
}

565 
	$YAML_DECLARE
()

566 
	$yaml_emôãr_£t_bªak
(
yaml_emôãr_t
 *
emôãr
, 
yaml_bªak_t
 
löe_bªak
)

568 
	`as£π
(
emôãr
);

570 
emôãr
->
löe_bªak
 =Üine_break;

571 
	}
}

577 
	$YAML_DECLARE
()

578 
	$yaml_tokí_dñëe
(
yaml_tokí_t
 *
tokí
)

580 
	`as£π
(
tokí
);

582 
tokí
->
ty≥
)

584 
YAML_TAG_DIRECTIVE_TOKEN
:

585 
	`yaml_‰ì
(
tokí
->
d©a
.
èg_dúe˘ive
.
h™dÀ
);

586 
	`yaml_‰ì
(
tokí
->
d©a
.
èg_dúe˘ive
.
¥efix
);

589 
YAML_ALIAS_TOKEN
:

590 
	`yaml_‰ì
(
tokí
->
d©a
.
Æüs
.
vÆue
);

593 
YAML_ANCHOR_TOKEN
:

594 
	`yaml_‰ì
(
tokí
->
d©a
.
™ch‹
.
vÆue
);

597 
YAML_TAG_TOKEN
:

598 
	`yaml_‰ì
(
tokí
->
d©a
.
èg
.
h™dÀ
);

599 
	`yaml_‰ì
(
tokí
->
d©a
.
èg
.
suffix
);

602 
YAML_SCALAR_TOKEN
:

603 
	`yaml_‰ì
(
tokí
->
d©a
.
sˇœr
.
vÆue
);

610 
	`mem£t
(
tokí
, 0, (
yaml_tokí_t
));

611 
	}
}

620 
	$yaml_check_utf8
(
yaml_ch¨_t
 *
°¨t
, 
size_t
 
Àngth
)

622 
yaml_ch¨_t
 *
íd
 = 
°¨t
+
Àngth
;

623 
yaml_ch¨_t
 *
poöãr
 = 
°¨t
;

625 
poöãr
 < 
íd
) {

626 
o˘ë
;

627 
width
;

628 
vÆue
;

629 
size_t
 
k
;

631 
o˘ë
 = 
poöãr
[0];

632 
width
 = (
o˘ë
 & 0x80) == 0x00 ? 1 :

633 (
o˘ë
 & 0xE0) == 0xC0 ? 2 :

634 (
o˘ë
 & 0xF0) == 0xE0 ? 3 :

635 (
o˘ë
 & 0xF8) == 0xF0 ? 4 : 0;

636 
vÆue
 = (
o˘ë
 & 0x80) == 0x00 ? octet & 0x7F :

637 (
o˘ë
 & 0xE0) == 0xC0 ? octet & 0x1F :

638 (
o˘ë
 & 0xF0) == 0xE0 ? octet & 0x0F :

639 (
o˘ë
 & 0xF8) == 0xF0 ? octet & 0x07 : 0;

640 i‡(!
width
)  0;

641 i‡(
poöãr
+
width
 > 
íd
)  0;

642 
k
 = 1; k < 
width
; k ++) {

643 
o˘ë
 = 
poöãr
[
k
];

644 i‡((
o˘ë
 & 0xC0) != 0x80)  0;

645 
vÆue
 = (vÆuê<< 6Ë+ (
o˘ë
 & 0x3F);

647 i‡(!((
width
 == 1) ||

648 (
width
 =2 && 
vÆue
 >= 0x80) ||

649 (
width
 =3 && 
vÆue
 >= 0x800) ||

650 (
width
 =4 && 
vÆue
 >= 0x10000)))  0;

652 
poöãr
 +
width
;

656 
	}
}

662 
	$YAML_DECLARE
()

663 
	$yaml_°ªam_°¨t_evít_öôülize
(
yaml_evít_t
 *
evít
,

664 
yaml_ícodög_t
 
ícodög
)

666 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

668 
	`as£π
(
evít
);

670 
	`STREAM_START_EVENT_INIT
(*
evít
, 
ícodög
, 
m¨k
, mark);

673 
	}
}

679 
	$YAML_DECLARE
()

680 
	$yaml_°ªam_íd_evít_öôülize
(
yaml_evít_t
 *
evít
)

682 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

684 
	`as£π
(
evít
);

686 
	`STREAM_END_EVENT_INIT
(*
evít
, 
m¨k
, mark);

689 
	}
}

695 
	$YAML_DECLARE
()

696 
	$yaml_documít_°¨t_evít_öôülize
(
yaml_evít_t
 *
evít
,

697 
yaml_vîsi⁄_dúe˘ive_t
 *
vîsi⁄_dúe˘ive
,

698 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ives_°¨t
,

699 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ives_íd
,

700 
im∂icô
)

703 
yaml_îr‹_ty≥_t
 
îr‹
;

704 } 
c⁄ãxt
;

705 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

706 
yaml_vîsi⁄_dúe˘ive_t
 *
vîsi⁄_dúe˘ive_c›y
 = 
NULL
;

708 
yaml_èg_dúe˘ive_t
 *
°¨t
;

709 
yaml_èg_dúe˘ive_t
 *
íd
;

710 
yaml_èg_dúe˘ive_t
 *
t›
;

711 } 
èg_dúe˘ives_c›y
 = { 
NULL
, NULL, NULL };

712 
yaml_èg_dúe˘ive_t
 
vÆue
 = { 
NULL
, NULL };

714 
	`as£π
(
evít
);

715 
	`as£π
((
èg_dúe˘ives_°¨t
 && 
èg_dúe˘ives_íd
) ||

716 (
èg_dúe˘ives_°¨t
 =
èg_dúe˘ives_íd
));

719 i‡(
vîsi⁄_dúe˘ive
) {

720 
vîsi⁄_dúe˘ive_c›y
 = 
	`yaml_mÆloc
((
yaml_vîsi⁄_dúe˘ive_t
));

721 i‡(!
vîsi⁄_dúe˘ive_c›y
Ë
îr‹
;

722 
vîsi⁄_dúe˘ive_c›y
->
maj‹
 = 
vîsi⁄_dúe˘ive
->major;

723 
vîsi⁄_dúe˘ive_c›y
->
mö‹
 = 
vîsi⁄_dúe˘ive
->minor;

726 i‡(
èg_dúe˘ives_°¨t
 !
èg_dúe˘ives_íd
) {

727 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ive
;

728 i‡(!
	`STACK_INIT
(&
c⁄ãxt
, 
èg_dúe˘ives_c›y
, 
INITIAL_STACK_SIZE
))

729 
îr‹
;

730 
èg_dúe˘ive
 = 
èg_dúe˘ives_°¨t
;

731 
èg_dúe˘ive
 !
èg_dúe˘ives_íd
;Åag_directive ++) {

732 
	`as£π
(
èg_dúe˘ive
->
h™dÀ
);

733 
	`as£π
(
èg_dúe˘ive
->
¥efix
);

734 i‡(!
	`yaml_check_utf8
(
èg_dúe˘ive
->
h™dÀ
,

735 
	`°æí
((*)
èg_dúe˘ive
->
h™dÀ
)))

736 
îr‹
;

737 i‡(!
	`yaml_check_utf8
(
èg_dúe˘ive
->
¥efix
,

738 
	`°æí
((*)
èg_dúe˘ive
->
¥efix
)))

739 
îr‹
;

740 
vÆue
.
h™dÀ
 = 
	`yaml_°rdup
(
èg_dúe˘ive
->handle);

741 
vÆue
.
¥efix
 = 
	`yaml_°rdup
(
èg_dúe˘ive
->prefix);

742 i‡(!
vÆue
.
h™dÀ
 || !vÆue.
¥efix
Ë
îr‹
;

743 i‡(!
	`PUSH
(&
c⁄ãxt
, 
èg_dúe˘ives_c›y
, 
vÆue
))

744 
îr‹
;

745 
vÆue
.
h™dÀ
 = 
NULL
;

746 
vÆue
.
¥efix
 = 
NULL
;

750 
	`DOCUMENT_START_EVENT_INIT
(*
evít
, 
vîsi⁄_dúe˘ive_c›y
,

751 
èg_dúe˘ives_c›y
.
°¨t
,Åag_dúe˘ives_c›y.
t›
,

752 
im∂icô
, 
m¨k
, mark);

756 
îr‹
:

757 
	`yaml_‰ì
(
vîsi⁄_dúe˘ive_c›y
);

758 !
	`STACK_EMPTY
(
c⁄ãxt
, 
èg_dúe˘ives_c›y
)) {

759 
yaml_èg_dúe˘ive_t
 
vÆue
 = 
	`POP
(
c⁄ãxt
, 
èg_dúe˘ives_c›y
);

760 
	`yaml_‰ì
(
vÆue
.
h™dÀ
);

761 
	`yaml_‰ì
(
vÆue
.
¥efix
);

763 
	`STACK_DEL
(
c⁄ãxt
, 
èg_dúe˘ives_c›y
);

764 
	`yaml_‰ì
(
vÆue
.
h™dÀ
);

765 
	`yaml_‰ì
(
vÆue
.
¥efix
);

768 
	}
}

774 
	$YAML_DECLARE
()

775 
	$yaml_documít_íd_evít_öôülize
(
yaml_evít_t
 *
evít
, 
im∂icô
)

777 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

779 
	`as£π
(
evít
);

781 
	`DOCUMENT_END_EVENT_INIT
(*
evít
, 
im∂icô
, 
m¨k
, mark);

784 
	}
}

790 
	$YAML_DECLARE
()

791 
	$yaml_Æüs_evít_öôülize
(
yaml_evít_t
 *
evít
, 
yaml_ch¨_t
 *
™ch‹
)

793 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

794 
yaml_ch¨_t
 *
™ch‹_c›y
 = 
NULL
;

796 
	`as£π
(
evít
);

797 
	`as£π
(
™ch‹
);

799 i‡(!
	`yaml_check_utf8
(
™ch‹
, 
	`°æí
((*)anchor)))  0;

801 
™ch‹_c›y
 = 
	`yaml_°rdup
(
™ch‹
);

802 i‡(!
™ch‹_c›y
)

805 
	`ALIAS_EVENT_INIT
(*
evít
, 
™ch‹_c›y
, 
m¨k
, mark);

808 
	}
}

814 
	$YAML_DECLARE
()

815 
	$yaml_sˇœr_evít_öôülize
(
yaml_evít_t
 *
evít
,

816 
yaml_ch¨_t
 *
™ch‹
, yaml_ch¨_à*
èg
,

817 
yaml_ch¨_t
 *
vÆue
, 
Àngth
,

818 
∂aö_im∂icô
, 
quŸed_im∂icô
,

819 
yaml_sˇœr_°yÀ_t
 
°yÀ
)

821 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

822 
yaml_ch¨_t
 *
™ch‹_c›y
 = 
NULL
;

823 
yaml_ch¨_t
 *
èg_c›y
 = 
NULL
;

824 
yaml_ch¨_t
 *
vÆue_c›y
 = 
NULL
;

826 
	`as£π
(
evít
);

827 
	`as£π
(
vÆue
);

829 i‡(
™ch‹
) {

830 i‡(!
	`yaml_check_utf8
(
™ch‹
, 
	`°æí
((*Ônch‹))Ë
îr‹
;

831 
™ch‹_c›y
 = 
	`yaml_°rdup
(
™ch‹
);

832 i‡(!
™ch‹_c›y
Ë
îr‹
;

835 i‡(
èg
) {

836 i‡(!
	`yaml_check_utf8
(
èg
, 
	`°æí
((*Èag))Ë
îr‹
;

837 
èg_c›y
 = 
	`yaml_°rdup
(
èg
);

838 i‡(!
èg_c›y
Ë
îr‹
;

841 i‡(
Àngth
 < 0) {

842 
Àngth
 = 
	`°æí
((*)
vÆue
);

845 i‡(!
	`yaml_check_utf8
(
vÆue
, 
Àngth
)Ë
îr‹
;

846 
vÆue_c›y
 = 
	`yaml_mÆloc
(
Àngth
+1);

847 i‡(!
vÆue_c›y
Ë
îr‹
;

848 
	`mem˝y
(
vÆue_c›y
, 
vÆue
, 
Àngth
);

849 
vÆue_c›y
[
Àngth
] = '\0';

851 
	`SCALAR_EVENT_INIT
(*
evít
, 
™ch‹_c›y
, 
èg_c›y
, 
vÆue_c›y
, 
Àngth
,

852 
∂aö_im∂icô
, 
quŸed_im∂icô
, 
°yÀ
, 
m¨k
, mark);

856 
îr‹
:

857 
	`yaml_‰ì
(
™ch‹_c›y
);

858 
	`yaml_‰ì
(
èg_c›y
);

859 
	`yaml_‰ì
(
vÆue_c›y
);

862 
	}
}

868 
	$YAML_DECLARE
()

869 
	$yaml_£quí˚_°¨t_evít_öôülize
(
yaml_evít_t
 *
evít
,

870 
yaml_ch¨_t
 *
™ch‹
, yaml_ch¨_à*
èg
, 
im∂icô
,

871 
yaml_£quí˚_°yÀ_t
 
°yÀ
)

873 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

874 
yaml_ch¨_t
 *
™ch‹_c›y
 = 
NULL
;

875 
yaml_ch¨_t
 *
èg_c›y
 = 
NULL
;

877 
	`as£π
(
evít
);

879 i‡(
™ch‹
) {

880 i‡(!
	`yaml_check_utf8
(
™ch‹
, 
	`°æí
((*Ônch‹))Ë
îr‹
;

881 
™ch‹_c›y
 = 
	`yaml_°rdup
(
™ch‹
);

882 i‡(!
™ch‹_c›y
Ë
îr‹
;

885 i‡(
èg
) {

886 i‡(!
	`yaml_check_utf8
(
èg
, 
	`°æí
((*Èag))Ë
îr‹
;

887 
èg_c›y
 = 
	`yaml_°rdup
(
èg
);

888 i‡(!
èg_c›y
Ë
îr‹
;

891 
	`SEQUENCE_START_EVENT_INIT
(*
evít
, 
™ch‹_c›y
, 
èg_c›y
,

892 
im∂icô
, 
°yÀ
, 
m¨k
, mark);

896 
îr‹
:

897 
	`yaml_‰ì
(
™ch‹_c›y
);

898 
	`yaml_‰ì
(
èg_c›y
);

901 
	}
}

907 
	$YAML_DECLARE
()

908 
	$yaml_£quí˚_íd_evít_öôülize
(
yaml_evít_t
 *
evít
)

910 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

912 
	`as£π
(
evít
);

914 
	`SEQUENCE_END_EVENT_INIT
(*
evít
, 
m¨k
, mark);

917 
	}
}

923 
	$YAML_DECLARE
()

924 
	$yaml_m≠pög_°¨t_evít_öôülize
(
yaml_evít_t
 *
evít
,

925 
yaml_ch¨_t
 *
™ch‹
, yaml_ch¨_à*
èg
, 
im∂icô
,

926 
yaml_m≠pög_°yÀ_t
 
°yÀ
)

928 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

929 
yaml_ch¨_t
 *
™ch‹_c›y
 = 
NULL
;

930 
yaml_ch¨_t
 *
èg_c›y
 = 
NULL
;

932 
	`as£π
(
evít
);

934 i‡(
™ch‹
) {

935 i‡(!
	`yaml_check_utf8
(
™ch‹
, 
	`°æí
((*Ônch‹))Ë
îr‹
;

936 
™ch‹_c›y
 = 
	`yaml_°rdup
(
™ch‹
);

937 i‡(!
™ch‹_c›y
Ë
îr‹
;

940 i‡(
èg
) {

941 i‡(!
	`yaml_check_utf8
(
èg
, 
	`°æí
((*Èag))Ë
îr‹
;

942 
èg_c›y
 = 
	`yaml_°rdup
(
èg
);

943 i‡(!
èg_c›y
Ë
îr‹
;

946 
	`MAPPING_START_EVENT_INIT
(*
evít
, 
™ch‹_c›y
, 
èg_c›y
,

947 
im∂icô
, 
°yÀ
, 
m¨k
, mark);

951 
îr‹
:

952 
	`yaml_‰ì
(
™ch‹_c›y
);

953 
	`yaml_‰ì
(
èg_c›y
);

956 
	}
}

962 
	$YAML_DECLARE
()

963 
	$yaml_m≠pög_íd_evít_öôülize
(
yaml_evít_t
 *
evít
)

965 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

967 
	`as£π
(
evít
);

969 
	`MAPPING_END_EVENT_INIT
(*
evít
, 
m¨k
, mark);

972 
	}
}

978 
	$YAML_DECLARE
()

979 
	$yaml_evít_dñëe
(
yaml_evít_t
 *
evít
)

981 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ive
;

983 
	`as£π
(
evít
);

985 
evít
->
ty≥
)

987 
YAML_DOCUMENT_START_EVENT
:

988 
	`yaml_‰ì
(
evít
->
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
);

989 
èg_dúe˘ive
 = 
evít
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t
;

990 
èg_dúe˘ive
 !
evít
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
;

991 
èg_dúe˘ive
++) {

992 
	`yaml_‰ì
(
èg_dúe˘ive
->
h™dÀ
);

993 
	`yaml_‰ì
(
èg_dúe˘ive
->
¥efix
);

995 
	`yaml_‰ì
(
evít
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t
);

998 
YAML_ALIAS_EVENT
:

999 
	`yaml_‰ì
(
evít
->
d©a
.
Æüs
.
™ch‹
);

1002 
YAML_SCALAR_EVENT
:

1003 
	`yaml_‰ì
(
evít
->
d©a
.
sˇœr
.
™ch‹
);

1004 
	`yaml_‰ì
(
evít
->
d©a
.
sˇœr
.
èg
);

1005 
	`yaml_‰ì
(
evít
->
d©a
.
sˇœr
.
vÆue
);

1008 
YAML_SEQUENCE_START_EVENT
:

1009 
	`yaml_‰ì
(
evít
->
d©a
.
£quí˚_°¨t
.
™ch‹
);

1010 
	`yaml_‰ì
(
evít
->
d©a
.
£quí˚_°¨t
.
èg
);

1013 
YAML_MAPPING_START_EVENT
:

1014 
	`yaml_‰ì
(
evít
->
d©a
.
m≠pög_°¨t
.
™ch‹
);

1015 
	`yaml_‰ì
(
evít
->
d©a
.
m≠pög_°¨t
.
èg
);

1022 
	`mem£t
(
evít
, 0, (
yaml_evít_t
));

1023 
	}
}

1029 
	$YAML_DECLARE
()

1030 
	$yaml_documít_öôülize
(
yaml_documít_t
 *
documít
,

1031 
yaml_vîsi⁄_dúe˘ive_t
 *
vîsi⁄_dúe˘ive
,

1032 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ives_°¨t
,

1033 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ives_íd
,

1034 
°¨t_im∂icô
, 
íd_im∂icô
)

1037 
yaml_îr‹_ty≥_t
 
îr‹
;

1038 } 
c⁄ãxt
;

1040 
yaml_node_t
 *
°¨t
;

1041 
yaml_node_t
 *
íd
;

1042 
yaml_node_t
 *
t›
;

1043 } 
nodes
 = { 
NULL
, NULL, NULL };

1044 
yaml_vîsi⁄_dúe˘ive_t
 *
vîsi⁄_dúe˘ive_c›y
 = 
NULL
;

1046 
yaml_èg_dúe˘ive_t
 *
°¨t
;

1047 
yaml_èg_dúe˘ive_t
 *
íd
;

1048 
yaml_èg_dúe˘ive_t
 *
t›
;

1049 } 
èg_dúe˘ives_c›y
 = { 
NULL
, NULL, NULL };

1050 
yaml_èg_dúe˘ive_t
 
vÆue
 = { 
NULL
, NULL };

1051 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

1053 
	`as£π
(
documít
);

1054 
	`as£π
((
èg_dúe˘ives_°¨t
 && 
èg_dúe˘ives_íd
) ||

1055 (
èg_dúe˘ives_°¨t
 =
èg_dúe˘ives_íd
));

1058 i‡(!
	`STACK_INIT
(&
c⁄ãxt
, 
nodes
, 
INITIAL_STACK_SIZE
)Ë
îr‹
;

1060 i‡(
vîsi⁄_dúe˘ive
) {

1061 
vîsi⁄_dúe˘ive_c›y
 = 
	`yaml_mÆloc
((
yaml_vîsi⁄_dúe˘ive_t
));

1062 i‡(!
vîsi⁄_dúe˘ive_c›y
Ë
îr‹
;

1063 
vîsi⁄_dúe˘ive_c›y
->
maj‹
 = 
vîsi⁄_dúe˘ive
->major;

1064 
vîsi⁄_dúe˘ive_c›y
->
mö‹
 = 
vîsi⁄_dúe˘ive
->minor;

1067 i‡(
èg_dúe˘ives_°¨t
 !
èg_dúe˘ives_íd
) {

1068 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ive
;

1069 i‡(!
	`STACK_INIT
(&
c⁄ãxt
, 
èg_dúe˘ives_c›y
, 
INITIAL_STACK_SIZE
))

1070 
îr‹
;

1071 
èg_dúe˘ive
 = 
èg_dúe˘ives_°¨t
;

1072 
èg_dúe˘ive
 !
èg_dúe˘ives_íd
;Åag_directive ++) {

1073 
	`as£π
(
èg_dúe˘ive
->
h™dÀ
);

1074 
	`as£π
(
èg_dúe˘ive
->
¥efix
);

1075 i‡(!
	`yaml_check_utf8
(
èg_dúe˘ive
->
h™dÀ
,

1076 
	`°æí
((*)
èg_dúe˘ive
->
h™dÀ
)))

1077 
îr‹
;

1078 i‡(!
	`yaml_check_utf8
(
èg_dúe˘ive
->
¥efix
,

1079 
	`°æí
((*)
èg_dúe˘ive
->
¥efix
)))

1080 
îr‹
;

1081 
vÆue
.
h™dÀ
 = 
	`yaml_°rdup
(
èg_dúe˘ive
->handle);

1082 
vÆue
.
¥efix
 = 
	`yaml_°rdup
(
èg_dúe˘ive
->prefix);

1083 i‡(!
vÆue
.
h™dÀ
 || !vÆue.
¥efix
Ë
îr‹
;

1084 i‡(!
	`PUSH
(&
c⁄ãxt
, 
èg_dúe˘ives_c›y
, 
vÆue
))

1085 
îr‹
;

1086 
vÆue
.
h™dÀ
 = 
NULL
;

1087 
vÆue
.
¥efix
 = 
NULL
;

1091 
	`DOCUMENT_INIT
(*
documít
, 
nodes
.
°¨t
,Çodes.
íd
, 
vîsi⁄_dúe˘ive_c›y
,

1092 
èg_dúe˘ives_c›y
.
°¨t
,Åag_dúe˘ives_c›y.
t›
,

1093 
°¨t_im∂icô
, 
íd_im∂icô
, 
m¨k
, mark);

1097 
îr‹
:

1098 
	`STACK_DEL
(&
c⁄ãxt
, 
nodes
);

1099 
	`yaml_‰ì
(
vîsi⁄_dúe˘ive_c›y
);

1100 !
	`STACK_EMPTY
(&
c⁄ãxt
, 
èg_dúe˘ives_c›y
)) {

1101 
yaml_èg_dúe˘ive_t
 
vÆue
 = 
	`POP
(&
c⁄ãxt
, 
èg_dúe˘ives_c›y
);

1102 
	`yaml_‰ì
(
vÆue
.
h™dÀ
);

1103 
	`yaml_‰ì
(
vÆue
.
¥efix
);

1105 
	`STACK_DEL
(&
c⁄ãxt
, 
èg_dúe˘ives_c›y
);

1106 
	`yaml_‰ì
(
vÆue
.
h™dÀ
);

1107 
	`yaml_‰ì
(
vÆue
.
¥efix
);

1110 
	}
}

1116 
	$YAML_DECLARE
()

1117 
	$yaml_documít_dñëe
(
yaml_documít_t
 *
documít
)

1120 
yaml_îr‹_ty≥_t
 
îr‹
;

1121 } 
c⁄ãxt
;

1122 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ive
;

1124 
c⁄ãxt
.
îr‹
 = 
YAML_NO_ERROR
;

1126 
	`as£π
(
documít
);

1128 !
	`STACK_EMPTY
(&
c⁄ãxt
, 
documít
->
nodes
)) {

1129 
yaml_node_t
 
node
 = 
	`POP
(&
c⁄ãxt
, 
documít
->
nodes
);

1130 
	`yaml_‰ì
(
node
.
èg
);

1131 
node
.
ty≥
) {

1132 
YAML_SCALAR_NODE
:

1133 
	`yaml_‰ì
(
node
.
d©a
.
sˇœr
.
vÆue
);

1135 
YAML_SEQUENCE_NODE
:

1136 
	`STACK_DEL
(&
c⁄ãxt
, 
node
.
d©a
.
£quí˚
.
ôems
);

1138 
YAML_MAPPING_NODE
:

1139 
	`STACK_DEL
(&
c⁄ãxt
, 
node
.
d©a
.
m≠pög
.
∑ús
);

1142 
	`as£π
(0);

1145 
	`STACK_DEL
(&
c⁄ãxt
, 
documít
->
nodes
);

1147 
	`yaml_‰ì
(
documít
->
vîsi⁄_dúe˘ive
);

1148 
èg_dúe˘ive
 = 
documít
->
èg_dúe˘ives
.
°¨t
;

1149 
èg_dúe˘ive
 !
documít
->
èg_dúe˘ives
.
íd
;

1150 
èg_dúe˘ive
++) {

1151 
	`yaml_‰ì
(
èg_dúe˘ive
->
h™dÀ
);

1152 
	`yaml_‰ì
(
èg_dúe˘ive
->
¥efix
);

1154 
	`yaml_‰ì
(
documít
->
èg_dúe˘ives
.
°¨t
);

1156 
	`mem£t
(
documít
, 0, (
yaml_documít_t
));

1157 
	}
}

1163 
	$YAML_DECLARE
(
yaml_node_t
 *)

1164 
	$yaml_documít_gë_node
(
yaml_documít_t
 *
documít
, 
ödex
)

1166 
	`as£π
(
documít
);

1168 i‡(
ödex
 > 0 && 
documít
->
nodes
.
°¨t
 + index <documít->nodes.
t›
) {

1169  
documít
->
nodes
.
°¨t
 + 
ödex
 - 1;

1171  
NULL
;

1172 
	}
}

1178 
	$YAML_DECLARE
(
yaml_node_t
 *)

1179 
	$yaml_documít_gë_roŸ_node
(
yaml_documít_t
 *
documít
)

1181 
	`as£π
(
documít
);

1183 i‡(
documít
->
nodes
.
t›
 !documít->nodes.
°¨t
) {

1184  
documít
->
nodes
.
°¨t
;

1186  
NULL
;

1187 
	}
}

1193 
	$YAML_DECLARE
()

1194 
	$yaml_documít_add_sˇœr
(
yaml_documít_t
 *
documít
,

1195 
yaml_ch¨_t
 *
èg
, yaml_ch¨_à*
vÆue
, 
Àngth
,

1196 
yaml_sˇœr_°yÀ_t
 
°yÀ
)

1199 
yaml_îr‹_ty≥_t
 
îr‹
;

1200 } 
c⁄ãxt
;

1201 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

1202 
yaml_ch¨_t
 *
èg_c›y
 = 
NULL
;

1203 
yaml_ch¨_t
 *
vÆue_c›y
 = 
NULL
;

1204 
yaml_node_t
 
node
;

1206 
	`as£π
(
documít
);

1207 
	`as£π
(
vÆue
);

1209 i‡(!
èg
) {

1210 
èg
 = (
yaml_ch¨_t
 *)
YAML_DEFAULT_SCALAR_TAG
;

1213 i‡(!
	`yaml_check_utf8
(
èg
, 
	`°æí
((*Èag))Ë
îr‹
;

1214 
èg_c›y
 = 
	`yaml_°rdup
(
èg
);

1215 i‡(!
èg_c›y
Ë
îr‹
;

1217 i‡(
Àngth
 < 0) {

1218 
Àngth
 = 
	`°æí
((*)
vÆue
);

1221 i‡(!
	`yaml_check_utf8
(
vÆue
, 
Àngth
)Ë
îr‹
;

1222 
vÆue_c›y
 = 
	`yaml_mÆloc
(
Àngth
+1);

1223 i‡(!
vÆue_c›y
Ë
îr‹
;

1224 
	`mem˝y
(
vÆue_c›y
, 
vÆue
, 
Àngth
);

1225 
vÆue_c›y
[
Àngth
] = '\0';

1227 
	`SCALAR_NODE_INIT
(
node
, 
èg_c›y
, 
vÆue_c›y
, 
Àngth
, 
°yÀ
, 
m¨k
, mark);

1228 i‡(!
	`PUSH
(&
c⁄ãxt
, 
documít
->
nodes
, 
node
)Ë
îr‹
;

1230  
documít
->
nodes
.
t›
 - documít->nodes.
°¨t
;

1232 
îr‹
:

1233 
	`yaml_‰ì
(
èg_c›y
);

1234 
	`yaml_‰ì
(
vÆue_c›y
);

1237 
	}
}

1243 
	$YAML_DECLARE
()

1244 
	$yaml_documít_add_£quí˚
(
yaml_documít_t
 *
documít
,

1245 
yaml_ch¨_t
 *
èg
, 
yaml_£quí˚_°yÀ_t
 
°yÀ
)

1248 
yaml_îr‹_ty≥_t
 
îr‹
;

1249 } 
c⁄ãxt
;

1250 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

1251 
yaml_ch¨_t
 *
èg_c›y
 = 
NULL
;

1253 
yaml_node_ôem_t
 *
°¨t
;

1254 
yaml_node_ôem_t
 *
íd
;

1255 
yaml_node_ôem_t
 *
t›
;

1256 } 
ôems
 = { 
NULL
, NULL, NULL };

1257 
yaml_node_t
 
node
;

1259 
	`as£π
(
documít
);

1261 i‡(!
èg
) {

1262 
èg
 = (
yaml_ch¨_t
 *)
YAML_DEFAULT_SEQUENCE_TAG
;

1265 i‡(!
	`yaml_check_utf8
(
èg
, 
	`°æí
((*Èag))Ë
îr‹
;

1266 
èg_c›y
 = 
	`yaml_°rdup
(
èg
);

1267 i‡(!
èg_c›y
Ë
îr‹
;

1269 i‡(!
	`STACK_INIT
(&
c⁄ãxt
, 
ôems
, 
INITIAL_STACK_SIZE
)Ë
îr‹
;

1271 
	`SEQUENCE_NODE_INIT
(
node
, 
èg_c›y
, 
ôems
.
°¨t
, iãms.
íd
,

1272 
°yÀ
, 
m¨k
, mark);

1273 i‡(!
	`PUSH
(&
c⁄ãxt
, 
documít
->
nodes
, 
node
)Ë
îr‹
;

1275  
documít
->
nodes
.
t›
 - documít->nodes.
°¨t
;

1277 
îr‹
:

1278 
	`STACK_DEL
(&
c⁄ãxt
, 
ôems
);

1279 
	`yaml_‰ì
(
èg_c›y
);

1282 
	}
}

1288 
	$YAML_DECLARE
()

1289 
	$yaml_documít_add_m≠pög
(
yaml_documít_t
 *
documít
,

1290 
yaml_ch¨_t
 *
èg
, 
yaml_m≠pög_°yÀ_t
 
°yÀ
)

1293 
yaml_îr‹_ty≥_t
 
îr‹
;

1294 } 
c⁄ãxt
;

1295 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

1296 
yaml_ch¨_t
 *
èg_c›y
 = 
NULL
;

1298 
yaml_node_∑ú_t
 *
°¨t
;

1299 
yaml_node_∑ú_t
 *
íd
;

1300 
yaml_node_∑ú_t
 *
t›
;

1301 } 
∑ús
 = { 
NULL
, NULL, NULL };

1302 
yaml_node_t
 
node
;

1304 
	`as£π
(
documít
);

1306 i‡(!
èg
) {

1307 
èg
 = (
yaml_ch¨_t
 *)
YAML_DEFAULT_MAPPING_TAG
;

1310 i‡(!
	`yaml_check_utf8
(
èg
, 
	`°æí
((*Èag))Ë
îr‹
;

1311 
èg_c›y
 = 
	`yaml_°rdup
(
èg
);

1312 i‡(!
èg_c›y
Ë
îr‹
;

1314 i‡(!
	`STACK_INIT
(&
c⁄ãxt
, 
∑ús
, 
INITIAL_STACK_SIZE
)Ë
îr‹
;

1316 
	`MAPPING_NODE_INIT
(
node
, 
èg_c›y
, 
∑ús
.
°¨t
,Öaús.
íd
,

1317 
°yÀ
, 
m¨k
, mark);

1318 i‡(!
	`PUSH
(&
c⁄ãxt
, 
documít
->
nodes
, 
node
)Ë
îr‹
;

1320  
documít
->
nodes
.
t›
 - documít->nodes.
°¨t
;

1322 
îr‹
:

1323 
	`STACK_DEL
(&
c⁄ãxt
, 
∑ús
);

1324 
	`yaml_‰ì
(
èg_c›y
);

1327 
	}
}

1333 
	$YAML_DECLARE
()

1334 
	$yaml_documít_≠≥nd_£quí˚_ôem
(
yaml_documít_t
 *
documít
,

1335 
£quí˚
, 
ôem
)

1338 
yaml_îr‹_ty≥_t
 
îr‹
;

1339 } 
c⁄ãxt
;

1341 
	`as£π
(
documít
);

1342 
	`as£π
(
£quí˚
 > 0

1343 && 
documít
->
nodes
.
°¨t
 + 
£quí˚
 <documít->nodes.
t›
);

1345 
	`as£π
(
documít
->
nodes
.
°¨t
[
£quí˚
-1].
ty≥
 =
YAML_SEQUENCE_NODE
);

1347 
	`as£π
(
ôem
 > 0 && 
documít
->
nodes
.
°¨t
 + iãm <documít->nodes.
t›
);

1350 i‡(!
	`PUSH
(&
c⁄ãxt
,

1351 
documít
->
nodes
.
°¨t
[
£quí˚
-1].
d©a
.£quí˚.
ôems
, 
ôem
))

1355 
	}
}

1361 
	$YAML_DECLARE
()

1362 
	$yaml_documít_≠≥nd_m≠pög_∑ú
(
yaml_documít_t
 *
documít
,

1363 
m≠pög
, 
key
, 
vÆue
)

1366 
yaml_îr‹_ty≥_t
 
îr‹
;

1367 } 
c⁄ãxt
;

1369 
yaml_node_∑ú_t
 
∑ú
;

1371 
	`as£π
(
documít
);

1372 
	`as£π
(
m≠pög
 > 0

1373 && 
documít
->
nodes
.
°¨t
 + 
m≠pög
 <documít->nodes.
t›
);

1375 
	`as£π
(
documít
->
nodes
.
°¨t
[
m≠pög
-1].
ty≥
 =
YAML_MAPPING_NODE
);

1377 
	`as£π
(
key
 > 0 && 
documít
->
nodes
.
°¨t
 + key <documít->nodes.
t›
);

1379 
	`as£π
(
vÆue
 > 0 && 
documít
->
nodes
.
°¨t
 + vÆuê<documít->nodes.
t›
);

1382 
∑ú
.
key
 = key;

1383 
∑ú
.
vÆue
 = value;

1385 i‡(!
	`PUSH
(&
c⁄ãxt
,

1386 
documít
->
nodes
.
°¨t
[
m≠pög
-1].
d©a
.m≠pög.
∑ús
, 
∑ú
))

1390 
	}
}

	@contrib/yaml-0.1.4/src/dumper.c

2 
	~"yaml_¥iv©e.h
"

8 
	$YAML_DECLARE
()

9 
	`yaml_emôãr_›í
(
yaml_emôãr_t
 *
emôãr
);

11 
	$YAML_DECLARE
()

12 
	`yaml_emôãr_˛o£
(
yaml_emôãr_t
 *
emôãr
);

14 
	$YAML_DECLARE
()

15 
	`yaml_emôãr_dump
(
yaml_emôãr_t
 *
emôãr
, 
yaml_documít_t
 *
documít
);

22 
	`yaml_emôãr_dñëe_documít_™d_™ch‹s
(
yaml_emôãr_t
 *
emôãr
);

29 
	`yaml_emôãr_™ch‹_node
(
yaml_emôãr_t
 *
emôãr
, 
ödex
);

31 
yaml_ch¨_t
 *

32 
	`yaml_emôãr_gíî©e_™ch‹
(
yaml_emôãr_t
 *
emôãr
, 
™ch‹_id
);

40 
	`yaml_emôãr_dump_node
(
yaml_emôãr_t
 *
emôãr
, 
ödex
);

43 
	`yaml_emôãr_dump_Æüs
(
yaml_emôãr_t
 *
emôãr
, 
yaml_ch¨_t
 *
™ch‹
);

46 
	`yaml_emôãr_dump_sˇœr
(
yaml_emôãr_t
 *
emôãr
, 
yaml_node_t
 *
node
,

47 
yaml_ch¨_t
 *
™ch‹
);

50 
	`yaml_emôãr_dump_£quí˚
(
yaml_emôãr_t
 *
emôãr
, 
yaml_node_t
 *
node
,

51 
yaml_ch¨_t
 *
™ch‹
);

54 
	`yaml_emôãr_dump_m≠pög
(
yaml_emôãr_t
 *
emôãr
, 
yaml_node_t
 *
node
,

55 
yaml_ch¨_t
 *
™ch‹
);

61 
	$YAML_DECLARE
()

62 
	$yaml_emôãr_›í
(
yaml_emôãr_t
 *
emôãr
)

64 
yaml_evít_t
 
evít
;

65 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

67 
	`as£π
(
emôãr
);

68 
	`as£π
(!
emôãr
->
›íed
);

70 
	`STREAM_START_EVENT_INIT
(
evít
, 
YAML_ANY_ENCODING
, 
m¨k
, mark);

72 i‡(!
	`yaml_emôãr_emô
(
emôãr
, &
evít
)) {

76 
emôãr
->
›íed
 = 1;

79 
	}
}

85 
	$YAML_DECLARE
()

86 
	$yaml_emôãr_˛o£
(
yaml_emôãr_t
 *
emôãr
)

88 
yaml_evít_t
 
evít
;

89 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

91 
	`as£π
(
emôãr
);

92 
	`as£π
(
emôãr
->
›íed
);

94 i‡(
emôãr
->
˛o£d
)  1;

96 
	`STREAM_END_EVENT_INIT
(
evít
, 
m¨k
, mark);

98 i‡(!
	`yaml_emôãr_emô
(
emôãr
, &
evít
)) {

102 
emôãr
->
˛o£d
 = 1;

105 
	}
}

111 
	$YAML_DECLARE
()

112 
	$yaml_emôãr_dump
(
yaml_emôãr_t
 *
emôãr
, 
yaml_documít_t
 *
documít
)

114 
yaml_evít_t
 
evít
;

115 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

117 
	`as£π
(
emôãr
);

118 
	`as£π
(
documít
);

120 
emôãr
->
documít
 = document;

122 i‡(!
emôãr
->
›íed
) {

123 i‡(!
	`yaml_emôãr_›í
(
emôãr
)Ë
îr‹
;

126 i‡(
	`STACK_EMPTY
(
emôãr
, 
documít
->
nodes
)) {

127 i‡(!
	`yaml_emôãr_˛o£
(
emôãr
)Ë
îr‹
;

128 
	`yaml_emôãr_dñëe_documít_™d_™ch‹s
(
emôãr
);

132 
	`as£π
(
emôãr
->
›íed
);

134 
emôãr
->
™ch‹s
 = 
	`yaml_mÆloc
((*(emitter->anchors))

135 * (
documít
->
nodes
.
t›
 - documít->nodes.
°¨t
));

136 i‡(!
emôãr
->
™ch‹s
Ë
îr‹
;

137 
	`mem£t
(
emôãr
->
™ch‹s
, 0, (*(emitter->anchors))

138 * (
documít
->
nodes
.
t›
 - documít->nodes.
°¨t
));

140 
	`DOCUMENT_START_EVENT_INIT
(
evít
, 
documít
->
vîsi⁄_dúe˘ive
,

141 
documít
->
èg_dúe˘ives
.
°¨t
, documít->èg_dúe˘ives.
íd
,

142 
documít
->
°¨t_im∂icô
, 
m¨k
, mark);

143 i‡(!
	`yaml_emôãr_emô
(
emôãr
, &
evít
)Ë
îr‹
;

145 
	`yaml_emôãr_™ch‹_node
(
emôãr
, 1);

146 i‡(!
	`yaml_emôãr_dump_node
(
emôãr
, 1)Ë
îr‹
;

148 
	`DOCUMENT_END_EVENT_INIT
(
evít
, 
documít
->
íd_im∂icô
, 
m¨k
, mark);

149 i‡(!
	`yaml_emôãr_emô
(
emôãr
, &
evít
)Ë
îr‹
;

151 
	`yaml_emôãr_dñëe_documít_™d_™ch‹s
(
emôãr
);

155 
îr‹
:

157 
	`yaml_emôãr_dñëe_documít_™d_™ch‹s
(
emôãr
);

160 
	}
}

167 
	$yaml_emôãr_dñëe_documít_™d_™ch‹s
(
yaml_emôãr_t
 *
emôãr
)

169 
ödex
;

171 i‡(!
emôãr
->
™ch‹s
) {

172 
	`yaml_documít_dñëe
(
emôãr
->
documít
);

173 
emôãr
->
documít
 = 
NULL
;

177 
ödex
 = 0; 
emôãr
->
documít
->
nodes
.
°¨t
 + index

178 < 
emôãr
->
documít
->
nodes
.
t›
; 
ödex
 ++) {

179 
yaml_node_t
 
node
 = 
emôãr
->
documít
->
nodes
.
°¨t
[
ödex
];

180 i‡(!
emôãr
->
™ch‹s
[
ödex
].
£rülized
) {

181 
	`yaml_‰ì
(
node
.
èg
);

182 i‡(
node
.
ty≥
 =
YAML_SCALAR_NODE
) {

183 
	`yaml_‰ì
(
node
.
d©a
.
sˇœr
.
vÆue
);

186 i‡(
node
.
ty≥
 =
YAML_SEQUENCE_NODE
) {

187 
	`STACK_DEL
(
emôãr
, 
node
.
d©a
.
£quí˚
.
ôems
);

189 i‡(
node
.
ty≥
 =
YAML_MAPPING_NODE
) {

190 
	`STACK_DEL
(
emôãr
, 
node
.
d©a
.
m≠pög
.
∑ús
);

194 
	`STACK_DEL
(
emôãr
,Émôãr->
documít
->
nodes
);

195 
	`yaml_‰ì
(
emôãr
->
™ch‹s
);

197 
emôãr
->
™ch‹s
 = 
NULL
;

198 
emôãr
->
œ°_™ch‹_id
 = 0;

199 
emôãr
->
documít
 = 
NULL
;

200 
	}
}

207 
	$yaml_emôãr_™ch‹_node
(
yaml_emôãr_t
 *
emôãr
, 
ödex
)

209 
yaml_node_t
 *
node
 = 
emôãr
->
documít
->
nodes
.
°¨t
 + 
ödex
 - 1;

210 
yaml_node_ôem_t
 *
ôem
;

211 
yaml_node_∑ú_t
 *
∑ú
;

213 
emôãr
->
™ch‹s
[
ödex
-1].
ª„ªn˚s
 ++;

215 i‡(
emôãr
->
™ch‹s
[
ödex
-1].
ª„ªn˚s
 == 1) {

216 
node
->
ty≥
) {

217 
YAML_SEQUENCE_NODE
:

218 
ôem
 = 
node
->
d©a
.
£quí˚
.
ôems
.
°¨t
;

219 
ôem
 < 
node
->
d©a
.
£quí˚
.
ôems
.
t›
; item ++) {

220 
	`yaml_emôãr_™ch‹_node
(
emôãr
, *
ôem
);

223 
YAML_MAPPING_NODE
:

224 
∑ú
 = 
node
->
d©a
.
m≠pög
.
∑ús
.
°¨t
;

225 
∑ú
 < 
node
->
d©a
.
m≠pög
.
∑ús
.
t›
;Öair ++) {

226 
	`yaml_emôãr_™ch‹_node
(
emôãr
, 
∑ú
->
key
);

227 
	`yaml_emôãr_™ch‹_node
(
emôãr
, 
∑ú
->
vÆue
);

235 i‡(
emôãr
->
™ch‹s
[
ödex
-1].
ª„ªn˚s
 == 2) {

236 
emôãr
->
™ch‹s
[
ödex
-1].
™ch‹
 = (++Émôãr->
œ°_™ch‹_id
);

238 
	}
}

244 
	#ANCHOR_TEMPLATE
 "id%03d"

	)

245 
	#ANCHOR_TEMPLATE_LENGTH
 16

	)

247 
yaml_ch¨_t
 *

248 
	$yaml_emôãr_gíî©e_™ch‹
(
yaml_emôãr_t
 *
emôãr
, 
™ch‹_id
)

250 
yaml_ch¨_t
 *
™ch‹
 = 
	`yaml_mÆloc
(
ANCHOR_TEMPLATE_LENGTH
);

252 i‡(!
™ch‹
Ë 
NULL
;

254 
	`•rötf
((*)
™ch‹
, 
ANCHOR_TEMPLATE
, 
™ch‹_id
);

256  
™ch‹
;

257 
	}
}

264 
	$yaml_emôãr_dump_node
(
yaml_emôãr_t
 *
emôãr
, 
ödex
)

266 
yaml_node_t
 *
node
 = 
emôãr
->
documít
->
nodes
.
°¨t
 + 
ödex
 - 1;

267 
™ch‹_id
 = 
emôãr
->
™ch‹s
[
ödex
-1].
™ch‹
;

268 
yaml_ch¨_t
 *
™ch‹
 = 
NULL
;

270 i‡(
™ch‹_id
) {

271 
™ch‹
 = 
	`yaml_emôãr_gíî©e_™ch‹
(
emôãr
, 
™ch‹_id
);

272 i‡(!
™ch‹
)  0;

275 i‡(
emôãr
->
™ch‹s
[
ödex
-1].
£rülized
) {

276  
	`yaml_emôãr_dump_Æüs
(
emôãr
, 
™ch‹
);

279 
emôãr
->
™ch‹s
[
ödex
-1].
£rülized
 = 1;

281 
node
->
ty≥
) {

282 
YAML_SCALAR_NODE
:

283  
	`yaml_emôãr_dump_sˇœr
(
emôãr
, 
node
, 
™ch‹
);

284 
YAML_SEQUENCE_NODE
:

285  
	`yaml_emôãr_dump_£quí˚
(
emôãr
, 
node
, 
™ch‹
);

286 
YAML_MAPPING_NODE
:

287  
	`yaml_emôãr_dump_m≠pög
(
emôãr
, 
node
, 
™ch‹
);

289 
	`as£π
(0);

294 
	}
}

301 
	$yaml_emôãr_dump_Æüs
(
yaml_emôãr_t
 *
emôãr
, 
yaml_ch¨_t
 *
™ch‹
)

303 
yaml_evít_t
 
evít
;

304 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

306 
	`ALIAS_EVENT_INIT
(
evít
, 
™ch‹
, 
m¨k
, mark);

308  
	`yaml_emôãr_emô
(
emôãr
, &
evít
);

309 
	}
}

316 
	$yaml_emôãr_dump_sˇœr
(
yaml_emôãr_t
 *
emôãr
, 
yaml_node_t
 *
node
,

317 
yaml_ch¨_t
 *
™ch‹
)

319 
yaml_evít_t
 
evít
;

320 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

322 
∂aö_im∂icô
 = (
	`°rcmp
((*)
node
->
èg
,

323 
YAML_DEFAULT_SCALAR_TAG
) == 0);

324 
quŸed_im∂icô
 = (
	`°rcmp
((*)
node
->
èg
,

325 
YAML_DEFAULT_SCALAR_TAG
) == 0);

327 
	`SCALAR_EVENT_INIT
(
evít
, 
™ch‹
, 
node
->
èg
,Çode->
d©a
.
sˇœr
.
vÆue
,

328 
node
->
d©a
.
sˇœr
.
Àngth
, 
∂aö_im∂icô
, 
quŸed_im∂icô
,

329 
node
->
d©a
.
sˇœr
.
°yÀ
, 
m¨k
, mark);

331  
	`yaml_emôãr_emô
(
emôãr
, &
evít
);

332 
	}
}

339 
	$yaml_emôãr_dump_£quí˚
(
yaml_emôãr_t
 *
emôãr
, 
yaml_node_t
 *
node
,

340 
yaml_ch¨_t
 *
™ch‹
)

342 
yaml_evít_t
 
evít
;

343 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

345 
im∂icô
 = (
	`°rcmp
((*)
node
->
èg
, 
YAML_DEFAULT_SEQUENCE_TAG
) == 0);

347 
yaml_node_ôem_t
 *
ôem
;

349 
	`SEQUENCE_START_EVENT_INIT
(
evít
, 
™ch‹
, 
node
->
èg
, 
im∂icô
,

350 
node
->
d©a
.
£quí˚
.
°yÀ
, 
m¨k
, mark);

351 i‡(!
	`yaml_emôãr_emô
(
emôãr
, &
evít
))  0;

353 
ôem
 = 
node
->
d©a
.
£quí˚
.
ôems
.
°¨t
;

354 
ôem
 < 
node
->
d©a
.
£quí˚
.
ôems
.
t›
; item ++) {

355 i‡(!
	`yaml_emôãr_dump_node
(
emôãr
, *
ôem
))  0;

358 
	`SEQUENCE_END_EVENT_INIT
(
evít
, 
m¨k
, mark);

359 i‡(!
	`yaml_emôãr_emô
(
emôãr
, &
evít
))  0;

362 
	}
}

369 
	$yaml_emôãr_dump_m≠pög
(
yaml_emôãr_t
 *
emôãr
, 
yaml_node_t
 *
node
,

370 
yaml_ch¨_t
 *
™ch‹
)

372 
yaml_evít_t
 
evít
;

373 
yaml_m¨k_t
 
m¨k
 = { 0, 0, 0 };

375 
im∂icô
 = (
	`°rcmp
((*)
node
->
èg
, 
YAML_DEFAULT_MAPPING_TAG
) == 0);

377 
yaml_node_∑ú_t
 *
∑ú
;

379 
	`MAPPING_START_EVENT_INIT
(
evít
, 
™ch‹
, 
node
->
èg
, 
im∂icô
,

380 
node
->
d©a
.
m≠pög
.
°yÀ
, 
m¨k
, mark);

381 i‡(!
	`yaml_emôãr_emô
(
emôãr
, &
evít
))  0;

383 
∑ú
 = 
node
->
d©a
.
m≠pög
.
∑ús
.
°¨t
;

384 
∑ú
 < 
node
->
d©a
.
m≠pög
.
∑ús
.
t›
;Öair ++) {

385 i‡(!
	`yaml_emôãr_dump_node
(
emôãr
, 
∑ú
->
key
))  0;

386 i‡(!
	`yaml_emôãr_dump_node
(
emôãr
, 
∑ú
->
vÆue
))  0;

389 
	`MAPPING_END_EVENT_INIT
(
evít
, 
m¨k
, mark);

390 i‡(!
	`yaml_emôãr_emô
(
emôãr
, &
evít
))  0;

393 
	}
}

	@contrib/yaml-0.1.4/src/emitter.c

2 
	~"yaml_¥iv©e.h
"

8 
	#FLUSH
(
emôãr
) \

9 ((
emôãr
->
buf„r
.
poöãr
+5 <Émôãr->buf„r.
íd
) \

10 || 
	`yaml_emôãr_Êush
(
emôãr
))

	)

16 
	#PUT
(
emôãr
,
vÆue
) \

17 (
	`FLUSH
(
emôãr
) \

18 && (*(
emôãr
->
buf„r
.
poöãr
++Ë(
yaml_ch¨_t
)(
vÆue
), \

19 
emôãr
->
cﬁumn
 ++, \

20 1))

	)

26 
	#PUT_BREAK
(
emôãr
) \

27 (
	`FLUSH
(
emôãr
) \

28 && ((
emôãr
->
löe_bªak
 =
YAML_CR_BREAK
 ? \

29 (*(
emôãr
->
buf„r
.
poöãr
++Ë(
yaml_ch¨_t
) '\r') : \

30 
emôãr
->
löe_bªak
 =
YAML_LN_BREAK
 ? \

31 (*(
emôãr
->
buf„r
.
poöãr
++Ë(
yaml_ch¨_t
) '\n') : \

32 
emôãr
->
löe_bªak
 =
YAML_CRLN_BREAK
 ? \

33 (*(
emôãr
->
buf„r
.
poöãr
++Ë(
yaml_ch¨_t
) '\r', \

34 *(
emôãr
->
buf„r
.
poöãr
++Ë(
yaml_ch¨_t
) '\n') : 0), \

35 
emôãr
->
cﬁumn
 = 0, \

36 
emôãr
->
löe
 ++, \

37 1))

	)

43 
	#WRITE
(
emôãr
,
°rög
) \

44 (
	`FLUSH
(
emôãr
) \

45 && (
	`COPY
(
emôãr
->
buf„r
,
°rög
), \

46 
emôãr
->
cﬁumn
 ++, \

47 1))

	)

53 
	#WRITE_BREAK
(
emôãr
,
°rög
) \

54 (
	`FLUSH
(
emôãr
) \

55 && (
	`CHECK
(
°rög
,'\n') ? \

56 (
	`PUT_BREAK
(
emôãr
), \

57 
°rög
.
poöãr
 ++, \

59 (
	`COPY
(
emôãr
->
buf„r
,
°rög
), \

60 
emôãr
->
cﬁumn
 = 0, \

61 
emôãr
->
löe
 ++, \

62 1)))

	)

68 
	$YAML_DECLARE
()

69 
	`yaml_emôãr_emô
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
);

76 
	`yaml_emôãr_£t_emôãr_îr‹
(
yaml_emôãr_t
 *
emôãr
, c⁄° *
¥obÀm
);

79 
	`yaml_emôãr_√ed_m‹e_evíts
(
yaml_emôãr_t
 *
emôãr
);

82 
	`yaml_emôãr_≠≥nd_èg_dúe˘ive
(
yaml_emôãr_t
 *
emôãr
,

83 
yaml_èg_dúe˘ive_t
 
vÆue
, 
Ælow_du∂iˇãs
);

86 
	`yaml_emôãr_ö¸ó£_ödít
(
yaml_emôãr_t
 *
emôãr
,

87 
Êow
, 
ödíéess
);

94 
	`yaml_emôãr_°©e_machöe
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
);

97 
	`yaml_emôãr_emô_°ªam_°¨t
(
yaml_emôãr_t
 *
emôãr
,

98 
yaml_evít_t
 *
evít
);

101 
	`yaml_emôãr_emô_documít_°¨t
(
yaml_emôãr_t
 *
emôãr
,

102 
yaml_evít_t
 *
evít
, 
fú°
);

105 
	`yaml_emôãr_emô_documít_c⁄ã¡
(
yaml_emôãr_t
 *
emôãr
,

106 
yaml_evít_t
 *
evít
);

109 
	`yaml_emôãr_emô_documít_íd
(
yaml_emôãr_t
 *
emôãr
,

110 
yaml_evít_t
 *
evít
);

113 
	`yaml_emôãr_emô_Êow_£quí˚_ôem
(
yaml_emôãr_t
 *
emôãr
,

114 
yaml_evít_t
 *
evít
, 
fú°
);

117 
	`yaml_emôãr_emô_Êow_m≠pög_key
(
yaml_emôãr_t
 *
emôãr
,

118 
yaml_evít_t
 *
evít
, 
fú°
);

121 
	`yaml_emôãr_emô_Êow_m≠pög_vÆue
(
yaml_emôãr_t
 *
emôãr
,

122 
yaml_evít_t
 *
evít
, 
sim∂e
);

125 
	`yaml_emôãr_emô_block_£quí˚_ôem
(
yaml_emôãr_t
 *
emôãr
,

126 
yaml_evít_t
 *
evít
, 
fú°
);

129 
	`yaml_emôãr_emô_block_m≠pög_key
(
yaml_emôãr_t
 *
emôãr
,

130 
yaml_evít_t
 *
evít
, 
fú°
);

133 
	`yaml_emôãr_emô_block_m≠pög_vÆue
(
yaml_emôãr_t
 *
emôãr
,

134 
yaml_evít_t
 *
evít
, 
sim∂e
);

137 
	`yaml_emôãr_emô_node
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
,

138 
roŸ
, 
£quí˚
, 
m≠pög
, 
sim∂e_key
);

141 
	`yaml_emôãr_emô_Æüs
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
);

144 
	`yaml_emôãr_emô_sˇœr
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
);

147 
	`yaml_emôãr_emô_£quí˚_°¨t
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
);

150 
	`yaml_emôãr_emô_m≠pög_°¨t
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
);

157 
	`yaml_emôãr_check_em±y_documít
(
yaml_emôãr_t
 *
emôãr
);

160 
	`yaml_emôãr_check_em±y_£quí˚
(
yaml_emôãr_t
 *
emôãr
);

163 
	`yaml_emôãr_check_em±y_m≠pög
(
yaml_emôãr_t
 *
emôãr
);

166 
	`yaml_emôãr_check_sim∂e_key
(
yaml_emôãr_t
 *
emôãr
);

169 
	`yaml_emôãr_£À˘_sˇœr_°yÀ
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
);

176 
	`yaml_emôãr_¥o˚ss_™ch‹
(
yaml_emôãr_t
 *
emôãr
);

179 
	`yaml_emôãr_¥o˚ss_èg
(
yaml_emôãr_t
 *
emôãr
);

182 
	`yaml_emôãr_¥o˚ss_sˇœr
(
yaml_emôãr_t
 *
emôãr
);

189 
	`yaml_emôãr_™Æyze_vîsi⁄_dúe˘ive
(
yaml_emôãr_t
 *
emôãr
,

190 
yaml_vîsi⁄_dúe˘ive_t
 
vîsi⁄_dúe˘ive
);

193 
	`yaml_emôãr_™Æyze_èg_dúe˘ive
(
yaml_emôãr_t
 *
emôãr
,

194 
yaml_èg_dúe˘ive_t
 
èg_dúe˘ive
);

197 
	`yaml_emôãr_™Æyze_™ch‹
(
yaml_emôãr_t
 *
emôãr
,

198 
yaml_ch¨_t
 *
™ch‹
, 
Æüs
);

201 
	`yaml_emôãr_™Æyze_èg
(
yaml_emôãr_t
 *
emôãr
,

202 
yaml_ch¨_t
 *
èg
);

205 
	`yaml_emôãr_™Æyze_sˇœr
(
yaml_emôãr_t
 *
emôãr
,

206 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
);

209 
	`yaml_emôãr_™Æyze_evít
(
yaml_emôãr_t
 *
emôãr
,

210 
yaml_evít_t
 *
evít
);

217 
	`yaml_emôãr_wrôe_bom
(
yaml_emôãr_t
 *
emôãr
);

220 
	`yaml_emôãr_wrôe_ödít
(
yaml_emôãr_t
 *
emôãr
);

223 
	`yaml_emôãr_wrôe_ödiˇt‹
(
yaml_emôãr_t
 *
emôãr
,

224 *
ödiˇt‹
, 
√ed_whôe•a˚
,

225 
is_whôe•a˚
, 
is_ödíti⁄
);

228 
	`yaml_emôãr_wrôe_™ch‹
(
yaml_emôãr_t
 *
emôãr
,

229 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
);

232 
	`yaml_emôãr_wrôe_èg_h™dÀ
(
yaml_emôãr_t
 *
emôãr
,

233 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
);

236 
	`yaml_emôãr_wrôe_èg_c⁄ã¡
(
yaml_emôãr_t
 *
emôãr
,

237 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
, 
√ed_whôe•a˚
);

240 
	`yaml_emôãr_wrôe_∂aö_sˇœr
(
yaml_emôãr_t
 *
emôãr
,

241 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
, 
Ælow_bªaks
);

244 
	`yaml_emôãr_wrôe_sögÀ_quŸed_sˇœr
(
yaml_emôãr_t
 *
emôãr
,

245 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
, 
Ælow_bªaks
);

248 
	`yaml_emôãr_wrôe_doubÀ_quŸed_sˇœr
(
yaml_emôãr_t
 *
emôãr
,

249 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
, 
Ælow_bªaks
);

252 
	`yaml_emôãr_wrôe_block_sˇœr_höts
(
yaml_emôãr_t
 *
emôãr
,

253 
yaml_°rög_t
 
°rög
);

256 
	`yaml_emôãr_wrôe_lôîÆ_sˇœr
(
yaml_emôãr_t
 *
emôãr
,

257 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
);

260 
	`yaml_emôãr_wrôe_fﬁded_sˇœr
(
yaml_emôãr_t
 *
emôãr
,

261 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
);

268 
	$yaml_emôãr_£t_emôãr_îr‹
(
yaml_emôãr_t
 *
emôãr
, c⁄° *
¥obÀm
)

270 
emôãr
->
îr‹
 = 
YAML_EMITTER_ERROR
;

271 
emôãr
->
¥obÀm
 =Öroblem;

274 
	}
}

280 
	$YAML_DECLARE
()

281 
	$yaml_emôãr_emô
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
)

283 i‡(!
	`ENQUEUE
(
emôãr
,Émôãr->
evíts
, *
evít
)) {

284 
	`yaml_evít_dñëe
(
evít
);

288 !
	`yaml_emôãr_√ed_m‹e_evíts
(
emôãr
)) {

289 i‡(!
	`yaml_emôãr_™Æyze_evít
(
emôãr
,Émôãr->
evíts
.
hód
))

291 i‡(!
	`yaml_emôãr_°©e_machöe
(
emôãr
,Émôãr->
evíts
.
hód
))

293 
	`yaml_evít_dñëe
(&
	`DEQUEUE
(
emôãr
,Émôãr->
evíts
));

297 
	}
}

309 
	$yaml_emôãr_√ed_m‹e_evíts
(
yaml_emôãr_t
 *
emôãr
)

311 
Àvñ
 = 0;

312 
accumuœã
 = 0;

313 
yaml_evít_t
 *
evít
;

315 i‡(
	`QUEUE_EMPTY
(
emôãr
,Émôãr->
evíts
))

318 
emôãr
->
evíts
.
hód
->
ty≥
) {

319 
YAML_DOCUMENT_START_EVENT
:

320 
accumuœã
 = 1;

322 
YAML_SEQUENCE_START_EVENT
:

323 
accumuœã
 = 2;

325 
YAML_MAPPING_START_EVENT
:

326 
accumuœã
 = 3;

332 i‡(
emôãr
->
evíts
.
èû
 -Émôãr->evíts.
hód
 > 
accumuœã
)

335 
evít
 = 
emôãr
->
evíts
.
hód
;Évíà!emôãr->evíts.
èû
;Évent ++) {

336 
evít
->
ty≥
) {

337 
YAML_STREAM_START_EVENT
:

338 
YAML_DOCUMENT_START_EVENT
:

339 
YAML_SEQUENCE_START_EVENT
:

340 
YAML_MAPPING_START_EVENT
:

341 
Àvñ
 += 1;

343 
YAML_STREAM_END_EVENT
:

344 
YAML_DOCUMENT_END_EVENT
:

345 
YAML_SEQUENCE_END_EVENT
:

346 
YAML_MAPPING_END_EVENT
:

347 
Àvñ
 -= 1;

352 i‡(!
Àvñ
)

357 
	}
}

364 
	$yaml_emôãr_≠≥nd_èg_dúe˘ive
(
yaml_emôãr_t
 *
emôãr
,

365 
yaml_èg_dúe˘ive_t
 
vÆue
, 
Ælow_du∂iˇãs
)

367 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ive
;

368 
yaml_èg_dúe˘ive_t
 
c›y
 = { 
NULL
, NULL };

370 
èg_dúe˘ive
 = 
emôãr
->
èg_dúe˘ives
.
°¨t
;

371 
èg_dúe˘ive
 !
emôãr
->
èg_dúe˘ives
.
t›
;Åag_directive ++) {

372 i‡(
	`°rcmp
((*)
vÆue
.
h™dÀ
, (*)
èg_dúe˘ive
->handle) == 0) {

373 i‡(
Ælow_du∂iˇãs
)

375  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
,

380 
c›y
.
h™dÀ
 = 
	`yaml_°rdup
(
vÆue
.handle);

381 
c›y
.
¥efix
 = 
	`yaml_°rdup
(
vÆue
.prefix);

382 i‡(!
c›y
.
h™dÀ
 || !c›y.
¥efix
) {

383 
emôãr
->
îr‹
 = 
YAML_MEMORY_ERROR
;

384 
îr‹
;

387 i‡(!
	`PUSH
(
emôãr
,Émôãr->
èg_dúe˘ives
, 
c›y
))

388 
îr‹
;

392 
îr‹
:

393 
	`yaml_‰ì
(
c›y
.
h™dÀ
);

394 
	`yaml_‰ì
(
c›y
.
¥efix
);

396 
	}
}

403 
	$yaml_emôãr_ö¸ó£_ödít
(
yaml_emôãr_t
 *
emôãr
,

404 
Êow
, 
ödíéess
)

406 i‡(!
	`PUSH
(
emôãr
,Émôãr->
ödíts
,Émôãr->
ödít
))

409 i‡(
emôãr
->
ödít
 < 0) {

410 
emôãr
->
ödít
 = 
Êow
 ?Émôãr->
be°_ödít
 : 0;

412 i‡(!
ödíéess
) {

413 
emôãr
->
ödít
 +emôãr->
be°_ödít
;

417 
	}
}

424 
	$yaml_emôãr_°©e_machöe
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
)

426 
emôãr
->
°©e
)

428 
YAML_EMIT_STREAM_START_STATE
:

429  
	`yaml_emôãr_emô_°ªam_°¨t
(
emôãr
, 
evít
);

431 
YAML_EMIT_FIRST_DOCUMENT_START_STATE
:

432  
	`yaml_emôãr_emô_documít_°¨t
(
emôãr
, 
evít
, 1);

434 
YAML_EMIT_DOCUMENT_START_STATE
:

435  
	`yaml_emôãr_emô_documít_°¨t
(
emôãr
, 
evít
, 0);

437 
YAML_EMIT_DOCUMENT_CONTENT_STATE
:

438  
	`yaml_emôãr_emô_documít_c⁄ã¡
(
emôãr
, 
evít
);

440 
YAML_EMIT_DOCUMENT_END_STATE
:

441  
	`yaml_emôãr_emô_documít_íd
(
emôãr
, 
evít
);

443 
YAML_EMIT_FLOW_SEQUENCE_FIRST_ITEM_STATE
:

444  
	`yaml_emôãr_emô_Êow_£quí˚_ôem
(
emôãr
, 
evít
, 1);

446 
YAML_EMIT_FLOW_SEQUENCE_ITEM_STATE
:

447  
	`yaml_emôãr_emô_Êow_£quí˚_ôem
(
emôãr
, 
evít
, 0);

449 
YAML_EMIT_FLOW_MAPPING_FIRST_KEY_STATE
:

450  
	`yaml_emôãr_emô_Êow_m≠pög_key
(
emôãr
, 
evít
, 1);

452 
YAML_EMIT_FLOW_MAPPING_KEY_STATE
:

453  
	`yaml_emôãr_emô_Êow_m≠pög_key
(
emôãr
, 
evít
, 0);

455 
YAML_EMIT_FLOW_MAPPING_SIMPLE_VALUE_STATE
:

456  
	`yaml_emôãr_emô_Êow_m≠pög_vÆue
(
emôãr
, 
evít
, 1);

458 
YAML_EMIT_FLOW_MAPPING_VALUE_STATE
:

459  
	`yaml_emôãr_emô_Êow_m≠pög_vÆue
(
emôãr
, 
evít
, 0);

461 
YAML_EMIT_BLOCK_SEQUENCE_FIRST_ITEM_STATE
:

462  
	`yaml_emôãr_emô_block_£quí˚_ôem
(
emôãr
, 
evít
, 1);

464 
YAML_EMIT_BLOCK_SEQUENCE_ITEM_STATE
:

465  
	`yaml_emôãr_emô_block_£quí˚_ôem
(
emôãr
, 
evít
, 0);

467 
YAML_EMIT_BLOCK_MAPPING_FIRST_KEY_STATE
:

468  
	`yaml_emôãr_emô_block_m≠pög_key
(
emôãr
, 
evít
, 1);

470 
YAML_EMIT_BLOCK_MAPPING_KEY_STATE
:

471  
	`yaml_emôãr_emô_block_m≠pög_key
(
emôãr
, 
evít
, 0);

473 
YAML_EMIT_BLOCK_MAPPING_SIMPLE_VALUE_STATE
:

474  
	`yaml_emôãr_emô_block_m≠pög_vÆue
(
emôãr
, 
evít
, 1);

476 
YAML_EMIT_BLOCK_MAPPING_VALUE_STATE
:

477  
	`yaml_emôãr_emô_block_m≠pög_vÆue
(
emôãr
, 
evít
, 0);

479 
YAML_EMIT_END_STATE
:

480  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
,

484 
	`as£π
(1);

488 
	}
}

495 
	$yaml_emôãr_emô_°ªam_°¨t
(
yaml_emôãr_t
 *
emôãr
,

496 
yaml_evít_t
 *
evít
)

498 i‡(
evít
->
ty≥
 =
YAML_STREAM_START_EVENT
)

500 i‡(!
emôãr
->
ícodög
) {

501 
emôãr
->
ícodög
 = 
evít
->
d©a
.
°ªam_°¨t
.encoding;

504 i‡(!
emôãr
->
ícodög
) {

505 
emôãr
->
ícodög
 = 
YAML_UTF8_ENCODING
;

508 i‡(
emôãr
->
be°_ödít
 < 2 ||Émitter->best_indent > 9) {

509 
emôãr
->
be°_ödít
 = 2;

512 i‡(
emôãr
->
be°_width
 >= 0

513 && 
emôãr
->
be°_width
 <emôãr->
be°_ödít
*2) {

514 
emôãr
->
be°_width
 = 80;

517 i‡(
emôãr
->
be°_width
 < 0) {

518 
emôãr
->
be°_width
 = 
INT_MAX
;

521 i‡(!
emôãr
->
löe_bªak
) {

522 
emôãr
->
löe_bªak
 = 
YAML_LN_BREAK
;

525 
emôãr
->
ödít
 = -1;

527 
emôãr
->
löe
 = 0;

528 
emôãr
->
cﬁumn
 = 0;

529 
emôãr
->
whôe•a˚
 = 1;

530 
emôãr
->
ödíti⁄
 = 1;

532 i‡(
emôãr
->
ícodög
 !
YAML_UTF8_ENCODING
) {

533 i‡(!
	`yaml_emôãr_wrôe_bom
(
emôãr
))

537 
emôãr
->
°©e
 = 
YAML_EMIT_FIRST_DOCUMENT_START_STATE
;

542  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
,

544 
	}
}

551 
	$yaml_emôãr_emô_documít_°¨t
(
yaml_emôãr_t
 *
emôãr
,

552 
yaml_evít_t
 *
evít
, 
fú°
)

554 i‡(
evít
->
ty≥
 =
YAML_DOCUMENT_START_EVENT
)

556 
yaml_èg_dúe˘ive_t
 
deÁu…_èg_dúe˘ives
[] = {

557 {(
yaml_ch¨_t
 *)"!", (yaml_char_t *)"!"},

558 {(
yaml_ch¨_t
 *)"!!", (yaml_char_t *)"tag:yaml.org,2002:"},

559 {
NULL
, NULL}

561 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ive
;

562 
im∂icô
;

564 i‡(
evít
->
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
) {

565 i‡(!
	`yaml_emôãr_™Æyze_vîsi⁄_dúe˘ive
(
emôãr
,

566 *
evít
->
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
))

570 
èg_dúe˘ive
 = 
evít
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t
;

571 
èg_dúe˘ive
 !
evít
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
;

572 
èg_dúe˘ive
 ++) {

573 i‡(!
	`yaml_emôãr_™Æyze_èg_dúe˘ive
(
emôãr
, *
èg_dúe˘ive
))

575 i‡(!
	`yaml_emôãr_≠≥nd_èg_dúe˘ive
(
emôãr
, *
èg_dúe˘ive
, 0))

579 
èg_dúe˘ive
 = 
deÁu…_èg_dúe˘ives
;

580 
èg_dúe˘ive
->
h™dÀ
;Åag_directive ++) {

581 i‡(!
	`yaml_emôãr_≠≥nd_èg_dúe˘ive
(
emôãr
, *
èg_dúe˘ive
, 1))

585 
im∂icô
 = 
evít
->
d©a
.
documít_°¨t
.implicit;

586 i‡(!
fú°
 || 
emôãr
->
ˇn⁄iˇl
) {

587 
im∂icô
 = 0;

590 i‡((
evít
->
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
 ||

591 (
evít
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t


592 !
evít
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
)) &&

593 
emôãr
->
›í_íded
)

595 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "...", 1, 0, 0))

597 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

601 i‡(
evít
->
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
) {

602 
im∂icô
 = 0;

603 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "%YAML", 1, 0, 0))

605 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "1.1", 1, 0, 0))

607 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

611 i‡(
evít
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t


612 !
evít
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
) {

613 
im∂icô
 = 0;

614 
èg_dúe˘ive
 = 
evít
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t
;

615 
èg_dúe˘ive
 !
evít
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
;

616 
èg_dúe˘ive
 ++) {

617 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "%TAG", 1, 0, 0))

619 i‡(!
	`yaml_emôãr_wrôe_èg_h™dÀ
(
emôãr
, 
èg_dúe˘ive
->
h™dÀ
,

620 
	`°æí
((*)
èg_dúe˘ive
->
h™dÀ
)))

622 i‡(!
	`yaml_emôãr_wrôe_èg_c⁄ã¡
(
emôãr
, 
èg_dúe˘ive
->
¥efix
,

623 
	`°æí
((*)
èg_dúe˘ive
->
¥efix
), 1))

625 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

630 i‡(
	`yaml_emôãr_check_em±y_documít
(
emôãr
)) {

631 
im∂icô
 = 0;

634 i‡(!
im∂icô
) {

635 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

637 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "---", 1, 0, 0))

639 i‡(
emôãr
->
ˇn⁄iˇl
) {

640 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

645 
emôãr
->
°©e
 = 
YAML_EMIT_DOCUMENT_CONTENT_STATE
;

650 i‡(
evít
->
ty≥
 =
YAML_STREAM_END_EVENT
)

652 i‡(
emôãr
->
›í_íded
)

654 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "...", 1, 0, 0))

656 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

660 i‡(!
	`yaml_emôãr_Êush
(
emôãr
))

663 
emôãr
->
°©e
 = 
YAML_EMIT_END_STATE
;

668  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
,

670 
	}
}

677 
	$yaml_emôãr_emô_documít_c⁄ã¡
(
yaml_emôãr_t
 *
emôãr
,

678 
yaml_evít_t
 *
evít
)

680 i‡(!
	`PUSH
(
emôãr
,Émôãr->
°©es
, 
YAML_EMIT_DOCUMENT_END_STATE
))

683  
	`yaml_emôãr_emô_node
(
emôãr
, 
evít
, 1, 0, 0, 0);

684 
	}
}

691 
	$yaml_emôãr_emô_documít_íd
(
yaml_emôãr_t
 *
emôãr
,

692 
yaml_evít_t
 *
evít
)

694 i‡(
evít
->
ty≥
 =
YAML_DOCUMENT_END_EVENT
)

696 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

698 i‡(!
evít
->
d©a
.
documít_íd
.
im∂icô
) {

699 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "...", 1, 0, 0))

701 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

704 i‡(!
	`yaml_emôãr_Êush
(
emôãr
))

707 
emôãr
->
°©e
 = 
YAML_EMIT_DOCUMENT_START_STATE
;

709 !
	`STACK_EMPTY
(
emôãr
,Émôãr->
èg_dúe˘ives
)) {

710 
yaml_èg_dúe˘ive_t
 
èg_dúe˘ive
 = 
	`POP
(
emôãr
,

711 
emôãr
->
èg_dúe˘ives
);

712 
	`yaml_‰ì
(
èg_dúe˘ive
.
h™dÀ
);

713 
	`yaml_‰ì
(
èg_dúe˘ive
.
¥efix
);

719  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
,

721 
	}
}

729 
	$yaml_emôãr_emô_Êow_£quí˚_ôem
(
yaml_emôãr_t
 *
emôãr
,

730 
yaml_evít_t
 *
evít
, 
fú°
)

732 i‡(
fú°
)

734 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "[", 1, 1, 0))

736 i‡(!
	`yaml_emôãr_ö¸ó£_ödít
(
emôãr
, 1, 0))

738 
emôãr
->
Êow_Àvñ
 ++;

741 i‡(
evít
->
ty≥
 =
YAML_SEQUENCE_END_EVENT
)

743 
emôãr
->
Êow_Àvñ
 --;

744 
emôãr
->
ödít
 = 
	`POP
”môãr,Émôãr->
ödíts
);

745 i‡(
emôãr
->
ˇn⁄iˇl
 && !
fú°
) {

746 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, ",", 0, 0, 0))

748 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

751 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "]", 0, 0, 0))

753 
emôãr
->
°©e
 = 
	`POP
”môãr,Émôãr->
°©es
);

758 i‡(!
fú°
) {

759 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, ",", 0, 0, 0))

763 i‡(
emôãr
->
ˇn⁄iˇl
 ||Émôãr->
cﬁumn
 >Émôãr->
be°_width
) {

764 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

767 i‡(!
	`PUSH
(
emôãr
,Émôãr->
°©es
, 
YAML_EMIT_FLOW_SEQUENCE_ITEM_STATE
))

770  
	`yaml_emôãr_emô_node
(
emôãr
, 
evít
, 0, 1, 0, 0);

771 
	}
}

778 
	$yaml_emôãr_emô_Êow_m≠pög_key
(
yaml_emôãr_t
 *
emôãr
,

779 
yaml_evít_t
 *
evít
, 
fú°
)

781 i‡(
fú°
)

783 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "{", 1, 1, 0))

785 i‡(!
	`yaml_emôãr_ö¸ó£_ödít
(
emôãr
, 1, 0))

787 
emôãr
->
Êow_Àvñ
 ++;

790 i‡(
evít
->
ty≥
 =
YAML_MAPPING_END_EVENT
)

792 
emôãr
->
Êow_Àvñ
 --;

793 
emôãr
->
ödít
 = 
	`POP
”môãr,Émôãr->
ödíts
);

794 i‡(
emôãr
->
ˇn⁄iˇl
 && !
fú°
) {

795 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, ",", 0, 0, 0))

797 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

800 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "}", 0, 0, 0))

802 
emôãr
->
°©e
 = 
	`POP
”môãr,Émôãr->
°©es
);

807 i‡(!
fú°
) {

808 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, ",", 0, 0, 0))

811 i‡(
emôãr
->
ˇn⁄iˇl
 ||Émôãr->
cﬁumn
 >Émôãr->
be°_width
) {

812 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

816 i‡(!
emôãr
->
ˇn⁄iˇl
 && 
	`yaml_emôãr_check_sim∂e_key
(emitter))

818 i‡(!
	`PUSH
(
emôãr
,Émôãr->
°©es
,

819 
YAML_EMIT_FLOW_MAPPING_SIMPLE_VALUE_STATE
))

822  
	`yaml_emôãr_emô_node
(
emôãr
, 
evít
, 0, 0, 1, 1);

826 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "?", 1, 0, 0))

828 i‡(!
	`PUSH
(
emôãr
,Émôãr->
°©es
,

829 
YAML_EMIT_FLOW_MAPPING_VALUE_STATE
))

832  
	`yaml_emôãr_emô_node
(
emôãr
, 
evít
, 0, 0, 1, 0);

834 
	}
}

841 
	$yaml_emôãr_emô_Êow_m≠pög_vÆue
(
yaml_emôãr_t
 *
emôãr
,

842 
yaml_evít_t
 *
evít
, 
sim∂e
)

844 i‡(
sim∂e
) {

845 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, ":", 0, 0, 0))

849 i‡(
emôãr
->
ˇn⁄iˇl
 ||Émôãr->
cﬁumn
 >Émôãr->
be°_width
) {

850 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

853 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, ":", 1, 0, 0))

856 i‡(!
	`PUSH
(
emôãr
,Émôãr->
°©es
, 
YAML_EMIT_FLOW_MAPPING_KEY_STATE
))

858  
	`yaml_emôãr_emô_node
(
emôãr
, 
evít
, 0, 0, 1, 0);

859 
	}
}

866 
	$yaml_emôãr_emô_block_£quí˚_ôem
(
yaml_emôãr_t
 *
emôãr
,

867 
yaml_evít_t
 *
evít
, 
fú°
)

869 i‡(
fú°
)

871 i‡(!
	`yaml_emôãr_ö¸ó£_ödít
(
emôãr
, 0,

872 (
emôãr
->
m≠pög_c⁄ãxt
 && !emôãr->
ödíti⁄
)))

876 i‡(
evít
->
ty≥
 =
YAML_SEQUENCE_END_EVENT
)

878 
emôãr
->
ödít
 = 
	`POP
”môãr,Émôãr->
ödíts
);

879 
emôãr
->
°©e
 = 
	`POP
”môãr,Émôãr->
°©es
);

884 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

886 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "-", 1, 0, 1))

888 i‡(!
	`PUSH
(
emôãr
,Émôãr->
°©es
,

889 
YAML_EMIT_BLOCK_SEQUENCE_ITEM_STATE
))

892  
	`yaml_emôãr_emô_node
(
emôãr
, 
evít
, 0, 1, 0, 0);

893 
	}
}

900 
	$yaml_emôãr_emô_block_m≠pög_key
(
yaml_emôãr_t
 *
emôãr
,

901 
yaml_evít_t
 *
evít
, 
fú°
)

903 i‡(
fú°
)

905 i‡(!
	`yaml_emôãr_ö¸ó£_ödít
(
emôãr
, 0, 0))

909 i‡(
evít
->
ty≥
 =
YAML_MAPPING_END_EVENT
)

911 
emôãr
->
ödít
 = 
	`POP
”môãr,Émôãr->
ödíts
);

912 
emôãr
->
°©e
 = 
	`POP
”môãr,Émôãr->
°©es
);

917 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

920 i‡(
	`yaml_emôãr_check_sim∂e_key
(
emôãr
))

922 i‡(!
	`PUSH
(
emôãr
,Émôãr->
°©es
,

923 
YAML_EMIT_BLOCK_MAPPING_SIMPLE_VALUE_STATE
))

926  
	`yaml_emôãr_emô_node
(
emôãr
, 
evít
, 0, 0, 1, 1);

930 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "?", 1, 0, 1))

932 i‡(!
	`PUSH
(
emôãr
,Émôãr->
°©es
,

933 
YAML_EMIT_BLOCK_MAPPING_VALUE_STATE
))

936  
	`yaml_emôãr_emô_node
(
emôãr
, 
evít
, 0, 0, 1, 0);

938 
	}
}

945 
	$yaml_emôãr_emô_block_m≠pög_vÆue
(
yaml_emôãr_t
 *
emôãr
,

946 
yaml_evít_t
 *
evít
, 
sim∂e
)

948 i‡(
sim∂e
) {

949 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, ":", 0, 0, 0))

953 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))

955 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, ":", 1, 0, 1))

958 i‡(!
	`PUSH
(
emôãr
,Émôãr->
°©es
,

959 
YAML_EMIT_BLOCK_MAPPING_KEY_STATE
))

962  
	`yaml_emôãr_emô_node
(
emôãr
, 
evít
, 0, 0, 1, 0);

963 
	}
}

970 
	$yaml_emôãr_emô_node
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
,

971 
roŸ
, 
£quí˚
, 
m≠pög
, 
sim∂e_key
)

973 
emôãr
->
roŸ_c⁄ãxt
 = 
roŸ
;

974 
emôãr
->
£quí˚_c⁄ãxt
 = 
£quí˚
;

975 
emôãr
->
m≠pög_c⁄ãxt
 = 
m≠pög
;

976 
emôãr
->
sim∂e_key_c⁄ãxt
 = 
sim∂e_key
;

978 
evít
->
ty≥
)

980 
YAML_ALIAS_EVENT
:

981  
	`yaml_emôãr_emô_Æüs
(
emôãr
, 
evít
);

983 
YAML_SCALAR_EVENT
:

984  
	`yaml_emôãr_emô_sˇœr
(
emôãr
, 
evít
);

986 
YAML_SEQUENCE_START_EVENT
:

987  
	`yaml_emôãr_emô_£quí˚_°¨t
(
emôãr
, 
evít
);

989 
YAML_MAPPING_START_EVENT
:

990  
	`yaml_emôãr_emô_m≠pög_°¨t
(
emôãr
, 
evít
);

993  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
,

998 
	}
}

1005 
	$yaml_emôãr_emô_Æüs
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
)

1007 i‡(!
	`yaml_emôãr_¥o˚ss_™ch‹
(
emôãr
))

1009 
emôãr
->
°©e
 = 
	`POP
”môãr,Émôãr->
°©es
);

1012 
	}
}

1019 
	$yaml_emôãr_emô_sˇœr
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
)

1021 i‡(!
	`yaml_emôãr_£À˘_sˇœr_°yÀ
(
emôãr
, 
evít
))

1023 i‡(!
	`yaml_emôãr_¥o˚ss_™ch‹
(
emôãr
))

1025 i‡(!
	`yaml_emôãr_¥o˚ss_èg
(
emôãr
))

1027 i‡(!
	`yaml_emôãr_ö¸ó£_ödít
(
emôãr
, 1, 0))

1029 i‡(!
	`yaml_emôãr_¥o˚ss_sˇœr
(
emôãr
))

1031 
emôãr
->
ödít
 = 
	`POP
”môãr,Émôãr->
ödíts
);

1032 
emôãr
->
°©e
 = 
	`POP
”môãr,Émôãr->
°©es
);

1035 
	}
}

1042 
	$yaml_emôãr_emô_£quí˚_°¨t
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
)

1044 i‡(!
	`yaml_emôãr_¥o˚ss_™ch‹
(
emôãr
))

1046 i‡(!
	`yaml_emôãr_¥o˚ss_èg
(
emôãr
))

1049 i‡(
emôãr
->
Êow_Àvñ
 ||Émôãr->
ˇn⁄iˇl


1050 || 
evít
->
d©a
.
£quí˚_°¨t
.
°yÀ
 =
YAML_FLOW_SEQUENCE_STYLE


1051 || 
	`yaml_emôãr_check_em±y_£quí˚
(
emôãr
)) {

1052 
emôãr
->
°©e
 = 
YAML_EMIT_FLOW_SEQUENCE_FIRST_ITEM_STATE
;

1055 
emôãr
->
°©e
 = 
YAML_EMIT_BLOCK_SEQUENCE_FIRST_ITEM_STATE
;

1059 
	}
}

1066 
	$yaml_emôãr_emô_m≠pög_°¨t
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
)

1068 i‡(!
	`yaml_emôãr_¥o˚ss_™ch‹
(
emôãr
))

1070 i‡(!
	`yaml_emôãr_¥o˚ss_èg
(
emôãr
))

1073 i‡(
emôãr
->
Êow_Àvñ
 ||Émôãr->
ˇn⁄iˇl


1074 || 
evít
->
d©a
.
m≠pög_°¨t
.
°yÀ
 =
YAML_FLOW_MAPPING_STYLE


1075 || 
	`yaml_emôãr_check_em±y_m≠pög
(
emôãr
)) {

1076 
emôãr
->
°©e
 = 
YAML_EMIT_FLOW_MAPPING_FIRST_KEY_STATE
;

1079 
emôãr
->
°©e
 = 
YAML_EMIT_BLOCK_MAPPING_FIRST_KEY_STATE
;

1083 
	}
}

1090 
	$yaml_emôãr_check_em±y_documít
(
yaml_emôãr_t
 *
emôãr
)

1093 
	}
}

1100 
	$yaml_emôãr_check_em±y_£quí˚
(
yaml_emôãr_t
 *
emôãr
)

1102 i‡(
emôãr
->
evíts
.
èû
 -Émôãr->evíts.
hód
 < 2)

1105  (
emôãr
->
evíts
.
hód
[0].
ty≥
 =
YAML_SEQUENCE_START_EVENT


1106 && 
emôãr
->
evíts
.
hód
[1].
ty≥
 =
YAML_SEQUENCE_END_EVENT
);

1107 
	}
}

1114 
	$yaml_emôãr_check_em±y_m≠pög
(
yaml_emôãr_t
 *
emôãr
)

1116 i‡(
emôãr
->
evíts
.
èû
 -Émôãr->evíts.
hód
 < 2)

1119  (
emôãr
->
evíts
.
hód
[0].
ty≥
 =
YAML_MAPPING_START_EVENT


1120 && 
emôãr
->
evíts
.
hód
[1].
ty≥
 =
YAML_MAPPING_END_EVENT
);

1121 
	}
}

1128 
	$yaml_emôãr_check_sim∂e_key
(
yaml_emôãr_t
 *
emôãr
)

1130 
yaml_evít_t
 *
evít
 = 
emôãr
->
evíts
.
hód
;

1131 
size_t
 
Àngth
 = 0;

1133 
evít
->
ty≥
)

1135 
YAML_ALIAS_EVENT
:

1136 
Àngth
 +
emôãr
->
™ch‹_d©a
.
™ch‹_Àngth
;

1139 
YAML_SCALAR_EVENT
:

1140 i‡(
emôãr
->
sˇœr_d©a
.
mu…ûöe
)

1142 
Àngth
 +
emôãr
->
™ch‹_d©a
.
™ch‹_Àngth


1143 + 
emôãr
->
èg_d©a
.
h™dÀ_Àngth


1144 + 
emôãr
->
èg_d©a
.
suffix_Àngth


1145 + 
emôãr
->
sˇœr_d©a
.
Àngth
;

1148 
YAML_SEQUENCE_START_EVENT
:

1149 i‡(!
	`yaml_emôãr_check_em±y_£quí˚
(
emôãr
))

1151 
Àngth
 +
emôãr
->
™ch‹_d©a
.
™ch‹_Àngth


1152 + 
emôãr
->
èg_d©a
.
h™dÀ_Àngth


1153 + 
emôãr
->
èg_d©a
.
suffix_Àngth
;

1156 
YAML_MAPPING_START_EVENT
:

1157 i‡(!
	`yaml_emôãr_check_em±y_m≠pög
(
emôãr
))

1159 
Àngth
 +
emôãr
->
™ch‹_d©a
.
™ch‹_Àngth


1160 + 
emôãr
->
èg_d©a
.
h™dÀ_Àngth


1161 + 
emôãr
->
èg_d©a
.
suffix_Àngth
;

1168 i‡(
Àngth
 > 128)

1172 
	}
}

1179 
	$yaml_emôãr_£À˘_sˇœr_°yÀ
(
yaml_emôãr_t
 *
emôãr
, 
yaml_evít_t
 *
evít
)

1181 
yaml_sˇœr_°yÀ_t
 
°yÀ
 = 
evít
->
d©a
.
sˇœr
.style;

1182 
no_èg
 = (!
emôãr
->
èg_d©a
.
h™dÀ
 && !emôãr->èg_d©a.
suffix
);

1184 i‡(
no_èg
 && !
evít
->
d©a
.
sˇœr
.
∂aö_im∂icô


1185 && !
evít
->
d©a
.
sˇœr
.
quŸed_im∂icô
) {

1186  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
,

1190 i‡(
°yÀ
 =
YAML_ANY_SCALAR_STYLE
)

1191 
°yÀ
 = 
YAML_PLAIN_SCALAR_STYLE
;

1193 i‡(
emôãr
->
ˇn⁄iˇl
)

1194 
°yÀ
 = 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
;

1196 i‡(
emôãr
->
sim∂e_key_c⁄ãxt
 &&Émôãr->
sˇœr_d©a
.
mu…ûöe
)

1197 
°yÀ
 = 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
;

1199 i‡(
°yÀ
 =
YAML_PLAIN_SCALAR_STYLE
)

1201 i‡((
emôãr
->
Êow_Àvñ
 && !emôãr->
sˇœr_d©a
.
Êow_∂aö_Ælowed
)

1202 || (!
emôãr
->
Êow_Àvñ
 && !emôãr->
sˇœr_d©a
.
block_∂aö_Ælowed
))

1203 
°yÀ
 = 
YAML_SINGLE_QUOTED_SCALAR_STYLE
;

1204 i‡(!
emôãr
->
sˇœr_d©a
.
Àngth


1205 && (
emôãr
->
Êow_Àvñ
 ||Émôãr->
sim∂e_key_c⁄ãxt
))

1206 
°yÀ
 = 
YAML_SINGLE_QUOTED_SCALAR_STYLE
;

1207 i‡(
no_èg
 && !
evít
->
d©a
.
sˇœr
.
∂aö_im∂icô
)

1208 
°yÀ
 = 
YAML_SINGLE_QUOTED_SCALAR_STYLE
;

1211 i‡(
°yÀ
 =
YAML_SINGLE_QUOTED_SCALAR_STYLE
)

1213 i‡(!
emôãr
->
sˇœr_d©a
.
sögÀ_quŸed_Ælowed
)

1214 
°yÀ
 = 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
;

1217 i‡(
°yÀ
 =
YAML_LITERAL_SCALAR_STYLE
 || styÀ =
YAML_FOLDED_SCALAR_STYLE
)

1219 i‡(!
emôãr
->
sˇœr_d©a
.
block_Ælowed


1220 || 
emôãr
->
Êow_Àvñ
 ||Émôãr->
sim∂e_key_c⁄ãxt
)

1221 
°yÀ
 = 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
;

1224 i‡(
no_èg
 && !
evít
->
d©a
.
sˇœr
.
quŸed_im∂icô


1225 && 
°yÀ
 !
YAML_PLAIN_SCALAR_STYLE
)

1227 
emôãr
->
èg_d©a
.
h™dÀ
 = (
yaml_ch¨_t
 *)"!";

1228 
emôãr
->
èg_d©a
.
h™dÀ_Àngth
 = 1;

1231 
emôãr
->
sˇœr_d©a
.
°yÀ
 = style;

1234 
	}
}

1241 
	$yaml_emôãr_¥o˚ss_™ch‹
(
yaml_emôãr_t
 *
emôãr
)

1243 i‡(!
emôãr
->
™ch‹_d©a
.
™ch‹
)

1246 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
,

1247 (
emôãr
->
™ch‹_d©a
.
Æüs
 ? "*" : "&"), 1, 0, 0))

1250  
	`yaml_emôãr_wrôe_™ch‹
(
emôãr
,

1251 
emôãr
->
™ch‹_d©a
.
™ch‹
,Émôãr->™ch‹_d©a.
™ch‹_Àngth
);

1252 
	}
}

1259 
	$yaml_emôãr_¥o˚ss_èg
(
yaml_emôãr_t
 *
emôãr
)

1261 i‡(!
emôãr
->
èg_d©a
.
h™dÀ
 && !emôãr->èg_d©a.
suffix
)

1264 i‡(
emôãr
->
èg_d©a
.
h™dÀ
)

1266 i‡(!
	`yaml_emôãr_wrôe_èg_h™dÀ
(
emôãr
,Émôãr->
èg_d©a
.
h™dÀ
,

1267 
emôãr
->
èg_d©a
.
h™dÀ_Àngth
))

1269 i‡(
emôãr
->
èg_d©a
.
suffix
) {

1270 i‡(!
	`yaml_emôãr_wrôe_èg_c⁄ã¡
(
emôãr
,Émôãr->
èg_d©a
.
suffix
,

1271 
emôãr
->
èg_d©a
.
suffix_Àngth
, 0))

1277 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "!<", 1, 0, 0))

1279 i‡(!
	`yaml_emôãr_wrôe_èg_c⁄ã¡
(
emôãr
,Émôãr->
èg_d©a
.
suffix
,

1280 
emôãr
->
èg_d©a
.
suffix_Àngth
, 0))

1282 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, ">", 0, 0, 0))

1287 
	}
}

1294 
	$yaml_emôãr_¥o˚ss_sˇœr
(
yaml_emôãr_t
 *
emôãr
)

1296 
emôãr
->
sˇœr_d©a
.
°yÀ
)

1298 
YAML_PLAIN_SCALAR_STYLE
:

1299  
	`yaml_emôãr_wrôe_∂aö_sˇœr
(
emôãr
,

1300 
emôãr
->
sˇœr_d©a
.
vÆue
,Émôãr->sˇœr_d©a.
Àngth
,

1301 !
emôãr
->
sim∂e_key_c⁄ãxt
);

1303 
YAML_SINGLE_QUOTED_SCALAR_STYLE
:

1304  
	`yaml_emôãr_wrôe_sögÀ_quŸed_sˇœr
(
emôãr
,

1305 
emôãr
->
sˇœr_d©a
.
vÆue
,Émôãr->sˇœr_d©a.
Àngth
,

1306 !
emôãr
->
sim∂e_key_c⁄ãxt
);

1308 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
:

1309  
	`yaml_emôãr_wrôe_doubÀ_quŸed_sˇœr
(
emôãr
,

1310 
emôãr
->
sˇœr_d©a
.
vÆue
,Émôãr->sˇœr_d©a.
Àngth
,

1311 !
emôãr
->
sim∂e_key_c⁄ãxt
);

1313 
YAML_LITERAL_SCALAR_STYLE
:

1314  
	`yaml_emôãr_wrôe_lôîÆ_sˇœr
(
emôãr
,

1315 
emôãr
->
sˇœr_d©a
.
vÆue
,Émôãr->sˇœr_d©a.
Àngth
);

1317 
YAML_FOLDED_SCALAR_STYLE
:

1318  
	`yaml_emôãr_wrôe_fﬁded_sˇœr
(
emôãr
,

1319 
emôãr
->
sˇœr_d©a
.
vÆue
,Émôãr->sˇœr_d©a.
Àngth
);

1322 
	`as£π
(1);

1326 
	}
}

1333 
	$yaml_emôãr_™Æyze_vîsi⁄_dúe˘ive
(
yaml_emôãr_t
 *
emôãr
,

1334 
yaml_vîsi⁄_dúe˘ive_t
 
vîsi⁄_dúe˘ive
)

1336 i‡(
vîsi⁄_dúe˘ive
.
maj‹
 !1 || vîsi⁄_dúe˘ive.
mö‹
 != 1) {

1337  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
,

1342 
	}
}

1349 
	$yaml_emôãr_™Æyze_èg_dúe˘ive
(
yaml_emôãr_t
 *
emôãr
,

1350 
yaml_èg_dúe˘ive_t
 
èg_dúe˘ive
)

1352 
yaml_°rög_t
 
h™dÀ
;

1353 
yaml_°rög_t
 
¥efix
;

1354 
size_t
 
h™dÀ_Àngth
;

1355 
size_t
 
¥efix_Àngth
;

1357 
h™dÀ_Àngth
 = 
	`°æí
((*)
èg_dúe˘ive
.
h™dÀ
);

1358 
¥efix_Àngth
 = 
	`°æí
((*)
èg_dúe˘ive
.
¥efix
);

1359 
	`STRING_ASSIGN
(
h™dÀ
, 
èg_dúe˘ive
.h™dÀ, 
h™dÀ_Àngth
);

1360 
	`STRING_ASSIGN
(
¥efix
, 
èg_dúe˘ive
.¥efix, 
¥efix_Àngth
);

1362 i‡(
h™dÀ
.
°¨t
 =h™dÀ.
íd
) {

1363  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
,

1367 i‡(
h™dÀ
.
°¨t
[0] != '!') {

1368  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
,

1372 i‡(
h™dÀ
.
íd
[-1] != '!') {

1373  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
,

1377 
h™dÀ
.
poöãr
 ++;

1379 
h™dÀ
.
poöãr
 < h™dÀ.
íd
-1) {

1380 i‡(!
	`IS_ALPHA
(
h™dÀ
)) {

1381  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
,

1384 
	`MOVE
(
h™dÀ
);

1387 i‡(
¥efix
.
°¨t
 =¥efix.
íd
) {

1388  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
,

1393 
	}
}

1400 
	$yaml_emôãr_™Æyze_™ch‹
(
yaml_emôãr_t
 *
emôãr
,

1401 
yaml_ch¨_t
 *
™ch‹
, 
Æüs
)

1403 
size_t
 
™ch‹_Àngth
;

1404 
yaml_°rög_t
 
°rög
;

1406 
™ch‹_Àngth
 = 
	`°æí
((*)
™ch‹
);

1407 
	`STRING_ASSIGN
(
°rög
, 
™ch‹
, 
™ch‹_Àngth
);

1409 i‡(
°rög
.
°¨t
 =°rög.
íd
) {

1410  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
, 
Æüs
 ?

1415 
°rög
.
poöãr
 !°rög.
íd
) {

1416 i‡(!
	`IS_ALPHA
(
°rög
)) {

1417  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
, 
Æüs
 ?

1421 
	`MOVE
(
°rög
);

1424 
emôãr
->
™ch‹_d©a
.
™ch‹
 = 
°rög
.
°¨t
;

1425 
emôãr
->
™ch‹_d©a
.
™ch‹_Àngth
 = 
°rög
.
íd
 - såög.
°¨t
;

1426 
emôãr
->
™ch‹_d©a
.
Æüs
 =álias;

1429 
	}
}

1436 
	$yaml_emôãr_™Æyze_èg
(
yaml_emôãr_t
 *
emôãr
,

1437 
yaml_ch¨_t
 *
èg
)

1439 
size_t
 
èg_Àngth
;

1440 
yaml_°rög_t
 
°rög
;

1441 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ive
;

1443 
èg_Àngth
 = 
	`°æí
((*)
èg
);

1444 
	`STRING_ASSIGN
(
°rög
, 
èg
, 
èg_Àngth
);

1446 i‡(
°rög
.
°¨t
 =°rög.
íd
) {

1447  
	`yaml_emôãr_£t_emôãr_îr‹
(
emôãr
,

1451 
èg_dúe˘ive
 = 
emôãr
->
èg_dúe˘ives
.
°¨t
;

1452 
èg_dúe˘ive
 !
emôãr
->
èg_dúe˘ives
.
t›
;Åag_directive ++) {

1453 
size_t
 
¥efix_Àngth
 = 
	`°æí
((*)
èg_dúe˘ive
->
¥efix
);

1454 i‡(
¥efix_Àngth
 < (
size_t
)(
°rög
.
íd
 - såög.
°¨t
)

1455 && 
	`°∫cmp
((*)
èg_dúe˘ive
->
¥efix
, (*)
°rög
.
°¨t
,

1456 
¥efix_Àngth
) == 0)

1458 
emôãr
->
èg_d©a
.
h™dÀ
 = 
èg_dúe˘ive
->handle;

1459 
emôãr
->
èg_d©a
.
h™dÀ_Àngth
 =

1460 
	`°æí
((*)
èg_dúe˘ive
->
h™dÀ
);

1461 
emôãr
->
èg_d©a
.
suffix
 = 
°rög
.
°¨t
 + 
¥efix_Àngth
;

1462 
emôãr
->
èg_d©a
.
suffix_Àngth
 =

1463 (
°rög
.
íd
 - såög.
°¨t
Ë- 
¥efix_Àngth
;

1468 
emôãr
->
èg_d©a
.
suffix
 = 
°rög
.
°¨t
;

1469 
emôãr
->
èg_d©a
.
suffix_Àngth
 = 
°rög
.
íd
 - såög.
°¨t
;

1472 
	}
}

1479 
	$yaml_emôãr_™Æyze_sˇœr
(
yaml_emôãr_t
 *
emôãr
,

1480 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
)

1482 
yaml_°rög_t
 
°rög
;

1484 
block_ödiˇt‹s
 = 0;

1485 
Êow_ödiˇt‹s
 = 0;

1486 
löe_bªaks
 = 0;

1487 
•ecül_ch¨a˘îs
 = 0;

1489 
Àadög_•a˚
 = 0;

1490 
Àadög_bªak
 = 0;

1491 
åaûög_•a˚
 = 0;

1492 
åaûög_bªak
 = 0;

1493 
bªak_•a˚
 = 0;

1494 
•a˚_bªak
 = 0;

1496 
¥e˚eded_by_whôe•a˚
 = 0;

1497 
fﬁlowed_by_whôe•a˚
 = 0;

1498 
¥evious_•a˚
 = 0;

1499 
¥evious_bªak
 = 0;

1501 
	`STRING_ASSIGN
(
°rög
, 
vÆue
, 
Àngth
);

1503 
emôãr
->
sˇœr_d©a
.
vÆue
 = value;

1504 
emôãr
->
sˇœr_d©a
.
Àngth
 =Üength;

1506 i‡(
°rög
.
°¨t
 =°rög.
íd
)

1508 
emôãr
->
sˇœr_d©a
.
mu…ûöe
 = 0;

1509 
emôãr
->
sˇœr_d©a
.
Êow_∂aö_Ælowed
 = 0;

1510 
emôãr
->
sˇœr_d©a
.
block_∂aö_Ælowed
 = 1;

1511 
emôãr
->
sˇœr_d©a
.
sögÀ_quŸed_Ælowed
 = 1;

1512 
emôãr
->
sˇœr_d©a
.
block_Ælowed
 = 0;

1517 i‡((
	`CHECK_AT
(
°rög
, '-', 0)

1518 && 
	`CHECK_AT
(
°rög
, '-', 1)

1519 && 
	`CHECK_AT
(
°rög
, '-', 2))

1520 || (
	`CHECK_AT
(
°rög
, '.', 0)

1521 && 
	`CHECK_AT
(
°rög
, '.', 1)

1522 && 
	`CHECK_AT
(
°rög
, '.', 2))) {

1523 
block_ödiˇt‹s
 = 1;

1524 
Êow_ödiˇt‹s
 = 1;

1527 
¥e˚eded_by_whôe•a˚
 = 1;

1528 
fﬁlowed_by_whôe•a˚
 = 
	`IS_BLANKZ_AT
(
°rög
, 
	`WIDTH
(string));

1530 
°rög
.
poöãr
 !°rög.
íd
)

1532 i‡(
°rög
.
°¨t
 =°rög.
poöãr
)

1534 i‡(
	`CHECK
(
°rög
, '#') || CHECK(string, ',')

1535 || 
	`CHECK
(
°rög
, '[') || CHECK(string, ']')

1536 || 
	`CHECK
(
°rög
, '{') || CHECK(string, '}')

1537 || 
	`CHECK
(
°rög
, '&') || CHECK(string, '*')

1538 || 
	`CHECK
(
°rög
, '!') || CHECK(string, '|')

1539 || 
	`CHECK
(
°rög
, '>') || CHECK(string, '\'')

1540 || 
	`CHECK
(
°rög
, '"') || CHECK(string, '%')

1541 || 
	`CHECK
(
°rög
, '@') || CHECK(string, '`')) {

1542 
Êow_ödiˇt‹s
 = 1;

1543 
block_ödiˇt‹s
 = 1;

1546 i‡(
	`CHECK
(
°rög
, '?') || CHECK(string, ':')) {

1547 
Êow_ödiˇt‹s
 = 1;

1548 i‡(
fﬁlowed_by_whôe•a˚
) {

1549 
block_ödiˇt‹s
 = 1;

1553 i‡(
	`CHECK
(
°rög
, '-'Ë&& 
fﬁlowed_by_whôe•a˚
) {

1554 
Êow_ödiˇt‹s
 = 1;

1555 
block_ödiˇt‹s
 = 1;

1560 i‡(
	`CHECK
(
°rög
, ',') || CHECK(string, '?')

1561 || 
	`CHECK
(
°rög
, '[') || CHECK(string, ']')

1562 || 
	`CHECK
(
°rög
, '{') || CHECK(string, '}')) {

1563 
Êow_ödiˇt‹s
 = 1;

1566 i‡(
	`CHECK
(
°rög
, ':')) {

1567 
Êow_ödiˇt‹s
 = 1;

1568 i‡(
fﬁlowed_by_whôe•a˚
) {

1569 
block_ödiˇt‹s
 = 1;

1573 i‡(
	`CHECK
(
°rög
, '#'Ë&& 
¥e˚eded_by_whôe•a˚
) {

1574 
Êow_ödiˇt‹s
 = 1;

1575 
block_ödiˇt‹s
 = 1;

1579 i‡(!
	`IS_PRINTABLE
(
°rög
)

1580 || (!
	`IS_ASCII
(
°rög
Ë&& !
emôãr
->
unicode
)) {

1581 
•ecül_ch¨a˘îs
 = 1;

1584 i‡(
	`IS_BREAK
(
°rög
)) {

1585 
löe_bªaks
 = 1;

1588 i‡(
	`IS_SPACE
(
°rög
))

1590 i‡(
°rög
.
°¨t
 =°rög.
poöãr
) {

1591 
Àadög_•a˚
 = 1;

1593 i‡(
°rög
.
poöãr
+
	`WIDTH
(°rögË=°rög.
íd
) {

1594 
åaûög_•a˚
 = 1;

1596 i‡(
¥evious_bªak
) {

1597 
bªak_•a˚
 = 1;

1599 
¥evious_•a˚
 = 1;

1600 
¥evious_bªak
 = 0;

1602 i‡(
	`IS_BREAK
(
°rög
))

1604 i‡(
°rög
.
°¨t
 =°rög.
poöãr
) {

1605 
Àadög_bªak
 = 1;

1607 i‡(
°rög
.
poöãr
+
	`WIDTH
(°rögË=°rög.
íd
) {

1608 
åaûög_bªak
 = 1;

1610 i‡(
¥evious_•a˚
) {

1611 
•a˚_bªak
 = 1;

1613 
¥evious_•a˚
 = 0;

1614 
¥evious_bªak
 = 1;

1618 
¥evious_•a˚
 = 0;

1619 
¥evious_bªak
 = 0;

1622 
¥e˚eded_by_whôe•a˚
 = 
	`IS_BLANKZ
(
°rög
);

1623 
	`MOVE
(
°rög
);

1624 i‡(
°rög
.
poöãr
 !°rög.
íd
) {

1625 
fﬁlowed_by_whôe•a˚
 = 
	`IS_BLANKZ_AT
(
°rög
, 
	`WIDTH
(string));

1629 
emôãr
->
sˇœr_d©a
.
mu…ûöe
 = 
löe_bªaks
;

1631 
emôãr
->
sˇœr_d©a
.
Êow_∂aö_Ælowed
 = 1;

1632 
emôãr
->
sˇœr_d©a
.
block_∂aö_Ælowed
 = 1;

1633 
emôãr
->
sˇœr_d©a
.
sögÀ_quŸed_Ælowed
 = 1;

1634 
emôãr
->
sˇœr_d©a
.
block_Ælowed
 = 1;

1636 i‡(
Àadög_•a˚
 || 
Àadög_bªak
 || 
åaûög_•a˚
 || 
åaûög_bªak
) {

1637 
emôãr
->
sˇœr_d©a
.
Êow_∂aö_Ælowed
 = 0;

1638 
emôãr
->
sˇœr_d©a
.
block_∂aö_Ælowed
 = 0;

1641 i‡(
åaûög_•a˚
) {

1642 
emôãr
->
sˇœr_d©a
.
block_Ælowed
 = 0;

1645 i‡(
bªak_•a˚
) {

1646 
emôãr
->
sˇœr_d©a
.
Êow_∂aö_Ælowed
 = 0;

1647 
emôãr
->
sˇœr_d©a
.
block_∂aö_Ælowed
 = 0;

1648 
emôãr
->
sˇœr_d©a
.
sögÀ_quŸed_Ælowed
 = 0;

1651 i‡(
•a˚_bªak
 || 
•ecül_ch¨a˘îs
) {

1652 
emôãr
->
sˇœr_d©a
.
Êow_∂aö_Ælowed
 = 0;

1653 
emôãr
->
sˇœr_d©a
.
block_∂aö_Ælowed
 = 0;

1654 
emôãr
->
sˇœr_d©a
.
sögÀ_quŸed_Ælowed
 = 0;

1655 
emôãr
->
sˇœr_d©a
.
block_Ælowed
 = 0;

1658 i‡(
löe_bªaks
) {

1659 
emôãr
->
sˇœr_d©a
.
Êow_∂aö_Ælowed
 = 0;

1660 
emôãr
->
sˇœr_d©a
.
block_∂aö_Ælowed
 = 0;

1663 i‡(
Êow_ödiˇt‹s
) {

1664 
emôãr
->
sˇœr_d©a
.
Êow_∂aö_Ælowed
 = 0;

1667 i‡(
block_ödiˇt‹s
) {

1668 
emôãr
->
sˇœr_d©a
.
block_∂aö_Ælowed
 = 0;

1672 
	}
}

1679 
	$yaml_emôãr_™Æyze_evít
(
yaml_emôãr_t
 *
emôãr
,

1680 
yaml_evít_t
 *
evít
)

1682 
emôãr
->
™ch‹_d©a
.
™ch‹
 = 
NULL
;

1683 
emôãr
->
™ch‹_d©a
.
™ch‹_Àngth
 = 0;

1684 
emôãr
->
èg_d©a
.
h™dÀ
 = 
NULL
;

1685 
emôãr
->
èg_d©a
.
h™dÀ_Àngth
 = 0;

1686 
emôãr
->
èg_d©a
.
suffix
 = 
NULL
;

1687 
emôãr
->
èg_d©a
.
suffix_Àngth
 = 0;

1688 
emôãr
->
sˇœr_d©a
.
vÆue
 = 
NULL
;

1689 
emôãr
->
sˇœr_d©a
.
Àngth
 = 0;

1691 
evít
->
ty≥
)

1693 
YAML_ALIAS_EVENT
:

1694 i‡(!
	`yaml_emôãr_™Æyze_™ch‹
(
emôãr
,

1695 
evít
->
d©a
.
Æüs
.
™ch‹
, 1))

1699 
YAML_SCALAR_EVENT
:

1700 i‡(
evít
->
d©a
.
sˇœr
.
™ch‹
) {

1701 i‡(!
	`yaml_emôãr_™Æyze_™ch‹
(
emôãr
,

1702 
evít
->
d©a
.
sˇœr
.
™ch‹
, 0))

1705 i‡(
evít
->
d©a
.
sˇœr
.
èg
 && (
emôãr
->
ˇn⁄iˇl
 ||

1706 (!
evít
->
d©a
.
sˇœr
.
∂aö_im∂icô


1707 && !
evít
->
d©a
.
sˇœr
.
quŸed_im∂icô
))) {

1708 i‡(!
	`yaml_emôãr_™Æyze_èg
(
emôãr
, 
evít
->
d©a
.
sˇœr
.
èg
))

1711 i‡(!
	`yaml_emôãr_™Æyze_sˇœr
(
emôãr
,

1712 
evít
->
d©a
.
sˇœr
.
vÆue
,Évít->d©a.sˇœr.
Àngth
))

1716 
YAML_SEQUENCE_START_EVENT
:

1717 i‡(
evít
->
d©a
.
£quí˚_°¨t
.
™ch‹
) {

1718 i‡(!
	`yaml_emôãr_™Æyze_™ch‹
(
emôãr
,

1719 
evít
->
d©a
.
£quí˚_°¨t
.
™ch‹
, 0))

1722 i‡(
evít
->
d©a
.
£quí˚_°¨t
.
èg
 && (
emôãr
->
ˇn⁄iˇl
 ||

1723 !
evít
->
d©a
.
£quí˚_°¨t
.
im∂icô
)) {

1724 i‡(!
	`yaml_emôãr_™Æyze_èg
(
emôãr
,

1725 
evít
->
d©a
.
£quí˚_°¨t
.
èg
))

1730 
YAML_MAPPING_START_EVENT
:

1731 i‡(
evít
->
d©a
.
m≠pög_°¨t
.
™ch‹
) {

1732 i‡(!
	`yaml_emôãr_™Æyze_™ch‹
(
emôãr
,

1733 
evít
->
d©a
.
m≠pög_°¨t
.
™ch‹
, 0))

1736 i‡(
evít
->
d©a
.
m≠pög_°¨t
.
èg
 && (
emôãr
->
ˇn⁄iˇl
 ||

1737 !
evít
->
d©a
.
m≠pög_°¨t
.
im∂icô
)) {

1738 i‡(!
	`yaml_emôãr_™Æyze_èg
(
emôãr
,

1739 
evít
->
d©a
.
m≠pög_°¨t
.
èg
))

1747 
	}
}

1754 
	$yaml_emôãr_wrôe_bom
(
yaml_emôãr_t
 *
emôãr
)

1756 i‡(!
	`FLUSH
(
emôãr
))  0;

1758 *(
emôãr
->
buf„r
.
poöãr
++Ë(
yaml_ch¨_t
) '\xEF';

1759 *(
emôãr
->
buf„r
.
poöãr
++Ë(
yaml_ch¨_t
) '\xBB';

1760 *(
emôãr
->
buf„r
.
poöãr
++Ë(
yaml_ch¨_t
) '\xBF';

1763 
	}
}

1766 
	$yaml_emôãr_wrôe_ödít
(
yaml_emôãr_t
 *
emôãr
)

1768 
ödít
 = (
emôãr
->indent >= 0) ?Émitter->indent : 0;

1770 i‡(!
emôãr
->
ödíti⁄
 ||Émôãr->
cﬁumn
 > 
ödít


1771 || (
emôãr
->
cﬁumn
 =
ödít
 && !emôãr->
whôe•a˚
)) {

1772 i‡(!
	`PUT_BREAK
(
emôãr
))  0;

1775 
emôãr
->
cﬁumn
 < 
ödít
) {

1776 i‡(!
	`PUT
(
emôãr
, ' '))  0;

1779 
emôãr
->
whôe•a˚
 = 1;

1780 
emôãr
->
ödíti⁄
 = 1;

1783 
	}
}

1786 
	$yaml_emôãr_wrôe_ödiˇt‹
(
yaml_emôãr_t
 *
emôãr
,

1787 *
ödiˇt‹
, 
√ed_whôe•a˚
,

1788 
is_whôe•a˚
, 
is_ödíti⁄
)

1790 
size_t
 
ödiˇt‹_Àngth
;

1791 
yaml_°rög_t
 
°rög
;

1793 
ödiˇt‹_Àngth
 = 
	`°æí
(
ödiˇt‹
);

1794 
	`STRING_ASSIGN
(
°rög
, (
yaml_ch¨_t
 *)
ödiˇt‹
, 
ödiˇt‹_Àngth
);

1796 i‡(
√ed_whôe•a˚
 && !
emôãr
->
whôe•a˚
) {

1797 i‡(!
	`PUT
(
emôãr
, ' '))  0;

1800 
°rög
.
poöãr
 !°rög.
íd
) {

1801 i‡(!
	`WRITE
(
emôãr
, 
°rög
))  0;

1804 
emôãr
->
whôe•a˚
 = 
is_whôe•a˚
;

1805 
emôãr
->
ödíti⁄
 = (emôãr->ödíti⁄ && 
is_ödíti⁄
);

1806 
emôãr
->
›í_íded
 = 0;

1809 
	}
}

1812 
	$yaml_emôãr_wrôe_™ch‹
(
yaml_emôãr_t
 *
emôãr
,

1813 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
)

1815 
yaml_°rög_t
 
°rög
;

1816 
	`STRING_ASSIGN
(
°rög
, 
vÆue
, 
Àngth
);

1818 
°rög
.
poöãr
 !°rög.
íd
) {

1819 i‡(!
	`WRITE
(
emôãr
, 
°rög
))  0;

1822 
emôãr
->
whôe•a˚
 = 0;

1823 
emôãr
->
ödíti⁄
 = 0;

1826 
	}
}

1829 
	$yaml_emôãr_wrôe_èg_h™dÀ
(
yaml_emôãr_t
 *
emôãr
,

1830 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
)

1832 
yaml_°rög_t
 
°rög
;

1833 
	`STRING_ASSIGN
(
°rög
, 
vÆue
, 
Àngth
);

1835 i‡(!
emôãr
->
whôe•a˚
) {

1836 i‡(!
	`PUT
(
emôãr
, ' '))  0;

1839 
°rög
.
poöãr
 !°rög.
íd
) {

1840 i‡(!
	`WRITE
(
emôãr
, 
°rög
))  0;

1843 
emôãr
->
whôe•a˚
 = 0;

1844 
emôãr
->
ödíti⁄
 = 0;

1847 
	}
}

1850 
	$yaml_emôãr_wrôe_èg_c⁄ã¡
(
yaml_emôãr_t
 *
emôãr
,

1851 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
,

1852 
√ed_whôe•a˚
)

1854 
yaml_°rög_t
 
°rög
;

1855 
	`STRING_ASSIGN
(
°rög
, 
vÆue
, 
Àngth
);

1857 i‡(
√ed_whôe•a˚
 && !
emôãr
->
whôe•a˚
) {

1858 i‡(!
	`PUT
(
emôãr
, ' '))  0;

1861 
°rög
.
poöãr
 !°rög.
íd
) {

1862 i‡(
	`IS_ALPHA
(
°rög
)

1863 || 
	`CHECK
(
°rög
, ';') || CHECK(string, '/')

1864 || 
	`CHECK
(
°rög
, '?') || CHECK(string, ':')

1865 || 
	`CHECK
(
°rög
, '@') || CHECK(string, '&')

1866 || 
	`CHECK
(
°rög
, '=') || CHECK(string, '+')

1867 || 
	`CHECK
(
°rög
, '$') || CHECK(string, ',')

1868 || 
	`CHECK
(
°rög
, '_') || CHECK(string, '.')

1869 || 
	`CHECK
(
°rög
, '~') || CHECK(string, '*')

1870 || 
	`CHECK
(
°rög
, '\'') || CHECK(string, '(')

1871 || 
	`CHECK
(
°rög
, ')') || CHECK(string, '[')

1872 || 
	`CHECK
(
°rög
, ']')) {

1873 i‡(!
	`WRITE
(
emôãr
, 
°rög
))  0;

1876 
width
 = 
	`WIDTH
(
°rög
);

1877 
vÆue
;

1878 
width
 --) {

1879 
vÆue
 = *(
°rög
.
poöãr
++);

1880 i‡(!
	`PUT
(
emôãr
, '%'))  0;

1881 i‡(!
	`PUT
(
emôãr
, (
vÆue
 >> 4)

1882 + ((
vÆue
 >> 4) < 10 ? '0' : 'A' - 10)))

1884 i‡(!
	`PUT
(
emôãr
, (
vÆue
 & 0x0F)

1885 + ((
vÆue
 & 0x0F) < 10 ? '0' : 'A' - 10)))

1891 
emôãr
->
whôe•a˚
 = 0;

1892 
emôãr
->
ödíti⁄
 = 0;

1895 
	}
}

1898 
	$yaml_emôãr_wrôe_∂aö_sˇœr
(
yaml_emôãr_t
 *
emôãr
,

1899 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
, 
Ælow_bªaks
)

1901 
yaml_°rög_t
 
°rög
;

1902 
•a˚s
 = 0;

1903 
bªaks
 = 0;

1905 
	`STRING_ASSIGN
(
°rög
, 
vÆue
, 
Àngth
);

1907 i‡(!
emôãr
->
whôe•a˚
) {

1908 i‡(!
	`PUT
(
emôãr
, ' '))  0;

1911 
°rög
.
poöãr
 !°rög.
íd
)

1913 i‡(
	`IS_SPACE
(
°rög
))

1915 i‡(
Ælow_bªaks
 && !
•a˚s


1916 && 
emôãr
->
cﬁumn
 >Émôãr->
be°_width


1917 && !
	`IS_SPACE_AT
(
°rög
, 1)) {

1918 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))  0;

1919 
	`MOVE
(
°rög
);

1922 i‡(!
	`WRITE
(
emôãr
, 
°rög
))  0;

1924 
•a˚s
 = 1;

1926 i‡(
	`IS_BREAK
(
°rög
))

1928 i‡(!
bªaks
 && 
	`CHECK
(
°rög
, '\n')) {

1929 i‡(!
	`PUT_BREAK
(
emôãr
))  0;

1931 i‡(!
	`WRITE_BREAK
(
emôãr
, 
°rög
))  0;

1932 
emôãr
->
ödíti⁄
 = 1;

1933 
bªaks
 = 1;

1937 i‡(
bªaks
) {

1938 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))  0;

1940 i‡(!
	`WRITE
(
emôãr
, 
°rög
))  0;

1941 
emôãr
->
ödíti⁄
 = 0;

1942 
•a˚s
 = 0;

1943 
bªaks
 = 0;

1947 
emôãr
->
whôe•a˚
 = 0;

1948 
emôãr
->
ödíti⁄
 = 0;

1949 i‡(
emôãr
->
roŸ_c⁄ãxt
)

1951 
emôãr
->
›í_íded
 = 1;

1955 
	}
}

1958 
	$yaml_emôãr_wrôe_sögÀ_quŸed_sˇœr
(
yaml_emôãr_t
 *
emôãr
,

1959 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
, 
Ælow_bªaks
)

1961 
yaml_°rög_t
 
°rög
;

1962 
•a˚s
 = 0;

1963 
bªaks
 = 0;

1965 
	`STRING_ASSIGN
(
°rög
, 
vÆue
, 
Àngth
);

1967 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "'", 1, 0, 0))

1970 
°rög
.
poöãr
 !°rög.
íd
)

1972 i‡(
	`IS_SPACE
(
°rög
))

1974 i‡(
Ælow_bªaks
 && !
•a˚s


1975 && 
emôãr
->
cﬁumn
 >Émôãr->
be°_width


1976 && 
°rög
.
poöãr
 !°rög.
°¨t


1977 && 
°rög
.
poöãr
 !°rög.
íd
 - 1

1978 && !
	`IS_SPACE_AT
(
°rög
, 1)) {

1979 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))  0;

1980 
	`MOVE
(
°rög
);

1983 i‡(!
	`WRITE
(
emôãr
, 
°rög
))  0;

1985 
•a˚s
 = 1;

1987 i‡(
	`IS_BREAK
(
°rög
))

1989 i‡(!
bªaks
 && 
	`CHECK
(
°rög
, '\n')) {

1990 i‡(!
	`PUT_BREAK
(
emôãr
))  0;

1992 i‡(!
	`WRITE_BREAK
(
emôãr
, 
°rög
))  0;

1993 
emôãr
->
ödíti⁄
 = 1;

1994 
bªaks
 = 1;

1998 i‡(
bªaks
) {

1999 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))  0;

2001 i‡(
	`CHECK
(
°rög
, '\'')) {

2002 i‡(!
	`PUT
(
emôãr
, '\''))  0;

2004 i‡(!
	`WRITE
(
emôãr
, 
°rög
))  0;

2005 
emôãr
->
ödíti⁄
 = 0;

2006 
•a˚s
 = 0;

2007 
bªaks
 = 0;

2011 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "'", 0, 0, 0))

2014 
emôãr
->
whôe•a˚
 = 0;

2015 
emôãr
->
ödíti⁄
 = 0;

2018 
	}
}

2021 
	$yaml_emôãr_wrôe_doubÀ_quŸed_sˇœr
(
yaml_emôãr_t
 *
emôãr
,

2022 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
, 
Ælow_bªaks
)

2024 
yaml_°rög_t
 
°rög
;

2025 
•a˚s
 = 0;

2027 
	`STRING_ASSIGN
(
°rög
, 
vÆue
, 
Àngth
);

2029 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "\"", 1, 0, 0))

2032 
°rög
.
poöãr
 !°rög.
íd
)

2034 i‡(!
	`IS_PRINTABLE
(
°rög
Ë|| (!
emôãr
->
unicode
 && !
	`IS_ASCII
(string))

2035 || 
	`IS_BOM
(
°rög
Ë|| 
	`IS_BREAK
(string)

2036 || 
	`CHECK
(
°rög
, '"') || CHECK(string, '\\'))

2038 
o˘ë
;

2039 
width
;

2040 
vÆue
;

2041 
k
;

2043 
o˘ë
 = 
°rög
.
poöãr
[0];

2044 
width
 = (
o˘ë
 & 0x80) == 0x00 ? 1 :

2045 (
o˘ë
 & 0xE0) == 0xC0 ? 2 :

2046 (
o˘ë
 & 0xF0) == 0xE0 ? 3 :

2047 (
o˘ë
 & 0xF8) == 0xF0 ? 4 : 0;

2048 
vÆue
 = (
o˘ë
 & 0x80) == 0x00 ? octet & 0x7F :

2049 (
o˘ë
 & 0xE0) == 0xC0 ? octet & 0x1F :

2050 (
o˘ë
 & 0xF0) == 0xE0 ? octet & 0x0F :

2051 (
o˘ë
 & 0xF8) == 0xF0 ? octet & 0x07 : 0;

2052 
k
 = 1; k < ()
width
; k ++) {

2053 
o˘ë
 = 
°rög
.
poöãr
[
k
];

2054 
vÆue
 = (vÆuê<< 6Ë+ (
o˘ë
 & 0x3F);

2056 
°rög
.
poöãr
 +
width
;

2058 i‡(!
	`PUT
(
emôãr
, '\\'))  0;

2060 
vÆue
)

2063 i‡(!
	`PUT
(
emôãr
, '0'))  0;

2067 i‡(!
	`PUT
(
emôãr
, 'a'))  0;

2071 i‡(!
	`PUT
(
emôãr
, 'b'))  0;

2075 i‡(!
	`PUT
(
emôãr
, 't'))  0;

2079 i‡(!
	`PUT
(
emôãr
, 'n'))  0;

2083 i‡(!
	`PUT
(
emôãr
, 'v'))  0;

2087 i‡(!
	`PUT
(
emôãr
, 'f'))  0;

2091 i‡(!
	`PUT
(
emôãr
, 'r'))  0;

2095 i‡(!
	`PUT
(
emôãr
, 'e'))  0;

2099 i‡(!
	`PUT
(
emôãr
, '\"'))  0;

2103 i‡(!
	`PUT
(
emôãr
, '\\'))  0;

2107 i‡(!
	`PUT
(
emôãr
, 'N'))  0;

2111 i‡(!
	`PUT
(
emôãr
, '_'))  0;

2115 i‡(!
	`PUT
(
emôãr
, 'L'))  0;

2119 i‡(!
	`PUT
(
emôãr
, 'P'))  0;

2123 i‡(
vÆue
 <= 0xFF) {

2124 i‡(!
	`PUT
(
emôãr
, 'x'))  0;

2125 
width
 = 2;

2127 i‡(
vÆue
 <= 0xFFFF) {

2128 i‡(!
	`PUT
(
emôãr
, 'u'))  0;

2129 
width
 = 4;

2132 i‡(!
	`PUT
(
emôãr
, 'U'))  0;

2133 
width
 = 8;

2135 
k
 = (
width
-1)*4; k >= 0; k -= 4) {

2136 
digô
 = (
vÆue
 >> 
k
) & 0x0F;

2137 i‡(!
	`PUT
(
emôãr
, 
digô
 + (digit < 10 ? '0' : 'A'-10)))

2141 
•a˚s
 = 0;

2143 i‡(
	`IS_SPACE
(
°rög
))

2145 i‡(
Ælow_bªaks
 && !
•a˚s


2146 && 
emôãr
->
cﬁumn
 >Émôãr->
be°_width


2147 && 
°rög
.
poöãr
 !°rög.
°¨t


2148 && 
°rög
.
poöãr
 !°rög.
íd
 - 1) {

2149 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))  0;

2150 i‡(
	`IS_SPACE_AT
(
°rög
, 1)) {

2151 i‡(!
	`PUT
(
emôãr
, '\\'))  0;

2153 
	`MOVE
(
°rög
);

2156 i‡(!
	`WRITE
(
emôãr
, 
°rög
))  0;

2158 
•a˚s
 = 1;

2162 i‡(!
	`WRITE
(
emôãr
, 
°rög
))  0;

2163 
•a˚s
 = 0;

2167 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "\"", 0, 0, 0))

2170 
emôãr
->
whôe•a˚
 = 0;

2171 
emôãr
->
ödíti⁄
 = 0;

2174 
	}
}

2177 
	$yaml_emôãr_wrôe_block_sˇœr_höts
(
yaml_emôãr_t
 *
emôãr
,

2178 
yaml_°rög_t
 
°rög
)

2180 
ödít_höt
[2];

2181 *
chomp_höt
 = 
NULL
;

2183 i‡(
	`IS_SPACE
(
°rög
Ë|| 
	`IS_BREAK
(string))

2185 
ödít_höt
[0] = '0' + ()
emôãr
->
be°_ödít
;

2186 
ödít_höt
[1] = '\0';

2187 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, 
ödít_höt
, 0, 0, 0))

2191 
emôãr
->
›í_íded
 = 0;

2193 
°rög
.
poöãr
 = såög.
íd
;

2194 i‡(
°rög
.
°¨t
 =°rög.
poöãr
)

2196 
chomp_höt
 = "-";

2201 
°rög
.
poöãr
 --;

2202 } (*
°rög
.
poöãr
 & 0xC0) == 0x80);

2203 i‡(!
	`IS_BREAK
(
°rög
))

2205 
chomp_höt
 = "-";

2207 i‡(
°rög
.
°¨t
 =°rög.
poöãr
)

2209 
chomp_höt
 = "+";

2210 
emôãr
->
›í_íded
 = 1;

2215 
°rög
.
poöãr
 --;

2216 } (*
°rög
.
poöãr
 & 0xC0) == 0x80);

2217 i‡(
	`IS_BREAK
(
°rög
))

2219 
chomp_höt
 = "+";

2220 
emôãr
->
›í_íded
 = 1;

2225 i‡(
chomp_höt
)

2227 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, 
chomp_höt
, 0, 0, 0))

2232 
	}
}

2235 
	$yaml_emôãr_wrôe_lôîÆ_sˇœr
(
yaml_emôãr_t
 *
emôãr
,

2236 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
)

2238 
yaml_°rög_t
 
°rög
;

2239 
bªaks
 = 1;

2241 
	`STRING_ASSIGN
(
°rög
, 
vÆue
, 
Àngth
);

2243 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, "|", 1, 0, 0))

2245 i‡(!
	`yaml_emôãr_wrôe_block_sˇœr_höts
(
emôãr
, 
°rög
))

2247 i‡(!
	`PUT_BREAK
(
emôãr
))  0;

2248 
emôãr
->
ödíti⁄
 = 1;

2249 
emôãr
->
whôe•a˚
 = 1;

2251 
°rög
.
poöãr
 !°rög.
íd
)

2253 i‡(
	`IS_BREAK
(
°rög
))

2255 i‡(!
	`WRITE_BREAK
(
emôãr
, 
°rög
))  0;

2256 
emôãr
->
ödíti⁄
 = 1;

2257 
bªaks
 = 1;

2261 i‡(
bªaks
) {

2262 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))  0;

2264 i‡(!
	`WRITE
(
emôãr
, 
°rög
))  0;

2265 
emôãr
->
ödíti⁄
 = 0;

2266 
bªaks
 = 0;

2271 
	}
}

2274 
	$yaml_emôãr_wrôe_fﬁded_sˇœr
(
yaml_emôãr_t
 *
emôãr
,

2275 
yaml_ch¨_t
 *
vÆue
, 
size_t
 
Àngth
)

2277 
yaml_°rög_t
 
°rög
;

2278 
bªaks
 = 1;

2279 
Àadög_•a˚s
 = 1;

2281 
	`STRING_ASSIGN
(
°rög
, 
vÆue
, 
Àngth
);

2283 i‡(!
	`yaml_emôãr_wrôe_ödiˇt‹
(
emôãr
, ">", 1, 0, 0))

2285 i‡(!
	`yaml_emôãr_wrôe_block_sˇœr_höts
(
emôãr
, 
°rög
))

2287 i‡(!
	`PUT_BREAK
(
emôãr
))  0;

2288 
emôãr
->
ödíti⁄
 = 1;

2289 
emôãr
->
whôe•a˚
 = 1;

2291 
°rög
.
poöãr
 !°rög.
íd
)

2293 i‡(
	`IS_BREAK
(
°rög
))

2295 i‡(!
bªaks
 && !
Àadög_•a˚s
 && 
	`CHECK
(
°rög
, '\n')) {

2296 
k
 = 0;

2297 
	`IS_BREAK_AT
(
°rög
, 
k
)) {

2298 
k
 +
	`WIDTH_AT
(
°rög
, k);

2300 i‡(!
	`IS_BLANKZ_AT
(
°rög
, 
k
)) {

2301 i‡(!
	`PUT_BREAK
(
emôãr
))  0;

2304 i‡(!
	`WRITE_BREAK
(
emôãr
, 
°rög
))  0;

2305 
emôãr
->
ödíti⁄
 = 1;

2306 
bªaks
 = 1;

2310 i‡(
bªaks
) {

2311 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))  0;

2312 
Àadög_•a˚s
 = 
	`IS_BLANK
(
°rög
);

2314 i‡(!
bªaks
 && 
	`IS_SPACE
(
°rög
Ë&& !
	`IS_SPACE_AT
(string, 1)

2315 && 
emôãr
->
cﬁumn
 >Émôãr->
be°_width
) {

2316 i‡(!
	`yaml_emôãr_wrôe_ödít
(
emôãr
))  0;

2317 
	`MOVE
(
°rög
);

2320 i‡(!
	`WRITE
(
emôãr
, 
°rög
))  0;

2322 
emôãr
->
ödíti⁄
 = 0;

2323 
bªaks
 = 0;

2328 
	}
}

	@contrib/yaml-0.1.4/src/loader.c

2 
	~"yaml_¥iv©e.h
"

8 
	$YAML_DECLARE
()

9 
	`yaml_∑r£r_lﬂd
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_documít_t
 *
documít
);

16 
	`yaml_∑r£r_£t_compo£r_îr‹
(
yaml_∑r£r_t
 *
∑r£r
,

17 c⁄° *
¥obÀm
, 
yaml_m¨k_t
 
¥obÀm_m¨k
);

20 
	`yaml_∑r£r_£t_compo£r_îr‹_c⁄ãxt
(
yaml_∑r£r_t
 *
∑r£r
,

21 c⁄° *
c⁄ãxt
, 
yaml_m¨k_t
 
c⁄ãxt_m¨k
,

22 c⁄° *
¥obÀm
, 
yaml_m¨k_t
 
¥obÀm_m¨k
);

30 
	`yaml_∑r£r_ªgi°î_™ch‹
(
yaml_∑r£r_t
 *
∑r£r
,

31 
ödex
, 
yaml_ch¨_t
 *
™ch‹
);

38 
	`yaml_∑r£r_dñëe_Æü£s
(
yaml_∑r£r_t
 *
∑r£r
);

45 
	`yaml_∑r£r_lﬂd_documít
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
fú°_evít
);

48 
	`yaml_∑r£r_lﬂd_node
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
fú°_evít
);

51 
	`yaml_∑r£r_lﬂd_Æüs
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
fú°_evít
);

54 
	`yaml_∑r£r_lﬂd_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
fú°_evít
);

57 
	`yaml_∑r£r_lﬂd_£quí˚
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
fú°_evít
);

60 
	`yaml_∑r£r_lﬂd_m≠pög
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
fú°_evít
);

66 
	$YAML_DECLARE
()

67 
	$yaml_∑r£r_lﬂd
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_documít_t
 *
documít
)

69 
yaml_evít_t
 
evít
;

71 
	`as£π
(
∑r£r
);

72 
	`as£π
(
documít
);

74 
	`mem£t
(
documít
, 0, (
yaml_documít_t
));

75 i‡(!
	`STACK_INIT
(
∑r£r
, 
documít
->
nodes
, 
INITIAL_STACK_SIZE
))

76 
îr‹
;

78 i‡(!
∑r£r
->
°ªam_°¨t_¥odu˚d
) {

79 i‡(!
	`yaml_∑r£r_∑r£
(
∑r£r
, &
evít
)Ë
îr‹
;

80 
	`as£π
(
evít
.
ty≥
 =
YAML_STREAM_START_EVENT
);

84 i‡(
∑r£r
->
°ªam_íd_¥odu˚d
) {

88 i‡(!
	`yaml_∑r£r_∑r£
(
∑r£r
, &
evít
)Ë
îr‹
;

89 i‡(
evít
.
ty≥
 =
YAML_STREAM_END_EVENT
) {

93 i‡(!
	`STACK_INIT
(
∑r£r
,Ö¨£r->
Æü£s
, 
INITIAL_STACK_SIZE
))

94 
îr‹
;

96 
∑r£r
->
documít
 = document;

98 i‡(!
	`yaml_∑r£r_lﬂd_documít
(
∑r£r
, &
evít
)Ë
îr‹
;

100 
	`yaml_∑r£r_dñëe_Æü£s
(
∑r£r
);

101 
∑r£r
->
documít
 = 
NULL
;

105 
îr‹
:

107 
	`yaml_∑r£r_dñëe_Æü£s
(
∑r£r
);

108 
	`yaml_documít_dñëe
(
documít
);

109 
∑r£r
->
documít
 = 
NULL
;

112 
	}
}

119 
	$yaml_∑r£r_£t_compo£r_îr‹
(
yaml_∑r£r_t
 *
∑r£r
,

120 c⁄° *
¥obÀm
, 
yaml_m¨k_t
 
¥obÀm_m¨k
)

122 
∑r£r
->
îr‹
 = 
YAML_COMPOSER_ERROR
;

123 
∑r£r
->
¥obÀm
 =Öroblem;

124 
∑r£r
->
¥obÀm_m¨k
 =Öroblem_mark;

127 
	}
}

134 
	$yaml_∑r£r_£t_compo£r_îr‹_c⁄ãxt
(
yaml_∑r£r_t
 *
∑r£r
,

135 c⁄° *
c⁄ãxt
, 
yaml_m¨k_t
 
c⁄ãxt_m¨k
,

136 c⁄° *
¥obÀm
, 
yaml_m¨k_t
 
¥obÀm_m¨k
)

138 
∑r£r
->
îr‹
 = 
YAML_COMPOSER_ERROR
;

139 
∑r£r
->
c⁄ãxt
 = context;

140 
∑r£r
->
c⁄ãxt_m¨k
 = context_mark;

141 
∑r£r
->
¥obÀm
 =Öroblem;

142 
∑r£r
->
¥obÀm_m¨k
 =Öroblem_mark;

145 
	}
}

152 
	$yaml_∑r£r_dñëe_Æü£s
(
yaml_∑r£r_t
 *
∑r£r
)

154 !
	`STACK_EMPTY
(
∑r£r
,Ö¨£r->
Æü£s
)) {

155 
	`yaml_‰ì
(
	`POP
(
∑r£r
,Ö¨£r->
Æü£s
).
™ch‹
);

157 
	`STACK_DEL
(
∑r£r
,Ö¨£r->
Æü£s
);

158 
	}
}

165 
	$yaml_∑r£r_lﬂd_documít
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
fú°_evít
)

167 
yaml_evít_t
 
evít
;

169 
	`as£π
(
fú°_evít
->
ty≥
 =
YAML_DOCUMENT_START_EVENT
);

172 
∑r£r
->
documít
->
vîsi⁄_dúe˘ive


173 
fú°_evít
->
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
;

174 
∑r£r
->
documít
->
èg_dúe˘ives
.
°¨t


175 
fú°_evít
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t
;

176 
∑r£r
->
documít
->
èg_dúe˘ives
.
íd


177 
fú°_evít
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
;

178 
∑r£r
->
documít
->
°¨t_im∂icô


179 
fú°_evít
->
d©a
.
documít_°¨t
.
im∂icô
;

180 
∑r£r
->
documít
->
°¨t_m¨k
 = 
fú°_evít
->start_mark;

182 i‡(!
	`yaml_∑r£r_∑r£
(
∑r£r
, &
evít
))  0;

184 i‡(!
	`yaml_∑r£r_lﬂd_node
(
∑r£r
, &
evít
))  0;

186 i‡(!
	`yaml_∑r£r_∑r£
(
∑r£r
, &
evít
))  0;

187 
	`as£π
(
evít
.
ty≥
 =
YAML_DOCUMENT_END_EVENT
);

190 
∑r£r
->
documít
->
íd_im∂icô
 = 
evít
.
d©a
.
documít_íd
.
im∂icô
;

191 
∑r£r
->
documít
->
íd_m¨k
 = 
evít
.end_mark;

194 
	}
}

201 
	$yaml_∑r£r_lﬂd_node
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
fú°_evít
)

203 
fú°_evít
->
ty≥
) {

204 
YAML_ALIAS_EVENT
:

205  
	`yaml_∑r£r_lﬂd_Æüs
(
∑r£r
, 
fú°_evít
);

206 
YAML_SCALAR_EVENT
:

207  
	`yaml_∑r£r_lﬂd_sˇœr
(
∑r£r
, 
fú°_evít
);

208 
YAML_SEQUENCE_START_EVENT
:

209  
	`yaml_∑r£r_lﬂd_£quí˚
(
∑r£r
, 
fú°_evít
);

210 
YAML_MAPPING_START_EVENT
:

211  
	`yaml_∑r£r_lﬂd_m≠pög
(
∑r£r
, 
fú°_evít
);

213 
	`as£π
(0);

218 
	}
}

225 
	$yaml_∑r£r_ªgi°î_™ch‹
(
yaml_∑r£r_t
 *
∑r£r
,

226 
ödex
, 
yaml_ch¨_t
 *
™ch‹
)

228 
yaml_Æüs_d©a_t
 
d©a
;

229 
yaml_Æüs_d©a_t
 *
Æüs_d©a
;

231 i‡(!
™ch‹
)  1;

233 
d©a
.
™ch‹
 =ánchor;

234 
d©a
.
ödex
 = index;

235 
d©a
.
m¨k
 = 
∑r£r
->
documít
->
nodes
.
°¨t
[
ödex
-1].
°¨t_m¨k
;

237 
Æüs_d©a
 = 
∑r£r
->
Æü£s
.
°¨t
;

238 
Æüs_d©a
 !
∑r£r
->
Æü£s
.
t›
;álias_data ++) {

239 i‡(
	`°rcmp
((*)
Æüs_d©a
->
™ch‹
, (*)anchor) == 0) {

240 
	`yaml_‰ì
(
™ch‹
);

241  
	`yaml_∑r£r_£t_compo£r_îr‹_c⁄ãxt
(
∑r£r
,

243 
Æüs_d©a
->
m¨k
, "£c⁄d occuªn˚", 
d©a
.mark);

247 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
Æü£s
, 
d©a
)) {

248 
	`yaml_‰ì
(
™ch‹
);

253 
	}
}

260 
	$yaml_∑r£r_lﬂd_Æüs
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
fú°_evít
)

262 
yaml_ch¨_t
 *
™ch‹
 = 
fú°_evít
->
d©a
.
Æüs
.anchor;

263 
yaml_Æüs_d©a_t
 *
Æüs_d©a
;

265 
Æüs_d©a
 = 
∑r£r
->
Æü£s
.
°¨t
;

266 
Æüs_d©a
 !
∑r£r
->
Æü£s
.
t›
;álias_data ++) {

267 i‡(
	`°rcmp
((*)
Æüs_d©a
->
™ch‹
, (*)anchor) == 0) {

268 
	`yaml_‰ì
(
™ch‹
);

269  
Æüs_d©a
->
ödex
;

273 
	`yaml_‰ì
(
™ch‹
);

274  
	`yaml_∑r£r_£t_compo£r_îr‹
(
∑r£r
, "found undefinedálias",

275 
fú°_evít
->
°¨t_m¨k
);

276 
	}
}

283 
	$yaml_∑r£r_lﬂd_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
fú°_evít
)

285 
yaml_node_t
 
node
;

286 
ödex
;

287 
yaml_ch¨_t
 *
èg
 = 
fú°_evít
->
d©a
.
sˇœr
.tag;

289 i‡(!
èg
 || 
	`°rcmp
((*)tag, "!") == 0) {

290 
	`yaml_‰ì
(
èg
);

291 
èg
 = 
	`yaml_°rdup
((
yaml_ch¨_t
 *)
YAML_DEFAULT_SCALAR_TAG
);

292 i‡(!
èg
Ë
îr‹
;

295 
	`SCALAR_NODE_INIT
(
node
, 
èg
, 
fú°_evít
->
d©a
.
sˇœr
.
vÆue
,

296 
fú°_evít
->
d©a
.
sˇœr
.
Àngth
, fú°_evít->d©a.sˇœr.
°yÀ
,

297 
fú°_evít
->
°¨t_m¨k
, fú°_evít->
íd_m¨k
);

299 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
documít
->
nodes
, 
node
)Ë
îr‹
;

301 
ödex
 = 
∑r£r
->
documít
->
nodes
.
t›
 -Ö¨£r->documít->nodes.
°¨t
;

303 i‡(!
	`yaml_∑r£r_ªgi°î_™ch‹
(
∑r£r
, 
ödex
,

304 
fú°_evít
->
d©a
.
sˇœr
.
™ch‹
))  0;

306  
ödex
;

308 
îr‹
:

309 
	`yaml_‰ì
(
èg
);

310 
	`yaml_‰ì
(
fú°_evít
->
d©a
.
sˇœr
.
™ch‹
);

311 
	`yaml_‰ì
(
fú°_evít
->
d©a
.
sˇœr
.
vÆue
);

313 
	}
}

320 
	$yaml_∑r£r_lﬂd_£quí˚
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
fú°_evít
)

322 
yaml_evít_t
 
evít
;

323 
yaml_node_t
 
node
;

325 
yaml_node_ôem_t
 *
°¨t
;

326 
yaml_node_ôem_t
 *
íd
;

327 
yaml_node_ôem_t
 *
t›
;

328 } 
ôems
 = { 
NULL
, NULL, NULL };

329 
ödex
, 
ôem_ödex
;

330 
yaml_ch¨_t
 *
èg
 = 
fú°_evít
->
d©a
.
£quí˚_°¨t
.tag;

332 i‡(!
èg
 || 
	`°rcmp
((*)tag, "!") == 0) {

333 
	`yaml_‰ì
(
èg
);

334 
èg
 = 
	`yaml_°rdup
((
yaml_ch¨_t
 *)
YAML_DEFAULT_SEQUENCE_TAG
);

335 i‡(!
èg
Ë
îr‹
;

338 i‡(!
	`STACK_INIT
(
∑r£r
, 
ôems
, 
INITIAL_STACK_SIZE
)Ë
îr‹
;

340 
	`SEQUENCE_NODE_INIT
(
node
, 
èg
, 
ôems
.
°¨t
, iãms.
íd
,

341 
fú°_evít
->
d©a
.
£quí˚_°¨t
.
°yÀ
,

342 
fú°_evít
->
°¨t_m¨k
, fú°_evít->
íd_m¨k
);

344 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
documít
->
nodes
, 
node
)Ë
îr‹
;

346 
ödex
 = 
∑r£r
->
documít
->
nodes
.
t›
 -Ö¨£r->documít->nodes.
°¨t
;

348 i‡(!
	`yaml_∑r£r_ªgi°î_™ch‹
(
∑r£r
, 
ödex
,

349 
fú°_evít
->
d©a
.
£quí˚_°¨t
.
™ch‹
))  0;

351 i‡(!
	`yaml_∑r£r_∑r£
(
∑r£r
, &
evít
))  0;

353 
evít
.
ty≥
 !
YAML_SEQUENCE_END_EVENT
) {

354 
ôem_ödex
 = 
	`yaml_∑r£r_lﬂd_node
(
∑r£r
, &
evít
);

355 i‡(!
ôem_ödex
)  0;

356 i‡(!
	`PUSH
(
∑r£r
,

357 
∑r£r
->
documít
->
nodes
.
°¨t
[
ödex
-1].
d©a
.
£quí˚
.
ôems
,

358 
ôem_ödex
))  0;

359 i‡(!
	`yaml_∑r£r_∑r£
(
∑r£r
, &
evít
))  0;

362 
∑r£r
->
documít
->
nodes
.
°¨t
[
ödex
-1].
íd_m¨k
 = 
evít
.end_mark;

364  
ödex
;

366 
îr‹
:

367 
	`yaml_‰ì
(
èg
);

368 
	`yaml_‰ì
(
fú°_evít
->
d©a
.
£quí˚_°¨t
.
™ch‹
);

370 
	}
}

377 
	$yaml_∑r£r_lﬂd_m≠pög
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
fú°_evít
)

379 
yaml_evít_t
 
evít
;

380 
yaml_node_t
 
node
;

382 
yaml_node_∑ú_t
 *
°¨t
;

383 
yaml_node_∑ú_t
 *
íd
;

384 
yaml_node_∑ú_t
 *
t›
;

385 } 
∑ús
 = { 
NULL
, NULL, NULL };

386 
ödex
;

387 
yaml_node_∑ú_t
 
∑ú
;

388 
yaml_ch¨_t
 *
èg
 = 
fú°_evít
->
d©a
.
m≠pög_°¨t
.tag;

390 i‡(!
èg
 || 
	`°rcmp
((*)tag, "!") == 0) {

391 
	`yaml_‰ì
(
èg
);

392 
èg
 = 
	`yaml_°rdup
((
yaml_ch¨_t
 *)
YAML_DEFAULT_MAPPING_TAG
);

393 i‡(!
èg
Ë
îr‹
;

396 i‡(!
	`STACK_INIT
(
∑r£r
, 
∑ús
, 
INITIAL_STACK_SIZE
)Ë
îr‹
;

398 
	`MAPPING_NODE_INIT
(
node
, 
èg
, 
∑ús
.
°¨t
,Öaús.
íd
,

399 
fú°_evít
->
d©a
.
m≠pög_°¨t
.
°yÀ
,

400 
fú°_evít
->
°¨t_m¨k
, fú°_evít->
íd_m¨k
);

402 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
documít
->
nodes
, 
node
)Ë
îr‹
;

404 
ödex
 = 
∑r£r
->
documít
->
nodes
.
t›
 -Ö¨£r->documít->nodes.
°¨t
;

406 i‡(!
	`yaml_∑r£r_ªgi°î_™ch‹
(
∑r£r
, 
ödex
,

407 
fú°_evít
->
d©a
.
m≠pög_°¨t
.
™ch‹
))  0;

409 i‡(!
	`yaml_∑r£r_∑r£
(
∑r£r
, &
evít
))  0;

411 
evít
.
ty≥
 !
YAML_MAPPING_END_EVENT
) {

412 
∑ú
.
key
 = 
	`yaml_∑r£r_lﬂd_node
(
∑r£r
, &
evít
);

413 i‡(!
∑ú
.
key
)  0;

414 i‡(!
	`yaml_∑r£r_∑r£
(
∑r£r
, &
evít
))  0;

415 
∑ú
.
vÆue
 = 
	`yaml_∑r£r_lﬂd_node
(
∑r£r
, &
evít
);

416 i‡(!
∑ú
.
vÆue
)  0;

417 i‡(!
	`PUSH
(
∑r£r
,

418 
∑r£r
->
documít
->
nodes
.
°¨t
[
ödex
-1].
d©a
.
m≠pög
.
∑ús
,

419 
∑ú
))  0;

420 i‡(!
	`yaml_∑r£r_∑r£
(
∑r£r
, &
evít
))  0;

423 
∑r£r
->
documít
->
nodes
.
°¨t
[
ödex
-1].
íd_m¨k
 = 
evít
.end_mark;

425  
ödex
;

427 
îr‹
:

428 
	`yaml_‰ì
(
èg
);

429 
	`yaml_‰ì
(
fú°_evít
->
d©a
.
m≠pög_°¨t
.
™ch‹
);

431 
	}
}

	@contrib/yaml-0.1.4/src/parser.c

42 
	~"yaml_¥iv©e.h
"

48 
	#PEEK_TOKEN
(
∑r£r
) \

49 ((
∑r£r
->
tokí_avaûabÀ
 || 
	`yaml_∑r£r_„tch_m‹e_tokís
(parser)) ? \

50 
∑r£r
->
tokís
.
hód
 : 
NULL
)

	)

56 
	#SKIP_TOKEN
(
∑r£r
) \

57 (
∑r£r
->
tokí_avaûabÀ
 = 0, \

58 
∑r£r
->
tokís_∑r£d
 ++, \

59 
∑r£r
->
°ªam_íd_¥odu˚d
 = \

60 (
∑r£r
->
tokís
.
hód
->
ty≥
 =
YAML_STREAM_END_TOKEN
), \

61 
∑r£r
->
tokís
.
hód
 ++)

	)

67 
	$YAML_DECLARE
()

68 
	`yaml_∑r£r_∑r£
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
);

75 
	`yaml_∑r£r_£t_∑r£r_îr‹
(
yaml_∑r£r_t
 *
∑r£r
,

76 c⁄° *
¥obÀm
, 
yaml_m¨k_t
 
¥obÀm_m¨k
);

79 
	`yaml_∑r£r_£t_∑r£r_îr‹_c⁄ãxt
(
yaml_∑r£r_t
 *
∑r£r
,

80 c⁄° *
c⁄ãxt
, 
yaml_m¨k_t
 
c⁄ãxt_m¨k
,

81 c⁄° *
¥obÀm
, 
yaml_m¨k_t
 
¥obÀm_m¨k
);

88 
	`yaml_∑r£r_°©e_machöe
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
);

91 
	`yaml_∑r£r_∑r£_°ªam_°¨t
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
);

94 
	`yaml_∑r£r_∑r£_documít_°¨t
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
,

95 
im∂icô
);

98 
	`yaml_∑r£r_∑r£_documít_c⁄ã¡
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
);

101 
	`yaml_∑r£r_∑r£_documít_íd
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
);

104 
	`yaml_∑r£r_∑r£_node
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
,

105 
block
, 
ödíéess_£quí˚
);

108 
	`yaml_∑r£r_∑r£_block_£quí˚_íåy
(
yaml_∑r£r_t
 *
∑r£r
,

109 
yaml_evít_t
 *
evít
, 
fú°
);

112 
	`yaml_∑r£r_∑r£_ödíéess_£quí˚_íåy
(
yaml_∑r£r_t
 *
∑r£r
,

113 
yaml_evít_t
 *
evít
);

116 
	`yaml_∑r£r_∑r£_block_m≠pög_key
(
yaml_∑r£r_t
 *
∑r£r
,

117 
yaml_evít_t
 *
evít
, 
fú°
);

120 
	`yaml_∑r£r_∑r£_block_m≠pög_vÆue
(
yaml_∑r£r_t
 *
∑r£r
,

121 
yaml_evít_t
 *
evít
);

124 
	`yaml_∑r£r_∑r£_Êow_£quí˚_íåy
(
yaml_∑r£r_t
 *
∑r£r
,

125 
yaml_evít_t
 *
evít
, 
fú°
);

128 
	`yaml_∑r£r_∑r£_Êow_£quí˚_íåy_m≠pög_key
(
yaml_∑r£r_t
 *
∑r£r
,

129 
yaml_evít_t
 *
evít
);

132 
	`yaml_∑r£r_∑r£_Êow_£quí˚_íåy_m≠pög_vÆue
(
yaml_∑r£r_t
 *
∑r£r
,

133 
yaml_evít_t
 *
evít
);

136 
	`yaml_∑r£r_∑r£_Êow_£quí˚_íåy_m≠pög_íd
(
yaml_∑r£r_t
 *
∑r£r
,

137 
yaml_evít_t
 *
evít
);

140 
	`yaml_∑r£r_∑r£_Êow_m≠pög_key
(
yaml_∑r£r_t
 *
∑r£r
,

141 
yaml_evít_t
 *
evít
, 
fú°
);

144 
	`yaml_∑r£r_∑r£_Êow_m≠pög_vÆue
(
yaml_∑r£r_t
 *
∑r£r
,

145 
yaml_evít_t
 *
evít
, 
em±y
);

152 
	`yaml_∑r£r_¥o˚ss_em±y_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
,

153 
yaml_evít_t
 *
evít
, 
yaml_m¨k_t
 
m¨k
);

156 
	`yaml_∑r£r_¥o˚ss_dúe˘ives
(
yaml_∑r£r_t
 *
∑r£r
,

157 
yaml_vîsi⁄_dúe˘ive_t
 **
vîsi⁄_dúe˘ive_ªf
,

158 
yaml_èg_dúe˘ive_t
 **
èg_dúe˘ives_°¨t_ªf
,

159 
yaml_èg_dúe˘ive_t
 **
èg_dúe˘ives_íd_ªf
);

162 
	`yaml_∑r£r_≠≥nd_èg_dúe˘ive
(
yaml_∑r£r_t
 *
∑r£r
,

163 
yaml_èg_dúe˘ive_t
 
vÆue
, 
Ælow_du∂iˇãs
, 
yaml_m¨k_t
 
m¨k
);

169 
	$YAML_DECLARE
()

170 
	$yaml_∑r£r_∑r£
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
)

172 
	`as£π
(
∑r£r
);

173 
	`as£π
(
evít
);

177 
	`mem£t
(
evít
, 0, (
yaml_evít_t
));

181 i‡(
∑r£r
->
°ªam_íd_¥odu˚d
 ||Ö¨£r->
îr‹
 ||

182 
∑r£r
->
°©e
 =
YAML_PARSE_END_STATE
) {

188  
	`yaml_∑r£r_°©e_machöe
(
∑r£r
, 
evít
);

189 
	}
}

196 
	$yaml_∑r£r_£t_∑r£r_îr‹
(
yaml_∑r£r_t
 *
∑r£r
,

197 c⁄° *
¥obÀm
, 
yaml_m¨k_t
 
¥obÀm_m¨k
)

199 
∑r£r
->
îr‹
 = 
YAML_PARSER_ERROR
;

200 
∑r£r
->
¥obÀm
 =Öroblem;

201 
∑r£r
->
¥obÀm_m¨k
 =Öroblem_mark;

204 
	}
}

207 
	$yaml_∑r£r_£t_∑r£r_îr‹_c⁄ãxt
(
yaml_∑r£r_t
 *
∑r£r
,

208 c⁄° *
c⁄ãxt
, 
yaml_m¨k_t
 
c⁄ãxt_m¨k
,

209 c⁄° *
¥obÀm
, 
yaml_m¨k_t
 
¥obÀm_m¨k
)

211 
∑r£r
->
îr‹
 = 
YAML_PARSER_ERROR
;

212 
∑r£r
->
c⁄ãxt
 = context;

213 
∑r£r
->
c⁄ãxt_m¨k
 = context_mark;

214 
∑r£r
->
¥obÀm
 =Öroblem;

215 
∑r£r
->
¥obÀm_m¨k
 =Öroblem_mark;

218 
	}
}

226 
	$yaml_∑r£r_°©e_machöe
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
)

228 
∑r£r
->
°©e
)

230 
YAML_PARSE_STREAM_START_STATE
:

231  
	`yaml_∑r£r_∑r£_°ªam_°¨t
(
∑r£r
, 
evít
);

233 
YAML_PARSE_IMPLICIT_DOCUMENT_START_STATE
:

234  
	`yaml_∑r£r_∑r£_documít_°¨t
(
∑r£r
, 
evít
, 1);

236 
YAML_PARSE_DOCUMENT_START_STATE
:

237  
	`yaml_∑r£r_∑r£_documít_°¨t
(
∑r£r
, 
evít
, 0);

239 
YAML_PARSE_DOCUMENT_CONTENT_STATE
:

240  
	`yaml_∑r£r_∑r£_documít_c⁄ã¡
(
∑r£r
, 
evít
);

242 
YAML_PARSE_DOCUMENT_END_STATE
:

243  
	`yaml_∑r£r_∑r£_documít_íd
(
∑r£r
, 
evít
);

245 
YAML_PARSE_BLOCK_NODE_STATE
:

246  
	`yaml_∑r£r_∑r£_node
(
∑r£r
, 
evít
, 1, 0);

248 
YAML_PARSE_BLOCK_NODE_OR_INDENTLESS_SEQUENCE_STATE
:

249  
	`yaml_∑r£r_∑r£_node
(
∑r£r
, 
evít
, 1, 1);

251 
YAML_PARSE_FLOW_NODE_STATE
:

252  
	`yaml_∑r£r_∑r£_node
(
∑r£r
, 
evít
, 0, 0);

254 
YAML_PARSE_BLOCK_SEQUENCE_FIRST_ENTRY_STATE
:

255  
	`yaml_∑r£r_∑r£_block_£quí˚_íåy
(
∑r£r
, 
evít
, 1);

257 
YAML_PARSE_BLOCK_SEQUENCE_ENTRY_STATE
:

258  
	`yaml_∑r£r_∑r£_block_£quí˚_íåy
(
∑r£r
, 
evít
, 0);

260 
YAML_PARSE_INDENTLESS_SEQUENCE_ENTRY_STATE
:

261  
	`yaml_∑r£r_∑r£_ödíéess_£quí˚_íåy
(
∑r£r
, 
evít
);

263 
YAML_PARSE_BLOCK_MAPPING_FIRST_KEY_STATE
:

264  
	`yaml_∑r£r_∑r£_block_m≠pög_key
(
∑r£r
, 
evít
, 1);

266 
YAML_PARSE_BLOCK_MAPPING_KEY_STATE
:

267  
	`yaml_∑r£r_∑r£_block_m≠pög_key
(
∑r£r
, 
evít
, 0);

269 
YAML_PARSE_BLOCK_MAPPING_VALUE_STATE
:

270  
	`yaml_∑r£r_∑r£_block_m≠pög_vÆue
(
∑r£r
, 
evít
);

272 
YAML_PARSE_FLOW_SEQUENCE_FIRST_ENTRY_STATE
:

273  
	`yaml_∑r£r_∑r£_Êow_£quí˚_íåy
(
∑r£r
, 
evít
, 1);

275 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_STATE
:

276  
	`yaml_∑r£r_∑r£_Êow_£quí˚_íåy
(
∑r£r
, 
evít
, 0);

278 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_KEY_STATE
:

279  
	`yaml_∑r£r_∑r£_Êow_£quí˚_íåy_m≠pög_key
(
∑r£r
, 
evít
);

281 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_VALUE_STATE
:

282  
	`yaml_∑r£r_∑r£_Êow_£quí˚_íåy_m≠pög_vÆue
(
∑r£r
, 
evít
);

284 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_END_STATE
:

285  
	`yaml_∑r£r_∑r£_Êow_£quí˚_íåy_m≠pög_íd
(
∑r£r
, 
evít
);

287 
YAML_PARSE_FLOW_MAPPING_FIRST_KEY_STATE
:

288  
	`yaml_∑r£r_∑r£_Êow_m≠pög_key
(
∑r£r
, 
evít
, 1);

290 
YAML_PARSE_FLOW_MAPPING_KEY_STATE
:

291  
	`yaml_∑r£r_∑r£_Êow_m≠pög_key
(
∑r£r
, 
evít
, 0);

293 
YAML_PARSE_FLOW_MAPPING_VALUE_STATE
:

294  
	`yaml_∑r£r_∑r£_Êow_m≠pög_vÆue
(
∑r£r
, 
evít
, 0);

296 
YAML_PARSE_FLOW_MAPPING_EMPTY_VALUE_STATE
:

297  
	`yaml_∑r£r_∑r£_Êow_m≠pög_vÆue
(
∑r£r
, 
evít
, 1);

300 
	`as£π
(1);

304 
	}
}

313 
	$yaml_∑r£r_∑r£_°ªam_°¨t
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
)

315 
yaml_tokí_t
 *
tokí
;

317 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

318 i‡(!
tokí
)  0;

320 i‡(
tokí
->
ty≥
 !
YAML_STREAM_START_TOKEN
) {

321  
	`yaml_∑r£r_£t_∑r£r_îr‹
(
∑r£r
,

322 "didÇŸ födÉx≥˘ed <°ªam-°¨t>", 
tokí
->
°¨t_m¨k
);

325 
∑r£r
->
°©e
 = 
YAML_PARSE_IMPLICIT_DOCUMENT_START_STATE
;

326 
	`STREAM_START_EVENT_INIT
(*
evít
, 
tokí
->
d©a
.
°ªam_°¨t
.
ícodög
,

327 
tokí
->
°¨t_m¨k
,Åoken->start_mark);

328 
	`SKIP_TOKEN
(
∑r£r
);

331 
	}
}

342 
	$yaml_∑r£r_∑r£_documít_°¨t
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
,

343 
im∂icô
)

345 
yaml_tokí_t
 *
tokí
;

346 
yaml_vîsi⁄_dúe˘ive_t
 *
vîsi⁄_dúe˘ive
 = 
NULL
;

348 
yaml_èg_dúe˘ive_t
 *
°¨t
;

349 
yaml_èg_dúe˘ive_t
 *
íd
;

350 } 
èg_dúe˘ives
 = { 
NULL
, NULL };

352 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

353 i‡(!
tokí
)  0;

357 i‡(!
im∂icô
)

359 
tokí
->
ty≥
 =
YAML_DOCUMENT_END_TOKEN
) {

360 
	`SKIP_TOKEN
(
∑r£r
);

361 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

362 i‡(!
tokí
)  0;

368 i‡(
im∂icô
 && 
tokí
->
ty≥
 !
YAML_VERSION_DIRECTIVE_TOKEN
 &&

369 
tokí
->
ty≥
 !
YAML_TAG_DIRECTIVE_TOKEN
 &&

370 
tokí
->
ty≥
 !
YAML_DOCUMENT_START_TOKEN
 &&

371 
tokí
->
ty≥
 !
YAML_STREAM_END_TOKEN
)

373 i‡(!
	`yaml_∑r£r_¥o˚ss_dúe˘ives
(
∑r£r
, 
NULL
, NULL, NULL))

375 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
°©es
, 
YAML_PARSE_DOCUMENT_END_STATE
))

377 
∑r£r
->
°©e
 = 
YAML_PARSE_BLOCK_NODE_STATE
;

378 
	`DOCUMENT_START_EVENT_INIT
(*
evít
, 
NULL
, NULL, NULL, 1,

379 
tokí
->
°¨t_m¨k
,Åoken->start_mark);

385 i‡(
tokí
->
ty≥
 !
YAML_STREAM_END_TOKEN
)

387 
yaml_m¨k_t
 
°¨t_m¨k
, 
íd_m¨k
;

388 
°¨t_m¨k
 = 
tokí
->start_mark;

389 i‡(!
	`yaml_∑r£r_¥o˚ss_dúe˘ives
(
∑r£r
, &
vîsi⁄_dúe˘ive
,

390 &
èg_dúe˘ives
.
°¨t
, &èg_dúe˘ives.
íd
))

392 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

393 i‡(!
tokí
Ë
îr‹
;

394 i‡(
tokí
->
ty≥
 !
YAML_DOCUMENT_START_TOKEN
) {

395 
	`yaml_∑r£r_£t_∑r£r_îr‹
(
∑r£r
,

396 "didÇŸ födÉx≥˘ed <documíà°¨t>", 
tokí
->
°¨t_m¨k
);

397 
îr‹
;

399 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
°©es
, 
YAML_PARSE_DOCUMENT_END_STATE
))

400 
îr‹
;

401 
∑r£r
->
°©e
 = 
YAML_PARSE_DOCUMENT_CONTENT_STATE
;

402 
íd_m¨k
 = 
tokí
->end_mark;

403 
	`DOCUMENT_START_EVENT_INIT
(*
evít
, 
vîsi⁄_dúe˘ive
,

404 
èg_dúe˘ives
.
°¨t
,Åag_dúe˘ives.
íd
, 0,

405 
°¨t_m¨k
, 
íd_m¨k
);

406 
	`SKIP_TOKEN
(
∑r£r
);

407 
vîsi⁄_dúe˘ive
 = 
NULL
;

408 
èg_dúe˘ives
.
°¨t
 =Åag_dúe˘ives.
íd
 = 
NULL
;

416 
∑r£r
->
°©e
 = 
YAML_PARSE_END_STATE
;

417 
	`STREAM_END_EVENT_INIT
(*
evít
, 
tokí
->
°¨t_m¨k
,Åokí->
íd_m¨k
);

418 
	`SKIP_TOKEN
(
∑r£r
);

422 
îr‹
:

423 
	`yaml_‰ì
(
vîsi⁄_dúe˘ive
);

424 
èg_dúe˘ives
.
°¨t
 !èg_dúe˘ives.
íd
) {

425 
	`yaml_‰ì
(
èg_dúe˘ives
.
íd
[-1].
h™dÀ
);

426 
	`yaml_‰ì
(
èg_dúe˘ives
.
íd
[-1].
¥efix
);

427 
èg_dúe˘ives
.
íd
 --;

429 
	`yaml_‰ì
(
èg_dúe˘ives
.
°¨t
);

431 
	}
}

440 
	$yaml_∑r£r_∑r£_documít_c⁄ã¡
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
)

442 
yaml_tokí_t
 *
tokí
;

444 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

445 i‡(!
tokí
)  0;

447 i‡(
tokí
->
ty≥
 =
YAML_VERSION_DIRECTIVE_TOKEN
 ||

448 
tokí
->
ty≥
 =
YAML_TAG_DIRECTIVE_TOKEN
 ||

449 
tokí
->
ty≥
 =
YAML_DOCUMENT_START_TOKEN
 ||

450 
tokí
->
ty≥
 =
YAML_DOCUMENT_END_TOKEN
 ||

451 
tokí
->
ty≥
 =
YAML_STREAM_END_TOKEN
) {

452 
∑r£r
->
°©e
 = 
	`POP
’¨£r,Ö¨£r->
°©es
);

453  
	`yaml_∑r£r_¥o˚ss_em±y_sˇœr
(
∑r£r
, 
evít
,

454 
tokí
->
°¨t_m¨k
);

457  
	`yaml_∑r£r_∑r£_node
(
∑r£r
, 
evít
, 1, 0);

459 
	}
}

470 
	$yaml_∑r£r_∑r£_documít_íd
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
)

472 
yaml_tokí_t
 *
tokí
;

473 
yaml_m¨k_t
 
°¨t_m¨k
, 
íd_m¨k
;

474 
im∂icô
 = 1;

476 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

477 i‡(!
tokí
)  0;

479 
°¨t_m¨k
 = 
íd_m¨k
 = 
tokí
->start_mark;

481 i‡(
tokí
->
ty≥
 =
YAML_DOCUMENT_END_TOKEN
) {

482 
íd_m¨k
 = 
tokí
->end_mark;

483 
	`SKIP_TOKEN
(
∑r£r
);

484 
im∂icô
 = 0;

487 !
	`STACK_EMPTY
(
∑r£r
,Ö¨£r->
èg_dúe˘ives
)) {

488 
yaml_èg_dúe˘ive_t
 
èg_dúe˘ive
 = 
	`POP
(
∑r£r
,Ö¨£r->
èg_dúe˘ives
);

489 
	`yaml_‰ì
(
èg_dúe˘ive
.
h™dÀ
);

490 
	`yaml_‰ì
(
èg_dúe˘ive
.
¥efix
);

493 
∑r£r
->
°©e
 = 
YAML_PARSE_DOCUMENT_START_STATE
;

494 
	`DOCUMENT_END_EVENT_INIT
(*
evít
, 
im∂icô
, 
°¨t_m¨k
, 
íd_m¨k
);

497 
	}
}

529 
	$yaml_∑r£r_∑r£_node
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
,

530 
block
, 
ödíéess_£quí˚
)

532 
yaml_tokí_t
 *
tokí
;

533 
yaml_ch¨_t
 *
™ch‹
 = 
NULL
;

534 
yaml_ch¨_t
 *
èg_h™dÀ
 = 
NULL
;

535 
yaml_ch¨_t
 *
èg_suffix
 = 
NULL
;

536 
yaml_ch¨_t
 *
èg
 = 
NULL
;

537 
yaml_m¨k_t
 
°¨t_m¨k
, 
íd_m¨k
, 
èg_m¨k
;

538 
im∂icô
;

540 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

541 i‡(!
tokí
)  0;

543 i‡(
tokí
->
ty≥
 =
YAML_ALIAS_TOKEN
)

545 
∑r£r
->
°©e
 = 
	`POP
’¨£r,Ö¨£r->
°©es
);

546 
	`ALIAS_EVENT_INIT
(*
evít
, 
tokí
->
d©a
.
Æüs
.
vÆue
,

547 
tokí
->
°¨t_m¨k
,Åokí->
íd_m¨k
);

548 
	`SKIP_TOKEN
(
∑r£r
);

554 
°¨t_m¨k
 = 
íd_m¨k
 = 
tokí
->start_mark;

556 i‡(
tokí
->
ty≥
 =
YAML_ANCHOR_TOKEN
)

558 
™ch‹
 = 
tokí
->
d©a
.™ch‹.
vÆue
;

559 
°¨t_m¨k
 = 
tokí
->start_mark;

560 
íd_m¨k
 = 
tokí
->end_mark;

561 
	`SKIP_TOKEN
(
∑r£r
);

562 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

563 i‡(!
tokí
Ë
îr‹
;

564 i‡(
tokí
->
ty≥
 =
YAML_TAG_TOKEN
)

566 
èg_h™dÀ
 = 
tokí
->
d©a
.
èg
.
h™dÀ
;

567 
èg_suffix
 = 
tokí
->
d©a
.
èg
.
suffix
;

568 
èg_m¨k
 = 
tokí
->
°¨t_m¨k
;

569 
íd_m¨k
 = 
tokí
->end_mark;

570 
	`SKIP_TOKEN
(
∑r£r
);

571 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

572 i‡(!
tokí
Ë
îr‹
;

575 i‡(
tokí
->
ty≥
 =
YAML_TAG_TOKEN
)

577 
èg_h™dÀ
 = 
tokí
->
d©a
.
èg
.
h™dÀ
;

578 
èg_suffix
 = 
tokí
->
d©a
.
èg
.
suffix
;

579 
°¨t_m¨k
 = 
èg_m¨k
 = 
tokí
->start_mark;

580 
íd_m¨k
 = 
tokí
->end_mark;

581 
	`SKIP_TOKEN
(
∑r£r
);

582 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

583 i‡(!
tokí
Ë
îr‹
;

584 i‡(
tokí
->
ty≥
 =
YAML_ANCHOR_TOKEN
)

586 
™ch‹
 = 
tokí
->
d©a
.™ch‹.
vÆue
;

587 
íd_m¨k
 = 
tokí
->end_mark;

588 
	`SKIP_TOKEN
(
∑r£r
);

589 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

590 i‡(!
tokí
Ë
îr‹
;

594 i‡(
èg_h™dÀ
) {

595 i‡(!*
èg_h™dÀ
) {

596 
èg
 = 
èg_suffix
;

597 
	`yaml_‰ì
(
èg_h™dÀ
);

598 
èg_h™dÀ
 = 
èg_suffix
 = 
NULL
;

601 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ive
;

602 
èg_dúe˘ive
 = 
∑r£r
->
èg_dúe˘ives
.
°¨t
;

603 
èg_dúe˘ive
 !
∑r£r
->
èg_dúe˘ives
.
t›
;

604 
èg_dúe˘ive
 ++) {

605 i‡(
	`°rcmp
((*)
èg_dúe˘ive
->
h™dÀ
, (*)
èg_h™dÀ
) == 0) {

606 
size_t
 
¥efix_Àn
 = 
	`°æí
((*)
èg_dúe˘ive
->
¥efix
);

607 
size_t
 
suffix_Àn
 = 
	`°æí
((*)
èg_suffix
);

608 
èg
 = 
	`yaml_mÆloc
(
¥efix_Àn
+
suffix_Àn
+1);

609 i‡(!
èg
) {

610 
∑r£r
->
îr‹
 = 
YAML_MEMORY_ERROR
;

611 
îr‹
;

613 
	`mem˝y
(
èg
, 
èg_dúe˘ive
->
¥efix
, 
¥efix_Àn
);

614 
	`mem˝y
(
èg
+
¥efix_Àn
, 
èg_suffix
, 
suffix_Àn
);

615 
èg
[
¥efix_Àn
+
suffix_Àn
] = '\0';

616 
	`yaml_‰ì
(
èg_h™dÀ
);

617 
	`yaml_‰ì
(
èg_suffix
);

618 
èg_h™dÀ
 = 
èg_suffix
 = 
NULL
;

622 i‡(!
èg
) {

623 
	`yaml_∑r£r_£t_∑r£r_îr‹_c⁄ãxt
(
∑r£r
,

624 "whûê∑rsögáÇode", 
°¨t_m¨k
,

625 "found undeföedÅag h™dÀ", 
èg_m¨k
);

626 
îr‹
;

631 
im∂icô
 = (!
èg
 || !*tag);

632 i‡(
ödíéess_£quí˚
 && 
tokí
->
ty≥
 =
YAML_BLOCK_ENTRY_TOKEN
) {

633 
íd_m¨k
 = 
tokí
->end_mark;

634 
∑r£r
->
°©e
 = 
YAML_PARSE_INDENTLESS_SEQUENCE_ENTRY_STATE
;

635 
	`SEQUENCE_START_EVENT_INIT
(*
evít
, 
™ch‹
, 
èg
, 
im∂icô
,

636 
YAML_BLOCK_SEQUENCE_STYLE
, 
°¨t_m¨k
, 
íd_m¨k
);

640 i‡(
tokí
->
ty≥
 =
YAML_SCALAR_TOKEN
) {

641 
∂aö_im∂icô
 = 0;

642 
quŸed_im∂icô
 = 0;

643 
íd_m¨k
 = 
tokí
->end_mark;

644 i‡((
tokí
->
d©a
.
sˇœr
.
°yÀ
 =
YAML_PLAIN_SCALAR_STYLE
 && !
èg
)

645 || (
èg
 && 
	`°rcmp
((*)tag, "!") == 0)) {

646 
∂aö_im∂icô
 = 1;

648 i‡(!
èg
) {

649 
quŸed_im∂icô
 = 1;

651 
∑r£r
->
°©e
 = 
	`POP
’¨£r,Ö¨£r->
°©es
);

652 
	`SCALAR_EVENT_INIT
(*
evít
, 
™ch‹
, 
èg
,

653 
tokí
->
d©a
.
sˇœr
.
vÆue
,Åokí->d©a.sˇœr.
Àngth
,

654 
∂aö_im∂icô
, 
quŸed_im∂icô
,

655 
tokí
->
d©a
.
sˇœr
.
°yÀ
, 
°¨t_m¨k
, 
íd_m¨k
);

656 
	`SKIP_TOKEN
(
∑r£r
);

659 i‡(
tokí
->
ty≥
 =
YAML_FLOW_SEQUENCE_START_TOKEN
) {

660 
íd_m¨k
 = 
tokí
->end_mark;

661 
∑r£r
->
°©e
 = 
YAML_PARSE_FLOW_SEQUENCE_FIRST_ENTRY_STATE
;

662 
	`SEQUENCE_START_EVENT_INIT
(*
evít
, 
™ch‹
, 
èg
, 
im∂icô
,

663 
YAML_FLOW_SEQUENCE_STYLE
, 
°¨t_m¨k
, 
íd_m¨k
);

666 i‡(
tokí
->
ty≥
 =
YAML_FLOW_MAPPING_START_TOKEN
) {

667 
íd_m¨k
 = 
tokí
->end_mark;

668 
∑r£r
->
°©e
 = 
YAML_PARSE_FLOW_MAPPING_FIRST_KEY_STATE
;

669 
	`MAPPING_START_EVENT_INIT
(*
evít
, 
™ch‹
, 
èg
, 
im∂icô
,

670 
YAML_FLOW_MAPPING_STYLE
, 
°¨t_m¨k
, 
íd_m¨k
);

673 i‡(
block
 && 
tokí
->
ty≥
 =
YAML_BLOCK_SEQUENCE_START_TOKEN
) {

674 
íd_m¨k
 = 
tokí
->end_mark;

675 
∑r£r
->
°©e
 = 
YAML_PARSE_BLOCK_SEQUENCE_FIRST_ENTRY_STATE
;

676 
	`SEQUENCE_START_EVENT_INIT
(*
evít
, 
™ch‹
, 
èg
, 
im∂icô
,

677 
YAML_BLOCK_SEQUENCE_STYLE
, 
°¨t_m¨k
, 
íd_m¨k
);

680 i‡(
block
 && 
tokí
->
ty≥
 =
YAML_BLOCK_MAPPING_START_TOKEN
) {

681 
íd_m¨k
 = 
tokí
->end_mark;

682 
∑r£r
->
°©e
 = 
YAML_PARSE_BLOCK_MAPPING_FIRST_KEY_STATE
;

683 
	`MAPPING_START_EVENT_INIT
(*
evít
, 
™ch‹
, 
èg
, 
im∂icô
,

684 
YAML_BLOCK_MAPPING_STYLE
, 
°¨t_m¨k
, 
íd_m¨k
);

687 i‡(
™ch‹
 || 
èg
) {

688 
yaml_ch¨_t
 *
vÆue
 = 
	`yaml_mÆloc
(1);

689 i‡(!
vÆue
) {

690 
∑r£r
->
îr‹
 = 
YAML_MEMORY_ERROR
;

691 
îr‹
;

693 
vÆue
[0] = '\0';

694 
∑r£r
->
°©e
 = 
	`POP
’¨£r,Ö¨£r->
°©es
);

695 
	`SCALAR_EVENT_INIT
(*
evít
, 
™ch‹
, 
èg
, 
vÆue
, 0,

696 
im∂icô
, 0, 
YAML_PLAIN_SCALAR_STYLE
,

697 
°¨t_m¨k
, 
íd_m¨k
);

701 
	`yaml_∑r£r_£t_∑r£r_îr‹_c⁄ãxt
(
∑r£r
,

702 (
block
 ? "whileÖarsingá blockÇode"

703 : "whûê∑rsögá flowÇode"), 
°¨t_m¨k
,

704 "didÇŸ födÉx≥˘edÇodêc⁄ã¡", 
tokí
->
°¨t_m¨k
);

705 
îr‹
;

710 
îr‹
:

711 
	`yaml_‰ì
(
™ch‹
);

712 
	`yaml_‰ì
(
èg_h™dÀ
);

713 
	`yaml_‰ì
(
èg_suffix
);

714 
	`yaml_‰ì
(
èg
);

717 
	}
}

726 
	$yaml_∑r£r_∑r£_block_£quí˚_íåy
(
yaml_∑r£r_t
 *
∑r£r
,

727 
yaml_evít_t
 *
evít
, 
fú°
)

729 
yaml_tokí_t
 *
tokí
;

731 i‡(
fú°
) {

732 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

733 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
m¨ks
, 
tokí
->
°¨t_m¨k
))

735 
	`SKIP_TOKEN
(
∑r£r
);

738 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

739 i‡(!
tokí
)  0;

741 i‡(
tokí
->
ty≥
 =
YAML_BLOCK_ENTRY_TOKEN
)

743 
yaml_m¨k_t
 
m¨k
 = 
tokí
->
íd_m¨k
;

744 
	`SKIP_TOKEN
(
∑r£r
);

745 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

746 i‡(!
tokí
)  0;

747 i‡(
tokí
->
ty≥
 !
YAML_BLOCK_ENTRY_TOKEN
 &&

748 
tokí
->
ty≥
 !
YAML_BLOCK_END_TOKEN
) {

749 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
°©es
,

750 
YAML_PARSE_BLOCK_SEQUENCE_ENTRY_STATE
))

752  
	`yaml_∑r£r_∑r£_node
(
∑r£r
, 
evít
, 1, 0);

755 
∑r£r
->
°©e
 = 
YAML_PARSE_BLOCK_SEQUENCE_ENTRY_STATE
;

756  
	`yaml_∑r£r_¥o˚ss_em±y_sˇœr
(
∑r£r
, 
evít
, 
m¨k
);

760 i‡(
tokí
->
ty≥
 =
YAML_BLOCK_END_TOKEN
)

762 
yaml_m¨k_t
 
dummy_m¨k
;

763 
∑r£r
->
°©e
 = 
	`POP
’¨£r,Ö¨£r->
°©es
);

764 
dummy_m¨k
 = 
	`POP
(
∑r£r
,Ö¨£r->
m¨ks
);

765 
	`SEQUENCE_END_EVENT_INIT
(*
evít
, 
tokí
->
°¨t_m¨k
,Åokí->
íd_m¨k
);

766 
	`SKIP_TOKEN
(
∑r£r
);

772  
	`yaml_∑r£r_£t_∑r£r_îr‹_c⁄ãxt
(
∑r£r
,

773 "whûê∑rsögá block cﬁÀ˘i⁄", 
	`POP
(
∑r£r
,Ö¨£r->
m¨ks
),

774 "didÇŸ födÉx≥˘ed '-' indiˇt‹", 
tokí
->
°¨t_m¨k
);

776 
	}
}

785 
	$yaml_∑r£r_∑r£_ödíéess_£quí˚_íåy
(
yaml_∑r£r_t
 *
∑r£r
,

786 
yaml_evít_t
 *
evít
)

788 
yaml_tokí_t
 *
tokí
;

790 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

791 i‡(!
tokí
)  0;

793 i‡(
tokí
->
ty≥
 =
YAML_BLOCK_ENTRY_TOKEN
)

795 
yaml_m¨k_t
 
m¨k
 = 
tokí
->
íd_m¨k
;

796 
	`SKIP_TOKEN
(
∑r£r
);

797 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

798 i‡(!
tokí
)  0;

799 i‡(
tokí
->
ty≥
 !
YAML_BLOCK_ENTRY_TOKEN
 &&

800 
tokí
->
ty≥
 !
YAML_KEY_TOKEN
 &&

801 
tokí
->
ty≥
 !
YAML_VALUE_TOKEN
 &&

802 
tokí
->
ty≥
 !
YAML_BLOCK_END_TOKEN
) {

803 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
°©es
,

804 
YAML_PARSE_INDENTLESS_SEQUENCE_ENTRY_STATE
))

806  
	`yaml_∑r£r_∑r£_node
(
∑r£r
, 
evít
, 1, 0);

809 
∑r£r
->
°©e
 = 
YAML_PARSE_INDENTLESS_SEQUENCE_ENTRY_STATE
;

810  
	`yaml_∑r£r_¥o˚ss_em±y_sˇœr
(
∑r£r
, 
evít
, 
m¨k
);

816 
∑r£r
->
°©e
 = 
	`POP
’¨£r,Ö¨£r->
°©es
);

817 
	`SEQUENCE_END_EVENT_INIT
(*
evít
, 
tokí
->
°¨t_m¨k
,Åoken->start_mark);

820 
	}
}

835 
	$yaml_∑r£r_∑r£_block_m≠pög_key
(
yaml_∑r£r_t
 *
∑r£r
,

836 
yaml_evít_t
 *
evít
, 
fú°
)

838 
yaml_tokí_t
 *
tokí
;

840 i‡(
fú°
) {

841 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

842 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
m¨ks
, 
tokí
->
°¨t_m¨k
))

844 
	`SKIP_TOKEN
(
∑r£r
);

847 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

848 i‡(!
tokí
)  0;

850 i‡(
tokí
->
ty≥
 =
YAML_KEY_TOKEN
)

852 
yaml_m¨k_t
 
m¨k
 = 
tokí
->
íd_m¨k
;

853 
	`SKIP_TOKEN
(
∑r£r
);

854 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

855 i‡(!
tokí
)  0;

856 i‡(
tokí
->
ty≥
 !
YAML_KEY_TOKEN
 &&

857 
tokí
->
ty≥
 !
YAML_VALUE_TOKEN
 &&

858 
tokí
->
ty≥
 !
YAML_BLOCK_END_TOKEN
) {

859 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
°©es
,

860 
YAML_PARSE_BLOCK_MAPPING_VALUE_STATE
))

862  
	`yaml_∑r£r_∑r£_node
(
∑r£r
, 
evít
, 1, 1);

865 
∑r£r
->
°©e
 = 
YAML_PARSE_BLOCK_MAPPING_VALUE_STATE
;

866  
	`yaml_∑r£r_¥o˚ss_em±y_sˇœr
(
∑r£r
, 
evít
, 
m¨k
);

870 i‡(
tokí
->
ty≥
 =
YAML_BLOCK_END_TOKEN
)

872 
yaml_m¨k_t
 
dummy_m¨k
;

873 
∑r£r
->
°©e
 = 
	`POP
’¨£r,Ö¨£r->
°©es
);

874 
dummy_m¨k
 = 
	`POP
(
∑r£r
,Ö¨£r->
m¨ks
);

875 
	`MAPPING_END_EVENT_INIT
(*
evít
, 
tokí
->
°¨t_m¨k
,Åokí->
íd_m¨k
);

876 
	`SKIP_TOKEN
(
∑r£r
);

882  
	`yaml_∑r£r_£t_∑r£r_îr‹_c⁄ãxt
(
∑r£r
,

883 "whûê∑rsögá block m≠pög", 
	`POP
(
∑r£r
,Ö¨£r->
m¨ks
),

884 "didÇŸ födÉx≥˘ed key", 
tokí
->
°¨t_m¨k
);

886 
	}
}

901 
	$yaml_∑r£r_∑r£_block_m≠pög_vÆue
(
yaml_∑r£r_t
 *
∑r£r
,

902 
yaml_evít_t
 *
evít
)

904 
yaml_tokí_t
 *
tokí
;

906 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

907 i‡(!
tokí
)  0;

909 i‡(
tokí
->
ty≥
 =
YAML_VALUE_TOKEN
)

911 
yaml_m¨k_t
 
m¨k
 = 
tokí
->
íd_m¨k
;

912 
	`SKIP_TOKEN
(
∑r£r
);

913 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

914 i‡(!
tokí
)  0;

915 i‡(
tokí
->
ty≥
 !
YAML_KEY_TOKEN
 &&

916 
tokí
->
ty≥
 !
YAML_VALUE_TOKEN
 &&

917 
tokí
->
ty≥
 !
YAML_BLOCK_END_TOKEN
) {

918 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
°©es
,

919 
YAML_PARSE_BLOCK_MAPPING_KEY_STATE
))

921  
	`yaml_∑r£r_∑r£_node
(
∑r£r
, 
evít
, 1, 1);

924 
∑r£r
->
°©e
 = 
YAML_PARSE_BLOCK_MAPPING_KEY_STATE
;

925  
	`yaml_∑r£r_¥o˚ss_em±y_sˇœr
(
∑r£r
, 
evít
, 
m¨k
);

931 
∑r£r
->
°©e
 = 
YAML_PARSE_BLOCK_MAPPING_KEY_STATE
;

932  
	`yaml_∑r£r_¥o˚ss_em±y_sˇœr
(
∑r£r
, 
evít
, 
tokí
->
°¨t_m¨k
);

934 
	}
}

951 
	$yaml_∑r£r_∑r£_Êow_£quí˚_íåy
(
yaml_∑r£r_t
 *
∑r£r
,

952 
yaml_evít_t
 *
evít
, 
fú°
)

954 
yaml_tokí_t
 *
tokí
;

955 
yaml_m¨k_t
 
dummy_m¨k
;

957 i‡(
fú°
) {

958 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

959 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
m¨ks
, 
tokí
->
°¨t_m¨k
))

961 
	`SKIP_TOKEN
(
∑r£r
);

964 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

965 i‡(!
tokí
)  0;

967 i‡(
tokí
->
ty≥
 !
YAML_FLOW_SEQUENCE_END_TOKEN
)

969 i‡(!
fú°
) {

970 i‡(
tokí
->
ty≥
 =
YAML_FLOW_ENTRY_TOKEN
) {

971 
	`SKIP_TOKEN
(
∑r£r
);

972 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

973 i‡(!
tokí
)  0;

976  
	`yaml_∑r£r_£t_∑r£r_îr‹_c⁄ãxt
(
∑r£r
,

977 "whûê∑rsögá flow sequí˚", 
	`POP
(
∑r£r
,Ö¨£r->
m¨ks
),

978 "didÇŸ födÉx≥˘ed ',' o∏']'", 
tokí
->
°¨t_m¨k
);

982 i‡(
tokí
->
ty≥
 =
YAML_KEY_TOKEN
) {

983 
∑r£r
->
°©e
 = 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_KEY_STATE
;

984 
	`MAPPING_START_EVENT_INIT
(*
evít
, 
NULL
, NULL,

985 1, 
YAML_FLOW_MAPPING_STYLE
,

986 
tokí
->
°¨t_m¨k
,Åokí->
íd_m¨k
);

987 
	`SKIP_TOKEN
(
∑r£r
);

991 i‡(
tokí
->
ty≥
 !
YAML_FLOW_SEQUENCE_END_TOKEN
) {

992 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
°©es
,

993 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_STATE
))

995  
	`yaml_∑r£r_∑r£_node
(
∑r£r
, 
evít
, 0, 0);

999 
∑r£r
->
°©e
 = 
	`POP
’¨£r,Ö¨£r->
°©es
);

1000 
dummy_m¨k
 = 
	`POP
(
∑r£r
,Ö¨£r->
m¨ks
);

1001 
	`SEQUENCE_END_EVENT_INIT
(*
evít
, 
tokí
->
°¨t_m¨k
,Åokí->
íd_m¨k
);

1002 
	`SKIP_TOKEN
(
∑r£r
);

1004 
	}
}

1013 
	$yaml_∑r£r_∑r£_Êow_£quí˚_íåy_m≠pög_key
(
yaml_∑r£r_t
 *
∑r£r
,

1014 
yaml_evít_t
 *
evít
)

1016 
yaml_tokí_t
 *
tokí
;

1018 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

1019 i‡(!
tokí
)  0;

1021 i‡(
tokí
->
ty≥
 !
YAML_VALUE_TOKEN
 &&Åokí->ty≥ !
YAML_FLOW_ENTRY_TOKEN


1022 && 
tokí
->
ty≥
 !
YAML_FLOW_SEQUENCE_END_TOKEN
) {

1023 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
°©es
,

1024 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_VALUE_STATE
))

1026  
	`yaml_∑r£r_∑r£_node
(
∑r£r
, 
evít
, 0, 0);

1029 
yaml_m¨k_t
 
m¨k
 = 
tokí
->
íd_m¨k
;

1030 
	`SKIP_TOKEN
(
∑r£r
);

1031 
∑r£r
->
°©e
 = 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_VALUE_STATE
;

1032  
	`yaml_∑r£r_¥o˚ss_em±y_sˇœr
(
∑r£r
, 
evít
, 
m¨k
);

1034 
	}
}

1043 
	$yaml_∑r£r_∑r£_Êow_£quí˚_íåy_m≠pög_vÆue
(
yaml_∑r£r_t
 *
∑r£r
,

1044 
yaml_evít_t
 *
evít
)

1046 
yaml_tokí_t
 *
tokí
;

1048 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

1049 i‡(!
tokí
)  0;

1051 i‡(
tokí
->
ty≥
 =
YAML_VALUE_TOKEN
) {

1052 
	`SKIP_TOKEN
(
∑r£r
);

1053 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

1054 i‡(!
tokí
)  0;

1055 i‡(
tokí
->
ty≥
 !
YAML_FLOW_ENTRY_TOKEN


1056 && 
tokí
->
ty≥
 !
YAML_FLOW_SEQUENCE_END_TOKEN
) {

1057 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
°©es
,

1058 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_END_STATE
))

1060  
	`yaml_∑r£r_∑r£_node
(
∑r£r
, 
evít
, 0, 0);

1063 
∑r£r
->
°©e
 = 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_MAPPING_END_STATE
;

1064  
	`yaml_∑r£r_¥o˚ss_em±y_sˇœr
(
∑r£r
, 
evít
, 
tokí
->
°¨t_m¨k
);

1065 
	}
}

1074 
	$yaml_∑r£r_∑r£_Êow_£quí˚_íåy_m≠pög_íd
(
yaml_∑r£r_t
 *
∑r£r
,

1075 
yaml_evít_t
 *
evít
)

1077 
yaml_tokí_t
 *
tokí
;

1079 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

1080 i‡(!
tokí
)  0;

1082 
∑r£r
->
°©e
 = 
YAML_PARSE_FLOW_SEQUENCE_ENTRY_STATE
;

1084 
	`MAPPING_END_EVENT_INIT
(*
evít
, 
tokí
->
°¨t_m¨k
,Åoken->start_mark);

1086 
	}
}

1103 
	$yaml_∑r£r_∑r£_Êow_m≠pög_key
(
yaml_∑r£r_t
 *
∑r£r
,

1104 
yaml_evít_t
 *
evít
, 
fú°
)

1106 
yaml_tokí_t
 *
tokí
;

1107 
yaml_m¨k_t
 
dummy_m¨k
;

1109 i‡(
fú°
) {

1110 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

1111 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
m¨ks
, 
tokí
->
°¨t_m¨k
))

1113 
	`SKIP_TOKEN
(
∑r£r
);

1116 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

1117 i‡(!
tokí
)  0;

1119 i‡(
tokí
->
ty≥
 !
YAML_FLOW_MAPPING_END_TOKEN
)

1121 i‡(!
fú°
) {

1122 i‡(
tokí
->
ty≥
 =
YAML_FLOW_ENTRY_TOKEN
) {

1123 
	`SKIP_TOKEN
(
∑r£r
);

1124 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

1125 i‡(!
tokí
)  0;

1128  
	`yaml_∑r£r_£t_∑r£r_îr‹_c⁄ãxt
(
∑r£r
,

1129 "whûê∑rsögá flow m≠pög", 
	`POP
(
∑r£r
,Ö¨£r->
m¨ks
),

1130 "didÇŸ födÉx≥˘ed ',' o∏'}'", 
tokí
->
°¨t_m¨k
);

1134 i‡(
tokí
->
ty≥
 =
YAML_KEY_TOKEN
) {

1135 
	`SKIP_TOKEN
(
∑r£r
);

1136 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

1137 i‡(!
tokí
)  0;

1138 i‡(
tokí
->
ty≥
 !
YAML_VALUE_TOKEN


1139 && 
tokí
->
ty≥
 !
YAML_FLOW_ENTRY_TOKEN


1140 && 
tokí
->
ty≥
 !
YAML_FLOW_MAPPING_END_TOKEN
) {

1141 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
°©es
,

1142 
YAML_PARSE_FLOW_MAPPING_VALUE_STATE
))

1144  
	`yaml_∑r£r_∑r£_node
(
∑r£r
, 
evít
, 0, 0);

1147 
∑r£r
->
°©e
 = 
YAML_PARSE_FLOW_MAPPING_VALUE_STATE
;

1148  
	`yaml_∑r£r_¥o˚ss_em±y_sˇœr
(
∑r£r
, 
evít
,

1149 
tokí
->
°¨t_m¨k
);

1152 i‡(
tokí
->
ty≥
 !
YAML_FLOW_MAPPING_END_TOKEN
) {

1153 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
°©es
,

1154 
YAML_PARSE_FLOW_MAPPING_EMPTY_VALUE_STATE
))

1156  
	`yaml_∑r£r_∑r£_node
(
∑r£r
, 
evít
, 0, 0);

1160 
∑r£r
->
°©e
 = 
	`POP
’¨£r,Ö¨£r->
°©es
);

1161 
dummy_m¨k
 = 
	`POP
(
∑r£r
,Ö¨£r->
m¨ks
);

1162 
	`MAPPING_END_EVENT_INIT
(*
evít
, 
tokí
->
°¨t_m¨k
,Åokí->
íd_m¨k
);

1163 
	`SKIP_TOKEN
(
∑r£r
);

1165 
	}
}

1174 
	$yaml_∑r£r_∑r£_Êow_m≠pög_vÆue
(
yaml_∑r£r_t
 *
∑r£r
,

1175 
yaml_evít_t
 *
evít
, 
em±y
)

1177 
yaml_tokí_t
 *
tokí
;

1179 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

1180 i‡(!
tokí
)  0;

1182 i‡(
em±y
) {

1183 
∑r£r
->
°©e
 = 
YAML_PARSE_FLOW_MAPPING_KEY_STATE
;

1184  
	`yaml_∑r£r_¥o˚ss_em±y_sˇœr
(
∑r£r
, 
evít
,

1185 
tokí
->
°¨t_m¨k
);

1188 i‡(
tokí
->
ty≥
 =
YAML_VALUE_TOKEN
) {

1189 
	`SKIP_TOKEN
(
∑r£r
);

1190 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

1191 i‡(!
tokí
)  0;

1192 i‡(
tokí
->
ty≥
 !
YAML_FLOW_ENTRY_TOKEN


1193 && 
tokí
->
ty≥
 !
YAML_FLOW_MAPPING_END_TOKEN
) {

1194 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
°©es
,

1195 
YAML_PARSE_FLOW_MAPPING_KEY_STATE
))

1197  
	`yaml_∑r£r_∑r£_node
(
∑r£r
, 
evít
, 0, 0);

1201 
∑r£r
->
°©e
 = 
YAML_PARSE_FLOW_MAPPING_KEY_STATE
;

1202  
	`yaml_∑r£r_¥o˚ss_em±y_sˇœr
(
∑r£r
, 
evít
, 
tokí
->
°¨t_m¨k
);

1203 
	}
}

1210 
	$yaml_∑r£r_¥o˚ss_em±y_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_evít_t
 *
evít
,

1211 
yaml_m¨k_t
 
m¨k
)

1213 
yaml_ch¨_t
 *
vÆue
;

1215 
vÆue
 = 
	`yaml_mÆloc
(1);

1216 i‡(!
vÆue
) {

1217 
∑r£r
->
îr‹
 = 
YAML_MEMORY_ERROR
;

1220 
vÆue
[0] = '\0';

1222 
	`SCALAR_EVENT_INIT
(*
evít
, 
NULL
, NULL, 
vÆue
, 0,

1223 1, 0, 
YAML_PLAIN_SCALAR_STYLE
, 
m¨k
, mark);

1226 
	}
}

1233 
	$yaml_∑r£r_¥o˚ss_dúe˘ives
(
yaml_∑r£r_t
 *
∑r£r
,

1234 
yaml_vîsi⁄_dúe˘ive_t
 **
vîsi⁄_dúe˘ive_ªf
,

1235 
yaml_èg_dúe˘ive_t
 **
èg_dúe˘ives_°¨t_ªf
,

1236 
yaml_èg_dúe˘ive_t
 **
èg_dúe˘ives_íd_ªf
)

1238 
yaml_èg_dúe˘ive_t
 
deÁu…_èg_dúe˘ives
[] = {

1239 {(
yaml_ch¨_t
 *)"!", (yaml_char_t *)"!"},

1240 {(
yaml_ch¨_t
 *)"!!", (yaml_char_t *)"tag:yaml.org,2002:"},

1241 {
NULL
, NULL}

1243 
yaml_èg_dúe˘ive_t
 *
deÁu…_èg_dúe˘ive
;

1244 
yaml_vîsi⁄_dúe˘ive_t
 *
vîsi⁄_dúe˘ive
 = 
NULL
;

1246 
yaml_èg_dúe˘ive_t
 *
°¨t
;

1247 
yaml_èg_dúe˘ive_t
 *
íd
;

1248 
yaml_èg_dúe˘ive_t
 *
t›
;

1249 } 
èg_dúe˘ives
 = { 
NULL
, NULL, NULL };

1250 
yaml_tokí_t
 *
tokí
;

1252 i‡(!
	`STACK_INIT
(
∑r£r
, 
èg_dúe˘ives
, 
INITIAL_STACK_SIZE
))

1253 
îr‹
;

1255 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

1256 i‡(!
tokí
Ë
îr‹
;

1258 
tokí
->
ty≥
 =
YAML_VERSION_DIRECTIVE_TOKEN
 ||

1259 
tokí
->
ty≥
 =
YAML_TAG_DIRECTIVE_TOKEN
)

1261 i‡(
tokí
->
ty≥
 =
YAML_VERSION_DIRECTIVE_TOKEN
) {

1262 i‡(
vîsi⁄_dúe˘ive
) {

1263 
	`yaml_∑r£r_£t_∑r£r_îr‹
(
∑r£r
,

1264 "found du∂iˇã %YAML dúe˘ive", 
tokí
->
°¨t_m¨k
);

1265 
îr‹
;

1267 i‡(
tokí
->
d©a
.
vîsi⁄_dúe˘ive
.
maj‹
 != 1

1268 || 
tokí
->
d©a
.
vîsi⁄_dúe˘ive
.
mö‹
 != 1) {

1269 
	`yaml_∑r£r_£t_∑r£r_îr‹
(
∑r£r
,

1270 "found incom∑tibÀ YAML documít", 
tokí
->
°¨t_m¨k
);

1271 
îr‹
;

1273 
vîsi⁄_dúe˘ive
 = 
	`yaml_mÆloc
((
yaml_vîsi⁄_dúe˘ive_t
));

1274 i‡(!
vîsi⁄_dúe˘ive
) {

1275 
∑r£r
->
îr‹
 = 
YAML_MEMORY_ERROR
;

1276 
îr‹
;

1278 
vîsi⁄_dúe˘ive
->
maj‹
 = 
tokí
->
d©a
.version_directive.major;

1279 
vîsi⁄_dúe˘ive
->
mö‹
 = 
tokí
->
d©a
.version_directive.minor;

1282 i‡(
tokí
->
ty≥
 =
YAML_TAG_DIRECTIVE_TOKEN
) {

1283 
yaml_èg_dúe˘ive_t
 
vÆue
;

1284 
vÆue
.
h™dÀ
 = 
tokí
->
d©a
.
èg_dúe˘ive
.handle;

1285 
vÆue
.
¥efix
 = 
tokí
->
d©a
.
èg_dúe˘ive
.prefix;

1287 i‡(!
	`yaml_∑r£r_≠≥nd_èg_dúe˘ive
(
∑r£r
, 
vÆue
, 0,

1288 
tokí
->
°¨t_m¨k
))

1289 
îr‹
;

1290 i‡(!
	`PUSH
(
∑r£r
, 
èg_dúe˘ives
, 
vÆue
))

1291 
îr‹
;

1294 
	`SKIP_TOKEN
(
∑r£r
);

1295 
tokí
 = 
	`PEEK_TOKEN
(
∑r£r
);

1296 i‡(!
tokí
Ë
îr‹
;

1299 
deÁu…_èg_dúe˘ive
 = 
deÁu…_èg_dúe˘ives
;

1300 
deÁu…_èg_dúe˘ive
->
h™dÀ
; default_tag_directive++) {

1301 i‡(!
	`yaml_∑r£r_≠≥nd_èg_dúe˘ive
(
∑r£r
, *
deÁu…_èg_dúe˘ive
, 1,

1302 
tokí
->
°¨t_m¨k
))

1303 
îr‹
;

1306 i‡(
vîsi⁄_dúe˘ive_ªf
) {

1307 *
vîsi⁄_dúe˘ive_ªf
 = 
vîsi⁄_dúe˘ive
;

1309 i‡(
èg_dúe˘ives_°¨t_ªf
) {

1310 i‡(
	`STACK_EMPTY
(
∑r£r
, 
èg_dúe˘ives
)) {

1311 *
èg_dúe˘ives_°¨t_ªf
 = *
èg_dúe˘ives_íd_ªf
 = 
NULL
;

1312 
	`STACK_DEL
(
∑r£r
, 
èg_dúe˘ives
);

1315 *
èg_dúe˘ives_°¨t_ªf
 = 
èg_dúe˘ives
.
°¨t
;

1316 *
èg_dúe˘ives_íd_ªf
 = 
èg_dúe˘ives
.
t›
;

1320 
	`STACK_DEL
(
∑r£r
, 
èg_dúe˘ives
);

1325 
îr‹
:

1326 
	`yaml_‰ì
(
vîsi⁄_dúe˘ive
);

1327 !
	`STACK_EMPTY
(
∑r£r
, 
èg_dúe˘ives
)) {

1328 
yaml_èg_dúe˘ive_t
 
èg_dúe˘ive
 = 
	`POP
(
∑r£r
, 
èg_dúe˘ives
);

1329 
	`yaml_‰ì
(
èg_dúe˘ive
.
h™dÀ
);

1330 
	`yaml_‰ì
(
èg_dúe˘ive
.
¥efix
);

1332 
	`STACK_DEL
(
∑r£r
, 
èg_dúe˘ives
);

1334 
	}
}

1341 
	$yaml_∑r£r_≠≥nd_èg_dúe˘ive
(
yaml_∑r£r_t
 *
∑r£r
,

1342 
yaml_èg_dúe˘ive_t
 
vÆue
, 
Ælow_du∂iˇãs
, 
yaml_m¨k_t
 
m¨k
)

1344 
yaml_èg_dúe˘ive_t
 *
èg_dúe˘ive
;

1345 
yaml_èg_dúe˘ive_t
 
c›y
 = { 
NULL
, NULL };

1347 
èg_dúe˘ive
 = 
∑r£r
->
èg_dúe˘ives
.
°¨t
;

1348 
èg_dúe˘ive
 !
∑r£r
->
èg_dúe˘ives
.
t›
;Åag_directive ++) {

1349 i‡(
	`°rcmp
((*)
vÆue
.
h™dÀ
, (*)
èg_dúe˘ive
->handle) == 0) {

1350 i‡(
Ælow_du∂iˇãs
)

1352  
	`yaml_∑r£r_£t_∑r£r_îr‹
(
∑r£r
,

1353 "found du∂iˇã %TAG dúe˘ive", 
m¨k
);

1357 
c›y
.
h™dÀ
 = 
	`yaml_°rdup
(
vÆue
.handle);

1358 
c›y
.
¥efix
 = 
	`yaml_°rdup
(
vÆue
.prefix);

1359 i‡(!
c›y
.
h™dÀ
 || !c›y.
¥efix
) {

1360 
∑r£r
->
îr‹
 = 
YAML_MEMORY_ERROR
;

1361 
îr‹
;

1364 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
èg_dúe˘ives
, 
c›y
))

1365 
îr‹
;

1369 
îr‹
:

1370 
	`yaml_‰ì
(
c›y
.
h™dÀ
);

1371 
	`yaml_‰ì
(
c›y
.
¥efix
);

1373 
	}
}

	@contrib/yaml-0.1.4/src/reader.c

2 
	~"yaml_¥iv©e.h
"

9 
yaml_∑r£r_£t_ªadî_îr‹
(
yaml_∑r£r_t
 *
∑r£r
, c⁄° *
¥obÀm
,

10 
size_t
 
off£t
, 
vÆue
);

13 
yaml_∑r£r_upd©e_øw_buf„r
(
yaml_∑r£r_t
 *
∑r£r
);

16 
yaml_∑r£r_dëîmöe_ícodög
(
yaml_∑r£r_t
 *
∑r£r
);

18 
	$YAML_DECLARE
()

19 
	`yaml_∑r£r_upd©e_buf„r
(
yaml_∑r£r_t
 *
∑r£r
, 
size_t
 
Àngth
);

26 
	$yaml_∑r£r_£t_ªadî_îr‹
(
yaml_∑r£r_t
 *
∑r£r
, c⁄° *
¥obÀm
,

27 
size_t
 
off£t
, 
vÆue
)

29 
∑r£r
->
îr‹
 = 
YAML_READER_ERROR
;

30 
∑r£r
->
¥obÀm
 =Öroblem;

31 
∑r£r
->
¥obÀm_off£t
 = 
off£t
;

32 
∑r£r
->
¥obÀm_vÆue
 = 
vÆue
;

35 
	}
}

41 
	#BOM_UTF8
 "\xef\xbb\xbf"

	)

42 
	#BOM_UTF16LE
 "\xff\x„"

	)

43 
	#BOM_UTF16BE
 "\x„\xff"

	)

51 
	$yaml_∑r£r_dëîmöe_ícodög
(
yaml_∑r£r_t
 *
∑r£r
)

55 !
∑r£r
->
eof


56 && 
∑r£r
->
øw_buf„r
.
œ°
 -Ö¨£r->øw_buf„r.
poöãr
 < 3) {

57 i‡(!
	`yaml_∑r£r_upd©e_øw_buf„r
(
∑r£r
)) {

64 i‡(
∑r£r
->
øw_buf„r
.
œ°
 -Ö¨£r->øw_buf„r.
poöãr
 >= 2

65 && !
	`memcmp
(
∑r£r
->
øw_buf„r
.
poöãr
, 
BOM_UTF16LE
, 2)) {

66 
∑r£r
->
ícodög
 = 
YAML_UTF16LE_ENCODING
;

67 
∑r£r
->
øw_buf„r
.
poöãr
 += 2;

68 
∑r£r
->
off£t
 += 2;

70 i‡(
∑r£r
->
øw_buf„r
.
œ°
 -Ö¨£r->øw_buf„r.
poöãr
 >= 2

71 && !
	`memcmp
(
∑r£r
->
øw_buf„r
.
poöãr
, 
BOM_UTF16BE
, 2)) {

72 
∑r£r
->
ícodög
 = 
YAML_UTF16BE_ENCODING
;

73 
∑r£r
->
øw_buf„r
.
poöãr
 += 2;

74 
∑r£r
->
off£t
 += 2;

76 i‡(
∑r£r
->
øw_buf„r
.
œ°
 -Ö¨£r->øw_buf„r.
poöãr
 >= 3

77 && !
	`memcmp
(
∑r£r
->
øw_buf„r
.
poöãr
, 
BOM_UTF8
, 3)) {

78 
∑r£r
->
ícodög
 = 
YAML_UTF8_ENCODING
;

79 
∑r£r
->
øw_buf„r
.
poöãr
 += 3;

80 
∑r£r
->
off£t
 += 3;

83 
∑r£r
->
ícodög
 = 
YAML_UTF8_ENCODING
;

87 
	}
}

94 
	$yaml_∑r£r_upd©e_øw_buf„r
(
yaml_∑r£r_t
 *
∑r£r
)

96 
size_t
 
size_ªad
 = 0;

100 i‡(
∑r£r
->
øw_buf„r
.
°¨t
 =∑r£r->øw_buf„r.
poöãr


101 && 
∑r£r
->
øw_buf„r
.
œ°
 =∑r£r->øw_buf„r.
íd
)

106 i‡(
∑r£r
->
eof
)  1;

110 i‡(
∑r£r
->
øw_buf„r
.
°¨t
 <Ö¨£r->øw_buf„r.
poöãr


111 && 
∑r£r
->
øw_buf„r
.
poöãr
 <Ö¨£r->øw_buf„r.
œ°
) {

112 
	`memmove
(
∑r£r
->
øw_buf„r
.
°¨t
,Ö¨£r->øw_buf„r.
poöãr
,

113 
∑r£r
->
øw_buf„r
.
œ°
 -Ö¨£r->øw_buf„r.
poöãr
);

115 
∑r£r
->
øw_buf„r
.
œ°
 -=

116 
∑r£r
->
øw_buf„r
.
poöãr
 -Ö¨£r->øw_buf„r.
°¨t
;

117 
∑r£r
->
øw_buf„r
.
poöãr
 =Ö¨£r->øw_buf„r.
°¨t
;

121 i‡(!
∑r£r
->
	`ªad_h™dÀr
’¨£r->
ªad_h™dÀr_d©a
,Ö¨£r->
øw_buf„r
.
œ°
,

122 
∑r£r
->
øw_buf„r
.
íd
 -Ö¨£r->øw_buf„r.
œ°
, &
size_ªad
)) {

123  
	`yaml_∑r£r_£t_ªadî_îr‹
(
∑r£r
, "inputÉrror",

124 
∑r£r
->
off£t
, -1);

126 
∑r£r
->
øw_buf„r
.
œ°
 +
size_ªad
;

127 i‡(!
size_ªad
) {

128 
∑r£r
->
eof
 = 1;

132 
	}
}

141 
	$YAML_DECLARE
()

142 
	$yaml_∑r£r_upd©e_buf„r
(
yaml_∑r£r_t
 *
∑r£r
, 
size_t
 
Àngth
)

144 
fú°
 = 1;

146 
	`as£π
(
∑r£r
->
ªad_h™dÀr
);

150 i‡(
∑r£r
->
eof
 &&Ö¨£r->
øw_buf„r
.
poöãr
 =∑r£r->øw_buf„r.
œ°
)

155 i‡(
∑r£r
->
uƒód
 >
Àngth
)

160 i‡(!
∑r£r
->
ícodög
) {

161 i‡(!
	`yaml_∑r£r_dëîmöe_ícodög
(
∑r£r
))

167 i‡(
∑r£r
->
buf„r
.
°¨t
 <Ö¨£r->buf„r.
poöãr


168 && 
∑r£r
->
buf„r
.
poöãr
 <Ö¨£r->buf„r.
œ°
) {

169 
size_t
 
size
 = 
∑r£r
->
buf„r
.
œ°
 -Ö¨£r->buf„r.
poöãr
;

170 
	`memmove
(
∑r£r
->
buf„r
.
°¨t
,Ö¨£r->buf„r.
poöãr
, 
size
);

171 
∑r£r
->
buf„r
.
poöãr
 =Ö¨£r->buf„r.
°¨t
;

172 
∑r£r
->
buf„r
.
œ°
 =Ö¨£r->buf„r.
°¨t
 + 
size
;

174 i‡(
∑r£r
->
buf„r
.
poöãr
 =∑r£r->buf„r.
œ°
) {

175 
∑r£r
->
buf„r
.
poöãr
 =Ö¨£r->buf„r.
°¨t
;

176 
∑r£r
->
buf„r
.
œ°
 =Ö¨£r->buf„r.
°¨t
;

181 
∑r£r
->
uƒód
 < 
Àngth
)

185 i‡(!
fú°
 || 
∑r£r
->
øw_buf„r
.
poöãr
 =∑r£r->øw_buf„r.
œ°
) {

186 i‡(!
	`yaml_∑r£r_upd©e_øw_buf„r
(
∑r£r
))  0;

188 
fú°
 = 0;

192 
∑r£r
->
øw_buf„r
.
poöãr
 !∑r£r->øw_buf„r.
œ°
)

194 
vÆue
 = 0, 
vÆue2
 = 0;

195 
öcom∂ëe
 = 0;

196 
o˘ë
;

197 
width
 = 0;

198 
low
, 
high
;

199 
size_t
 
k
;

200 
size_t
 
øw_uƒód
 = 
∑r£r
->
øw_buf„r
.
œ°
 -Ö¨£r->øw_buf„r.
poöãr
;

204 
∑r£r
->
ícodög
)

206 
YAML_UTF8_ENCODING
:

230 
o˘ë
 = 
∑r£r
->
øw_buf„r
.
poöãr
[0];

231 
width
 = (
o˘ë
 & 0x80) == 0x00 ? 1 :

232 (
o˘ë
 & 0xE0) == 0xC0 ? 2 :

233 (
o˘ë
 & 0xF0) == 0xE0 ? 3 :

234 (
o˘ë
 & 0xF8) == 0xF0 ? 4 : 0;

238 i‡(!
width
)

239  
	`yaml_∑r£r_£t_ªadî_îr‹
(
∑r£r
,

241 
∑r£r
->
off£t
, 
o˘ë
);

245 i‡(
width
 > 
øw_uƒód
) {

246 i‡(
∑r£r
->
eof
) {

247  
	`yaml_∑r£r_£t_ªadî_îr‹
(
∑r£r
,

249 
∑r£r
->
off£t
, -1);

251 
öcom∂ëe
 = 1;

257 
vÆue
 = (
o˘ë
 & 0x80) == 0x00 ? octet & 0x7F :

258 (
o˘ë
 & 0xE0) == 0xC0 ? octet & 0x1F :

259 (
o˘ë
 & 0xF0) == 0xE0 ? octet & 0x0F :

260 (
o˘ë
 & 0xF8) == 0xF0 ? octet & 0x07 : 0;

264 
k
 = 1; k < 
width
; k ++)

266 
o˘ë
 = 
∑r£r
->
øw_buf„r
.
poöãr
[
k
];

270 i‡((
o˘ë
 & 0xC0) != 0x80)

271  
	`yaml_∑r£r_£t_ªadî_îr‹
(
∑r£r
,

273 
∑r£r
->
off£t
+
k
, 
o˘ë
);

277 
vÆue
 = (vÆuê<< 6Ë+ (
o˘ë
 & 0x3F);

282 i‡(!((
width
 == 1) ||

283 (
width
 =2 && 
vÆue
 >= 0x80) ||

284 (
width
 =3 && 
vÆue
 >= 0x800) ||

285 (
width
 =4 && 
vÆue
 >= 0x10000)))

286  
	`yaml_∑r£r_£t_ªadî_îr‹
(
∑r£r
,

288 
∑r£r
->
off£t
, -1);

292 i‡((
vÆue
 >= 0xD800 && value <= 0xDFFF) || value > 0x10FFFF)

293  
	`yaml_∑r£r_£t_ªadî_îr‹
(
∑r£r
,

295 
∑r£r
->
off£t
, 
vÆue
);

299 
YAML_UTF16LE_ENCODING
:

300 
YAML_UTF16BE_ENCODING
:

302 
low
 = (
∑r£r
->
ícodög
 =
YAML_UTF16LE_ENCODING
 ? 0 : 1);

303 
high
 = (
∑r£r
->
ícodög
 =
YAML_UTF16LE_ENCODING
 ? 1 : 0);

333 i‡(
øw_uƒód
 < 2) {

334 i‡(
∑r£r
->
eof
) {

335  
	`yaml_∑r£r_£t_ªadî_îr‹
(
∑r£r
,

337 
∑r£r
->
off£t
, -1);

339 
öcom∂ëe
 = 1;

345 
vÆue
 = 
∑r£r
->
øw_buf„r
.
poöãr
[
low
]

346 + (
∑r£r
->
øw_buf„r
.
poöãr
[
high
] << 8);

350 i‡((
vÆue
 & 0xFC00) == 0xDC00)

351  
	`yaml_∑r£r_£t_ªadî_îr‹
(
∑r£r
,

353 
∑r£r
->
off£t
, 
vÆue
);

357 i‡((
vÆue
 & 0xFC00) == 0xD800) {

359 
width
 = 4;

363 i‡(
øw_uƒód
 < 4) {

364 i‡(
∑r£r
->
eof
) {

365  
	`yaml_∑r£r_£t_ªadî_îr‹
(
∑r£r
,

367 
∑r£r
->
off£t
, -1);

369 
öcom∂ëe
 = 1;

375 
vÆue2
 = 
∑r£r
->
øw_buf„r
.
poöãr
[
low
+2]

376 + (
∑r£r
->
øw_buf„r
.
poöãr
[
high
+2] << 8);

380 i‡((
vÆue2
 & 0xFC00) != 0xDC00)

381  
	`yaml_∑r£r_£t_ªadî_îr‹
(
∑r£r
,

383 
∑r£r
->
off£t
+2, 
vÆue2
);

387 
vÆue
 = 0x10000 + ((vÆuê& 0x3FFË<< 10Ë+ (
vÆue2
 & 0x3FF);

391 
width
 = 2;

397 
	`as£π
(1);

402 i‡(
öcom∂ëe
) ;

411 i‡(! (
vÆue
 == 0x09 || value == 0x0A || value == 0x0D

412 || (
vÆue
 >= 0x20 && value <= 0x7E)

413 || (
vÆue
 == 0x85) || (value >= 0xA0 && value <= 0xD7FF)

414 || (
vÆue
 >= 0xE000 && value <= 0xFFFD)

415 || (
vÆue
 >= 0x10000 && value <= 0x10FFFF)))

416  
	`yaml_∑r£r_£t_ªadî_îr‹
(
∑r£r
,

418 
∑r£r
->
off£t
, 
vÆue
);

422 
∑r£r
->
øw_buf„r
.
poöãr
 +
width
;

423 
∑r£r
->
off£t
 +
width
;

428 i‡(
vÆue
 <= 0x7F) {

429 *(
∑r£r
->
buf„r
.
œ°
++Ë
vÆue
;

432 i‡(
vÆue
 <= 0x7FF) {

433 *(
∑r£r
->
buf„r
.
œ°
++Ë0xC0 + (
vÆue
 >> 6);

434 *(
∑r£r
->
buf„r
.
œ°
++Ë0x80 + (
vÆue
 & 0x3F);

437 i‡(
vÆue
 <= 0xFFFF) {

438 *(
∑r£r
->
buf„r
.
œ°
++Ë0xE0 + (
vÆue
 >> 12);

439 *(
∑r£r
->
buf„r
.
œ°
++Ë0x80 + ((
vÆue
 >> 6) & 0x3F);

440 *(
∑r£r
->
buf„r
.
œ°
++Ë0x80 + (
vÆue
 & 0x3F);

444 *(
∑r£r
->
buf„r
.
œ°
++Ë0xF0 + (
vÆue
 >> 18);

445 *(
∑r£r
->
buf„r
.
œ°
++Ë0x80 + ((
vÆue
 >> 12) & 0x3F);

446 *(
∑r£r
->
buf„r
.
œ°
++Ë0x80 + ((
vÆue
 >> 6) & 0x3F);

447 *(
∑r£r
->
buf„r
.
œ°
++Ë0x80 + (
vÆue
 & 0x3F);

450 
∑r£r
->
uƒód
 ++;

455 i‡(
∑r£r
->
eof
) {

456 *(
∑r£r
->
buf„r
.
œ°
++) = '\0';

457 
∑r£r
->
uƒód
 ++;

464 
	}
}

	@contrib/yaml-0.1.4/src/scanner.c

478 
	~"yaml_¥iv©e.h
"

485 
	#CACHE
(
∑r£r
,
Àngth
) \

486 (
∑r£r
->
uƒód
 >(
Àngth
) \

488 : 
	`yaml_∑r£r_upd©e_buf„r
(
∑r£r
, (
Àngth
)))

	)

494 
	#SKIP
(
∑r£r
) \

495 (
∑r£r
->
m¨k
.
ödex
 ++, \

496 
∑r£r
->
m¨k
.
cﬁumn
 ++, \

497 
∑r£r
->
uƒód
 --, \

498 
∑r£r
->
buf„r
.
poöãr
 +
	`WIDTH
’¨£r->buf„r))

	)

500 
	#SKIP_LINE
(
∑r£r
) \

501 (
	`IS_CRLF
(
∑r£r
->
buf„r
) ? \

502 (
∑r£r
->
m¨k
.
ödex
 += 2, \

503 
∑r£r
->
m¨k
.
cﬁumn
 = 0, \

504 
∑r£r
->
m¨k
.
löe
 ++, \

505 
∑r£r
->
uƒód
 -= 2, \

506 
∑r£r
->
buf„r
.
poöãr
 += 2) : \

507 
	`IS_BREAK
(
∑r£r
->
buf„r
) ? \

508 (
∑r£r
->
m¨k
.
ödex
 ++, \

509 
∑r£r
->
m¨k
.
cﬁumn
 = 0, \

510 
∑r£r
->
m¨k
.
löe
 ++, \

511 
∑r£r
->
uƒód
 --, \

512 
∑r£r
->
buf„r
.
poöãr
 +
	`WIDTH
’¨£r->buf„r)Ë: 0)

	)

518 
	#READ
(
∑r£r
,
°rög
) \

519 (
	`STRING_EXTEND
(
∑r£r
,
°rög
) ? \

520 (
	`COPY
(
°rög
,
∑r£r
->
buf„r
), \

521 
∑r£r
->
m¨k
.
ödex
 ++, \

522 
∑r£r
->
m¨k
.
cﬁumn
 ++, \

523 
∑r£r
->
uƒód
 --, \

524 1Ë: 0)

	)

530 
	#READ_LINE
(
∑r£r
,
°rög
) \

531 (
	`STRING_EXTEND
(
∑r£r
,
°rög
) ? \

532 (((
	`CHECK_AT
(
∑r£r
->
buf„r
,'\r',0) \

533 && 
	`CHECK_AT
(
∑r£r
->
buf„r
,'\n',1)) ? \

534 (*((
°rög
).
poöãr
++Ë(
yaml_ch¨_t
) '\n', \

535 
∑r£r
->
buf„r
.
poöãr
 += 2, \

536 
∑r£r
->
m¨k
.
ödex
 += 2, \

537 
∑r£r
->
m¨k
.
cﬁumn
 = 0, \

538 
∑r£r
->
m¨k
.
löe
 ++, \

539 
∑r£r
->
uƒód
 -= 2) : \

540 (
	`CHECK_AT
(
∑r£r
->
buf„r
,'\r',0) \

541 || 
	`CHECK_AT
(
∑r£r
->
buf„r
,'\n',0)) ? \

542 (*((
°rög
).
poöãr
++Ë(
yaml_ch¨_t
) '\n', \

543 
∑r£r
->
buf„r
.
poöãr
 ++, \

544 
∑r£r
->
m¨k
.
ödex
 ++, \

545 
∑r£r
->
m¨k
.
cﬁumn
 = 0, \

546 
∑r£r
->
m¨k
.
löe
 ++, \

547 
∑r£r
->
uƒód
 --) : \

548 (
	`CHECK_AT
(
∑r£r
->
buf„r
,'\xC2',0) \

549 && 
	`CHECK_AT
(
∑r£r
->
buf„r
,'\x85',1)) ? \

550 (*((
°rög
).
poöãr
++Ë(
yaml_ch¨_t
) '\n', \

551 
∑r£r
->
buf„r
.
poöãr
 += 2, \

552 
∑r£r
->
m¨k
.
ödex
 ++, \

553 
∑r£r
->
m¨k
.
cﬁumn
 = 0, \

554 
∑r£r
->
m¨k
.
löe
 ++, \

555 
∑r£r
->
uƒód
 --) : \

556 (
	`CHECK_AT
(
∑r£r
->
buf„r
,'\xE2',0) && \

557 
	`CHECK_AT
(
∑r£r
->
buf„r
,'\x80',1) && \

558 (
	`CHECK_AT
(
∑r£r
->
buf„r
,'\xA8',2) || \

559 
	`CHECK_AT
(
∑r£r
->
buf„r
,'\xA9',2))) ? \

560 (*((
°rög
).
poöãr
++Ë*(
∑r£r
->
buf„r
.pointer++), \

561 *((
°rög
).
poöãr
++Ë*(
∑r£r
->
buf„r
.pointer++), \

562 *((
°rög
).
poöãr
++Ë*(
∑r£r
->
buf„r
.pointer++), \

563 
∑r£r
->
m¨k
.
ödex
 ++, \

564 
∑r£r
->
m¨k
.
cﬁumn
 = 0, \

565 
∑r£r
->
m¨k
.
löe
 ++, \

566 
∑r£r
->
uƒód
 --) : 0), \

567 1Ë: 0)

	)

573 
	$YAML_DECLARE
()

574 
	`yaml_∑r£r_sˇn
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
);

581 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
yaml_∑r£r_t
 *
∑r£r
, c⁄° *
c⁄ãxt
,

582 
yaml_m¨k_t
 
c⁄ãxt_m¨k
, c⁄° *
¥obÀm
);

588 
	$YAML_DECLARE
()

589 
	`yaml_∑r£r_„tch_m‹e_tokís
(
yaml_∑r£r_t
 *
∑r£r
);

592 
	`yaml_∑r£r_„tch_√xt_tokí
(
yaml_∑r£r_t
 *
∑r£r
);

599 
	`yaml_∑r£r_°Æe_sim∂e_keys
(
yaml_∑r£r_t
 *
∑r£r
);

602 
	`yaml_∑r£r_ßve_sim∂e_key
(
yaml_∑r£r_t
 *
∑r£r
);

605 
	`yaml_∑r£r_ªmove_sim∂e_key
(
yaml_∑r£r_t
 *
∑r£r
);

608 
	`yaml_∑r£r_ö¸ó£_Êow_Àvñ
(
yaml_∑r£r_t
 *
∑r£r
);

611 
	`yaml_∑r£r_de¸ó£_Êow_Àvñ
(
yaml_∑r£r_t
 *
∑r£r
);

618 
	`yaml_∑r£r_rﬁl_ödít
(
yaml_∑r£r_t
 *
∑r£r
, 
cﬁumn
,

619 
numbî
, 
yaml_tokí_ty≥_t
 
ty≥
, 
yaml_m¨k_t
 
m¨k
);

622 
	`yaml_∑r£r_uƒﬁl_ödít
(
yaml_∑r£r_t
 *
∑r£r
, 
cﬁumn
);

629 
	`yaml_∑r£r_„tch_°ªam_°¨t
(
yaml_∑r£r_t
 *
∑r£r
);

632 
	`yaml_∑r£r_„tch_°ªam_íd
(
yaml_∑r£r_t
 *
∑r£r
);

635 
	`yaml_∑r£r_„tch_dúe˘ive
(
yaml_∑r£r_t
 *
∑r£r
);

638 
	`yaml_∑r£r_„tch_documít_ödiˇt‹
(
yaml_∑r£r_t
 *
∑r£r
,

639 
yaml_tokí_ty≥_t
 
ty≥
);

642 
	`yaml_∑r£r_„tch_Êow_cﬁÀ˘i⁄_°¨t
(
yaml_∑r£r_t
 *
∑r£r
,

643 
yaml_tokí_ty≥_t
 
ty≥
);

646 
	`yaml_∑r£r_„tch_Êow_cﬁÀ˘i⁄_íd
(
yaml_∑r£r_t
 *
∑r£r
,

647 
yaml_tokí_ty≥_t
 
ty≥
);

650 
	`yaml_∑r£r_„tch_Êow_íåy
(
yaml_∑r£r_t
 *
∑r£r
);

653 
	`yaml_∑r£r_„tch_block_íåy
(
yaml_∑r£r_t
 *
∑r£r
);

656 
	`yaml_∑r£r_„tch_key
(
yaml_∑r£r_t
 *
∑r£r
);

659 
	`yaml_∑r£r_„tch_vÆue
(
yaml_∑r£r_t
 *
∑r£r
);

662 
	`yaml_∑r£r_„tch_™ch‹
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_ty≥_t
 
ty≥
);

665 
	`yaml_∑r£r_„tch_èg
(
yaml_∑r£r_t
 *
∑r£r
);

668 
	`yaml_∑r£r_„tch_block_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
, 
lôîÆ
);

671 
	`yaml_∑r£r_„tch_Êow_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
, 
sögÀ
);

674 
	`yaml_∑r£r_„tch_∂aö_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
);

681 
	`yaml_∑r£r_sˇn_to_√xt_tokí
(
yaml_∑r£r_t
 *
∑r£r
);

684 
	`yaml_∑r£r_sˇn_dúe˘ive
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
);

687 
	`yaml_∑r£r_sˇn_dúe˘ive_«me
(
yaml_∑r£r_t
 *
∑r£r
,

688 
yaml_m¨k_t
 
°¨t_m¨k
, 
yaml_ch¨_t
 **
«me
);

691 
	`yaml_∑r£r_sˇn_vîsi⁄_dúe˘ive_vÆue
(
yaml_∑r£r_t
 *
∑r£r
,

692 
yaml_m¨k_t
 
°¨t_m¨k
, *
maj‹
, *
mö‹
);

695 
	`yaml_∑r£r_sˇn_vîsi⁄_dúe˘ive_numbî
(
yaml_∑r£r_t
 *
∑r£r
,

696 
yaml_m¨k_t
 
°¨t_m¨k
, *
numbî
);

699 
	`yaml_∑r£r_sˇn_èg_dúe˘ive_vÆue
(
yaml_∑r£r_t
 *
∑r£r
,

700 
yaml_m¨k_t
 
m¨k
, 
yaml_ch¨_t
 **
h™dÀ
, yaml_ch¨_à**
¥efix
);

703 
	`yaml_∑r£r_sˇn_™ch‹
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
,

704 
yaml_tokí_ty≥_t
 
ty≥
);

707 
	`yaml_∑r£r_sˇn_èg
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
);

710 
	`yaml_∑r£r_sˇn_èg_h™dÀ
(
yaml_∑r£r_t
 *
∑r£r
, 
dúe˘ive
,

711 
yaml_m¨k_t
 
°¨t_m¨k
, 
yaml_ch¨_t
 **
h™dÀ
);

714 
	`yaml_∑r£r_sˇn_èg_uri
(
yaml_∑r£r_t
 *
∑r£r
, 
dúe˘ive
,

715 
yaml_ch¨_t
 *
hód
, 
yaml_m¨k_t
 
°¨t_m¨k
, yaml_ch¨_à**
uri
);

718 
	`yaml_∑r£r_sˇn_uri_esˇ≥s
(
yaml_∑r£r_t
 *
∑r£r
, 
dúe˘ive
,

719 
yaml_m¨k_t
 
°¨t_m¨k
, 
yaml_°rög_t
 *
°rög
);

722 
	`yaml_∑r£r_sˇn_block_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
,

723 
lôîÆ
);

726 
	`yaml_∑r£r_sˇn_block_sˇœr_bªaks
(
yaml_∑r£r_t
 *
∑r£r
,

727 *
ödít
, 
yaml_°rög_t
 *
bªaks
,

728 
yaml_m¨k_t
 
°¨t_m¨k
, yaml_m¨k_à*
íd_m¨k
);

731 
	`yaml_∑r£r_sˇn_Êow_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
,

732 
sögÀ
);

735 
	`yaml_∑r£r_sˇn_∂aö_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
);

741 
	$YAML_DECLARE
()

742 
	$yaml_∑r£r_sˇn
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
)

744 
	`as£π
(
∑r£r
);

745 
	`as£π
(
tokí
);

749 
	`mem£t
(
tokí
, 0, (
yaml_tokí_t
));

753 i‡(
∑r£r
->
°ªam_íd_¥odu˚d
 ||Ö¨£r->
îr‹
) {

759 i‡(!
∑r£r
->
tokí_avaûabÀ
) {

760 i‡(!
	`yaml_∑r£r_„tch_m‹e_tokís
(
∑r£r
))

766 *
tokí
 = 
	`DEQUEUE
(
∑r£r
,Ö¨£r->
tokís
);

767 
∑r£r
->
tokí_avaûabÀ
 = 0;

768 
∑r£r
->
tokís_∑r£d
 ++;

770 i‡(
tokí
->
ty≥
 =
YAML_STREAM_END_TOKEN
) {

771 
∑r£r
->
°ªam_íd_¥odu˚d
 = 1;

775 
	}
}

782 
	$yaml_∑r£r_£t_sˇ¬î_îr‹
(
yaml_∑r£r_t
 *
∑r£r
, c⁄° *
c⁄ãxt
,

783 
yaml_m¨k_t
 
c⁄ãxt_m¨k
, c⁄° *
¥obÀm
)

785 
∑r£r
->
îr‹
 = 
YAML_SCANNER_ERROR
;

786 
∑r£r
->
c⁄ãxt
 = context;

787 
∑r£r
->
c⁄ãxt_m¨k
 = context_mark;

788 
∑r£r
->
¥obÀm
 =Öroblem;

789 
∑r£r
->
¥obÀm_m¨k
 =Ö¨£r->
m¨k
;

792 
	}
}

799 
	$YAML_DECLARE
()

800 
	$yaml_∑r£r_„tch_m‹e_tokís
(
yaml_∑r£r_t
 *
∑r£r
)

802 
√ed_m‹e_tokís
;

812 
√ed_m‹e_tokís
 = 0;

814 i‡(
∑r£r
->
tokís
.
hód
 =∑r£r->tokís.
èû
)

818 
√ed_m‹e_tokís
 = 1;

822 
yaml_sim∂e_key_t
 *
sim∂e_key
;

826 i‡(!
	`yaml_∑r£r_°Æe_sim∂e_keys
(
∑r£r
))

829 
sim∂e_key
 = 
∑r£r
->
sim∂e_keys
.
°¨t
;

830 
sim∂e_key
 !
∑r£r
->
sim∂e_keys
.
t›
; simple_key++) {

831 i‡(
sim∂e_key
->
possibÀ


832 && 
sim∂e_key
->
tokí_numbî
 =
∑r£r
->
tokís_∑r£d
) {

833 
√ed_m‹e_tokís
 = 1;

841 i‡(!
√ed_m‹e_tokís
)

846 i‡(!
	`yaml_∑r£r_„tch_√xt_tokí
(
∑r£r
))

850 
∑r£r
->
tokí_avaûabÀ
 = 1;

853 
	}
}

860 
	$yaml_∑r£r_„tch_√xt_tokí
(
yaml_∑r£r_t
 *
∑r£r
)

864 i‡(!
	`CACHE
(
∑r£r
, 1))

869 i‡(!
∑r£r
->
°ªam_°¨t_¥odu˚d
)

870  
	`yaml_∑r£r_„tch_°ªam_°¨t
(
∑r£r
);

874 i‡(!
	`yaml_∑r£r_sˇn_to_√xt_tokí
(
∑r£r
))

879 i‡(!
	`yaml_∑r£r_°Æe_sim∂e_keys
(
∑r£r
))

884 i‡(!
	`yaml_∑r£r_uƒﬁl_ödít
(
∑r£r
,Ö¨£r->
m¨k
.
cﬁumn
))

892 i‡(!
	`CACHE
(
∑r£r
, 4))

897 i‡(
	`IS_Z
(
∑r£r
->
buf„r
))

898  
	`yaml_∑r£r_„tch_°ªam_íd
(
∑r£r
);

902 i‡(
∑r£r
->
m¨k
.
cﬁumn
 =0 && 
	`CHECK
’¨£r->
buf„r
, '%'))

903  
	`yaml_∑r£r_„tch_dúe˘ive
(
∑r£r
);

907 i‡(
∑r£r
->
m¨k
.
cﬁumn
 == 0

908 && 
	`CHECK_AT
(
∑r£r
->
buf„r
, '-', 0)

909 && 
	`CHECK_AT
(
∑r£r
->
buf„r
, '-', 1)

910 && 
	`CHECK_AT
(
∑r£r
->
buf„r
, '-', 2)

911 && 
	`IS_BLANKZ_AT
(
∑r£r
->
buf„r
, 3))

912  
	`yaml_∑r£r_„tch_documít_ödiˇt‹
(
∑r£r
,

913 
YAML_DOCUMENT_START_TOKEN
);

917 i‡(
∑r£r
->
m¨k
.
cﬁumn
 == 0

918 && 
	`CHECK_AT
(
∑r£r
->
buf„r
, '.', 0)

919 && 
	`CHECK_AT
(
∑r£r
->
buf„r
, '.', 1)

920 && 
	`CHECK_AT
(
∑r£r
->
buf„r
, '.', 2)

921 && 
	`IS_BLANKZ_AT
(
∑r£r
->
buf„r
, 3))

922  
	`yaml_∑r£r_„tch_documít_ödiˇt‹
(
∑r£r
,

923 
YAML_DOCUMENT_END_TOKEN
);

927 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '['))

928  
	`yaml_∑r£r_„tch_Êow_cﬁÀ˘i⁄_°¨t
(
∑r£r
,

929 
YAML_FLOW_SEQUENCE_START_TOKEN
);

933 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '{'))

934  
	`yaml_∑r£r_„tch_Êow_cﬁÀ˘i⁄_°¨t
(
∑r£r
,

935 
YAML_FLOW_MAPPING_START_TOKEN
);

939 i‡(
	`CHECK
(
∑r£r
->
buf„r
, ']'))

940  
	`yaml_∑r£r_„tch_Êow_cﬁÀ˘i⁄_íd
(
∑r£r
,

941 
YAML_FLOW_SEQUENCE_END_TOKEN
);

945 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '}'))

946  
	`yaml_∑r£r_„tch_Êow_cﬁÀ˘i⁄_íd
(
∑r£r
,

947 
YAML_FLOW_MAPPING_END_TOKEN
);

951 i‡(
	`CHECK
(
∑r£r
->
buf„r
, ','))

952  
	`yaml_∑r£r_„tch_Êow_íåy
(
∑r£r
);

956 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '-'Ë&& 
	`IS_BLANKZ_AT
(parser->buffer, 1))

957  
	`yaml_∑r£r_„tch_block_íåy
(
∑r£r
);

961 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '?')

962 && (
∑r£r
->
Êow_Àvñ
 || 
	`IS_BLANKZ_AT
’¨£r->
buf„r
, 1)))

963  
	`yaml_∑r£r_„tch_key
(
∑r£r
);

967 i‡(
	`CHECK
(
∑r£r
->
buf„r
, ':')

968 && (
∑r£r
->
Êow_Àvñ
 || 
	`IS_BLANKZ_AT
’¨£r->
buf„r
, 1)))

969  
	`yaml_∑r£r_„tch_vÆue
(
∑r£r
);

973 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '*'))

974  
	`yaml_∑r£r_„tch_™ch‹
(
∑r£r
, 
YAML_ALIAS_TOKEN
);

978 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '&'))

979  
	`yaml_∑r£r_„tch_™ch‹
(
∑r£r
, 
YAML_ANCHOR_TOKEN
);

983 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '!'))

984  
	`yaml_∑r£r_„tch_èg
(
∑r£r
);

988 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '|'Ë&& !∑r£r->
Êow_Àvñ
)

989  
	`yaml_∑r£r_„tch_block_sˇœr
(
∑r£r
, 1);

993 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '>'Ë&& !∑r£r->
Êow_Àvñ
)

994  
	`yaml_∑r£r_„tch_block_sˇœr
(
∑r£r
, 0);

998 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '\''))

999  
	`yaml_∑r£r_„tch_Êow_sˇœr
(
∑r£r
, 1);

1003 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '"'))

1004  
	`yaml_∑r£r_„tch_Êow_sˇœr
(
∑r£r
, 0);

1025 i‡(!(
	`IS_BLANKZ
(
∑r£r
->
buf„r
Ë|| 
	`CHECK
(parser->buffer, '-')

1026 || 
	`CHECK
(
∑r£r
->
buf„r
, '?') || CHECK(parser->buffer, ':')

1027 || 
	`CHECK
(
∑r£r
->
buf„r
, ',') || CHECK(parser->buffer, '[')

1028 || 
	`CHECK
(
∑r£r
->
buf„r
, ']') || CHECK(parser->buffer, '{')

1029 || 
	`CHECK
(
∑r£r
->
buf„r
, '}') || CHECK(parser->buffer, '#')

1030 || 
	`CHECK
(
∑r£r
->
buf„r
, '&') || CHECK(parser->buffer, '*')

1031 || 
	`CHECK
(
∑r£r
->
buf„r
, '!') || CHECK(parser->buffer, '|')

1032 || 
	`CHECK
(
∑r£r
->
buf„r
, '>') || CHECK(parser->buffer, '\'')

1033 || 
	`CHECK
(
∑r£r
->
buf„r
, '"') || CHECK(parser->buffer, '%')

1034 || 
	`CHECK
(
∑r£r
->
buf„r
, '@') || CHECK(parser->buffer, '`')) ||

1035 (
	`CHECK
(
∑r£r
->
buf„r
, '-'Ë&& !
	`IS_BLANK_AT
(parser->buffer, 1)) ||

1036 (!
∑r£r
->
Êow_Àvñ
 &&

1037 (
	`CHECK
(
∑r£r
->
buf„r
, '?') || CHECK(parser->buffer, ':'))

1038 && !
	`IS_BLANKZ_AT
(
∑r£r
->
buf„r
, 1)))

1039  
	`yaml_∑r£r_„tch_∂aö_sˇœr
(
∑r£r
);

1045  
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
,

1046 "whûêsˇ¬ög f‹Åhê√xàtokí", 
∑r£r
->
m¨k
,

1048 
	}
}

1056 
	$yaml_∑r£r_°Æe_sim∂e_keys
(
yaml_∑r£r_t
 *
∑r£r
)

1058 
yaml_sim∂e_key_t
 *
sim∂e_key
;

1062 
sim∂e_key
 = 
∑r£r
->
sim∂e_keys
.
°¨t
;

1063 
sim∂e_key
 !
∑r£r
->
sim∂e_keys
.
t›
; simple_key ++)

1072 i‡(
sim∂e_key
->
possibÀ


1073 && (
sim∂e_key
->
m¨k
.
löe
 < 
∑r£r
->mark.line

1074 || 
sim∂e_key
->
m¨k
.
ödex
+1024 < 
∑r£r
->mark.index)) {

1078 i‡(
sim∂e_key
->
ªquúed
) {

1079  
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
,

1080 "whûêsˇ¬ögá sim∂êkey", 
sim∂e_key
->
m¨k
,

1084 
sim∂e_key
->
possibÀ
 = 0;

1089 
	}
}

1097 
	$yaml_∑r£r_ßve_sim∂e_key
(
yaml_∑r£r_t
 *
∑r£r
)

1105 
ªquúed
 = (!
∑r£r
->
Êow_Àvñ


1106 && 
∑r£r
->
ödít
 =(Ì¨£r->
m¨k
.
cﬁumn
);

1113 
	`as£π
(
∑r£r
->
sim∂e_key_Ælowed
 || !
ªquúed
);

1119 i‡(
∑r£r
->
sim∂e_key_Ælowed
)

1121 
yaml_sim∂e_key_t
 
sim∂e_key
;

1122 
sim∂e_key
.
possibÀ
 = 1;

1123 
sim∂e_key
.
ªquúed
 =Ñequired;

1124 
sim∂e_key
.
tokí_numbî
 =

1125 
∑r£r
->
tokís_∑r£d
 + (∑r£r->
tokís
.
èû
 -Ö¨£r->tokís.
hód
);

1126 
sim∂e_key
.
m¨k
 = 
∑r£r
->mark;

1128 i‡(!
	`yaml_∑r£r_ªmove_sim∂e_key
(
∑r£r
))  0;

1130 *(
∑r£r
->
sim∂e_keys
.
t›
-1Ë
sim∂e_key
;

1134 
	}
}

1141 
	$yaml_∑r£r_ªmove_sim∂e_key
(
yaml_∑r£r_t
 *
∑r£r
)

1143 
yaml_sim∂e_key_t
 *
sim∂e_key
 = 
∑r£r
->
sim∂e_keys
.
t›
-1;

1145 i‡(
sim∂e_key
->
possibÀ
)

1149 i‡(
sim∂e_key
->
ªquúed
) {

1150  
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
,

1151 "whûêsˇ¬ögá sim∂êkey", 
sim∂e_key
->
m¨k
,

1158 
sim∂e_key
->
possibÀ
 = 0;

1161 
	}
}

1168 
	$yaml_∑r£r_ö¸ó£_Êow_Àvñ
(
yaml_∑r£r_t
 *
∑r£r
)

1170 
yaml_sim∂e_key_t
 
em±y_sim∂e_key
 = { 0, 0, 0, { 0, 0, 0 } };

1174 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
sim∂e_keys
, 
em±y_sim∂e_key
))

1179 
∑r£r
->
Êow_Àvñ
++;

1182 
	}
}

1189 
	$yaml_∑r£r_de¸ó£_Êow_Àvñ
(
yaml_∑r£r_t
 *
∑r£r
)

1191 
yaml_sim∂e_key_t
 
dummy_key
;

1193 i‡(
∑r£r
->
Êow_Àvñ
) {

1194 
∑r£r
->
Êow_Àvñ
 --;

1195 
dummy_key
 = 
	`POP
(
∑r£r
,Ö¨£r->
sim∂e_keys
);

1199 
	}
}

1209 
	$yaml_∑r£r_rﬁl_ödít
(
yaml_∑r£r_t
 *
∑r£r
, 
cﬁumn
,

1210 
numbî
, 
yaml_tokí_ty≥_t
 
ty≥
, 
yaml_m¨k_t
 
m¨k
)

1212 
yaml_tokí_t
 
tokí
;

1216 i‡(
∑r£r
->
Êow_Àvñ
)

1219 i‡(
∑r£r
->
ödít
 < 
cﬁumn
)

1226 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
ödíts
,Ö¨£r->
ödít
))

1229 
∑r£r
->
ödít
 = 
cﬁumn
;

1233 
	`TOKEN_INIT
(
tokí
, 
ty≥
, 
m¨k
, mark);

1235 i‡(
numbî
 == -1) {

1236 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
))

1240 i‡(!
	`QUEUE_INSERT
(
∑r£r
,

1241 
∑r£r
->
tokís
, 
numbî
 -Ö¨£r->
tokís_∑r£d
, 
tokí
))

1247 
	}
}

1257 
	$yaml_∑r£r_uƒﬁl_ödít
(
yaml_∑r£r_t
 *
∑r£r
, 
cﬁumn
)

1259 
yaml_tokí_t
 
tokí
;

1263 i‡(
∑r£r
->
Êow_Àvñ
)

1268 
∑r£r
->
ödít
 > 
cﬁumn
)

1272 
	`TOKEN_INIT
(
tokí
, 
YAML_BLOCK_END_TOKEN
, 
∑r£r
->
m¨k
,Öarser->mark);

1274 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
))

1279 
∑r£r
->
ödít
 = 
	`POP
’¨£r,Ö¨£r->
ödíts
);

1283 
	}
}

1290 
	$yaml_∑r£r_„tch_°ªam_°¨t
(
yaml_∑r£r_t
 *
∑r£r
)

1292 
yaml_sim∂e_key_t
 
sim∂e_key
 = { 0, 0, 0, { 0, 0, 0 } };

1293 
yaml_tokí_t
 
tokí
;

1297 
∑r£r
->
ödít
 = -1;

1301 i‡(!
	`PUSH
(
∑r£r
,Ö¨£r->
sim∂e_keys
, 
sim∂e_key
))

1306 
∑r£r
->
sim∂e_key_Ælowed
 = 1;

1310 
∑r£r
->
°ªam_°¨t_¥odu˚d
 = 1;

1314 
	`STREAM_START_TOKEN_INIT
(
tokí
, 
∑r£r
->
ícodög
,

1315 
∑r£r
->
m¨k
,Öarser->mark);

1317 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
))

1321 
	}
}

1328 
	$yaml_∑r£r_„tch_°ªam_íd
(
yaml_∑r£r_t
 *
∑r£r
)

1330 
yaml_tokí_t
 
tokí
;

1334 i‡(
∑r£r
->
m¨k
.
cﬁumn
 != 0) {

1335 
∑r£r
->
m¨k
.
cﬁumn
 = 0;

1336 
∑r£r
->
m¨k
.
löe
 ++;

1341 i‡(!
	`yaml_∑r£r_uƒﬁl_ödít
(
∑r£r
, -1))

1346 i‡(!
	`yaml_∑r£r_ªmove_sim∂e_key
(
∑r£r
))

1349 
∑r£r
->
sim∂e_key_Ælowed
 = 0;

1353 
	`STREAM_END_TOKEN_INIT
(
tokí
, 
∑r£r
->
m¨k
,Öarser->mark);

1355 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
))

1359 
	}
}

1366 
	$yaml_∑r£r_„tch_dúe˘ive
(
yaml_∑r£r_t
 *
∑r£r
)

1368 
yaml_tokí_t
 
tokí
;

1372 i‡(!
	`yaml_∑r£r_uƒﬁl_ödít
(
∑r£r
, -1))

1377 i‡(!
	`yaml_∑r£r_ªmove_sim∂e_key
(
∑r£r
))

1380 
∑r£r
->
sim∂e_key_Ælowed
 = 0;

1384 i‡(!
	`yaml_∑r£r_sˇn_dúe˘ive
(
∑r£r
, &
tokí
))

1389 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
)) {

1390 
	`yaml_tokí_dñëe
(&
tokí
);

1395 
	}
}

1402 
	$yaml_∑r£r_„tch_documít_ödiˇt‹
(
yaml_∑r£r_t
 *
∑r£r
,

1403 
yaml_tokí_ty≥_t
 
ty≥
)

1405 
yaml_m¨k_t
 
°¨t_m¨k
, 
íd_m¨k
;

1406 
yaml_tokí_t
 
tokí
;

1410 i‡(!
	`yaml_∑r£r_uƒﬁl_ödít
(
∑r£r
, -1))

1415 i‡(!
	`yaml_∑r£r_ªmove_sim∂e_key
(
∑r£r
))

1418 
∑r£r
->
sim∂e_key_Ælowed
 = 0;

1422 
°¨t_m¨k
 = 
∑r£r
->
m¨k
;

1424 
	`SKIP
(
∑r£r
);

1425 
	`SKIP
(
∑r£r
);

1426 
	`SKIP
(
∑r£r
);

1428 
íd_m¨k
 = 
∑r£r
->
m¨k
;

1432 
	`TOKEN_INIT
(
tokí
, 
ty≥
, 
°¨t_m¨k
, 
íd_m¨k
);

1436 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
))

1440 
	}
}

1447 
	$yaml_∑r£r_„tch_Êow_cﬁÀ˘i⁄_°¨t
(
yaml_∑r£r_t
 *
∑r£r
,

1448 
yaml_tokí_ty≥_t
 
ty≥
)

1450 
yaml_m¨k_t
 
°¨t_m¨k
, 
íd_m¨k
;

1451 
yaml_tokí_t
 
tokí
;

1455 i‡(!
	`yaml_∑r£r_ßve_sim∂e_key
(
∑r£r
))

1460 i‡(!
	`yaml_∑r£r_ö¸ó£_Êow_Àvñ
(
∑r£r
))

1465 
∑r£r
->
sim∂e_key_Ælowed
 = 1;

1469 
°¨t_m¨k
 = 
∑r£r
->
m¨k
;

1470 
	`SKIP
(
∑r£r
);

1471 
íd_m¨k
 = 
∑r£r
->
m¨k
;

1475 
	`TOKEN_INIT
(
tokí
, 
ty≥
, 
°¨t_m¨k
, 
íd_m¨k
);

1479 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
))

1483 
	}
}

1490 
	$yaml_∑r£r_„tch_Êow_cﬁÀ˘i⁄_íd
(
yaml_∑r£r_t
 *
∑r£r
,

1491 
yaml_tokí_ty≥_t
 
ty≥
)

1493 
yaml_m¨k_t
 
°¨t_m¨k
, 
íd_m¨k
;

1494 
yaml_tokí_t
 
tokí
;

1498 i‡(!
	`yaml_∑r£r_ªmove_sim∂e_key
(
∑r£r
))

1503 i‡(!
	`yaml_∑r£r_de¸ó£_Êow_Àvñ
(
∑r£r
))

1508 
∑r£r
->
sim∂e_key_Ælowed
 = 0;

1512 
°¨t_m¨k
 = 
∑r£r
->
m¨k
;

1513 
	`SKIP
(
∑r£r
);

1514 
íd_m¨k
 = 
∑r£r
->
m¨k
;

1518 
	`TOKEN_INIT
(
tokí
, 
ty≥
, 
°¨t_m¨k
, 
íd_m¨k
);

1522 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
))

1526 
	}
}

1533 
	$yaml_∑r£r_„tch_Êow_íåy
(
yaml_∑r£r_t
 *
∑r£r
)

1535 
yaml_m¨k_t
 
°¨t_m¨k
, 
íd_m¨k
;

1536 
yaml_tokí_t
 
tokí
;

1540 i‡(!
	`yaml_∑r£r_ªmove_sim∂e_key
(
∑r£r
))

1545 
∑r£r
->
sim∂e_key_Ælowed
 = 1;

1549 
°¨t_m¨k
 = 
∑r£r
->
m¨k
;

1550 
	`SKIP
(
∑r£r
);

1551 
íd_m¨k
 = 
∑r£r
->
m¨k
;

1555 
	`TOKEN_INIT
(
tokí
, 
YAML_FLOW_ENTRY_TOKEN
, 
°¨t_m¨k
, 
íd_m¨k
);

1557 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
))

1561 
	}
}

1568 
	$yaml_∑r£r_„tch_block_íåy
(
yaml_∑r£r_t
 *
∑r£r
)

1570 
yaml_m¨k_t
 
°¨t_m¨k
, 
íd_m¨k
;

1571 
yaml_tokí_t
 
tokí
;

1575 i‡(!
∑r£r
->
Êow_Àvñ
)

1579 i‡(!
∑r£r
->
sim∂e_key_Ælowed
) {

1580  
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, 
NULL
,Ö¨£r->
m¨k
,

1586 i‡(!
	`yaml_∑r£r_rﬁl_ödít
(
∑r£r
,Ö¨£r->
m¨k
.
cﬁumn
, -1,

1587 
YAML_BLOCK_SEQUENCE_START_TOKEN
, 
∑r£r
->
m¨k
))

1601 i‡(!
	`yaml_∑r£r_ªmove_sim∂e_key
(
∑r£r
))

1606 
∑r£r
->
sim∂e_key_Ælowed
 = 1;

1610 
°¨t_m¨k
 = 
∑r£r
->
m¨k
;

1611 
	`SKIP
(
∑r£r
);

1612 
íd_m¨k
 = 
∑r£r
->
m¨k
;

1616 
	`TOKEN_INIT
(
tokí
, 
YAML_BLOCK_ENTRY_TOKEN
, 
°¨t_m¨k
, 
íd_m¨k
);

1618 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
))

1622 
	}
}

1629 
	$yaml_∑r£r_„tch_key
(
yaml_∑r£r_t
 *
∑r£r
)

1631 
yaml_m¨k_t
 
°¨t_m¨k
, 
íd_m¨k
;

1632 
yaml_tokí_t
 
tokí
;

1636 i‡(!
∑r£r
->
Êow_Àvñ
)

1640 i‡(!
∑r£r
->
sim∂e_key_Ælowed
) {

1641  
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, 
NULL
,Ö¨£r->
m¨k
,

1647 i‡(!
	`yaml_∑r£r_rﬁl_ödít
(
∑r£r
,Ö¨£r->
m¨k
.
cﬁumn
, -1,

1648 
YAML_BLOCK_MAPPING_START_TOKEN
, 
∑r£r
->
m¨k
))

1654 i‡(!
	`yaml_∑r£r_ªmove_sim∂e_key
(
∑r£r
))

1659 
∑r£r
->
sim∂e_key_Ælowed
 = (!∑r£r->
Êow_Àvñ
);

1663 
°¨t_m¨k
 = 
∑r£r
->
m¨k
;

1664 
	`SKIP
(
∑r£r
);

1665 
íd_m¨k
 = 
∑r£r
->
m¨k
;

1669 
	`TOKEN_INIT
(
tokí
, 
YAML_KEY_TOKEN
, 
°¨t_m¨k
, 
íd_m¨k
);

1671 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
))

1675 
	}
}

1682 
	$yaml_∑r£r_„tch_vÆue
(
yaml_∑r£r_t
 *
∑r£r
)

1684 
yaml_m¨k_t
 
°¨t_m¨k
, 
íd_m¨k
;

1685 
yaml_tokí_t
 
tokí
;

1686 
yaml_sim∂e_key_t
 *
sim∂e_key
 = 
∑r£r
->
sim∂e_keys
.
t›
-1;

1690 i‡(
sim∂e_key
->
possibÀ
)

1695 
	`TOKEN_INIT
(
tokí
, 
YAML_KEY_TOKEN
, 
sim∂e_key
->
m¨k
, simple_key->mark);

1697 i‡(!
	`QUEUE_INSERT
(
∑r£r
,Ö¨£r->
tokís
,

1698 
sim∂e_key
->
tokí_numbî
 - 
∑r£r
->
tokís_∑r£d
, 
tokí
))

1703 i‡(!
	`yaml_∑r£r_rﬁl_ödít
(
∑r£r
, 
sim∂e_key
->
m¨k
.
cﬁumn
,

1704 
sim∂e_key
->
tokí_numbî
,

1705 
YAML_BLOCK_MAPPING_START_TOKEN
, 
sim∂e_key
->
m¨k
))

1710 
sim∂e_key
->
possibÀ
 = 0;

1714 
∑r£r
->
sim∂e_key_Ælowed
 = 0;

1722 i‡(!
∑r£r
->
Êow_Àvñ
)

1726 i‡(!
∑r£r
->
sim∂e_key_Ælowed
) {

1727  
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, 
NULL
,Ö¨£r->
m¨k
,

1733 i‡(!
	`yaml_∑r£r_rﬁl_ödít
(
∑r£r
,Ö¨£r->
m¨k
.
cﬁumn
, -1,

1734 
YAML_BLOCK_MAPPING_START_TOKEN
, 
∑r£r
->
m¨k
))

1740 
∑r£r
->
sim∂e_key_Ælowed
 = (!∑r£r->
Êow_Àvñ
);

1745 
°¨t_m¨k
 = 
∑r£r
->
m¨k
;

1746 
	`SKIP
(
∑r£r
);

1747 
íd_m¨k
 = 
∑r£r
->
m¨k
;

1751 
	`TOKEN_INIT
(
tokí
, 
YAML_VALUE_TOKEN
, 
°¨t_m¨k
, 
íd_m¨k
);

1753 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
))

1757 
	}
}

1764 
	$yaml_∑r£r_„tch_™ch‹
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_ty≥_t
 
ty≥
)

1766 
yaml_tokí_t
 
tokí
;

1770 i‡(!
	`yaml_∑r£r_ßve_sim∂e_key
(
∑r£r
))

1775 
∑r£r
->
sim∂e_key_Ælowed
 = 0;

1779 i‡(!
	`yaml_∑r£r_sˇn_™ch‹
(
∑r£r
, &
tokí
, 
ty≥
))

1782 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
)) {

1783 
	`yaml_tokí_dñëe
(&
tokí
);

1787 
	}
}

1794 
	$yaml_∑r£r_„tch_èg
(
yaml_∑r£r_t
 *
∑r£r
)

1796 
yaml_tokí_t
 
tokí
;

1800 i‡(!
	`yaml_∑r£r_ßve_sim∂e_key
(
∑r£r
))

1805 
∑r£r
->
sim∂e_key_Ælowed
 = 0;

1809 i‡(!
	`yaml_∑r£r_sˇn_èg
(
∑r£r
, &
tokí
))

1812 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
)) {

1813 
	`yaml_tokí_dñëe
(&
tokí
);

1818 
	}
}

1825 
	$yaml_∑r£r_„tch_block_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
, 
lôîÆ
)

1827 
yaml_tokí_t
 
tokí
;

1831 i‡(!
	`yaml_∑r£r_ªmove_sim∂e_key
(
∑r£r
))

1836 
∑r£r
->
sim∂e_key_Ælowed
 = 1;

1840 i‡(!
	`yaml_∑r£r_sˇn_block_sˇœr
(
∑r£r
, &
tokí
, 
lôîÆ
))

1843 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
)) {

1844 
	`yaml_tokí_dñëe
(&
tokí
);

1849 
	}
}

1856 
	$yaml_∑r£r_„tch_Êow_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
, 
sögÀ
)

1858 
yaml_tokí_t
 
tokí
;

1862 i‡(!
	`yaml_∑r£r_ßve_sim∂e_key
(
∑r£r
))

1867 
∑r£r
->
sim∂e_key_Ælowed
 = 0;

1871 i‡(!
	`yaml_∑r£r_sˇn_Êow_sˇœr
(
∑r£r
, &
tokí
, 
sögÀ
))

1874 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
)) {

1875 
	`yaml_tokí_dñëe
(&
tokí
);

1880 
	}
}

1887 
	$yaml_∑r£r_„tch_∂aö_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
)

1889 
yaml_tokí_t
 
tokí
;

1893 i‡(!
	`yaml_∑r£r_ßve_sim∂e_key
(
∑r£r
))

1898 
∑r£r
->
sim∂e_key_Ælowed
 = 0;

1902 i‡(!
	`yaml_∑r£r_sˇn_∂aö_sˇœr
(
∑r£r
, &
tokí
))

1905 i‡(!
	`ENQUEUE
(
∑r£r
,Ö¨£r->
tokís
, 
tokí
)) {

1906 
	`yaml_tokí_dñëe
(&
tokí
);

1911 
	}
}

1918 
	$yaml_∑r£r_sˇn_to_√xt_tokí
(
yaml_∑r£r_t
 *
∑r£r
)

1926 i‡(!
	`CACHE
(
∑r£r
, 1))  0;

1928 i‡(
∑r£r
->
m¨k
.
cﬁumn
 =0 && 
	`IS_BOM
’¨£r->
buf„r
))

1929 
	`SKIP
(
∑r£r
);

1941 i‡(!
	`CACHE
(
∑r£r
, 1))  0;

1943 
	`CHECK
(
∑r£r
->
buf„r
,' ') ||

1944 ((
∑r£r
->
Êow_Àvñ
 || !∑r£r->
sim∂e_key_Ælowed
) &&

1945 
	`CHECK
(
∑r£r
->
buf„r
, '\t'))) {

1946 
	`SKIP
(
∑r£r
);

1947 i‡(!
	`CACHE
(
∑r£r
, 1))  0;

1952 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '#')) {

1953 !
	`IS_BREAKZ
(
∑r£r
->
buf„r
)) {

1954 
	`SKIP
(
∑r£r
);

1955 i‡(!
	`CACHE
(
∑r£r
, 1))  0;

1961 i‡(
	`IS_BREAK
(
∑r£r
->
buf„r
))

1963 i‡(!
	`CACHE
(
∑r£r
, 2))  0;

1964 
	`SKIP_LINE
(
∑r£r
);

1968 i‡(!
∑r£r
->
Êow_Àvñ
) {

1969 
∑r£r
->
sim∂e_key_Ælowed
 = 1;

1981 
	}
}

1994 
	$yaml_∑r£r_sˇn_dúe˘ive
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
)

1996 
yaml_m¨k_t
 
°¨t_m¨k
, 
íd_m¨k
;

1997 
yaml_ch¨_t
 *
«me
 = 
NULL
;

1998 
maj‹
, 
mö‹
;

1999 
yaml_ch¨_t
 *
h™dÀ
 = 
NULL
, *
¥efix
 = NULL;

2003 
°¨t_m¨k
 = 
∑r£r
->
m¨k
;

2005 
	`SKIP
(
∑r£r
);

2009 i‡(!
	`yaml_∑r£r_sˇn_dúe˘ive_«me
(
∑r£r
, 
°¨t_m¨k
, &
«me
))

2010 
îr‹
;

2014 i‡(
	`°rcmp
((*)
«me
, "YAML") == 0)

2018 i‡(!
	`yaml_∑r£r_sˇn_vîsi⁄_dúe˘ive_vÆue
(
∑r£r
, 
°¨t_m¨k
,

2019 &
maj‹
, &
mö‹
))

2020 
îr‹
;

2022 
íd_m¨k
 = 
∑r£r
->
m¨k
;

2026 
	`VERSION_DIRECTIVE_TOKEN_INIT
(*
tokí
, 
maj‹
, 
mö‹
,

2027 
°¨t_m¨k
, 
íd_m¨k
);

2032 i‡(
	`°rcmp
((*)
«me
, "TAG") == 0)

2036 i‡(!
	`yaml_∑r£r_sˇn_èg_dúe˘ive_vÆue
(
∑r£r
, 
°¨t_m¨k
,

2037 &
h™dÀ
, &
¥efix
))

2038 
îr‹
;

2040 
íd_m¨k
 = 
∑r£r
->
m¨k
;

2044 
	`TAG_DIRECTIVE_TOKEN_INIT
(*
tokí
, 
h™dÀ
, 
¥efix
,

2045 
°¨t_m¨k
, 
íd_m¨k
);

2052 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá directive",

2053 
°¨t_m¨k
, "found uknown directiveÇame");

2054 
îr‹
;

2059 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2061 
	`IS_BLANK
(
∑r£r
->
buf„r
)) {

2062 
	`SKIP
(
∑r£r
);

2063 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2066 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '#')) {

2067 !
	`IS_BREAKZ
(
∑r£r
->
buf„r
)) {

2068 
	`SKIP
(
∑r£r
);

2069 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2075 i‡(!
	`IS_BREAKZ
(
∑r£r
->
buf„r
)) {

2076 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá directive",

2077 
°¨t_m¨k
, "didÇot findÉxpected comment orÜine break");

2078 
îr‹
;

2083 i‡(
	`IS_BREAK
(
∑r£r
->
buf„r
)) {

2084 i‡(!
	`CACHE
(
∑r£r
, 2)Ë
îr‹
;

2085 
	`SKIP_LINE
(
∑r£r
);

2088 
	`yaml_‰ì
(
«me
);

2092 
îr‹
:

2093 
	`yaml_‰ì
(
¥efix
);

2094 
	`yaml_‰ì
(
h™dÀ
);

2095 
	`yaml_‰ì
(
«me
);

2097 
	}
}

2110 
	$yaml_∑r£r_sˇn_dúe˘ive_«me
(
yaml_∑r£r_t
 *
∑r£r
,

2111 
yaml_m¨k_t
 
°¨t_m¨k
, 
yaml_ch¨_t
 **
«me
)

2113 
yaml_°rög_t
 
°rög
 = 
NULL_STRING
;

2115 i‡(!
	`STRING_INIT
(
∑r£r
, 
°rög
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

2119 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2121 
	`IS_ALPHA
(
∑r£r
->
buf„r
))

2123 i‡(!
	`READ
(
∑r£r
, 
°rög
)Ë
îr‹
;

2124 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2129 i‡(
°rög
.
°¨t
 =°rög.
poöãr
) {

2130 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá directive",

2131 
°¨t_m¨k
, "couldÇot findÉxpected directiveÇame");

2132 
îr‹
;

2137 i‡(!
	`IS_BLANKZ
(
∑r£r
->
buf„r
)) {

2138 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá directive",

2139 
°¨t_m¨k
, "found unexpectedÇon-alphabetical character");

2140 
îr‹
;

2143 *
«me
 = 
°rög
.
°¨t
;

2147 
îr‹
:

2148 
	`STRING_DEL
(
∑r£r
, 
°rög
);

2150 
	}
}

2161 
	$yaml_∑r£r_sˇn_vîsi⁄_dúe˘ive_vÆue
(
yaml_∑r£r_t
 *
∑r£r
,

2162 
yaml_m¨k_t
 
°¨t_m¨k
, *
maj‹
, *
mö‹
)

2166 i‡(!
	`CACHE
(
∑r£r
, 1))  0;

2168 
	`IS_BLANK
(
∑r£r
->
buf„r
)) {

2169 
	`SKIP
(
∑r£r
);

2170 i‡(!
	`CACHE
(
∑r£r
, 1))  0;

2175 i‡(!
	`yaml_∑r£r_sˇn_vîsi⁄_dúe˘ive_numbî
(
∑r£r
, 
°¨t_m¨k
, 
maj‹
))

2180 i‡(!
	`CHECK
(
∑r£r
->
buf„r
, '.')) {

2181  
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá %YAML directive",

2182 
°¨t_m¨k
, "didÇot findÉxpected digit or '.' character");

2185 
	`SKIP
(
∑r£r
);

2189 i‡(!
	`yaml_∑r£r_sˇn_vîsi⁄_dúe˘ive_numbî
(
∑r£r
, 
°¨t_m¨k
, 
mö‹
))

2193 
	}
}

2195 
	#MAX_NUMBER_LENGTH
 9

	)

2208 
	$yaml_∑r£r_sˇn_vîsi⁄_dúe˘ive_numbî
(
yaml_∑r£r_t
 *
∑r£r
,

2209 
yaml_m¨k_t
 
°¨t_m¨k
, *
numbî
)

2211 
vÆue
 = 0;

2212 
size_t
 
Àngth
 = 0;

2216 i‡(!
	`CACHE
(
∑r£r
, 1))  0;

2218 
	`IS_DIGIT
(
∑r£r
->
buf„r
))

2222 i‡(++
Àngth
 > 
MAX_NUMBER_LENGTH
) {

2223  
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá %YAML directive",

2224 
°¨t_m¨k
, "foundÉxtremelyÜong versionÇumber");

2227 
vÆue
 = vÆue*10 + 
	`AS_DIGIT
(
∑r£r
->
buf„r
);

2229 
	`SKIP
(
∑r£r
);

2231 i‡(!
	`CACHE
(
∑r£r
, 1))  0;

2236 i‡(!
Àngth
) {

2237  
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá %YAML directive",

2238 
°¨t_m¨k
, "didÇot findÉxpected versionÇumber");

2241 *
numbî
 = 
vÆue
;

2244 
	}
}

2255 
	$yaml_∑r£r_sˇn_èg_dúe˘ive_vÆue
(
yaml_∑r£r_t
 *
∑r£r
,

2256 
yaml_m¨k_t
 
°¨t_m¨k
, 
yaml_ch¨_t
 **
h™dÀ
, yaml_ch¨_à**
¥efix
)

2258 
yaml_ch¨_t
 *
h™dÀ_vÆue
 = 
NULL
;

2259 
yaml_ch¨_t
 *
¥efix_vÆue
 = 
NULL
;

2263 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2265 
	`IS_BLANK
(
∑r£r
->
buf„r
)) {

2266 
	`SKIP
(
∑r£r
);

2267 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2272 i‡(!
	`yaml_∑r£r_sˇn_èg_h™dÀ
(
∑r£r
, 1, 
°¨t_m¨k
, &
h™dÀ_vÆue
))

2273 
îr‹
;

2277 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2279 i‡(!
	`IS_BLANK
(
∑r£r
->
buf„r
)) {

2280 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá %TAG directive",

2281 
°¨t_m¨k
, "didÇot findÉxpected whitespace");

2282 
îr‹
;

2287 
	`IS_BLANK
(
∑r£r
->
buf„r
)) {

2288 
	`SKIP
(
∑r£r
);

2289 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2294 i‡(!
	`yaml_∑r£r_sˇn_èg_uri
(
∑r£r
, 1, 
NULL
, 
°¨t_m¨k
, &
¥efix_vÆue
))

2295 
îr‹
;

2299 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2301 i‡(!
	`IS_BLANKZ
(
∑r£r
->
buf„r
)) {

2302 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá %TAG directive",

2303 
°¨t_m¨k
, "didÇot findÉxpected whitespace orÜine break");

2304 
îr‹
;

2307 *
h™dÀ
 = 
h™dÀ_vÆue
;

2308 *
¥efix
 = 
¥efix_vÆue
;

2312 
îr‹
:

2313 
	`yaml_‰ì
(
h™dÀ_vÆue
);

2314 
	`yaml_‰ì
(
¥efix_vÆue
);

2316 
	}
}

2319 
	$yaml_∑r£r_sˇn_™ch‹
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
,

2320 
yaml_tokí_ty≥_t
 
ty≥
)

2322 
Àngth
 = 0;

2323 
yaml_m¨k_t
 
°¨t_m¨k
, 
íd_m¨k
;

2324 
yaml_°rög_t
 
°rög
 = 
NULL_STRING
;

2326 i‡(!
	`STRING_INIT
(
∑r£r
, 
°rög
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

2330 
°¨t_m¨k
 = 
∑r£r
->
m¨k
;

2332 
	`SKIP
(
∑r£r
);

2336 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2338 
	`IS_ALPHA
(
∑r£r
->
buf„r
)) {

2339 i‡(!
	`READ
(
∑r£r
, 
°rög
)Ë
îr‹
;

2340 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2341 
Àngth
 ++;

2344 
íd_m¨k
 = 
∑r£r
->
m¨k
;

2353 i‡(!
Àngth
 || !(
	`IS_BLANKZ
(
∑r£r
->
buf„r
Ë|| 
	`CHECK
(parser->buffer, '?')

2354 || 
	`CHECK
(
∑r£r
->
buf„r
, ':') || CHECK(parser->buffer, ',')

2355 || 
	`CHECK
(
∑r£r
->
buf„r
, ']') || CHECK(parser->buffer, '}')

2356 || 
	`CHECK
(
∑r£r
->
buf„r
, '%') || CHECK(parser->buffer, '@')

2357 || 
	`CHECK
(
∑r£r
->
buf„r
, '`'))) {

2358 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, 
ty≥
 =
YAML_ANCHOR_TOKEN
 ?

2359 "whûêsˇ¬ögá¿™ch‹" : "whûêsˇ¬ögá¿Æüs", 
°¨t_m¨k
,

2361 
îr‹
;

2366 i‡(
ty≥
 =
YAML_ANCHOR_TOKEN
) {

2367 
	`ANCHOR_TOKEN_INIT
(*
tokí
, 
°rög
.
°¨t
, 
°¨t_m¨k
, 
íd_m¨k
);

2370 
	`ALIAS_TOKEN_INIT
(*
tokí
, 
°rög
.
°¨t
, 
°¨t_m¨k
, 
íd_m¨k
);

2375 
îr‹
:

2376 
	`STRING_DEL
(
∑r£r
, 
°rög
);

2378 
	}
}

2385 
	$yaml_∑r£r_sˇn_èg
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
)

2387 
yaml_ch¨_t
 *
h™dÀ
 = 
NULL
;

2388 
yaml_ch¨_t
 *
suffix
 = 
NULL
;

2389 
yaml_m¨k_t
 
°¨t_m¨k
, 
íd_m¨k
;

2391 
°¨t_m¨k
 = 
∑r£r
->
m¨k
;

2395 i‡(!
	`CACHE
(
∑r£r
, 2)Ë
îr‹
;

2397 i‡(
	`CHECK_AT
(
∑r£r
->
buf„r
, '<', 1))

2401 
h™dÀ
 = 
	`yaml_mÆloc
(1);

2402 i‡(!
h™dÀ
Ë
îr‹
;

2403 
h™dÀ
[0] = '\0';

2407 
	`SKIP
(
∑r£r
);

2408 
	`SKIP
(
∑r£r
);

2412 i‡(!
	`yaml_∑r£r_sˇn_èg_uri
(
∑r£r
, 0, 
NULL
, 
°¨t_m¨k
, &
suffix
))

2413 
îr‹
;

2417 i‡(!
	`CHECK
(
∑r£r
->
buf„r
, '>')) {

2418 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningáÅag",

2419 
°¨t_m¨k
, "didÇot findÅheÉxpected '>'");

2420 
îr‹
;

2423 
	`SKIP
(
∑r£r
);

2431 i‡(!
	`yaml_∑r£r_sˇn_èg_h™dÀ
(
∑r£r
, 0, 
°¨t_m¨k
, &
h™dÀ
))

2432 
îr‹
;

2436 i‡(
h™dÀ
[0] ='!' && h™dÀ[1] !'\0' && h™dÀ[
	`°æí
((*)handle)-1] == '!')

2440 i‡(!
	`yaml_∑r£r_sˇn_èg_uri
(
∑r£r
, 0, 
NULL
, 
°¨t_m¨k
, &
suffix
))

2441 
îr‹
;

2447 i‡(!
	`yaml_∑r£r_sˇn_èg_uri
(
∑r£r
, 0, 
h™dÀ
, 
°¨t_m¨k
, &
suffix
))

2448 
îr‹
;

2452 
	`yaml_‰ì
(
h™dÀ
);

2453 
h™dÀ
 = 
	`yaml_mÆloc
(2);

2454 i‡(!
h™dÀ
Ë
îr‹
;

2455 
h™dÀ
[0] = '!';

2456 
h™dÀ
[1] = '\0';

2463 i‡(
suffix
[0] == '\0') {

2464 
yaml_ch¨_t
 *
tmp
 = 
h™dÀ
;

2465 
h™dÀ
 = 
suffix
;

2466 
suffix
 = 
tmp
;

2473 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2475 i‡(!
	`IS_BLANKZ
(
∑r£r
->
buf„r
)) {

2476 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningáÅag",

2477 
°¨t_m¨k
, "didÇot findÉxpected whitespace orÜine break");

2478 
îr‹
;

2481 
íd_m¨k
 = 
∑r£r
->
m¨k
;

2485 
	`TAG_TOKEN_INIT
(*
tokí
, 
h™dÀ
, 
suffix
, 
°¨t_m¨k
, 
íd_m¨k
);

2489 
îr‹
:

2490 
	`yaml_‰ì
(
h™dÀ
);

2491 
	`yaml_‰ì
(
suffix
);

2493 
	}
}

2500 
	$yaml_∑r£r_sˇn_èg_h™dÀ
(
yaml_∑r£r_t
 *
∑r£r
, 
dúe˘ive
,

2501 
yaml_m¨k_t
 
°¨t_m¨k
, 
yaml_ch¨_t
 **
h™dÀ
)

2503 
yaml_°rög_t
 
°rög
 = 
NULL_STRING
;

2505 i‡(!
	`STRING_INIT
(
∑r£r
, 
°rög
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

2509 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2511 i‡(!
	`CHECK
(
∑r£r
->
buf„r
, '!')) {

2512 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, 
dúe˘ive
 ?

2514 
°¨t_m¨k
, "didÇot findÉxpected '!'");

2515 
îr‹
;

2520 i‡(!
	`READ
(
∑r£r
, 
°rög
)Ë
îr‹
;

2524 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2526 
	`IS_ALPHA
(
∑r£r
->
buf„r
))

2528 i‡(!
	`READ
(
∑r£r
, 
°rög
)Ë
îr‹
;

2529 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2534 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '!'))

2536 i‡(!
	`READ
(
∑r£r
, 
°rög
)Ë
îr‹
;

2546 i‡(
dúe˘ive
 && !(
°rög
.
°¨t
[0] == '!' && string.start[1] == '\0')) {

2547 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "whileÖarsingáÅag directive",

2548 
°¨t_m¨k
, "didÇot findÉxpected '!'");

2549 
îr‹
;

2553 *
h™dÀ
 = 
°rög
.
°¨t
;

2557 
îr‹
:

2558 
	`STRING_DEL
(
∑r£r
, 
°rög
);

2560 
	}
}

2567 
	$yaml_∑r£r_sˇn_èg_uri
(
yaml_∑r£r_t
 *
∑r£r
, 
dúe˘ive
,

2568 
yaml_ch¨_t
 *
hód
, 
yaml_m¨k_t
 
°¨t_m¨k
, yaml_ch¨_à**
uri
)

2570 
size_t
 
Àngth
 = 
hód
 ? 
	`°æí
((*)head) : 0;

2571 
yaml_°rög_t
 
°rög
 = 
NULL_STRING
;

2573 i‡(!
	`STRING_INIT
(
∑r£r
, 
°rög
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

2577 
°rög
.
íd
 - såög.
°¨t
 <()
Àngth
) {

2578 i‡(!
	`yaml_°rög_exãnd
(&
°rög
.
°¨t
, &°rög.
poöãr
, &°rög.
íd
)) {

2579 
∑r£r
->
îr‹
 = 
YAML_MEMORY_ERROR
;

2580 
îr‹
;

2590 i‡(
Àngth
 > 1) {

2591 
	`mem˝y
(
°rög
.
°¨t
, 
hód
+1, 
Àngth
-1);

2592 
°rög
.
poöãr
 +
Àngth
-1;

2597 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2607 
	`IS_ALPHA
(
∑r£r
->
buf„r
Ë|| 
	`CHECK
(parser->buffer, ';')

2608 || 
	`CHECK
(
∑r£r
->
buf„r
, '/') || CHECK(parser->buffer, '?')

2609 || 
	`CHECK
(
∑r£r
->
buf„r
, ':') || CHECK(parser->buffer, '@')

2610 || 
	`CHECK
(
∑r£r
->
buf„r
, '&') || CHECK(parser->buffer, '=')

2611 || 
	`CHECK
(
∑r£r
->
buf„r
, '+') || CHECK(parser->buffer, '$')

2612 || 
	`CHECK
(
∑r£r
->
buf„r
, ',') || CHECK(parser->buffer, '.')

2613 || 
	`CHECK
(
∑r£r
->
buf„r
, '!') || CHECK(parser->buffer, '~')

2614 || 
	`CHECK
(
∑r£r
->
buf„r
, '*') || CHECK(parser->buffer, '\'')

2615 || 
	`CHECK
(
∑r£r
->
buf„r
, '(') || CHECK(parser->buffer, ')')

2616 || 
	`CHECK
(
∑r£r
->
buf„r
, '[') || CHECK(parser->buffer, ']')

2617 || 
	`CHECK
(
∑r£r
->
buf„r
, '%'))

2621 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '%')) {

2622 i‡(!
	`yaml_∑r£r_sˇn_uri_esˇ≥s
(
∑r£r
,

2623 
dúe˘ive
, 
°¨t_m¨k
, &
°rög
)Ë
îr‹
;

2626 i‡(!
	`READ
(
∑r£r
, 
°rög
)Ë
îr‹
;

2629 
Àngth
 ++;

2630 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2635 i‡(!
Àngth
) {

2636 i‡(!
	`STRING_EXTEND
(
∑r£r
, 
°rög
))

2637 
îr‹
;

2639 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, 
dúe˘ive
 ?

2641 
°¨t_m¨k
, "didÇot findÉxpectedÅag URI");

2642 
îr‹
;

2645 *
uri
 = 
°rög
.
°¨t
;

2649 
îr‹
:

2650 
	`STRING_DEL
(
∑r£r
, 
°rög
);

2652 
	}
}

2659 
	$yaml_∑r£r_sˇn_uri_esˇ≥s
(
yaml_∑r£r_t
 *
∑r£r
, 
dúe˘ive
,

2660 
yaml_m¨k_t
 
°¨t_m¨k
, 
yaml_°rög_t
 *
°rög
)

2662 
width
 = 0;

2668 
o˘ë
 = 0;

2672 i‡(!
	`CACHE
(
∑r£r
, 3))  0;

2674 i‡(!(
	`CHECK
(
∑r£r
->
buf„r
, '%')

2675 && 
	`IS_HEX_AT
(
∑r£r
->
buf„r
, 1)

2676 && 
	`IS_HEX_AT
(
∑r£r
->
buf„r
, 2))) {

2677  
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, 
dúe˘ive
 ?

2679 
°¨t_m¨k
, "didÇot find URIÉscaped octet");

2684 
o˘ë
 = (
	`AS_HEX_AT
(
∑r£r
->
buf„r
, 1) << 4) + AS_HEX_AT(parser->buffer, 2);

2688 i‡(!
width
)

2690 
width
 = (
o˘ë
 & 0x80) == 0x00 ? 1 :

2691 (
o˘ë
 & 0xE0) == 0xC0 ? 2 :

2692 (
o˘ë
 & 0xF0) == 0xE0 ? 3 :

2693 (
o˘ë
 & 0xF8) == 0xF0 ? 4 : 0;

2694 i‡(!
width
) {

2695  
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, 
dúe˘ive
 ?

2697 
°¨t_m¨k
, "foundán incorrectÜeading UTF-8 octet");

2704 i‡((
o˘ë
 & 0xC0) != 0x80) {

2705  
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, 
dúe˘ive
 ?

2707 
°¨t_m¨k
, "foundán incorrectÅrailing UTF-8 octet");

2713 *(
°rög
->
poöãr
++Ë
o˘ë
;

2714 
	`SKIP
(
∑r£r
);

2715 
	`SKIP
(
∑r£r
);

2716 
	`SKIP
(
∑r£r
);

2718 } --
width
);

2721 
	}
}

2728 
	$yaml_∑r£r_sˇn_block_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
,

2729 
lôîÆ
)

2731 
yaml_m¨k_t
 
°¨t_m¨k
;

2732 
yaml_m¨k_t
 
íd_m¨k
;

2733 
yaml_°rög_t
 
°rög
 = 
NULL_STRING
;

2734 
yaml_°rög_t
 
Àadög_bªak
 = 
NULL_STRING
;

2735 
yaml_°rög_t
 
åaûög_bªaks
 = 
NULL_STRING
;

2736 
chompög
 = 0;

2737 
ö¸emít
 = 0;

2738 
ödít
 = 0;

2739 
Àadög_bœnk
 = 0;

2740 
åaûög_bœnk
 = 0;

2742 i‡(!
	`STRING_INIT
(
∑r£r
, 
°rög
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

2743 i‡(!
	`STRING_INIT
(
∑r£r
, 
Àadög_bªak
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

2744 i‡(!
	`STRING_INIT
(
∑r£r
, 
åaûög_bªaks
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

2748 
°¨t_m¨k
 = 
∑r£r
->
m¨k
;

2750 
	`SKIP
(
∑r£r
);

2754 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2758 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '+') || CHECK(parser->buffer, '-'))

2762 
chompög
 = 
	`CHECK
(
∑r£r
->
buf„r
, '+') ? +1 : -1;

2764 
	`SKIP
(
∑r£r
);

2768 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2770 i‡(
	`IS_DIGIT
(
∑r£r
->
buf„r
))

2774 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '0')) {

2775 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá block scalar",

2776 
°¨t_m¨k
, "foundán intendation indicatorÉqualÅo 0");

2777 
îr‹
;

2782 
ö¸emít
 = 
	`AS_DIGIT
(
∑r£r
->
buf„r
);

2784 
	`SKIP
(
∑r£r
);

2790 i‡(
	`IS_DIGIT
(
∑r£r
->
buf„r
))

2792 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '0')) {

2793 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá block scalar",

2794 
°¨t_m¨k
, "foundán intendation indicatorÉqualÅo 0");

2795 
îr‹
;

2798 
ö¸emít
 = 
	`AS_DIGIT
(
∑r£r
->
buf„r
);

2800 
	`SKIP
(
∑r£r
);

2802 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2804 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '+') || CHECK(parser->buffer, '-')) {

2805 
chompög
 = 
	`CHECK
(
∑r£r
->
buf„r
, '+') ? +1 : -1;

2807 
	`SKIP
(
∑r£r
);

2813 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2815 
	`IS_BLANK
(
∑r£r
->
buf„r
)) {

2816 
	`SKIP
(
∑r£r
);

2817 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2820 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '#')) {

2821 !
	`IS_BREAKZ
(
∑r£r
->
buf„r
)) {

2822 
	`SKIP
(
∑r£r
);

2823 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2829 i‡(!
	`IS_BREAKZ
(
∑r£r
->
buf„r
)) {

2830 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá block scalar",

2831 
°¨t_m¨k
, "didÇot findÉxpected comment orÜine break");

2832 
îr‹
;

2837 i‡(
	`IS_BREAK
(
∑r£r
->
buf„r
)) {

2838 i‡(!
	`CACHE
(
∑r£r
, 2)Ë
îr‹
;

2839 
	`SKIP_LINE
(
∑r£r
);

2842 
íd_m¨k
 = 
∑r£r
->
m¨k
;

2846 i‡(
ö¸emít
) {

2847 
ödít
 = 
∑r£r
->ödíà>0 ?Ö¨£r->ödít+
ö¸emít
 : increment;

2852 i‡(!
	`yaml_∑r£r_sˇn_block_sˇœr_bªaks
(
∑r£r
, &
ödít
, &
åaûög_bªaks
,

2853 
°¨t_m¨k
, &
íd_m¨k
)Ë
îr‹
;

2857 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2859 ()
∑r£r
->
m¨k
.
cﬁumn
 =
ödít
 && !
	`IS_Z
’¨£r->
buf„r
))

2867 
åaûög_bœnk
 = 
	`IS_BLANK
(
∑r£r
->
buf„r
);

2871 i‡(!
lôîÆ
 && (*
Àadög_bªak
.
°¨t
 == '\n')

2872 && !
Àadög_bœnk
 && !
åaûög_bœnk
)

2876 i‡(*
åaûög_bªaks
.
°¨t
 == '\0') {

2877 i‡(!
	`STRING_EXTEND
(
∑r£r
, 
°rög
)Ë
îr‹
;

2878 *(
°rög
.
poöãr
 ++) = ' ';

2881 
	`CLEAR
(
∑r£r
, 
Àadög_bªak
);

2884 i‡(!
	`JOIN
(
∑r£r
, 
°rög
, 
Àadög_bªak
)Ë
îr‹
;

2885 
	`CLEAR
(
∑r£r
, 
Àadög_bªak
);

2890 i‡(!
	`JOIN
(
∑r£r
, 
°rög
, 
åaûög_bªaks
)Ë
îr‹
;

2891 
	`CLEAR
(
∑r£r
, 
åaûög_bªaks
);

2895 
Àadög_bœnk
 = 
	`IS_BLANK
(
∑r£r
->
buf„r
);

2899 !
	`IS_BREAKZ
(
∑r£r
->
buf„r
)) {

2900 i‡(!
	`READ
(
∑r£r
, 
°rög
)Ë
îr‹
;

2901 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

2906 i‡(!
	`CACHE
(
∑r£r
, 2)Ë
îr‹
;

2908 i‡(!
	`READ_LINE
(
∑r£r
, 
Àadög_bªak
)Ë
îr‹
;

2912 i‡(!
	`yaml_∑r£r_sˇn_block_sˇœr_bªaks
(
∑r£r
,

2913 &
ödít
, &
åaûög_bªaks
, 
°¨t_m¨k
, &
íd_m¨k
)Ë
îr‹
;

2918 i‡(
chompög
 != -1) {

2919 i‡(!
	`JOIN
(
∑r£r
, 
°rög
, 
Àadög_bªak
)Ë
îr‹
;

2921 i‡(
chompög
 == 1) {

2922 i‡(!
	`JOIN
(
∑r£r
, 
°rög
, 
åaûög_bªaks
)Ë
îr‹
;

2927 
	`SCALAR_TOKEN_INIT
(*
tokí
, 
°rög
.
°¨t
, såög.
poöãr
-string.start,

2928 
lôîÆ
 ? 
YAML_LITERAL_SCALAR_STYLE
 : 
YAML_FOLDED_SCALAR_STYLE
,

2929 
°¨t_m¨k
, 
íd_m¨k
);

2931 
	`STRING_DEL
(
∑r£r
, 
Àadög_bªak
);

2932 
	`STRING_DEL
(
∑r£r
, 
åaûög_bªaks
);

2936 
îr‹
:

2937 
	`STRING_DEL
(
∑r£r
, 
°rög
);

2938 
	`STRING_DEL
(
∑r£r
, 
Àadög_bªak
);

2939 
	`STRING_DEL
(
∑r£r
, 
åaûög_bªaks
);

2942 
	}
}

2950 
	$yaml_∑r£r_sˇn_block_sˇœr_bªaks
(
yaml_∑r£r_t
 *
∑r£r
,

2951 *
ödít
, 
yaml_°rög_t
 *
bªaks
,

2952 
yaml_m¨k_t
 
°¨t_m¨k
, yaml_m¨k_à*
íd_m¨k
)

2954 
max_ödít
 = 0;

2956 *
íd_m¨k
 = 
∑r£r
->
m¨k
;

2964 i‡(!
	`CACHE
(
∑r£r
, 1))  0;

2966 (!*
ödít
 || ()
∑r£r
->
m¨k
.
cﬁumn
 < *indent)

2967 && 
	`IS_SPACE
(
∑r£r
->
buf„r
)) {

2968 
	`SKIP
(
∑r£r
);

2969 i‡(!
	`CACHE
(
∑r£r
, 1))  0;

2972 i‡(()
∑r£r
->
m¨k
.
cﬁumn
 > 
max_ödít
)

2973 
max_ödít
 = ()
∑r£r
->
m¨k
.
cﬁumn
;

2977 i‡((!*
ödít
 || ()
∑r£r
->
m¨k
.
cﬁumn
 < *indent)

2978 && 
	`IS_TAB
(
∑r£r
->
buf„r
)) {

2979  
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá block scalar",

2980 
°¨t_m¨k
, "foundáÅab character whereán intendation space isÉxpected");

2985 i‡(!
	`IS_BREAK
(
∑r£r
->
buf„r
)) ;

2989 i‡(!
	`CACHE
(
∑r£r
, 2))  0;

2990 i‡(!
	`READ_LINE
(
∑r£r
, *
bªaks
))  0;

2991 *
íd_m¨k
 = 
∑r£r
->
m¨k
;

2996 i‡(!*
ödít
) {

2997 *
ödít
 = 
max_ödít
;

2998 i‡(*
ödít
 < 
∑r£r
->indent + 1)

2999 *
ödít
 = 
∑r£r
->indent + 1;

3000 i‡(*
ödít
 < 1)

3001 *
ödít
 = 1;

3005 
	}
}

3012 
	$yaml_∑r£r_sˇn_Êow_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
,

3013 
sögÀ
)

3015 
yaml_m¨k_t
 
°¨t_m¨k
;

3016 
yaml_m¨k_t
 
íd_m¨k
;

3017 
yaml_°rög_t
 
°rög
 = 
NULL_STRING
;

3018 
yaml_°rög_t
 
Àadög_bªak
 = 
NULL_STRING
;

3019 
yaml_°rög_t
 
åaûög_bªaks
 = 
NULL_STRING
;

3020 
yaml_°rög_t
 
whôe•a˚s
 = 
NULL_STRING
;

3021 
Àadög_bœnks
;

3023 i‡(!
	`STRING_INIT
(
∑r£r
, 
°rög
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

3024 i‡(!
	`STRING_INIT
(
∑r£r
, 
Àadög_bªak
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

3025 i‡(!
	`STRING_INIT
(
∑r£r
, 
åaûög_bªaks
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

3026 i‡(!
	`STRING_INIT
(
∑r£r
, 
whôe•a˚s
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

3030 
°¨t_m¨k
 = 
∑r£r
->
m¨k
;

3032 
	`SKIP
(
∑r£r
);

3040 i‡(!
	`CACHE
(
∑r£r
, 4)Ë
îr‹
;

3042 i‡(
∑r£r
->
m¨k
.
cﬁumn
 == 0 &&

3043 ((
	`CHECK_AT
(
∑r£r
->
buf„r
, '-', 0) &&

3044 
	`CHECK_AT
(
∑r£r
->
buf„r
, '-', 1) &&

3045 
	`CHECK_AT
(
∑r£r
->
buf„r
, '-', 2)) ||

3046 (
	`CHECK_AT
(
∑r£r
->
buf„r
, '.', 0) &&

3047 
	`CHECK_AT
(
∑r£r
->
buf„r
, '.', 1) &&

3048 
	`CHECK_AT
(
∑r£r
->
buf„r
, '.', 2))) &&

3049 
	`IS_BLANKZ_AT
(
∑r£r
->
buf„r
, 3))

3051 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá quoted scalar",

3052 
°¨t_m¨k
, "found unexpected document indicator");

3053 
îr‹
;

3058 i‡(
	`IS_Z
(
∑r£r
->
buf„r
)) {

3059 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningá quoted scalar",

3060 
°¨t_m¨k
, "found unexpectedÉnd of stream");

3061 
îr‹
;

3066 i‡(!
	`CACHE
(
∑r£r
, 2)Ë
îr‹
;

3068 
Àadög_bœnks
 = 0;

3070 !
	`IS_BLANKZ
(
∑r£r
->
buf„r
))

3074 i‡(
sögÀ
 && 
	`CHECK_AT
(
∑r£r
->
buf„r
, '\'', 0)

3075 && 
	`CHECK_AT
(
∑r£r
->
buf„r
, '\'', 1))

3077 i‡(!
	`STRING_EXTEND
(
∑r£r
, 
°rög
)Ë
îr‹
;

3078 *(
°rög
.
poöãr
++) = '\'';

3079 
	`SKIP
(
∑r£r
);

3080 
	`SKIP
(
∑r£r
);

3085 i‡(
	`CHECK
(
∑r£r
->
buf„r
, 
sögÀ
 ? '\'' : '"'))

3092 i‡(!
sögÀ
 && 
	`CHECK
(
∑r£r
->
buf„r
, '\\')

3093 && 
	`IS_BREAK_AT
(
∑r£r
->
buf„r
, 1))

3095 i‡(!
	`CACHE
(
∑r£r
, 3)Ë
îr‹
;

3096 
	`SKIP
(
∑r£r
);

3097 
	`SKIP_LINE
(
∑r£r
);

3098 
Àadög_bœnks
 = 1;

3104 i‡(!
sögÀ
 && 
	`CHECK
(
∑r£r
->
buf„r
, '\\'))

3106 
size_t
 
code_Àngth
 = 0;

3108 i‡(!
	`STRING_EXTEND
(
∑r£r
, 
°rög
)Ë
îr‹
;

3112 
∑r£r
->
buf„r
.
poöãr
[1])

3115 *(
°rög
.
poöãr
++) = '\0';

3119 *(
°rög
.
poöãr
++) = '\x07';

3123 *(
°rög
.
poöãr
++) = '\x08';

3128 *(
°rög
.
poöãr
++) = '\x09';

3132 *(
°rög
.
poöãr
++) = '\x0A';

3136 *(
°rög
.
poöãr
++) = '\x0B';

3140 *(
°rög
.
poöãr
++) = '\x0C';

3144 *(
°rög
.
poöãr
++) = '\x0D';

3148 *(
°rög
.
poöãr
++) = '\x1B';

3152 *(
°rög
.
poöãr
++) = '\x20';

3156 *(
°rög
.
poöãr
++) = '"';

3160 *(
°rög
.
poöãr
++) = '\'';

3164 *(
°rög
.
poöãr
++) = '\\';

3168 *(
°rög
.
poöãr
++) = '\xC2';

3169 *(
°rög
.
poöãr
++) = '\x85';

3173 *(
°rög
.
poöãr
++) = '\xC2';

3174 *(
°rög
.
poöãr
++) = '\xA0';

3178 *(
°rög
.
poöãr
++) = '\xE2';

3179 *(
°rög
.
poöãr
++) = '\x80';

3180 *(
°rög
.
poöãr
++) = '\xA8';

3184 *(
°rög
.
poöãr
++) = '\xE2';

3185 *(
°rög
.
poöãr
++) = '\x80';

3186 *(
°rög
.
poöãr
++) = '\xA9';

3190 
code_Àngth
 = 2;

3194 
code_Àngth
 = 4;

3198 
code_Àngth
 = 8;

3202 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "whileÖarsingá quoted scalar",

3203 
°¨t_m¨k
, "found unknownÉscape character");

3204 
îr‹
;

3207 
	`SKIP
(
∑r£r
);

3208 
	`SKIP
(
∑r£r
);

3212 i‡(
code_Àngth
)

3214 
vÆue
 = 0;

3215 
size_t
 
k
;

3219 i‡(!
	`CACHE
(
∑r£r
, 
code_Àngth
)Ë
îr‹
;

3221 
k
 = 0; k < 
code_Àngth
; k ++) {

3222 i‡(!
	`IS_HEX_AT
(
∑r£r
->
buf„r
, 
k
)) {

3223 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "whileÖarsingá quoted scalar",

3224 
°¨t_m¨k
, "didÇot findÉxpected hexdecimalÇumber");

3225 
îr‹
;

3227 
vÆue
 = (vÆuê<< 4Ë+ 
	`AS_HEX_AT
(
∑r£r
->
buf„r
, 
k
);

3232 i‡((
vÆue
 >= 0xD800 && value <= 0xDFFF) || value > 0x10FFFF) {

3233 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "whileÖarsingá quoted scalar",

3234 
°¨t_m¨k
, "found invalid Unicode characterÉscape code");

3235 
îr‹
;

3238 i‡(
vÆue
 <= 0x7F) {

3239 *(
°rög
.
poöãr
++Ë
vÆue
;

3241 i‡(
vÆue
 <= 0x7FF) {

3242 *(
°rög
.
poöãr
++Ë0xC0 + (
vÆue
 >> 6);

3243 *(
°rög
.
poöãr
++Ë0x80 + (
vÆue
 & 0x3F);

3245 i‡(
vÆue
 <= 0xFFFF) {

3246 *(
°rög
.
poöãr
++Ë0xE0 + (
vÆue
 >> 12);

3247 *(
°rög
.
poöãr
++Ë0x80 + ((
vÆue
 >> 6) & 0x3F);

3248 *(
°rög
.
poöãr
++Ë0x80 + (
vÆue
 & 0x3F);

3251 *(
°rög
.
poöãr
++Ë0xF0 + (
vÆue
 >> 18);

3252 *(
°rög
.
poöãr
++Ë0x80 + ((
vÆue
 >> 12) & 0x3F);

3253 *(
°rög
.
poöãr
++Ë0x80 + ((
vÆue
 >> 6) & 0x3F);

3254 *(
°rög
.
poöãr
++Ë0x80 + (
vÆue
 & 0x3F);

3259 
k
 = 0; k < 
code_Àngth
; k ++) {

3260 
	`SKIP
(
∑r£r
);

3269 i‡(!
	`READ
(
∑r£r
, 
°rög
)Ë
îr‹
;

3272 i‡(!
	`CACHE
(
∑r£r
, 2)Ë
îr‹
;

3277 i‡(
	`CHECK
(
∑r£r
->
buf„r
, 
sögÀ
 ? '\'' : '"'))

3282 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

3284 
	`IS_BLANK
(
∑r£r
->
buf„r
Ë|| 
	`IS_BREAK
(parser->buffer))

3286 i‡(
	`IS_BLANK
(
∑r£r
->
buf„r
))

3290 i‡(!
Àadög_bœnks
) {

3291 i‡(!
	`READ
(
∑r£r
, 
whôe•a˚s
)Ë
îr‹
;

3294 
	`SKIP
(
∑r£r
);

3299 i‡(!
	`CACHE
(
∑r£r
, 2)Ë
îr‹
;

3303 i‡(!
Àadög_bœnks
)

3305 
	`CLEAR
(
∑r£r
, 
whôe•a˚s
);

3306 i‡(!
	`READ_LINE
(
∑r£r
, 
Àadög_bªak
)Ë
îr‹
;

3307 
Àadög_bœnks
 = 1;

3311 i‡(!
	`READ_LINE
(
∑r£r
, 
åaûög_bªaks
)Ë
îr‹
;

3314 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

3319 i‡(
Àadög_bœnks
)

3323 i‡(
Àadög_bªak
.
°¨t
[0] == '\n') {

3324 i‡(
åaûög_bªaks
.
°¨t
[0] == '\0') {

3325 i‡(!
	`STRING_EXTEND
(
∑r£r
, 
°rög
)Ë
îr‹
;

3326 *(
°rög
.
poöãr
++) = ' ';

3329 i‡(!
	`JOIN
(
∑r£r
, 
°rög
, 
åaûög_bªaks
)Ë
îr‹
;

3330 
	`CLEAR
(
∑r£r
, 
åaûög_bªaks
);

3332 
	`CLEAR
(
∑r£r
, 
Àadög_bªak
);

3335 i‡(!
	`JOIN
(
∑r£r
, 
°rög
, 
Àadög_bªak
)Ë
îr‹
;

3336 i‡(!
	`JOIN
(
∑r£r
, 
°rög
, 
åaûög_bªaks
)Ë
îr‹
;

3337 
	`CLEAR
(
∑r£r
, 
Àadög_bªak
);

3338 
	`CLEAR
(
∑r£r
, 
åaûög_bªaks
);

3343 i‡(!
	`JOIN
(
∑r£r
, 
°rög
, 
whôe•a˚s
)Ë
îr‹
;

3344 
	`CLEAR
(
∑r£r
, 
whôe•a˚s
);

3350 
	`SKIP
(
∑r£r
);

3352 
íd_m¨k
 = 
∑r£r
->
m¨k
;

3356 
	`SCALAR_TOKEN_INIT
(*
tokí
, 
°rög
.
°¨t
, såög.
poöãr
-string.start,

3357 
sögÀ
 ? 
YAML_SINGLE_QUOTED_SCALAR_STYLE
 : 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
,

3358 
°¨t_m¨k
, 
íd_m¨k
);

3360 
	`STRING_DEL
(
∑r£r
, 
Àadög_bªak
);

3361 
	`STRING_DEL
(
∑r£r
, 
åaûög_bªaks
);

3362 
	`STRING_DEL
(
∑r£r
, 
whôe•a˚s
);

3366 
îr‹
:

3367 
	`STRING_DEL
(
∑r£r
, 
°rög
);

3368 
	`STRING_DEL
(
∑r£r
, 
Àadög_bªak
);

3369 
	`STRING_DEL
(
∑r£r
, 
åaûög_bªaks
);

3370 
	`STRING_DEL
(
∑r£r
, 
whôe•a˚s
);

3373 
	}
}

3380 
	$yaml_∑r£r_sˇn_∂aö_sˇœr
(
yaml_∑r£r_t
 *
∑r£r
, 
yaml_tokí_t
 *
tokí
)

3382 
yaml_m¨k_t
 
°¨t_m¨k
;

3383 
yaml_m¨k_t
 
íd_m¨k
;

3384 
yaml_°rög_t
 
°rög
 = 
NULL_STRING
;

3385 
yaml_°rög_t
 
Àadög_bªak
 = 
NULL_STRING
;

3386 
yaml_°rög_t
 
åaûög_bªaks
 = 
NULL_STRING
;

3387 
yaml_°rög_t
 
whôe•a˚s
 = 
NULL_STRING
;

3388 
Àadög_bœnks
 = 0;

3389 
ödít
 = 
∑r£r
->indent+1;

3391 i‡(!
	`STRING_INIT
(
∑r£r
, 
°rög
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

3392 i‡(!
	`STRING_INIT
(
∑r£r
, 
Àadög_bªak
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

3393 i‡(!
	`STRING_INIT
(
∑r£r
, 
åaûög_bªaks
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

3394 i‡(!
	`STRING_INIT
(
∑r£r
, 
whôe•a˚s
, 
INITIAL_STRING_SIZE
)Ë
îr‹
;

3396 
°¨t_m¨k
 = 
íd_m¨k
 = 
∑r£r
->
m¨k
;

3404 i‡(!
	`CACHE
(
∑r£r
, 4)Ë
îr‹
;

3406 i‡(
∑r£r
->
m¨k
.
cﬁumn
 == 0 &&

3407 ((
	`CHECK_AT
(
∑r£r
->
buf„r
, '-', 0) &&

3408 
	`CHECK_AT
(
∑r£r
->
buf„r
, '-', 1) &&

3409 
	`CHECK_AT
(
∑r£r
->
buf„r
, '-', 2)) ||

3410 (
	`CHECK_AT
(
∑r£r
->
buf„r
, '.', 0) &&

3411 
	`CHECK_AT
(
∑r£r
->
buf„r
, '.', 1) &&

3412 
	`CHECK_AT
(
∑r£r
->
buf„r
, '.', 2))) &&

3413 
	`IS_BLANKZ_AT
(
∑r£r
->
buf„r
, 3)) ;

3417 i‡(
	`CHECK
(
∑r£r
->
buf„r
, '#'))

3422 !
	`IS_BLANKZ
(
∑r£r
->
buf„r
))

3426 i‡(
∑r£r
->
Êow_Àvñ


3427 && 
	`CHECK
(
∑r£r
->
buf„r
, ':')

3428 && !
	`IS_BLANKZ_AT
(
∑r£r
->
buf„r
, 1)) {

3429 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningáÖlain scalar",

3430 
°¨t_m¨k
, "found unexpected ':'");

3431 
îr‹
;

3436 i‡((
	`CHECK
(
∑r£r
->
buf„r
, ':'Ë&& 
	`IS_BLANKZ_AT
(parser->buffer, 1))

3437 || (
∑r£r
->
Êow_Àvñ
 &&

3438 (
	`CHECK
(
∑r£r
->
buf„r
, ',') || CHECK(parser->buffer, ':')

3439 || 
	`CHECK
(
∑r£r
->
buf„r
, '?') || CHECK(parser->buffer, '[')

3440 || 
	`CHECK
(
∑r£r
->
buf„r
, ']') || CHECK(parser->buffer, '{')

3441 || 
	`CHECK
(
∑r£r
->
buf„r
, '}'))))

3446 i‡(
Àadög_bœnks
 || 
whôe•a˚s
.
°¨t
 !whôe•a˚s.
poöãr
)

3448 i‡(
Àadög_bœnks
)

3452 i‡(
Àadög_bªak
.
°¨t
[0] == '\n') {

3453 i‡(
åaûög_bªaks
.
°¨t
[0] == '\0') {

3454 i‡(!
	`STRING_EXTEND
(
∑r£r
, 
°rög
)Ë
îr‹
;

3455 *(
°rög
.
poöãr
++) = ' ';

3458 i‡(!
	`JOIN
(
∑r£r
, 
°rög
, 
åaûög_bªaks
)Ë
îr‹
;

3459 
	`CLEAR
(
∑r£r
, 
åaûög_bªaks
);

3461 
	`CLEAR
(
∑r£r
, 
Àadög_bªak
);

3464 i‡(!
	`JOIN
(
∑r£r
, 
°rög
, 
Àadög_bªak
)Ë
îr‹
;

3465 i‡(!
	`JOIN
(
∑r£r
, 
°rög
, 
åaûög_bªaks
)Ë
îr‹
;

3466 
	`CLEAR
(
∑r£r
, 
Àadög_bªak
);

3467 
	`CLEAR
(
∑r£r
, 
åaûög_bªaks
);

3470 
Àadög_bœnks
 = 0;

3474 i‡(!
	`JOIN
(
∑r£r
, 
°rög
, 
whôe•a˚s
)Ë
îr‹
;

3475 
	`CLEAR
(
∑r£r
, 
whôe•a˚s
);

3481 i‡(!
	`READ
(
∑r£r
, 
°rög
)Ë
îr‹
;

3483 
íd_m¨k
 = 
∑r£r
->
m¨k
;

3485 i‡(!
	`CACHE
(
∑r£r
, 2)Ë
îr‹
;

3490 i‡(!(
	`IS_BLANK
(
∑r£r
->
buf„r
Ë|| 
	`IS_BREAK
(parser->buffer)))

3495 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

3497 
	`IS_BLANK
(
∑r£r
->
buf„r
Ë|| 
	`IS_BREAK
(parser->buffer))

3499 i‡(
	`IS_BLANK
(
∑r£r
->
buf„r
))

3503 i‡(
Àadög_bœnks
 && ()
∑r£r
->
m¨k
.
cﬁumn
 < 
ödít


3504 && 
	`IS_TAB
(
∑r£r
->
buf„r
)) {

3505 
	`yaml_∑r£r_£t_sˇ¬î_îr‹
(
∑r£r
, "while scanningáÖlain scalar",

3506 
°¨t_m¨k
, "foundáÅab characterÅhat violate intendation");

3507 
îr‹
;

3512 i‡(!
Àadög_bœnks
) {

3513 i‡(!
	`READ
(
∑r£r
, 
whôe•a˚s
)Ë
îr‹
;

3516 
	`SKIP
(
∑r£r
);

3521 i‡(!
	`CACHE
(
∑r£r
, 2)Ë
îr‹
;

3525 i‡(!
Àadög_bœnks
)

3527 
	`CLEAR
(
∑r£r
, 
whôe•a˚s
);

3528 i‡(!
	`READ_LINE
(
∑r£r
, 
Àadög_bªak
)Ë
îr‹
;

3529 
Àadög_bœnks
 = 1;

3533 i‡(!
	`READ_LINE
(
∑r£r
, 
åaûög_bªaks
)Ë
îr‹
;

3536 i‡(!
	`CACHE
(
∑r£r
, 1)Ë
îr‹
;

3541 i‡(!
∑r£r
->
Êow_Àvñ
 && (Ì¨£r->
m¨k
.
cﬁumn
 < 
ödít
)

3547 
	`SCALAR_TOKEN_INIT
(*
tokí
, 
°rög
.
°¨t
, såög.
poöãr
-string.start,

3548 
YAML_PLAIN_SCALAR_STYLE
, 
°¨t_m¨k
, 
íd_m¨k
);

3552 i‡(
Àadög_bœnks
) {

3553 
∑r£r
->
sim∂e_key_Ælowed
 = 1;

3556 
	`STRING_DEL
(
∑r£r
, 
Àadög_bªak
);

3557 
	`STRING_DEL
(
∑r£r
, 
åaûög_bªaks
);

3558 
	`STRING_DEL
(
∑r£r
, 
whôe•a˚s
);

3562 
îr‹
:

3563 
	`STRING_DEL
(
∑r£r
, 
°rög
);

3564 
	`STRING_DEL
(
∑r£r
, 
Àadög_bªak
);

3565 
	`STRING_DEL
(
∑r£r
, 
åaûög_bªaks
);

3566 
	`STRING_DEL
(
∑r£r
, 
whôe•a˚s
);

3569 
	}
}

	@contrib/yaml-0.1.4/src/writer.c

2 
	~"yaml_¥iv©e.h
"

9 
yaml_emôãr_£t_wrôî_îr‹
(
yaml_emôãr_t
 *
emôãr
, c⁄° *
¥obÀm
);

11 
	$YAML_DECLARE
()

12 
	`yaml_emôãr_Êush
(
yaml_emôãr_t
 *
emôãr
);

19 
	$yaml_emôãr_£t_wrôî_îr‹
(
yaml_emôãr_t
 *
emôãr
, c⁄° *
¥obÀm
)

21 
emôãr
->
îr‹
 = 
YAML_WRITER_ERROR
;

22 
emôãr
->
¥obÀm
 =Öroblem;

25 
	}
}

31 
	$YAML_DECLARE
()

32 
	$yaml_emôãr_Êush
(
yaml_emôãr_t
 *
emôãr
)

34 
low
, 
high
;

36 
	`as£π
(
emôãr
);

37 
	`as£π
(
emôãr
->
wrôe_h™dÀr
);

38 
	`as£π
(
emôãr
->
ícodög
);

40 
emôãr
->
buf„r
.
œ°
 =Émôãr->buf„r.
poöãr
;

41 
emôãr
->
buf„r
.
poöãr
 =Émôãr->buf„r.
°¨t
;

45 i‡(
emôãr
->
buf„r
.
°¨t
 =emôãr->buf„r.
œ°
) {

51 i‡(
emôãr
->
ícodög
 =
YAML_UTF8_ENCODING
)

53 i‡(
emôãr
->
	`wrôe_h™dÀr
”môãr->
wrôe_h™dÀr_d©a
,

54 
emôãr
->
buf„r
.
°¨t
,

55 
emôãr
->
buf„r
.
œ°
 -Émôãr->buf„r.
°¨t
)) {

56 
emôãr
->
buf„r
.
œ°
 =Émôãr->buf„r.
°¨t
;

57 
emôãr
->
buf„r
.
poöãr
 =Émôãr->buf„r.
°¨t
;

61  
	`yaml_emôãr_£t_wrôî_îr‹
(
emôãr
, "writeÉrror");

67 
low
 = (
emôãr
->
ícodög
 =
YAML_UTF16LE_ENCODING
 ? 0 : 1);

68 
high
 = (
emôãr
->
ícodög
 =
YAML_UTF16LE_ENCODING
 ? 1 : 0);

70 
emôãr
->
buf„r
.
poöãr
 !emôãr->buf„r.
œ°
)

72 
o˘ë
;

73 
width
;

74 
vÆue
;

75 
size_t
 
k
;

84 
o˘ë
 = 
emôãr
->
buf„r
.
poöãr
[0];

86 
width
 = (
o˘ë
 & 0x80) == 0x00 ? 1 :

87 (
o˘ë
 & 0xE0) == 0xC0 ? 2 :

88 (
o˘ë
 & 0xF0) == 0xE0 ? 3 :

89 (
o˘ë
 & 0xF8) == 0xF0 ? 4 : 0;

91 
vÆue
 = (
o˘ë
 & 0x80) == 0x00 ? octet & 0x7F :

92 (
o˘ë
 & 0xE0) == 0xC0 ? octet & 0x1F :

93 (
o˘ë
 & 0xF0) == 0xE0 ? octet & 0x0F :

94 (
o˘ë
 & 0xF8) == 0xF0 ? octet & 0x07 : 0;

96 
k
 = 1; k < 
width
; k ++) {

97 
o˘ë
 = 
emôãr
->
buf„r
.
poöãr
[
k
];

98 
vÆue
 = (vÆuê<< 6Ë+ (
o˘ë
 & 0x3F);

101 
emôãr
->
buf„r
.
poöãr
 +
width
;

105 i‡(
vÆue
 < 0x10000)

107 
emôãr
->
øw_buf„r
.
œ°
[
high
] = 
vÆue
 >> 8;

108 
emôãr
->
øw_buf„r
.
œ°
[
low
] = 
vÆue
 & 0xFF;

110 
emôãr
->
øw_buf„r
.
œ°
 += 2;

116 
vÆue
 -= 0x10000;

117 
emôãr
->
øw_buf„r
.
œ°
[
high
] = 0xD8 + (
vÆue
 >> 18);

118 
emôãr
->
øw_buf„r
.
œ°
[
low
] = (
vÆue
 >> 10) & 0xFF;

119 
emôãr
->
øw_buf„r
.
œ°
[
high
+2] = 0xDC + ((
vÆue
 >> 8) & 0xFF);

120 
emôãr
->
øw_buf„r
.
œ°
[
low
+2] = 
vÆue
 & 0xFF;

122 
emôãr
->
øw_buf„r
.
œ°
 += 4;

128 i‡(
emôãr
->
	`wrôe_h™dÀr
”môãr->
wrôe_h™dÀr_d©a
,

129 
emôãr
->
øw_buf„r
.
°¨t
,

130 
emôãr
->
øw_buf„r
.
œ°
 -Émôãr->øw_buf„r.
°¨t
)) {

131 
emôãr
->
buf„r
.
œ°
 =Émôãr->buf„r.
°¨t
;

132 
emôãr
->
buf„r
.
poöãr
 =Émôãr->buf„r.
°¨t
;

133 
emôãr
->
øw_buf„r
.
œ°
 =Émôãr->øw_buf„r.
°¨t
;

134 
emôãr
->
øw_buf„r
.
poöãr
 =Émôãr->øw_buf„r.
°¨t
;

138  
	`yaml_emôãr_£t_wrôî_îr‹
(
emôãr
, "writeÉrror");

140 
	}
}

	@contrib/yaml-0.1.4/src/yaml_private.h

2 #i‡
HAVE_CONFIG_H


3 
	~<c⁄fig.h
>

6 
	~<yaml.h
>

8 
	~<as£π.h
>

9 
	~<limôs.h
>

15 
	$YAML_DECLARE
(*)

16 
	`yaml_mÆloc
(
size_t
 
size
);

18 
	$YAML_DECLARE
(*)

19 
	`yaml_ªÆloc
(*
±r
, 
size_t
 
size
);

21 
	$YAML_DECLARE
()

22 
	`yaml_‰ì
(*
±r
);

24 
	$YAML_DECLARE
(
yaml_ch¨_t
 *)

25 
	`yaml_°rdup
(c⁄° 
yaml_ch¨_t
 *);

31 
	$YAML_DECLARE
()

32 
	`yaml_∑r£r_upd©e_buf„r
(
yaml_∑r£r_t
 *
∑r£r
, 
size_t
 
Àngth
);

38 
	$YAML_DECLARE
()

39 
	`yaml_∑r£r_„tch_m‹e_tokís
(
yaml_∑r£r_t
 *
∑r£r
);

45 
	#INPUT_RAW_BUFFER_SIZE
 16384

	)

53 
	#INPUT_BUFFER_SIZE
 (
INPUT_RAW_BUFFER_SIZE
*3)

	)

59 
	#OUTPUT_BUFFER_SIZE
 16384

	)

67 
	#OUTPUT_RAW_BUFFER_SIZE
 (
OUTPUT_BUFFER_SIZE
*2+2)

	)

73 
	#INITIAL_STACK_SIZE
 16

	)

74 
	#INITIAL_QUEUE_SIZE
 16

	)

75 
	#INITIAL_STRING_SIZE
 16

	)

81 
	#BUFFER_INIT
(
c⁄ãxt
,
buf„r
,
size
) \

82 (((
buf„r
).
°¨t
 = 
	`yaml_mÆloc
(
size
)) ? \

83 ((
buf„r
).
œ°
 = (buf„r).
poöãr
 = (buf„r).
°¨t
, \

84 (
buf„r
).
íd
 = (buf„r).
°¨t
+(
size
), \

86 ((
c⁄ãxt
)->
îr‹
 = 
YAML_MEMORY_ERROR
, \

87 0))

	)

89 
	#BUFFER_DEL
(
c⁄ãxt
,
buf„r
) \

90 (
	`yaml_‰ì
((
buf„r
).
°¨t
), \

91 (
buf„r
).
°¨t
 = (buf„r).
poöãr
 = (buf„r).
íd
 = 0)

	)

98 
yaml_ch¨_t
 *
°¨t
;

99 
yaml_ch¨_t
 *
íd
;

100 
yaml_ch¨_t
 *
poöãr
;

101 } 
	tyaml_°rög_t
;

103 
	$YAML_DECLARE
()

104 
	`yaml_°rög_exãnd
(
yaml_ch¨_t
 **
°¨t
,

105 
yaml_ch¨_t
 **
poöãr
, yaml_ch¨_à**
íd
);

107 
	$YAML_DECLARE
()

108 
	`yaml_°rög_joö
(

109 
yaml_ch¨_t
 **
a_°¨t
, yaml_ch¨_à**
a_poöãr
, yaml_ch¨_à**
a_íd
,

110 
yaml_ch¨_t
 **
b_°¨t
, yaml_ch¨_à**
b_poöãr
, yaml_ch¨_à**
b_íd
);

112 
	#NULL_STRING
 { 
NULL
, NULL, NULL 
	}

	)
}

114 
	#STRING
(
°rög
,
Àngth
Ë{ (°rög), (°rög)+÷ígth), (°rögË}

	)

116 
	#STRING_ASSIGN
(
vÆue
,
°rög
,
Àngth
) \

117 ((
vÆue
).
°¨t
 = (
°rög
), \

118 (
vÆue
).
íd
 = (
°rög
)+(
Àngth
), \

119 (
vÆue
).
poöãr
 = (
°rög
))

	)

121 
	#STRING_INIT
(
c⁄ãxt
,
°rög
,
size
) \

122 (((
°rög
).
°¨t
 = 
	`yaml_mÆloc
(
size
)) ? \

123 ((
°rög
).
poöãr
 = (°rög).
°¨t
, \

124 (
°rög
).
íd
 = (°rög).
°¨t
+(
size
), \

125 
	`mem£t
((
°rög
).
°¨t
, 0, (
size
)), \

127 ((
c⁄ãxt
)->
îr‹
 = 
YAML_MEMORY_ERROR
, \

128 0))

	)

130 
	#STRING_DEL
(
c⁄ãxt
,
°rög
) \

131 (
	`yaml_‰ì
((
°rög
).
°¨t
), \

132 (
°rög
).
°¨t
 = (°rög).
poöãr
 = (°rög).
íd
 = 0)

	)

134 
	#STRING_EXTEND
(
c⁄ãxt
,
°rög
) \

135 (((
°rög
).
poöãr
+5 < (°rög).
íd
) \

136 || 
	`yaml_°rög_exãnd
(&(
°rög
).
°¨t
, \

137 &(
°rög
).
poöãr
, &(°rög).
íd
))

	)

139 
	#CLEAR
(
c⁄ãxt
,
°rög
) \

140 ((
°rög
).
poöãr
 = (°rög).
°¨t
, \

141 
	`mem£t
((
°rög
).
°¨t
, 0, (°rög).
íd
-(°rög).°¨t))

	)

143 
	#JOIN
(
c⁄ãxt
,
°rög_a
,
°rög_b
) \

144 ((
	`yaml_°rög_joö
(&(
°rög_a
).
°¨t
, &(°rög_a).
poöãr
, \

145 &(
°rög_a
).
íd
, &(
°rög_b
).
°¨t
, \

146 &(
°rög_b
).
poöãr
, &(°rög_b).
íd
)) ? \

147 ((
°rög_b
).
poöãr
 = (°rög_b).
°¨t
, \

149 ((
c⁄ãxt
)->
îr‹
 = 
YAML_MEMORY_ERROR
, \

150 0))

	)

160 
	#CHECK_AT
(
°rög
,
o˘ë
,
off£t
) \

161 ((
°rög
).
poöãr
[
off£t
] =(
yaml_ch¨_t
)(
o˘ë
))

	)

167 
	#CHECK
(
°rög
,
o˘ë
Ë
	`CHECK_AT
((°rög),(o˘ë),0)

	)

174 
	#IS_ALPHA_AT
(
°rög
,
off£t
) \

175 (((
°rög
).
poöãr
[
off£t
] >(
yaml_ch¨_t
) '0' && \

176 (
°rög
).
poöãr
[
off£t
] <(
yaml_ch¨_t
) '9') || \

177 ((
°rög
).
poöãr
[
off£t
] >(
yaml_ch¨_t
) 'A' && \

178 (
°rög
).
poöãr
[
off£t
] <(
yaml_ch¨_t
) 'Z') || \

179 ((
°rög
).
poöãr
[
off£t
] >(
yaml_ch¨_t
) 'a' && \

180 (
°rög
).
poöãr
[
off£t
] <(
yaml_ch¨_t
) 'z') || \

181 (
°rög
).
poöãr
[
off£t
] == '_' || \

182 (
°rög
).
poöãr
[
off£t
] ='-')

	)

184 
	#IS_ALPHA
(
°rög
Ë
	`IS_ALPHA_AT
((°rög),0)

	)

190 
	#IS_DIGIT_AT
(
°rög
,
off£t
) \

191 (((
°rög
).
poöãr
[
off£t
] >(
yaml_ch¨_t
) '0' && \

192 (
°rög
).
poöãr
[
off£t
] <(
yaml_ch¨_t
Ë'9'))

	)

194 
	#IS_DIGIT
(
°rög
Ë
	`IS_DIGIT_AT
((°rög),0)

	)

200 
	#AS_DIGIT_AT
(
°rög
,
off£t
) \

201 ((
°rög
).
poöãr
[
off£t
] - (
yaml_ch¨_t
Ë'0')

	)

203 
	#AS_DIGIT
(
°rög
Ë
	`AS_DIGIT_AT
((°rög),0)

	)

209 
	#IS_HEX_AT
(
°rög
,
off£t
) \

210 (((
°rög
).
poöãr
[
off£t
] >(
yaml_ch¨_t
) '0' && \

211 (
°rög
).
poöãr
[
off£t
] <(
yaml_ch¨_t
) '9') || \

212 ((
°rög
).
poöãr
[
off£t
] >(
yaml_ch¨_t
) 'A' && \

213 (
°rög
).
poöãr
[
off£t
] <(
yaml_ch¨_t
) 'F') || \

214 ((
°rög
).
poöãr
[
off£t
] >(
yaml_ch¨_t
) 'a' && \

215 (
°rög
).
poöãr
[
off£t
] <(
yaml_ch¨_t
Ë'f'))

	)

217 
	#IS_HEX
(
°rög
Ë
	`IS_HEX_AT
((°rög),0)

	)

223 
	#AS_HEX_AT
(
°rög
,
off£t
) \

224 (((
°rög
).
poöãr
[
off£t
] >(
yaml_ch¨_t
) 'A' && \

225 (
°rög
).
poöãr
[
off£t
] <(
yaml_ch¨_t
) 'F') ? \

226 ((
°rög
).
poöãr
[
off£t
] - (
yaml_ch¨_t
) 'A' + 10) : \

227 ((
°rög
).
poöãr
[
off£t
] >(
yaml_ch¨_t
) 'a' && \

228 (
°rög
).
poöãr
[
off£t
] <(
yaml_ch¨_t
) 'f') ? \

229 ((
°rög
).
poöãr
[
off£t
] - (
yaml_ch¨_t
) 'a' + 10) : \

230 ((
°rög
).
poöãr
[
off£t
] - (
yaml_ch¨_t
Ë'0'))

	)

232 
	#AS_HEX
(
°rög
Ë
	`AS_HEX_AT
((°rög),0)

	)

238 
	#IS_ASCII_AT
(
°rög
,
off£t
) \

239 ((
°rög
).
poöãr
[
off£t
] <(
yaml_ch¨_t
Ë'\x7F')

	)

241 
	#IS_ASCII
(
°rög
Ë
	`IS_ASCII_AT
((°rög),0)

	)

247 
	#IS_PRINTABLE_AT
(
°rög
,
off£t
) \

248 (((
°rög
).
poöãr
[
off£t
] == 0x0A) \

249 || ((
°rög
).
poöãr
[
off£t
] >= 0x20 \

250 && (
°rög
).
poöãr
[
off£t
] <= 0x7E) \

251 || ((
°rög
).
poöãr
[
off£t
] == 0xC2 \

252 && (
°rög
).
poöãr
[
off£t
+1] >= 0xA0) \

253 || ((
°rög
).
poöãr
[
off£t
] > 0xC2 \

254 && (
°rög
).
poöãr
[
off£t
] < 0xED) \

255 || ((
°rög
).
poöãr
[
off£t
] == 0xED \

256 && (
°rög
).
poöãr
[
off£t
+1] < 0xA0) \

257 || ((
°rög
).
poöãr
[
off£t
] == 0xEE) \

258 || ((
°rög
).
poöãr
[
off£t
] == 0xEF \

259 && !((
°rög
).
poöãr
[
off£t
+1] == 0xBB \

260 && (
°rög
).
poöãr
[
off£t
+2] == 0xBF) \

261 && !((
°rög
).
poöãr
[
off£t
+1] == 0xBF \

262 && ((
°rög
).
poöãr
[
off£t
+2] == 0xBE \

263 || (
°rög
).
poöãr
[
off£t
+2] =0xBF))))

	)

265 
	#IS_PRINTABLE
(
°rög
Ë
	`IS_PRINTABLE_AT
((°rög),0)

	)

271 
	#IS_Z_AT
(
°rög
,
off£t
Ë
	`CHECK_AT
((°rög),'\0',(off£t))

	)

273 
	#IS_Z
(
°rög
Ë
	`IS_Z_AT
((°rög),0)

	)

279 
	#IS_BOM_AT
(
°rög
,
off£t
) \

280 (
	`CHECK_AT
((
°rög
),'\xEF',(
off£t
)) \

281 && 
	`CHECK_AT
((
°rög
),'\xBB',(
off£t
)+1) \

282 && 
	`CHECK_AT
((
°rög
),'\xBF',(
off£t
)+2)Ë

	)

284 
	#IS_BOM
(
°rög
Ë
	`IS_BOM_AT
(°rög,0)

	)

290 
	#IS_SPACE_AT
(
°rög
,
off£t
Ë
	`CHECK_AT
((°rög),' ',(off£t))

	)

292 
	#IS_SPACE
(
°rög
Ë
	`IS_SPACE_AT
((°rög),0)

	)

298 
	#IS_TAB_AT
(
°rög
,
off£t
Ë
	`CHECK_AT
((°rög),'\t',(off£t))

	)

300 
	#IS_TAB
(
°rög
Ë
	`IS_TAB_AT
((°rög),0)

	)

306 
	#IS_BLANK_AT
(
°rög
,
off£t
) \

307 (
	`IS_SPACE_AT
((
°rög
),(
off£t
)Ë|| 
	`IS_TAB_AT
((°rög),(off£t)))

	)

309 
	#IS_BLANK
(
°rög
Ë
	`IS_BLANK_AT
((°rög),0)

	)

315 
	#IS_BREAK_AT
(
°rög
,
off£t
) \

316 (
	`CHECK_AT
((
°rög
),'\r',(
off£t
)) \

317 || 
	`CHECK_AT
((
°rög
),'\n',(
off£t
)) \

318 || (
	`CHECK_AT
((
°rög
),'\xC2',(
off£t
)) \

319 && 
	`CHECK_AT
((
°rög
),'\x85',(
off£t
)+1)) \

320 || (
	`CHECK_AT
((
°rög
),'\xE2',(
off£t
)) \

321 && 
	`CHECK_AT
((
°rög
),'\x80',(
off£t
)+1) \

322 && 
	`CHECK_AT
((
°rög
),'\xA8',(
off£t
)+2)) \

323 || (
	`CHECK_AT
((
°rög
),'\xE2',(
off£t
)) \

324 && 
	`CHECK_AT
((
°rög
),'\x80',(
off£t
)+1) \

325 && 
	`CHECK_AT
((
°rög
),'\xA9',(
off£t
)+2))Ë

	)

327 
	#IS_BREAK
(
°rög
Ë
	`IS_BREAK_AT
((°rög),0)

	)

329 
	#IS_CRLF_AT
(
°rög
,
off£t
) \

330 (
	`CHECK_AT
((
°rög
),'\r',(
off£t
)Ë&& CHECK_AT((°rög),'\n',(off£t)+1))

	)

332 
	#IS_CRLF
(
°rög
Ë
	`IS_CRLF_AT
((°rög),0)

	)

338 
	#IS_BREAKZ_AT
(
°rög
,
off£t
) \

339 (
	`IS_BREAK_AT
((
°rög
),(
off£t
)Ë|| 
	`IS_Z_AT
((°rög),(off£t)))

	)

341 
	#IS_BREAKZ
(
°rög
Ë
	`IS_BREAKZ_AT
((°rög),0)

	)

347 
	#IS_SPACEZ_AT
(
°rög
,
off£t
) \

348 (
	`IS_SPACE_AT
((
°rög
),(
off£t
)Ë|| 
	`IS_BREAKZ_AT
((°rög),(off£t)))

	)

350 
	#IS_SPACEZ
(
°rög
Ë
	`IS_SPACEZ_AT
((°rög),0)

	)

356 
	#IS_BLANKZ_AT
(
°rög
,
off£t
) \

357 (
	`IS_BLANK_AT
((
°rög
),(
off£t
)Ë|| 
	`IS_BREAKZ_AT
((°rög),(off£t)))

	)

359 
	#IS_BLANKZ
(
°rög
Ë
	`IS_BLANKZ_AT
((°rög),0)

	)

365 
	#WIDTH_AT
(
°rög
,
off£t
) \

366 (((
°rög
).
poöãr
[
off£t
] & 0x80) == 0x00 ? 1 : \

367 ((
°rög
).
poöãr
[
off£t
] & 0xE0) == 0xC0 ? 2 : \

368 ((
°rög
).
poöãr
[
off£t
] & 0xF0) == 0xE0 ? 3 : \

369 ((
°rög
).
poöãr
[
off£t
] & 0xF8Ë=0xF0 ? 4 : 0)

	)

371 
	#WIDTH
(
°rög
Ë
	`WIDTH_AT
((°rög),0)

	)

377 
	#MOVE
(
°rög
Ë((°rög).
poöãr
 +
	`WIDTH
((°rög)))

	)

383 
	#COPY
(
°rög_a
,
°rög_b
) \

384 ((*(
°rög_b
).
poöãr
 & 0x80) == 0x00 ? \

385 (*((
°rög_a
).
poöãr
++Ë*((
°rög_b
).pointer++)) : \

386 (*(
°rög_b
).
poöãr
 & 0xE0) == 0xC0 ? \

387 (*((
°rög_a
).
poöãr
++Ë*((
°rög_b
).pointer++), \

388 *((
°rög_a
).
poöãr
++Ë*((
°rög_b
).pointer++)) : \

389 (*(
°rög_b
).
poöãr
 & 0xF0) == 0xE0 ? \

390 (*((
°rög_a
).
poöãr
++Ë*((
°rög_b
).pointer++), \

391 *((
°rög_a
).
poöãr
++Ë*((
°rög_b
).pointer++), \

392 *((
°rög_a
).
poöãr
++Ë*((
°rög_b
).pointer++)) : \

393 (*(
°rög_b
).
poöãr
 & 0xF8) == 0xF0 ? \

394 (*((
°rög_a
).
poöãr
++Ë*((
°rög_b
).pointer++), \

395 *((
°rög_a
).
poöãr
++Ë*((
°rög_b
).pointer++), \

396 *((
°rög_a
).
poöãr
++Ë*((
°rög_b
).pointer++), \

397 *((
°rög_a
).
poöãr
++Ë*((
°rög_b
).poöãr++)Ë: 0)

	)

403 
	$YAML_DECLARE
()

404 
	`yaml_°ack_exãnd
(**
°¨t
, **
t›
, **
íd
);

406 
	$YAML_DECLARE
()

407 
	`yaml_queue_exãnd
(**
°¨t
, **
hód
, **
èû
, **
íd
);

409 
	#STACK_INIT
(
c⁄ãxt
,
°ack
,
size
) \

410 (((
°ack
).
°¨t
 = 
	`yaml_mÆloc
((
size
)*(*(stack).start))) ? \

411 ((
°ack
).
t›
 = (°ack).
°¨t
, \

412 (
°ack
).
íd
 = (°ack).
°¨t
+(
size
), \

414 ((
c⁄ãxt
)->
îr‹
 = 
YAML_MEMORY_ERROR
, \

415 0))

	)

417 
	#STACK_DEL
(
c⁄ãxt
,
°ack
) \

418 (
	`yaml_‰ì
((
°ack
).
°¨t
), \

419 (
°ack
).
°¨t
 = (°ack).
t›
 = (°ack).
íd
 = 0)

	)

421 
	#STACK_EMPTY
(
c⁄ãxt
,
°ack
) \

422 ((
°ack
).
°¨t
 =(°ack).
t›
)

	)

424 
	#PUSH
(
c⁄ãxt
,
°ack
,
vÆue
) \

425 (((
°ack
).
t›
 !(°ack).
íd
 \

426 || 
	`yaml_°ack_exãnd
((**)&(
°ack
).
°¨t
, \

427 (**)&(
°ack
).
t›
, (**)&(°ack).
íd
)) ? \

428 (*((
°ack
).
t›
++Ë
vÆue
, \

430 ((
c⁄ãxt
)->
îr‹
 = 
YAML_MEMORY_ERROR
, \

431 0))

	)

433 
	#POP
(
c⁄ãxt
,
°ack
) \

434 (*(--(
°ack
).
t›
))

	)

436 
	#QUEUE_INIT
(
c⁄ãxt
,
queue
,
size
) \

437 (((
queue
).
°¨t
 = 
	`yaml_mÆloc
((
size
)*(*(queue).start))) ? \

438 ((
queue
).
hód
 = (queue).
èû
 = (queue).
°¨t
, \

439 (
queue
).
íd
 = (queue).
°¨t
+(
size
), \

441 ((
c⁄ãxt
)->
îr‹
 = 
YAML_MEMORY_ERROR
, \

442 0))

	)

444 
	#QUEUE_DEL
(
c⁄ãxt
,
queue
) \

445 (
	`yaml_‰ì
((
queue
).
°¨t
), \

446 (
queue
).
°¨t
 = (queue).
hód
 = (queue).
èû
 = (queue).
íd
 = 0)

	)

448 
	#QUEUE_EMPTY
(
c⁄ãxt
,
queue
) \

449 ((
queue
).
hód
 =(queue).
èû
)

	)

451 
	#ENQUEUE
(
c⁄ãxt
,
queue
,
vÆue
) \

452 (((
queue
).
èû
 !(queue).
íd
 \

453 || 
	`yaml_queue_exãnd
((**)&(
queue
).
°¨t
, (**)&(queue).
hód
, \

454 (**)&(
queue
).
èû
, (**)&(queue).
íd
)) ? \

455 (*((
queue
).
èû
++Ë
vÆue
, \

457 ((
c⁄ãxt
)->
îr‹
 = 
YAML_MEMORY_ERROR
, \

458 0))

	)

460 
	#DEQUEUE
(
c⁄ãxt
,
queue
) \

461 (*((
queue
).
hód
++))

	)

463 
	#QUEUE_INSERT
(
c⁄ãxt
,
queue
,
ödex
,
vÆue
) \

464 (((
queue
).
èû
 !(queue).
íd
 \

465 || 
	`yaml_queue_exãnd
((**)&(
queue
).
°¨t
, (**)&(queue).
hód
, \

466 (**)&(
queue
).
èû
, (**)&(queue).
íd
)) ? \

467 (
	`memmove
((
queue
).
hód
+(
ödex
)+1,(queue).head+(index), \

468 ((
queue
).
èû
-(queue).
hód
-(
ödex
))*(*(queue).
°¨t
)), \

469 *((
queue
).
hód
+(
ödex
)Ë
vÆue
, \

470 (
queue
).
èû
++, \

472 ((
c⁄ãxt
)->
îr‹
 = 
YAML_MEMORY_ERROR
, \

473 0))

	)

479 
	#TOKEN_INIT
(
tokí
,
tokí_ty≥
,
tokí_°¨t_m¨k
,
tokí_íd_m¨k
) \

480 (
	`mem£t
(&(
tokí
), 0, (
yaml_tokí_t
)), \

481 (
tokí
).
ty≥
 = (
tokí_ty≥
), \

482 (
tokí
).
°¨t_m¨k
 = (
tokí_°¨t_m¨k
), \

483 (
tokí
).
íd_m¨k
 = (
tokí_íd_m¨k
))

	)

485 
	#STREAM_START_TOKEN_INIT
(
tokí
,
tokí_ícodög
,
°¨t_m¨k
,
íd_m¨k
) \

486 (
	`TOKEN_INIT
((
tokí
),
YAML_STREAM_START_TOKEN
,(
°¨t_m¨k
),(
íd_m¨k
)), \

487 (
tokí
).
d©a
.
°ªam_°¨t
.
ícodög
 = (
tokí_ícodög
))

	)

489 
	#STREAM_END_TOKEN_INIT
(
tokí
,
°¨t_m¨k
,
íd_m¨k
) \

490 (
	`TOKEN_INIT
((
tokí
),
YAML_STREAM_END_TOKEN
,(
°¨t_m¨k
),(
íd_m¨k
)))

	)

492 
	#ALIAS_TOKEN_INIT
(
tokí
,
tokí_vÆue
,
°¨t_m¨k
,
íd_m¨k
) \

493 (
	`TOKEN_INIT
((
tokí
),
YAML_ALIAS_TOKEN
,(
°¨t_m¨k
),(
íd_m¨k
)), \

494 (
tokí
).
d©a
.
Æüs
.
vÆue
 = (
tokí_vÆue
))

	)

496 
	#ANCHOR_TOKEN_INIT
(
tokí
,
tokí_vÆue
,
°¨t_m¨k
,
íd_m¨k
) \

497 (
	`TOKEN_INIT
((
tokí
),
YAML_ANCHOR_TOKEN
,(
°¨t_m¨k
),(
íd_m¨k
)), \

498 (
tokí
).
d©a
.
™ch‹
.
vÆue
 = (
tokí_vÆue
))

	)

500 
	#TAG_TOKEN_INIT
(
tokí
,
tokí_h™dÀ
,
tokí_suffix
,
°¨t_m¨k
,
íd_m¨k
) \

501 (
	`TOKEN_INIT
((
tokí
),
YAML_TAG_TOKEN
,(
°¨t_m¨k
),(
íd_m¨k
)), \

502 (
tokí
).
d©a
.
èg
.
h™dÀ
 = (
tokí_h™dÀ
), \

503 (
tokí
).
d©a
.
èg
.
suffix
 = (
tokí_suffix
))

	)

505 
	#SCALAR_TOKEN_INIT
(
tokí
,
tokí_vÆue
,
tokí_Àngth
,
tokí_°yÀ
,
°¨t_m¨k
,
íd_m¨k
) \

506 (
	`TOKEN_INIT
((
tokí
),
YAML_SCALAR_TOKEN
,(
°¨t_m¨k
),(
íd_m¨k
)), \

507 (
tokí
).
d©a
.
sˇœr
.
vÆue
 = (
tokí_vÆue
), \

508 (
tokí
).
d©a
.
sˇœr
.
Àngth
 = (
tokí_Àngth
), \

509 (
tokí
).
d©a
.
sˇœr
.
°yÀ
 = (
tokí_°yÀ
))

	)

511 
	#VERSION_DIRECTIVE_TOKEN_INIT
(
tokí
,
tokí_maj‹
,
tokí_mö‹
,
°¨t_m¨k
,
íd_m¨k
) \

512 (
	`TOKEN_INIT
((
tokí
),
YAML_VERSION_DIRECTIVE_TOKEN
,(
°¨t_m¨k
),(
íd_m¨k
)), \

513 (
tokí
).
d©a
.
vîsi⁄_dúe˘ive
.
maj‹
 = (
tokí_maj‹
), \

514 (
tokí
).
d©a
.
vîsi⁄_dúe˘ive
.
mö‹
 = (
tokí_mö‹
))

	)

516 
	#TAG_DIRECTIVE_TOKEN_INIT
(
tokí
,
tokí_h™dÀ
,
tokí_¥efix
,
°¨t_m¨k
,
íd_m¨k
) \

517 (
	`TOKEN_INIT
((
tokí
),
YAML_TAG_DIRECTIVE_TOKEN
,(
°¨t_m¨k
),(
íd_m¨k
)), \

518 (
tokí
).
d©a
.
èg_dúe˘ive
.
h™dÀ
 = (
tokí_h™dÀ
), \

519 (
tokí
).
d©a
.
èg_dúe˘ive
.
¥efix
 = (
tokí_¥efix
))

	)

525 
	#EVENT_INIT
(
evít
,
evít_ty≥
,
evít_°¨t_m¨k
,
evít_íd_m¨k
) \

526 (
	`mem£t
(&(
evít
), 0, (
yaml_evít_t
)), \

527 (
evít
).
ty≥
 = (
evít_ty≥
), \

528 (
evít
).
°¨t_m¨k
 = (
evít_°¨t_m¨k
), \

529 (
evít
).
íd_m¨k
 = (
evít_íd_m¨k
))

	)

531 
	#STREAM_START_EVENT_INIT
(
evít
,
evít_ícodög
,
°¨t_m¨k
,
íd_m¨k
) \

532 (
	`EVENT_INIT
((
evít
),
YAML_STREAM_START_EVENT
,(
°¨t_m¨k
),(
íd_m¨k
)), \

533 (
evít
).
d©a
.
°ªam_°¨t
.
ícodög
 = (
evít_ícodög
))

	)

535 
	#STREAM_END_EVENT_INIT
(
evít
,
°¨t_m¨k
,
íd_m¨k
) \

536 (
	`EVENT_INIT
((
evít
),
YAML_STREAM_END_EVENT
,(
°¨t_m¨k
),(
íd_m¨k
)))

	)

538 
	#DOCUMENT_START_EVENT_INIT
(
evít
,
evít_vîsi⁄_dúe˘ive
, \

539 
evít_èg_dúe˘ives_°¨t
,
evít_èg_dúe˘ives_íd
,
evít_im∂icô
,
°¨t_m¨k
,
íd_m¨k
) \

540 (
	`EVENT_INIT
((
evít
),
YAML_DOCUMENT_START_EVENT
,(
°¨t_m¨k
),(
íd_m¨k
)), \

541 (
evít
).
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
 = (
evít_vîsi⁄_dúe˘ive
), \

542 (
evít
).
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t
 = (
evít_èg_dúe˘ives_°¨t
), \

543 (
evít
).
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
 = (
evít_èg_dúe˘ives_íd
), \

544 (
evít
).
d©a
.
documít_°¨t
.
im∂icô
 = (
evít_im∂icô
))

	)

546 
	#DOCUMENT_END_EVENT_INIT
(
evít
,
evít_im∂icô
,
°¨t_m¨k
,
íd_m¨k
) \

547 (
	`EVENT_INIT
((
evít
),
YAML_DOCUMENT_END_EVENT
,(
°¨t_m¨k
),(
íd_m¨k
)), \

548 (
evít
).
d©a
.
documít_íd
.
im∂icô
 = (
evít_im∂icô
))

	)

550 
	#ALIAS_EVENT_INIT
(
evít
,
evít_™ch‹
,
°¨t_m¨k
,
íd_m¨k
) \

551 (
	`EVENT_INIT
((
evít
),
YAML_ALIAS_EVENT
,(
°¨t_m¨k
),(
íd_m¨k
)), \

552 (
evít
).
d©a
.
Æüs
.
™ch‹
 = (
evít_™ch‹
))

	)

554 
	#SCALAR_EVENT_INIT
(
evít
,
evít_™ch‹
,
evít_èg
,
evít_vÆue
,
evít_Àngth
, \

555 
evít_∂aö_im∂icô
, 
evít_quŸed_im∂icô
,
evít_°yÀ
,
°¨t_m¨k
,
íd_m¨k
) \

556 (
	`EVENT_INIT
((
evít
),
YAML_SCALAR_EVENT
,(
°¨t_m¨k
),(
íd_m¨k
)), \

557 (
evít
).
d©a
.
sˇœr
.
™ch‹
 = (
evít_™ch‹
), \

558 (
evít
).
d©a
.
sˇœr
.
èg
 = (
evít_èg
), \

559 (
evít
).
d©a
.
sˇœr
.
vÆue
 = (
evít_vÆue
), \

560 (
evít
).
d©a
.
sˇœr
.
Àngth
 = (
evít_Àngth
), \

561 (
evít
).
d©a
.
sˇœr
.
∂aö_im∂icô
 = (
evít_∂aö_im∂icô
), \

562 (
evít
).
d©a
.
sˇœr
.
quŸed_im∂icô
 = (
evít_quŸed_im∂icô
), \

563 (
evít
).
d©a
.
sˇœr
.
°yÀ
 = (
evít_°yÀ
))

	)

565 
	#SEQUENCE_START_EVENT_INIT
(
evít
,
evít_™ch‹
,
evít_èg
, \

566 
evít_im∂icô
,
evít_°yÀ
,
°¨t_m¨k
,
íd_m¨k
) \

567 (
	`EVENT_INIT
((
evít
),
YAML_SEQUENCE_START_EVENT
,(
°¨t_m¨k
),(
íd_m¨k
)), \

568 (
evít
).
d©a
.
£quí˚_°¨t
.
™ch‹
 = (
evít_™ch‹
), \

569 (
evít
).
d©a
.
£quí˚_°¨t
.
èg
 = (
evít_èg
), \

570 (
evít
).
d©a
.
£quí˚_°¨t
.
im∂icô
 = (
evít_im∂icô
), \

571 (
evít
).
d©a
.
£quí˚_°¨t
.
°yÀ
 = (
evít_°yÀ
))

	)

573 
	#SEQUENCE_END_EVENT_INIT
(
evít
,
°¨t_m¨k
,
íd_m¨k
) \

574 (
	`EVENT_INIT
((
evít
),
YAML_SEQUENCE_END_EVENT
,(
°¨t_m¨k
),(
íd_m¨k
)))

	)

576 
	#MAPPING_START_EVENT_INIT
(
evít
,
evít_™ch‹
,
evít_èg
, \

577 
evít_im∂icô
,
evít_°yÀ
,
°¨t_m¨k
,
íd_m¨k
) \

578 (
	`EVENT_INIT
((
evít
),
YAML_MAPPING_START_EVENT
,(
°¨t_m¨k
),(
íd_m¨k
)), \

579 (
evít
).
d©a
.
m≠pög_°¨t
.
™ch‹
 = (
evít_™ch‹
), \

580 (
evít
).
d©a
.
m≠pög_°¨t
.
èg
 = (
evít_èg
), \

581 (
evít
).
d©a
.
m≠pög_°¨t
.
im∂icô
 = (
evít_im∂icô
), \

582 (
evít
).
d©a
.
m≠pög_°¨t
.
°yÀ
 = (
evít_°yÀ
))

	)

584 
	#MAPPING_END_EVENT_INIT
(
evít
,
°¨t_m¨k
,
íd_m¨k
) \

585 (
	`EVENT_INIT
((
evít
),
YAML_MAPPING_END_EVENT
,(
°¨t_m¨k
),(
íd_m¨k
)))

	)

591 
	#DOCUMENT_INIT
(
documít
,
documít_nodes_°¨t
,
documít_nodes_íd
, \

592 
documít_vîsi⁄_dúe˘ive
,
documít_èg_dúe˘ives_°¨t
, \

593 
documít_èg_dúe˘ives_íd
,
documít_°¨t_im∂icô
, \

594 
documít_íd_im∂icô
,
documít_°¨t_m¨k
,
documít_íd_m¨k
) \

595 (
	`mem£t
(&(
documít
), 0, (
yaml_documít_t
)), \

596 (
documít
).
nodes
.
°¨t
 = (
documít_nodes_°¨t
), \

597 (
documít
).
nodes
.
íd
 = (
documít_nodes_íd
), \

598 (
documít
).
nodes
.
t›
 = (
documít_nodes_°¨t
), \

599 (
documít
).
vîsi⁄_dúe˘ive
 = (
documít_vîsi⁄_dúe˘ive
), \

600 (
documít
).
èg_dúe˘ives
.
°¨t
 = (
documít_èg_dúe˘ives_°¨t
), \

601 (
documít
).
èg_dúe˘ives
.
íd
 = (
documít_èg_dúe˘ives_íd
), \

602 (
documít
).
°¨t_im∂icô
 = (
documít_°¨t_im∂icô
), \

603 (
documít
).
íd_im∂icô
 = (
documít_íd_im∂icô
), \

604 (
documít
).
°¨t_m¨k
 = (
documít_°¨t_m¨k
), \

605 (
documít
).
íd_m¨k
 = (
documít_íd_m¨k
))

	)

611 
	#NODE_INIT
(
node
,
node_ty≥
,
node_èg
,
node_°¨t_m¨k
,
node_íd_m¨k
) \

612 (
	`mem£t
(&(
node
), 0, (
yaml_node_t
)), \

613 (
node
).
ty≥
 = (
node_ty≥
), \

614 (
node
).
èg
 = (
node_èg
), \

615 (
node
).
°¨t_m¨k
 = (
node_°¨t_m¨k
), \

616 (
node
).
íd_m¨k
 = (
node_íd_m¨k
))

	)

618 
	#SCALAR_NODE_INIT
(
node
,
node_èg
,
node_vÆue
,
node_Àngth
, \

619 
node_°yÀ
,
°¨t_m¨k
,
íd_m¨k
) \

620 (
	`NODE_INIT
((
node
),
YAML_SCALAR_NODE
,(
node_èg
),(
°¨t_m¨k
),(
íd_m¨k
)), \

621 (
node
).
d©a
.
sˇœr
.
vÆue
 = (
node_vÆue
), \

622 (
node
).
d©a
.
sˇœr
.
Àngth
 = (
node_Àngth
), \

623 (
node
).
d©a
.
sˇœr
.
°yÀ
 = (
node_°yÀ
))

	)

625 
	#SEQUENCE_NODE_INIT
(
node
,
node_èg
,
node_ôems_°¨t
,
node_ôems_íd
, \

626 
node_°yÀ
,
°¨t_m¨k
,
íd_m¨k
) \

627 (
	`NODE_INIT
((
node
),
YAML_SEQUENCE_NODE
,(
node_èg
),(
°¨t_m¨k
),(
íd_m¨k
)), \

628 (
node
).
d©a
.
£quí˚
.
ôems
.
°¨t
 = (
node_ôems_°¨t
), \

629 (
node
).
d©a
.
£quí˚
.
ôems
.
íd
 = (
node_ôems_íd
), \

630 (
node
).
d©a
.
£quí˚
.
ôems
.
t›
 = (
node_ôems_°¨t
), \

631 (
node
).
d©a
.
£quí˚
.
°yÀ
 = (
node_°yÀ
))

	)

633 
	#MAPPING_NODE_INIT
(
node
,
node_èg
,
node_∑ús_°¨t
,
node_∑ús_íd
, \

634 
node_°yÀ
,
°¨t_m¨k
,
íd_m¨k
) \

635 (
	`NODE_INIT
((
node
),
YAML_MAPPING_NODE
,(
node_èg
),(
°¨t_m¨k
),(
íd_m¨k
)), \

636 (
node
).
d©a
.
m≠pög
.
∑ús
.
°¨t
 = (
node_∑ús_°¨t
), \

637 (
node
).
d©a
.
m≠pög
.
∑ús
.
íd
 = (
node_∑ús_íd
), \

638 (
node
).
d©a
.
m≠pög
.
∑ús
.
t›
 = (
node_∑ús_°¨t
), \

639 (
node
).
d©a
.
m≠pög
.
°yÀ
 = (
node_°yÀ
))

	)

	@contrib/yaml-0.1.4/tests/example-deconstructor-alt.c

2 
	~<yaml.h
>

4 
	~<°dlib.h
>

5 
	~<°dio.h
>

8 
	$maö
(
¨gc
, *
¨gv
[])

10 
hñp
 = 0;

11 
ˇn⁄iˇl
 = 0;

12 
unicode
 = 0;

13 
k
;

14 
d⁄e
 = 0;

16 
yaml_∑r£r_t
 
∑r£r
;

17 
yaml_emôãr_t
 
emôãr
;

18 
yaml_evít_t
 
öput_evít
;

19 
yaml_documít_t
 
ouçut_documít
;

21 
roŸ
;

25 
	`mem£t
(&
∑r£r
, 0, (parser));

26 
	`mem£t
(&
emôãr
, 0, (emitter));

27 
	`mem£t
(&
öput_evít
, 0, (input_event));

28 
	`mem£t
(&
ouçut_documít
, 0, (output_document));

32 
k
 = 1; k < 
¨gc
; k ++)

34 i‡(
	`°rcmp
(
¨gv
[
k
], "-h") == 0

35 || 
	`°rcmp
(
¨gv
[
k
], "--help") == 0) {

36 
hñp
 = 1;

39 i‡(
	`°rcmp
(
¨gv
[
k
], "-c") == 0

40 || 
	`°rcmp
(
¨gv
[
k
], "--canonical") == 0) {

41 
ˇn⁄iˇl
 = 1;

44 i‡(
	`°rcmp
(
¨gv
[
k
], "-u") == 0

45 || 
	`°rcmp
(
¨gv
[
k
], "--unicode") == 0) {

46 
unicode
 = 1;

50 
	`Ârötf
(
°dîr
, "Unrecognized option: %s\n"

52 
¨gv
[
k
],árgv[0]);

59 i‡(
hñp
)

61 
	`¥ötf
("%s <input\n"

66 
¨gv
[0],árgv[0]);

72 i‡(!
	`yaml_∑r£r_öôülize
(&
∑r£r
)) {

73 
	`Ârötf
(
°dîr
, "CouldÇot initializeÅheÖarser object\n");

77 i‡(!
	`yaml_emôãr_öôülize
(&
emôãr
)) {

78 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

79 
	`Ârötf
(
°dîr
, "CouldÇot inializeÅheÉmitter object\n");

85 
	`yaml_∑r£r_£t_öput_fûe
(&
∑r£r
, 
°dö
);

89 
	`yaml_emôãr_£t_ouçut_fûe
(&
emôãr
, 
°dout
);

91 
	`yaml_emôãr_£t_ˇn⁄iˇl
(&
emôãr
, 
ˇn⁄iˇl
);

92 
	`yaml_emôãr_£t_unicode
(&
emôãr
, 
unicode
);

96 i‡(!
	`yaml_emôãr_›í
(&
emôãr
))

97 
emôãr_îr‹
;

101 i‡(!
	`yaml_documít_öôülize
(&
ouçut_documít
, 
NULL
, NULL, NULL, 0, 0))

102 
documít_îr‹
;

106 
roŸ
 = 
	`yaml_documít_add_£quí˚
(&
ouçut_documít
, 
NULL
,

107 
YAML_BLOCK_SEQUENCE_STYLE
);

108 i‡(!
roŸ
Ë
documít_îr‹
;

112 !
d⁄e
)

114 
¥›îtõs
, 
key
, 
vÆue
, 
m≠
, 
£q
;

118 i‡(!
	`yaml_∑r£r_∑r£
(&
∑r£r
, &
öput_evít
))

119 
∑r£r_îr‹
;

123 i‡(
öput_evít
.
ty≥
 =
YAML_STREAM_END_EVENT
) {

124 
d⁄e
 = 1;

129 
¥›îtõs
 = 
	`yaml_documít_add_m≠pög
(&
ouçut_documít
, 
NULL
,

130 
YAML_BLOCK_MAPPING_STYLE
);

131 i‡(!
¥›îtõs
Ë
documít_îr‹
;

132 i‡(!
	`yaml_documít_≠≥nd_£quí˚_ôem
(&
ouçut_documít
,

133 
roŸ
, 
¥›îtõs
)Ë
documít_îr‹
;

137 
öput_evít
.
ty≥
)

139 
YAML_STREAM_START_EVENT
:

143 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

144 "ty≥", -1, 
YAML_PLAIN_SCALAR_STYLE
);

145 i‡(!
key
Ë
documít_îr‹
;

146 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

147 "STREAM-START", -1, 
YAML_PLAIN_SCALAR_STYLE
);

148 i‡(!
vÆue
Ë
documít_îr‹
;

149 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

150 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

154 i‡(
öput_evít
.
d©a
.
°ªam_°¨t
.
ícodög
)

156 
yaml_ícodög_t
 
ícodög


157 
öput_evít
.
d©a
.
°ªam_°¨t
.
ícodög
;

159 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

160 "ícodög", -1, 
YAML_PLAIN_SCALAR_STYLE
);

161 i‡(!
key
Ë
documít_îr‹
;

162 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

163 (
ícodög
 =
YAML_UTF8_ENCODING
 ? "utf-8" :

164 
ícodög
 =
YAML_UTF16LE_ENCODING
 ? "utf-16-le" :

165 
ícodög
 =
YAML_UTF16BE_ENCODING
 ? "utf-16-be" :

166 "unknown"), -1, 
YAML_PLAIN_SCALAR_STYLE
);

167 i‡(!
vÆue
Ë
documít_îr‹
;

168 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

169 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

174 
YAML_STREAM_END_EVENT
:

178 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

179 "ty≥", -1, 
YAML_PLAIN_SCALAR_STYLE
);

180 i‡(!
key
Ë
documít_îr‹
;

181 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

182 "STREAM-END", -1, 
YAML_PLAIN_SCALAR_STYLE
);

183 i‡(!
vÆue
Ë
documít_îr‹
;

184 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

185 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

189 
YAML_DOCUMENT_START_EVENT
:

193 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

194 "ty≥", -1, 
YAML_PLAIN_SCALAR_STYLE
);

195 i‡(!
key
Ë
documít_îr‹
;

196 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

197 "DOCUMENT-START", -1, 
YAML_PLAIN_SCALAR_STYLE
);

198 i‡(!
vÆue
Ë
documít_îr‹
;

199 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

200 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

204 i‡(
öput_evít
.
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
)

206 
yaml_vîsi⁄_dúe˘ive_t
 *
vîsi⁄


207 
öput_evít
.
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
;

208 
numbî
[64];

212 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

213 "vîsi⁄", -1, 
YAML_PLAIN_SCALAR_STYLE
);

214 i‡(!
key
Ë
documít_îr‹
;

215 
m≠
 = 
	`yaml_documít_add_m≠pög
(&
ouçut_documít
, 
NULL
,

216 
YAML_FLOW_MAPPING_STYLE
);

217 i‡(!
m≠
Ë
documít_îr‹
;

218 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

219 
¥›îtõs
, 
key
, 
m≠
)Ë
documít_îr‹
;

223 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

224 "maj‹", -1, 
YAML_PLAIN_SCALAR_STYLE
);

225 i‡(!
key
Ë
documít_îr‹
;

226 
	`•rötf
(
numbî
, "%d", 
vîsi⁄
->
maj‹
);

227 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
YAML_INT_TAG
,

228 
numbî
, -1, 
YAML_PLAIN_SCALAR_STYLE
);

229 i‡(!
vÆue
Ë
documít_îr‹
;

230 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

231 
m≠
, 
key
, 
vÆue
)Ë
documít_îr‹
;

235 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

236 "mö‹", -1, 
YAML_PLAIN_SCALAR_STYLE
);

237 i‡(!
key
Ë
documít_îr‹
;

238 
	`•rötf
(
numbî
, "%d", 
vîsi⁄
->
mö‹
);

239 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
YAML_INT_TAG
,

240 
numbî
, -1, 
YAML_PLAIN_SCALAR_STYLE
);

241 i‡(!
vÆue
Ë
documít_îr‹
;

242 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

243 
m≠
, 
key
, 
vÆue
)Ë
documít_îr‹
;

248 i‡(
öput_evít
.
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t


249 !
öput_evít
.
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
)

251 
yaml_èg_dúe˘ive_t
 *
èg
;

255 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

256 "ègs", -1, 
YAML_PLAIN_SCALAR_STYLE
);

257 i‡(!
key
Ë
documít_îr‹
;

258 
£q
 = 
	`yaml_documít_add_£quí˚
(&
ouçut_documít
, 
NULL
,

259 
YAML_BLOCK_SEQUENCE_STYLE
);

260 i‡(!
£q
Ë
documít_îr‹
;

261 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

262 
¥›îtõs
, 
key
, 
£q
)Ë
documít_îr‹
;

264 
èg
 = 
öput_evít
.
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t
;

265 
èg
 !
öput_evít
.
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
;

266 
èg
 ++)

270 
m≠
 = 
	`yaml_documít_add_m≠pög
(&
ouçut_documít
, 
NULL
,

271 
YAML_FLOW_MAPPING_STYLE
);

272 i‡(!
m≠
Ë
documít_îr‹
;

273 i‡(!
	`yaml_documít_≠≥nd_£quí˚_ôem
(&
ouçut_documít
,

274 
£q
, 
m≠
)Ë
documít_îr‹
;

278 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

279 "h™dÀ", -1, 
YAML_PLAIN_SCALAR_STYLE
);

280 i‡(!
key
Ë
documít_îr‹
;

281 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

282 
èg
->
h™dÀ
, -1, 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
);

283 i‡(!
vÆue
Ë
documít_îr‹
;

284 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

285 
m≠
, 
key
, 
vÆue
)Ë
documít_îr‹
;

289 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

290 "¥efix", -1, 
YAML_PLAIN_SCALAR_STYLE
);

291 i‡(!
key
Ë
documít_îr‹
;

292 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

293 
èg
->
¥efix
, -1, 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
);

294 i‡(!
vÆue
Ë
documít_îr‹
;

295 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

296 
m≠
, 
key
, 
vÆue
)Ë
documít_îr‹
;

302 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

303 "im∂icô", -1, 
YAML_PLAIN_SCALAR_STYLE
);

304 i‡(!
key
Ë
documít_îr‹
;

305 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
YAML_BOOL_TAG
,

306 (
öput_evít
.
d©a
.
documít_°¨t
.
im∂icô
 ?

307 "åue" : "Ál£"), -1, 
YAML_PLAIN_SCALAR_STYLE
);

308 i‡(!
vÆue
Ë
documít_îr‹
;

309 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

310 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

314 
YAML_DOCUMENT_END_EVENT
:

318 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

319 "ty≥", -1, 
YAML_PLAIN_SCALAR_STYLE
);

320 i‡(!
key
Ë
documít_îr‹
;

321 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

322 "DOCUMENT-END", -1, 
YAML_PLAIN_SCALAR_STYLE
);

323 i‡(!
vÆue
Ë
documít_îr‹
;

324 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

325 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

329 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

330 "im∂icô", -1, 
YAML_PLAIN_SCALAR_STYLE
);

331 i‡(!
key
Ë
documít_îr‹
;

332 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
YAML_BOOL_TAG
,

333 (
öput_evít
.
d©a
.
documít_íd
.
im∂icô
 ?

334 "åue" : "Ál£"), -1, 
YAML_PLAIN_SCALAR_STYLE
);

335 i‡(!
vÆue
Ë
documít_îr‹
;

336 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

337 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

341 
YAML_ALIAS_EVENT
:

345 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

346 "ty≥", -1, 
YAML_PLAIN_SCALAR_STYLE
);

347 i‡(!
key
Ë
documít_îr‹
;

348 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

349 "ALIAS", -1, 
YAML_PLAIN_SCALAR_STYLE
);

350 i‡(!
vÆue
Ë
documít_îr‹
;

351 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

352 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

356 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

357 "™ch‹", -1, 
YAML_PLAIN_SCALAR_STYLE
);

358 i‡(!
key
Ë
documít_îr‹
;

359 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

360 
öput_evít
.
d©a
.
Æüs
.
™ch‹
, -1,

361 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
);

362 i‡(!
vÆue
Ë
documít_îr‹
;

363 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

364 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

368 
YAML_SCALAR_EVENT
:

372 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

373 "ty≥", -1, 
YAML_PLAIN_SCALAR_STYLE
);

374 i‡(!
key
Ë
documít_îr‹
;

375 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

376 "SCALAR", -1, 
YAML_PLAIN_SCALAR_STYLE
);

377 i‡(!
vÆue
Ë
documít_îr‹
;

378 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

379 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

383 i‡(
öput_evít
.
d©a
.
sˇœr
.
™ch‹
)

385 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

386 "™ch‹", -1, 
YAML_PLAIN_SCALAR_STYLE
);

387 i‡(!
key
Ë
documít_îr‹
;

388 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

389 
öput_evít
.
d©a
.
sˇœr
.
™ch‹
, -1,

390 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
);

391 i‡(!
vÆue
Ë
documít_îr‹
;

392 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

393 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

398 i‡(
öput_evít
.
d©a
.
sˇœr
.
èg
)

400 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

401 "èg", -1, 
YAML_PLAIN_SCALAR_STYLE
);

402 i‡(!
key
Ë
documít_îr‹
;

403 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

404 
öput_evít
.
d©a
.
sˇœr
.
èg
, -1,

405 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
);

406 i‡(!
vÆue
Ë
documít_îr‹
;

407 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

408 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

413 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

414 "vÆue", -1, 
YAML_PLAIN_SCALAR_STYLE
);

415 i‡(!
key
Ë
documít_îr‹
;

416 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

417 
öput_evít
.
d©a
.
sˇœr
.
vÆue
,

418 
öput_evít
.
d©a
.
sˇœr
.
Àngth
,

419 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
);

420 i‡(!
vÆue
Ë
documít_îr‹
;

421 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

422 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

428 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

429 "vîsi⁄", -1, 
YAML_PLAIN_SCALAR_STYLE
);

430 i‡(!
key
Ë
documít_îr‹
;

431 
m≠
 = 
	`yaml_documít_add_m≠pög
(&
ouçut_documít
, 
NULL
,

432 
YAML_FLOW_MAPPING_STYLE
);

433 i‡(!
m≠
Ë
documít_îr‹
;

434 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

435 
¥›îtõs
, 
key
, 
m≠
)Ë
documít_îr‹
;

439 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

440 "∂aö", -1, 
YAML_PLAIN_SCALAR_STYLE
);

441 i‡(!
key
Ë
documít_îr‹
;

442 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
YAML_BOOL_TAG
,

443 (
öput_evít
.
d©a
.
sˇœr
.
∂aö_im∂icô
 ?

444 "åue" : "Ál£"), -1, 
YAML_PLAIN_SCALAR_STYLE
);

445 i‡(!
vÆue
Ë
documít_îr‹
;

446 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

447 
m≠
, 
key
, 
vÆue
)Ë
documít_îr‹
;

451 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

452 "quŸed", -1, 
YAML_PLAIN_SCALAR_STYLE
);

453 i‡(!
key
Ë
documít_îr‹
;

454 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
YAML_BOOL_TAG
,

455 (
öput_evít
.
d©a
.
sˇœr
.
quŸed_im∂icô
 ?

456 "åue" : "Ál£"), -1, 
YAML_PLAIN_SCALAR_STYLE
);

457 i‡(!
vÆue
Ë
documít_îr‹
;

458 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

459 
m≠
, 
key
, 
vÆue
)Ë
documít_îr‹
;

463 i‡(
öput_evít
.
d©a
.
sˇœr
.
°yÀ
)

465 
yaml_sˇœr_°yÀ_t
 
°yÀ
 = 
öput_evít
.
d©a
.
sˇœr
.style;

469 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

470 "°yÀ", -1, 
YAML_PLAIN_SCALAR_STYLE
);

471 i‡(!
key
Ë
documít_îr‹
;

472 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

473 (
°yÀ
 =
YAML_PLAIN_SCALAR_STYLE
 ? "plain" :

474 
°yÀ
 =
YAML_SINGLE_QUOTED_SCALAR_STYLE
 ?

476 
°yÀ
 =
YAML_DOUBLE_QUOTED_SCALAR_STYLE
 ?

478 
°yÀ
 =
YAML_LITERAL_SCALAR_STYLE
 ? "literal" :

479 
°yÀ
 =
YAML_FOLDED_SCALAR_STYLE
 ? "folded" :

480 "unknown"), -1, 
YAML_PLAIN_SCALAR_STYLE
);

481 i‡(!
vÆue
Ë
documít_îr‹
;

482 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

483 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

488 
YAML_SEQUENCE_START_EVENT
:

492 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

493 "ty≥", -1, 
YAML_PLAIN_SCALAR_STYLE
);

494 i‡(!
key
Ë
documít_îr‹
;

495 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

496 "SEQUENCE-START", -1, 
YAML_PLAIN_SCALAR_STYLE
);

497 i‡(!
vÆue
Ë
documít_îr‹
;

498 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

499 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

503 i‡(
öput_evít
.
d©a
.
£quí˚_°¨t
.
™ch‹
)

505 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

506 "™ch‹", -1, 
YAML_PLAIN_SCALAR_STYLE
);

507 i‡(!
key
Ë
documít_îr‹
;

508 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

509 
öput_evít
.
d©a
.
£quí˚_°¨t
.
™ch‹
, -1,

510 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
);

511 i‡(!
vÆue
Ë
documít_îr‹
;

512 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

513 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

518 i‡(
öput_evít
.
d©a
.
£quí˚_°¨t
.
èg
)

520 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

521 "èg", -1, 
YAML_PLAIN_SCALAR_STYLE
);

522 i‡(!
key
Ë
documít_îr‹
;

523 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

524 
öput_evít
.
d©a
.
£quí˚_°¨t
.
èg
, -1,

525 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
);

526 i‡(!
vÆue
Ë
documít_îr‹
;

527 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

528 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

533 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

534 "im∂icô", -1, 
YAML_PLAIN_SCALAR_STYLE
);

535 i‡(!
key
Ë
documít_îr‹
;

536 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
YAML_BOOL_TAG
,

537 (
öput_evít
.
d©a
.
£quí˚_°¨t
.
im∂icô
 ?

538 "åue" : "Ál£"), -1, 
YAML_PLAIN_SCALAR_STYLE
);

539 i‡(!
vÆue
Ë
documít_îr‹
;

540 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

541 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

545 i‡(
öput_evít
.
d©a
.
£quí˚_°¨t
.
°yÀ
)

547 
yaml_£quí˚_°yÀ_t
 
°yÀ


548 
öput_evít
.
d©a
.
£quí˚_°¨t
.
°yÀ
;

552 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

553 "°yÀ", -1, 
YAML_PLAIN_SCALAR_STYLE
);

554 i‡(!
key
Ë
documít_îr‹
;

555 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

556 (
°yÀ
 =
YAML_BLOCK_SEQUENCE_STYLE
 ? "block" :

557 
°yÀ
 =
YAML_FLOW_SEQUENCE_STYLE
 ? "flow" :

558 "unknown"), -1, 
YAML_PLAIN_SCALAR_STYLE
);

559 i‡(!
vÆue
Ë
documít_îr‹
;

560 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

561 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

566 
YAML_SEQUENCE_END_EVENT
:

570 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

571 "ty≥", -1, 
YAML_PLAIN_SCALAR_STYLE
);

572 i‡(!
key
Ë
documít_îr‹
;

573 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

574 "SEQUENCE-END", -1, 
YAML_PLAIN_SCALAR_STYLE
);

575 i‡(!
vÆue
Ë
documít_îr‹
;

576 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

577 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

581 
YAML_MAPPING_START_EVENT
:

585 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

586 "ty≥", -1, 
YAML_PLAIN_SCALAR_STYLE
);

587 i‡(!
key
Ë
documít_îr‹
;

588 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

589 "MAPPING-START", -1, 
YAML_PLAIN_SCALAR_STYLE
);

590 i‡(!
vÆue
Ë
documít_îr‹
;

591 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

592 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

596 i‡(
öput_evít
.
d©a
.
m≠pög_°¨t
.
™ch‹
)

598 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

599 "™ch‹", -1, 
YAML_PLAIN_SCALAR_STYLE
);

600 i‡(!
key
Ë
documít_îr‹
;

601 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

602 
öput_evít
.
d©a
.
m≠pög_°¨t
.
™ch‹
, -1,

603 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
);

604 i‡(!
vÆue
Ë
documít_îr‹
;

605 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

606 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

611 i‡(
öput_evít
.
d©a
.
m≠pög_°¨t
.
èg
)

613 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

614 "èg", -1, 
YAML_PLAIN_SCALAR_STYLE
);

615 i‡(!
key
Ë
documít_îr‹
;

616 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

617 
öput_evít
.
d©a
.
m≠pög_°¨t
.
èg
, -1,

618 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
);

619 i‡(!
vÆue
Ë
documít_îr‹
;

620 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

621 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

626 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

627 "im∂icô", -1, 
YAML_PLAIN_SCALAR_STYLE
);

628 i‡(!
key
Ë
documít_îr‹
;

629 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
YAML_BOOL_TAG
,

630 (
öput_evít
.
d©a
.
m≠pög_°¨t
.
im∂icô
 ?

631 "åue" : "Ál£"), -1, 
YAML_PLAIN_SCALAR_STYLE
);

632 i‡(!
vÆue
Ë
documít_îr‹
;

633 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

634 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

638 i‡(
öput_evít
.
d©a
.
£quí˚_°¨t
.
°yÀ
)

640 
yaml_£quí˚_°yÀ_t
 
°yÀ


641 
öput_evít
.
d©a
.
m≠pög_°¨t
.
°yÀ
;

645 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

646 "°yÀ", -1, 
YAML_PLAIN_SCALAR_STYLE
);

647 i‡(!
key
Ë
documít_îr‹
;

648 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

649 (
°yÀ
 =
YAML_BLOCK_MAPPING_STYLE
 ? "block" :

650 
°yÀ
 =
YAML_FLOW_MAPPING_STYLE
 ? "flow" :

651 "unknown"), -1, 
YAML_PLAIN_SCALAR_STYLE
);

652 i‡(!
vÆue
Ë
documít_îr‹
;

653 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

654 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

659 
YAML_MAPPING_END_EVENT
:

663 
key
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

664 "ty≥", -1, 
YAML_PLAIN_SCALAR_STYLE
);

665 i‡(!
key
Ë
documít_îr‹
;

666 
vÆue
 = 
	`yaml_documít_add_sˇœr
(&
ouçut_documít
, 
NULL
,

667 "MAPPING-END", -1, 
YAML_PLAIN_SCALAR_STYLE
);

668 i‡(!
vÆue
Ë
documít_îr‹
;

669 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(&
ouçut_documít
,

670 
¥›îtõs
, 
key
, 
vÆue
)Ë
documít_îr‹
;

681 
	`yaml_evít_dñëe
(&
öput_evít
);

684 i‡(!
	`yaml_emôãr_dump
(&
emôãr
, &
ouçut_documít
))

685 
emôãr_îr‹
;

686 i‡(!
	`yaml_emôãr_˛o£
(&
emôãr
))

687 
emôãr_îr‹
;

689 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

690 
	`yaml_emôãr_dñëe
(&
emôãr
);

694 
∑r£r_îr‹
:

698 
∑r£r
.
îr‹
)

700 
YAML_MEMORY_ERROR
:

701 
	`Ârötf
(
°dîr
, "MemoryÉrror: NotÉnough memory forÖarsing\n");

704 
YAML_READER_ERROR
:

705 i‡(
∑r£r
.
¥obÀm_vÆue
 != -1) {

706 
	`Ârötf
(
°dîr
, "RódîÉº‹: %s: #%Xáà%d\n", 
∑r£r
.
¥obÀm
,

707 
∑r£r
.
¥obÀm_vÆue
,Ö¨£r.
¥obÀm_off£t
);

710 
	`Ârötf
(
°dîr
, "RódîÉº‹: %†© %d\n", 
∑r£r
.
¥obÀm
,

711 
∑r£r
.
¥obÀm_off£t
);

715 
YAML_SCANNER_ERROR
:

716 i‡(
∑r£r
.
c⁄ãxt
) {

717 
	`Ârötf
(
°dîr
, "ScannerÉrror: %sátÜine %d, column %d\n"

718 "%†©Üöê%d, cﬁum¿%d\n", 
∑r£r
.
c⁄ãxt
,

719 
∑r£r
.
c⁄ãxt_m¨k
.
löe
+1,Ö¨£r.c⁄ãxt_m¨k.
cﬁumn
+1,

720 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

721 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

724 
	`Ârötf
(
°dîr
, "ScannerÉrror: %sátÜine %d, column %d\n",

725 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

726 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

730 
YAML_PARSER_ERROR
:

731 i‡(
∑r£r
.
c⁄ãxt
) {

732 
	`Ârötf
(
°dîr
, "ParserÉrror: %sátÜine %d, column %d\n"

733 "%†©Üöê%d, cﬁum¿%d\n", 
∑r£r
.
c⁄ãxt
,

734 
∑r£r
.
c⁄ãxt_m¨k
.
löe
+1,Ö¨£r.c⁄ãxt_m¨k.
cﬁumn
+1,

735 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

736 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

739 
	`Ârötf
(
°dîr
, "ParserÉrror: %sátÜine %d, column %d\n",

740 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

741 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

747 
	`Ârötf
(
°dîr
, "InternalÉrror\n");

751 
	`yaml_evít_dñëe
(&
öput_evít
);

752 
	`yaml_documít_dñëe
(&
ouçut_documít
);

753 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

754 
	`yaml_emôãr_dñëe
(&
emôãr
);

758 
emôãr_îr‹
:

762 
emôãr
.
îr‹
)

764 
YAML_MEMORY_ERROR
:

765 
	`Ârötf
(
°dîr
, "MemoryÉrror: NotÉnough memory forÉmitting\n");

768 
YAML_WRITER_ERROR
:

769 
	`Ârötf
(
°dîr
, "WrôîÉº‹: %s\n", 
emôãr
.
¥obÀm
);

772 
YAML_EMITTER_ERROR
:

773 
	`Ârötf
(
°dîr
, "Emôã∏îr‹: %s\n", 
emôãr
.
¥obÀm
);

778 
	`Ârötf
(
°dîr
, "InternalÉrror\n");

782 
	`yaml_evít_dñëe
(&
öput_evít
);

783 
	`yaml_documít_dñëe
(&
ouçut_documít
);

784 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

785 
	`yaml_emôãr_dñëe
(&
emôãr
);

789 
documít_îr‹
:

791 
	`Ârötf
(
°dîr
, "MemoryÉrror: NotÉnough memory for creatingá document\n");

793 
	`yaml_evít_dñëe
(&
öput_evít
);

794 
	`yaml_documít_dñëe
(&
ouçut_documít
);

795 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

796 
	`yaml_emôãr_dñëe
(&
emôãr
);

799 
	}
}

	@contrib/yaml-0.1.4/tests/example-deconstructor.c

2 
	~<yaml.h
>

4 
	~<°dlib.h
>

5 
	~<°dio.h
>

8 
	$maö
(
¨gc
, *
¨gv
[])

10 
hñp
 = 0;

11 
ˇn⁄iˇl
 = 0;

12 
unicode
 = 0;

13 
k
;

14 
d⁄e
 = 0;

16 
yaml_∑r£r_t
 
∑r£r
;

17 
yaml_emôãr_t
 
emôãr
;

18 
yaml_evít_t
 
öput_evít
;

19 
yaml_evít_t
 
ouçut_evít
;

23 
	`mem£t
(&
∑r£r
, 0, (parser));

24 
	`mem£t
(&
emôãr
, 0, (emitter));

25 
	`mem£t
(&
öput_evít
, 0, (input_event));

26 
	`mem£t
(&
ouçut_evít
, 0, (output_event));

30 
k
 = 1; k < 
¨gc
; k ++)

32 i‡(
	`°rcmp
(
¨gv
[
k
], "-h") == 0

33 || 
	`°rcmp
(
¨gv
[
k
], "--help") == 0) {

34 
hñp
 = 1;

37 i‡(
	`°rcmp
(
¨gv
[
k
], "-c") == 0

38 || 
	`°rcmp
(
¨gv
[
k
], "--canonical") == 0) {

39 
ˇn⁄iˇl
 = 1;

42 i‡(
	`°rcmp
(
¨gv
[
k
], "-u") == 0

43 || 
	`°rcmp
(
¨gv
[
k
], "--unicode") == 0) {

44 
unicode
 = 1;

48 
	`Ârötf
(
°dîr
, "Unrecognized option: %s\n"

50 
¨gv
[
k
],árgv[0]);

57 i‡(
hñp
)

59 
	`¥ötf
("%s <input\n"

64 
¨gv
[0],árgv[0]);

70 i‡(!
	`yaml_∑r£r_öôülize
(&
∑r£r
)) {

71 
	`Ârötf
(
°dîr
, "CouldÇot initializeÅheÖarser object\n");

75 i‡(!
	`yaml_emôãr_öôülize
(&
emôãr
)) {

76 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

77 
	`Ârötf
(
°dîr
, "CouldÇot inializeÅheÉmitter object\n");

83 
	`yaml_∑r£r_£t_öput_fûe
(&
∑r£r
, 
°dö
);

87 
	`yaml_emôãr_£t_ouçut_fûe
(&
emôãr
, 
°dout
);

89 
	`yaml_emôãr_£t_ˇn⁄iˇl
(&
emôãr
, 
ˇn⁄iˇl
);

90 
	`yaml_emôãr_£t_unicode
(&
emôãr
, 
unicode
);

94 i‡(!
	`yaml_°ªam_°¨t_evít_öôülize
(&
ouçut_evít
, 
YAML_UTF8_ENCODING
))

95 
evít_îr‹
;

96 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

97 
emôãr_îr‹
;

101 i‡(!
	`yaml_documít_°¨t_evít_öôülize
(&
ouçut_evít
,

102 
NULL
, NULL, NULL, 0))

103 
evít_îr‹
;

104 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

105 
emôãr_îr‹
;

109 i‡(!
	`yaml_£quí˚_°¨t_evít_öôülize
(&
ouçut_evít
,

110 
NULL
, "tag:yaml.org,2002:seq", 1,

111 
YAML_BLOCK_SEQUENCE_STYLE
))

112 
evít_îr‹
;

113 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

114 
emôãr_îr‹
;

118 !
d⁄e
)

122 i‡(!
	`yaml_∑r£r_∑r£
(&
∑r£r
, &
öput_evít
))

123 
∑r£r_îr‹
;

127 i‡(
öput_evít
.
ty≥
 =
YAML_STREAM_END_EVENT
) {

128 
d⁄e
 = 1;

133 i‡(!
	`yaml_m≠pög_°¨t_evít_öôülize
(&
ouçut_evít
,

134 
NULL
, "tag:yaml.org,2002:map", 1,

135 
YAML_BLOCK_MAPPING_STYLE
))

136 
evít_îr‹
;

137 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

138 
emôãr_îr‹
;

142 
öput_evít
.
ty≥
)

144 
YAML_STREAM_START_EVENT
:

148 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

149 
NULL
, "tag:yaml.org,2002:str", "type", -1,

150 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

151 
evít_îr‹
;

152 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

153 
emôãr_îr‹
;

157 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

158 
NULL
, "tag:yaml.org,2002:str", "STREAM-START", -1,

159 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

160 
evít_îr‹
;

161 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

162 
emôãr_îr‹
;

166 i‡(
öput_evít
.
d©a
.
°ªam_°¨t
.
ícodög
)

168 
yaml_ícodög_t
 
ícodög


169 
öput_evít
.
d©a
.
°ªam_°¨t
.
ícodög
;

173 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

174 
NULL
, "tag:yaml.org,2002:str", "encoding", -1,

175 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

176 
evít_îr‹
;

177 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

178 
emôãr_îr‹
;

182 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

183 
NULL
, "tag:yaml.org,2002:str",

184 (
ícodög
 =
YAML_UTF8_ENCODING
 ? "utf-8" :

185 
ícodög
 =
YAML_UTF16LE_ENCODING
 ? "utf-16-le" :

186 
ícodög
 =
YAML_UTF16BE_ENCODING
 ? "utf-16-be" :

188 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

189 
evít_îr‹
;

190 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

191 
emôãr_îr‹
;

196 
YAML_STREAM_END_EVENT
:

200 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

201 
NULL
, "tag:yaml.org,2002:str", "type", -1,

202 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

203 
evít_îr‹
;

204 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

205 
emôãr_îr‹
;

209 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

210 
NULL
, "tag:yaml.org,2002:str", "STREAM-END", -1,

211 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

212 
evít_îr‹
;

213 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

214 
emôãr_îr‹
;

218 
YAML_DOCUMENT_START_EVENT
:

222 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

223 
NULL
, "tag:yaml.org,2002:str", "type", -1,

224 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

225 
evít_îr‹
;

226 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

227 
emôãr_îr‹
;

231 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

232 
NULL
, "tag:yaml.org,2002:str", "DOCUMENT-START", -1,

233 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

234 
evít_îr‹
;

235 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

236 
emôãr_îr‹
;

240 i‡(
öput_evít
.
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
)

242 
yaml_vîsi⁄_dúe˘ive_t
 *
vîsi⁄


243 
öput_evít
.
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
;

244 
numbî
[64];

248 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

249 
NULL
, "tag:yaml.org,2002:str", "version", -1,

250 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

251 
evít_îr‹
;

252 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

253 
emôãr_îr‹
;

257 i‡(!
	`yaml_m≠pög_°¨t_evít_öôülize
(&
ouçut_evít
,

258 
NULL
, "tag:yaml.org,2002:map", 1,

259 
YAML_FLOW_MAPPING_STYLE
))

260 
evít_îr‹
;

261 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

262 
emôãr_îr‹
;

266 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

267 
NULL
, "tag:yaml.org,2002:str", "major", -1,

268 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

269 
evít_îr‹
;

270 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

271 
emôãr_îr‹
;

275 
	`•rötf
(
numbî
, "%d", 
vîsi⁄
->
maj‹
);

276 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

277 
NULL
, "èg:yaml.‹g,2002:öt", 
numbî
, -1,

278 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

279 
evít_îr‹
;

280 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

281 
emôãr_îr‹
;

285 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

286 
NULL
, "tag:yaml.org,2002:str", "minor", -1,

287 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

288 
evít_îr‹
;

289 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

290 
emôãr_îr‹
;

294 
	`•rötf
(
numbî
, "%d", 
vîsi⁄
->
mö‹
);

295 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

296 
NULL
, "èg:yaml.‹g,2002:öt", 
numbî
, -1,

297 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

298 
evít_îr‹
;

299 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

300 
emôãr_îr‹
;

304 i‡(!
	`yaml_m≠pög_íd_evít_öôülize
(&
ouçut_evít
))

305 
evít_îr‹
;

306 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

307 
emôãr_îr‹
;

312 i‡(
öput_evít
.
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t


313 !
öput_evít
.
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
)

315 
yaml_èg_dúe˘ive_t
 *
èg
;

319 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

320 
NULL
, "tag:yaml.org,2002:str", "tags", -1,

321 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

322 
evít_îr‹
;

323 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

324 
emôãr_îr‹
;

328 i‡(!
	`yaml_£quí˚_°¨t_evít_öôülize
(&
ouçut_evít
,

329 
NULL
, "tag:yaml.org,2002:seq", 1,

330 
YAML_BLOCK_SEQUENCE_STYLE
))

331 
evít_îr‹
;

332 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

333 
emôãr_îr‹
;

335 
èg
 = 
öput_evít
.
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t
;

336 
èg
 !
öput_evít
.
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
;

337 
èg
 ++)

341 i‡(!
	`yaml_m≠pög_°¨t_evít_öôülize
(&
ouçut_evít
,

342 
NULL
, "tag:yaml.org,2002:map", 1,

343 
YAML_FLOW_MAPPING_STYLE
))

344 
evít_îr‹
;

345 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

346 
emôãr_îr‹
;

350 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

351 
NULL
, "tag:yaml.org,2002:str", "handle", -1,

352 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

353 
evít_îr‹
;

354 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

355 
emôãr_îr‹
;

359 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

360 
NULL
, "tag:yaml.org,2002:str",

361 
èg
->
h™dÀ
, -1,

362 0, 1, 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
))

363 
evít_îr‹
;

364 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

365 
emôãr_îr‹
;

369 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

370 
NULL
, "tag:yaml.org,2002:str", "prefix", -1,

371 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

372 
evít_îr‹
;

373 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

374 
emôãr_îr‹
;

378 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

379 
NULL
, "tag:yaml.org,2002:str",

380 
èg
->
¥efix
, -1,

381 0, 1, 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
))

382 
evít_îr‹
;

383 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

384 
emôãr_îr‹
;

388 i‡(!
	`yaml_m≠pög_íd_evít_öôülize
(&
ouçut_evít
))

389 
evít_îr‹
;

390 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

391 
emôãr_îr‹
;

396 i‡(!
	`yaml_£quí˚_íd_evít_öôülize
(&
ouçut_evít
))

397 
evít_îr‹
;

398 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

399 
emôãr_îr‹
;

404 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

405 
NULL
, "tag:yaml.org,2002:str", "implicit", -1,

406 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

407 
evít_îr‹
;

408 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

409 
emôãr_îr‹
;

413 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

414 
NULL
, "tag:yaml.org,2002:bool",

415 (
öput_evít
.
d©a
.
documít_°¨t
.
im∂icô
 ?

417 1, 0, 
YAML_PLAIN_SCALAR_STYLE
))

418 
evít_îr‹
;

419 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

420 
emôãr_îr‹
;

424 
YAML_DOCUMENT_END_EVENT
:

428 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

429 
NULL
, "tag:yaml.org,2002:str", "type", -1,

430 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

431 
evít_îr‹
;

432 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

433 
emôãr_îr‹
;

437 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

438 
NULL
, "tag:yaml.org,2002:str", "DOCUMENT-END", -1,

439 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

440 
evít_îr‹
;

441 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

442 
emôãr_îr‹
;

446 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

447 
NULL
, "tag:yaml.org,2002:str", "implicit", -1,

448 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

449 
evít_îr‹
;

450 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

451 
emôãr_îr‹
;

455 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

456 
NULL
, "tag:yaml.org,2002:bool",

457 (
öput_evít
.
d©a
.
documít_íd
.
im∂icô
 ?

459 1, 0, 
YAML_PLAIN_SCALAR_STYLE
))

460 
evít_îr‹
;

461 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

462 
emôãr_îr‹
;

466 
YAML_ALIAS_EVENT
:

470 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

471 
NULL
, "tag:yaml.org,2002:str", "type", -1,

472 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

473 
evít_îr‹
;

474 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

475 
emôãr_îr‹
;

479 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

480 
NULL
, "tag:yaml.org,2002:str", "ALIAS", -1,

481 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

482 
evít_îr‹
;

483 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

484 
emôãr_îr‹
;

488 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

489 
NULL
, "tag:yaml.org,2002:str", "anchor", -1,

490 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

491 
evít_îr‹
;

492 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

493 
emôãr_îr‹
;

497 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

498 
NULL
, "tag:yaml.org,2002:str",

499 
öput_evít
.
d©a
.
Æüs
.
™ch‹
, -1,

500 0, 1, 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
))

501 
evít_îr‹
;

502 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

503 
emôãr_îr‹
;

507 
YAML_SCALAR_EVENT
:

511 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

512 
NULL
, "tag:yaml.org,2002:str", "type", -1,

513 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

514 
evít_îr‹
;

515 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

516 
emôãr_îr‹
;

520 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

521 
NULL
, "tag:yaml.org,2002:str", "SCALAR", -1,

522 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

523 
evít_îr‹
;

524 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

525 
emôãr_îr‹
;

529 i‡(
öput_evít
.
d©a
.
sˇœr
.
™ch‹
)

533 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

534 
NULL
, "tag:yaml.org,2002:str", "anchor", -1,

535 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

536 
evít_îr‹
;

537 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

538 
emôãr_îr‹
;

542 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

543 
NULL
, "tag:yaml.org,2002:str",

544 
öput_evít
.
d©a
.
sˇœr
.
™ch‹
, -1,

545 0, 1, 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
))

546 
evít_îr‹
;

547 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

548 
emôãr_îr‹
;

553 i‡(
öput_evít
.
d©a
.
sˇœr
.
èg
)

557 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

558 
NULL
, "tag:yaml.org,2002:str", "tag", -1,

559 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

560 
evít_îr‹
;

561 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

562 
emôãr_îr‹
;

566 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

567 
NULL
, "tag:yaml.org,2002:str",

568 
öput_evít
.
d©a
.
sˇœr
.
èg
, -1,

569 0, 1, 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
))

570 
evít_îr‹
;

571 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

572 
emôãr_îr‹
;

579 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

580 
NULL
, "tag:yaml.org,2002:str", "value", -1,

581 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

582 
evít_îr‹
;

583 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

584 
emôãr_îr‹
;

588 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

589 
NULL
, "tag:yaml.org,2002:str",

590 
öput_evít
.
d©a
.
sˇœr
.
vÆue
,

591 
öput_evít
.
d©a
.
sˇœr
.
Àngth
,

592 0, 1, 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
))

593 
evít_îr‹
;

594 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

595 
emôãr_îr‹
;

601 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

602 
NULL
, "tag:yaml.org,2002:str", "implicit", -1,

603 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

604 
evít_îr‹
;

605 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

606 
emôãr_îr‹
;

610 i‡(!
	`yaml_m≠pög_°¨t_evít_öôülize
(&
ouçut_evít
,

611 
NULL
, "tag:yaml.org,2002:map", 1,

612 
YAML_FLOW_MAPPING_STYLE
))

613 
evít_îr‹
;

614 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

615 
emôãr_îr‹
;

619 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

620 
NULL
, "tag:yaml.org,2002:str", "plain", -1,

621 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

622 
evít_îr‹
;

623 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

624 
emôãr_îr‹
;

628 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

629 
NULL
, "tag:yaml.org,2002:bool",

630 (
öput_evít
.
d©a
.
sˇœr
.
∂aö_im∂icô
 ?

632 1, 0, 
YAML_PLAIN_SCALAR_STYLE
))

633 
evít_îr‹
;

634 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

635 
emôãr_îr‹
;

639 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

640 
NULL
, "tag:yaml.org,2002:str", "non-plain", -1,

641 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

642 
evít_îr‹
;

643 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

644 
emôãr_îr‹
;

648 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

649 
NULL
, "tag:yaml.org,2002:bool",

650 (
öput_evít
.
d©a
.
sˇœr
.
quŸed_im∂icô
 ?

652 1, 0, 
YAML_PLAIN_SCALAR_STYLE
))

653 
evít_îr‹
;

654 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

655 
emôãr_îr‹
;

659 i‡(!
	`yaml_m≠pög_íd_evít_öôülize
(&
ouçut_evít
))

660 
evít_îr‹
;

661 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

662 
emôãr_îr‹
;

666 i‡(
öput_evít
.
d©a
.
sˇœr
.
°yÀ
)

668 
yaml_sˇœr_°yÀ_t
 
°yÀ
 = 
öput_evít
.
d©a
.
sˇœr
.style;

672 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

673 
NULL
, "tag:yaml.org,2002:str", "style", -1,

674 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

675 
evít_îr‹
;

676 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

677 
emôãr_îr‹
;

681 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

682 
NULL
, "tag:yaml.org,2002:str",

683 (
°yÀ
 =
YAML_PLAIN_SCALAR_STYLE
 ? "plain" :

684 
°yÀ
 =
YAML_SINGLE_QUOTED_SCALAR_STYLE
 ?

686 
°yÀ
 =
YAML_DOUBLE_QUOTED_SCALAR_STYLE
 ?

688 
°yÀ
 =
YAML_LITERAL_SCALAR_STYLE
 ? "literal" :

689 
°yÀ
 =
YAML_FOLDED_SCALAR_STYLE
 ? "folded" :

691 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

692 
evít_îr‹
;

693 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

694 
emôãr_îr‹
;

699 
YAML_SEQUENCE_START_EVENT
:

703 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

704 
NULL
, "tag:yaml.org,2002:str", "type", -1,

705 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

706 
evít_îr‹
;

707 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

708 
emôãr_îr‹
;

712 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

713 
NULL
, "tag:yaml.org,2002:str", "SEQUENCE-START", -1,

714 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

715 
evít_îr‹
;

716 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

717 
emôãr_îr‹
;

721 i‡(
öput_evít
.
d©a
.
£quí˚_°¨t
.
™ch‹
)

725 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

726 
NULL
, "tag:yaml.org,2002:str", "anchor", -1,

727 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

728 
evít_îr‹
;

729 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

730 
emôãr_îr‹
;

734 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

735 
NULL
, "tag:yaml.org,2002:str",

736 
öput_evít
.
d©a
.
£quí˚_°¨t
.
™ch‹
, -1,

737 0, 1, 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
))

738 
evít_îr‹
;

739 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

740 
emôãr_îr‹
;

745 i‡(
öput_evít
.
d©a
.
£quí˚_°¨t
.
èg
)

749 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

750 
NULL
, "tag:yaml.org,2002:str", "tag", -1,

751 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

752 
evít_îr‹
;

753 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

754 
emôãr_îr‹
;

758 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

759 
NULL
, "tag:yaml.org,2002:str",

760 
öput_evít
.
d©a
.
£quí˚_°¨t
.
èg
, -1,

761 0, 1, 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
))

762 
evít_îr‹
;

763 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

764 
emôãr_îr‹
;

769 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

770 
NULL
, "tag:yaml.org,2002:str", "implicit", -1,

771 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

772 
evít_îr‹
;

773 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

774 
emôãr_îr‹
;

778 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

779 
NULL
, "tag:yaml.org,2002:bool",

780 (
öput_evít
.
d©a
.
£quí˚_°¨t
.
im∂icô
 ?

782 1, 0, 
YAML_PLAIN_SCALAR_STYLE
))

783 
evít_îr‹
;

784 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

785 
emôãr_îr‹
;

789 i‡(
öput_evít
.
d©a
.
£quí˚_°¨t
.
°yÀ
)

791 
yaml_£quí˚_°yÀ_t
 
°yÀ


792 
öput_evít
.
d©a
.
£quí˚_°¨t
.
°yÀ
;

796 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

797 
NULL
, "tag:yaml.org,2002:str", "style", -1,

798 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

799 
evít_îr‹
;

800 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

801 
emôãr_îr‹
;

805 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

806 
NULL
, "tag:yaml.org,2002:str",

807 (
°yÀ
 =
YAML_BLOCK_SEQUENCE_STYLE
 ? "block" :

808 
°yÀ
 =
YAML_FLOW_SEQUENCE_STYLE
 ? "flow" :

810 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

811 
evít_îr‹
;

812 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

813 
emôãr_îr‹
;

818 
YAML_SEQUENCE_END_EVENT
:

822 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

823 
NULL
, "tag:yaml.org,2002:str", "type", -1,

824 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

825 
evít_îr‹
;

826 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

827 
emôãr_îr‹
;

831 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

832 
NULL
, "tag:yaml.org,2002:str", "SEQUENCE-END", -1,

833 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

834 
evít_îr‹
;

835 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

836 
emôãr_îr‹
;

840 
YAML_MAPPING_START_EVENT
:

844 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

845 
NULL
, "tag:yaml.org,2002:str", "type", -1,

846 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

847 
evít_îr‹
;

848 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

849 
emôãr_îr‹
;

853 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

854 
NULL
, "tag:yaml.org,2002:str", "MAPPING-START", -1,

855 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

856 
evít_îr‹
;

857 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

858 
emôãr_îr‹
;

862 i‡(
öput_evít
.
d©a
.
m≠pög_°¨t
.
™ch‹
)

866 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

867 
NULL
, "tag:yaml.org,2002:str", "anchor", -1,

868 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

869 
evít_îr‹
;

870 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

871 
emôãr_îr‹
;

875 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

876 
NULL
, "tag:yaml.org,2002:str",

877 
öput_evít
.
d©a
.
m≠pög_°¨t
.
™ch‹
, -1,

878 0, 1, 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
))

879 
evít_îr‹
;

880 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

881 
emôãr_îr‹
;

886 i‡(
öput_evít
.
d©a
.
m≠pög_°¨t
.
èg
)

890 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

891 
NULL
, "tag:yaml.org,2002:str", "tag", -1,

892 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

893 
evít_îr‹
;

894 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

895 
emôãr_îr‹
;

899 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

900 
NULL
, "tag:yaml.org,2002:str",

901 
öput_evít
.
d©a
.
m≠pög_°¨t
.
èg
, -1,

902 0, 1, 
YAML_DOUBLE_QUOTED_SCALAR_STYLE
))

903 
evít_îr‹
;

904 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

905 
emôãr_îr‹
;

910 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

911 
NULL
, "tag:yaml.org,2002:str", "implicit", -1,

912 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

913 
evít_îr‹
;

914 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

915 
emôãr_îr‹
;

919 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

920 
NULL
, "tag:yaml.org,2002:bool",

921 (
öput_evít
.
d©a
.
m≠pög_°¨t
.
im∂icô
 ?

923 1, 0, 
YAML_PLAIN_SCALAR_STYLE
))

924 
evít_îr‹
;

925 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

926 
emôãr_îr‹
;

930 i‡(
öput_evít
.
d©a
.
m≠pög_°¨t
.
°yÀ
)

932 
yaml_m≠pög_°yÀ_t
 
°yÀ


933 
öput_evít
.
d©a
.
m≠pög_°¨t
.
°yÀ
;

937 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

938 
NULL
, "tag:yaml.org,2002:str", "style", -1,

939 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

940 
evít_îr‹
;

941 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

942 
emôãr_îr‹
;

946 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

947 
NULL
, "tag:yaml.org,2002:str",

948 (
°yÀ
 =
YAML_BLOCK_MAPPING_STYLE
 ? "block" :

949 
°yÀ
 =
YAML_FLOW_MAPPING_STYLE
 ? "flow" :

951 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

952 
evít_îr‹
;

953 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

954 
emôãr_îr‹
;

959 
YAML_MAPPING_END_EVENT
:

963 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

964 
NULL
, "tag:yaml.org,2002:str", "type", -1,

965 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

966 
evít_îr‹
;

967 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

968 
emôãr_îr‹
;

972 i‡(!
	`yaml_sˇœr_evít_öôülize
(&
ouçut_evít
,

973 
NULL
, "tag:yaml.org,2002:str", "MAPPING-END", -1,

974 1, 1, 
YAML_PLAIN_SCALAR_STYLE
))

975 
evít_îr‹
;

976 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

977 
emôãr_îr‹
;

988 
	`yaml_evít_dñëe
(&
öput_evít
);

992 i‡(!
	`yaml_m≠pög_íd_evít_öôülize
(&
ouçut_evít
))

993 
evít_îr‹
;

994 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

995 
emôãr_îr‹
;

1000 i‡(!
	`yaml_£quí˚_íd_evít_öôülize
(&
ouçut_evít
))

1001 
evít_îr‹
;

1002 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

1003 
emôãr_îr‹
;

1007 i‡(!
	`yaml_documít_íd_evít_öôülize
(&
ouçut_evít
, 0))

1008 
evít_îr‹
;

1009 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

1010 
emôãr_îr‹
;

1014 i‡(!
	`yaml_°ªam_íd_evít_öôülize
(&
ouçut_evít
))

1015 
evít_îr‹
;

1016 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
ouçut_evít
))

1017 
emôãr_îr‹
;

1019 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

1020 
	`yaml_emôãr_dñëe
(&
emôãr
);

1024 
∑r£r_îr‹
:

1028 
∑r£r
.
îr‹
)

1030 
YAML_MEMORY_ERROR
:

1031 
	`Ârötf
(
°dîr
, "MemoryÉrror: NotÉnough memory forÖarsing\n");

1034 
YAML_READER_ERROR
:

1035 i‡(
∑r£r
.
¥obÀm_vÆue
 != -1) {

1036 
	`Ârötf
(
°dîr
, "RódîÉº‹: %s: #%Xáà%d\n", 
∑r£r
.
¥obÀm
,

1037 
∑r£r
.
¥obÀm_vÆue
,Ö¨£r.
¥obÀm_off£t
);

1040 
	`Ârötf
(
°dîr
, "RódîÉº‹: %†© %d\n", 
∑r£r
.
¥obÀm
,

1041 
∑r£r
.
¥obÀm_off£t
);

1045 
YAML_SCANNER_ERROR
:

1046 i‡(
∑r£r
.
c⁄ãxt
) {

1047 
	`Ârötf
(
°dîr
, "ScannerÉrror: %sátÜine %d, column %d\n"

1048 "%†©Üöê%d, cﬁum¿%d\n", 
∑r£r
.
c⁄ãxt
,

1049 
∑r£r
.
c⁄ãxt_m¨k
.
löe
+1,Ö¨£r.c⁄ãxt_m¨k.
cﬁumn
+1,

1050 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

1051 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

1054 
	`Ârötf
(
°dîr
, "ScannerÉrror: %sátÜine %d, column %d\n",

1055 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

1056 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

1060 
YAML_PARSER_ERROR
:

1061 i‡(
∑r£r
.
c⁄ãxt
) {

1062 
	`Ârötf
(
°dîr
, "ParserÉrror: %sátÜine %d, column %d\n"

1063 "%†©Üöê%d, cﬁum¿%d\n", 
∑r£r
.
c⁄ãxt
,

1064 
∑r£r
.
c⁄ãxt_m¨k
.
löe
+1,Ö¨£r.c⁄ãxt_m¨k.
cﬁumn
+1,

1065 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

1066 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

1069 
	`Ârötf
(
°dîr
, "ParserÉrror: %sátÜine %d, column %d\n",

1070 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

1071 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

1077 
	`Ârötf
(
°dîr
, "InternalÉrror\n");

1081 
	`yaml_evít_dñëe
(&
öput_evít
);

1082 
	`yaml_evít_dñëe
(&
ouçut_evít
);

1083 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

1084 
	`yaml_emôãr_dñëe
(&
emôãr
);

1088 
emôãr_îr‹
:

1092 
emôãr
.
îr‹
)

1094 
YAML_MEMORY_ERROR
:

1095 
	`Ârötf
(
°dîr
, "MemoryÉrror: NotÉnough memory forÉmitting\n");

1098 
YAML_WRITER_ERROR
:

1099 
	`Ârötf
(
°dîr
, "WrôîÉº‹: %s\n", 
emôãr
.
¥obÀm
);

1102 
YAML_EMITTER_ERROR
:

1103 
	`Ârötf
(
°dîr
, "Emôã∏îr‹: %s\n", 
emôãr
.
¥obÀm
);

1108 
	`Ârötf
(
°dîr
, "InternalÉrror\n");

1112 
	`yaml_evít_dñëe
(&
öput_evít
);

1113 
	`yaml_evít_dñëe
(&
ouçut_evít
);

1114 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

1115 
	`yaml_emôãr_dñëe
(&
emôãr
);

1119 
evít_îr‹
:

1121 
	`Ârötf
(
°dîr
, "MemoryÉrror: NotÉnough memory for creatingánÉvent\n");

1123 
	`yaml_evít_dñëe
(&
öput_evít
);

1124 
	`yaml_evít_dñëe
(&
ouçut_evít
);

1125 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

1126 
	`yaml_emôãr_dñëe
(&
emôãr
);

1129 
	}
}

	@contrib/yaml-0.1.4/tests/example-reformatter-alt.c

2 
	~<yaml.h
>

4 
	~<°dlib.h
>

5 
	~<°dio.h
>

8 
	$maö
(
¨gc
, *
¨gv
[])

10 
hñp
 = 0;

11 
ˇn⁄iˇl
 = 0;

12 
unicode
 = 0;

13 
k
;

14 
d⁄e
 = 0;

16 
yaml_∑r£r_t
 
∑r£r
;

17 
yaml_emôãr_t
 
emôãr
;

18 
yaml_documít_t
 
documít
;

22 
	`mem£t
(&
∑r£r
, 0, (parser));

23 
	`mem£t
(&
emôãr
, 0, (emitter));

24 
	`mem£t
(&
documít
, 0, (document));

28 
k
 = 1; k < 
¨gc
; k ++)

30 i‡(
	`°rcmp
(
¨gv
[
k
], "-h") == 0

31 || 
	`°rcmp
(
¨gv
[
k
], "--help") == 0) {

32 
hñp
 = 1;

35 i‡(
	`°rcmp
(
¨gv
[
k
], "-c") == 0

36 || 
	`°rcmp
(
¨gv
[
k
], "--canonical") == 0) {

37 
ˇn⁄iˇl
 = 1;

40 i‡(
	`°rcmp
(
¨gv
[
k
], "-u") == 0

41 || 
	`°rcmp
(
¨gv
[
k
], "--unicode") == 0) {

42 
unicode
 = 1;

46 
	`Ârötf
(
°dîr
, "Unrecognized option: %s\n"

48 
¨gv
[
k
],árgv[0]);

55 i‡(
hñp
)

57 
	`¥ötf
("%s [--canonical] [--unicode] <input >output\n"

62 
¨gv
[0],árgv[0]);

68 i‡(!
	`yaml_∑r£r_öôülize
(&
∑r£r
))

69 
∑r£r_îr‹
;

71 i‡(!
	`yaml_emôãr_öôülize
(&
emôãr
))

72 
emôãr_îr‹
;

76 
	`yaml_∑r£r_£t_öput_fûe
(&
∑r£r
, 
°dö
);

80 
	`yaml_emôãr_£t_ouçut_fûe
(&
emôãr
, 
°dout
);

82 
	`yaml_emôãr_£t_ˇn⁄iˇl
(&
emôãr
, 
ˇn⁄iˇl
);

83 
	`yaml_emôãr_£t_unicode
(&
emôãr
, 
unicode
);

87 !
d⁄e
)

91 i‡(!
	`yaml_∑r£r_lﬂd
(&
∑r£r
, &
documít
))

92 
∑r£r_îr‹
;

96 i‡(!
	`yaml_documít_gë_roŸ_node
(&
documít
)) {

97 
d⁄e
 = 1;

102 i‡(!
	`yaml_emôãr_dump
(&
emôãr
, &
documít
))

103 
emôãr_îr‹
;

106 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

107 
	`yaml_emôãr_dñëe
(&
emôãr
);

111 
∑r£r_îr‹
:

115 
∑r£r
.
îr‹
)

117 
YAML_MEMORY_ERROR
:

118 
	`Ârötf
(
°dîr
, "MemoryÉrror: NotÉnough memory forÖarsing\n");

121 
YAML_READER_ERROR
:

122 i‡(
∑r£r
.
¥obÀm_vÆue
 != -1) {

123 
	`Ârötf
(
°dîr
, "RódîÉº‹: %s: #%Xáà%d\n", 
∑r£r
.
¥obÀm
,

124 
∑r£r
.
¥obÀm_vÆue
,Ö¨£r.
¥obÀm_off£t
);

127 
	`Ârötf
(
°dîr
, "RódîÉº‹: %†© %d\n", 
∑r£r
.
¥obÀm
,

128 
∑r£r
.
¥obÀm_off£t
);

132 
YAML_SCANNER_ERROR
:

133 i‡(
∑r£r
.
c⁄ãxt
) {

134 
	`Ârötf
(
°dîr
, "ScannerÉrror: %sátÜine %d, column %d\n"

135 "%†©Üöê%d, cﬁum¿%d\n", 
∑r£r
.
c⁄ãxt
,

136 
∑r£r
.
c⁄ãxt_m¨k
.
löe
+1,Ö¨£r.c⁄ãxt_m¨k.
cﬁumn
+1,

137 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

138 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

141 
	`Ârötf
(
°dîr
, "ScannerÉrror: %sátÜine %d, column %d\n",

142 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

143 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

147 
YAML_PARSER_ERROR
:

148 i‡(
∑r£r
.
c⁄ãxt
) {

149 
	`Ârötf
(
°dîr
, "ParserÉrror: %sátÜine %d, column %d\n"

150 "%†©Üöê%d, cﬁum¿%d\n", 
∑r£r
.
c⁄ãxt
,

151 
∑r£r
.
c⁄ãxt_m¨k
.
löe
+1,Ö¨£r.c⁄ãxt_m¨k.
cﬁumn
+1,

152 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

153 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

156 
	`Ârötf
(
°dîr
, "ParserÉrror: %sátÜine %d, column %d\n",

157 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

158 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

162 
YAML_COMPOSER_ERROR
:

163 i‡(
∑r£r
.
c⁄ãxt
) {

164 
	`Ârötf
(
°dîr
, "ComposerÉrror: %sátÜine %d, column %d\n"

165 "%†©Üöê%d, cﬁum¿%d\n", 
∑r£r
.
c⁄ãxt
,

166 
∑r£r
.
c⁄ãxt_m¨k
.
löe
+1,Ö¨£r.c⁄ãxt_m¨k.
cﬁumn
+1,

167 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

168 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

171 
	`Ârötf
(
°dîr
, "ComposerÉrror: %sátÜine %d, column %d\n",

172 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

173 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

179 
	`Ârötf
(
°dîr
, "InternalÉrror\n");

183 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

184 
	`yaml_emôãr_dñëe
(&
emôãr
);

188 
emôãr_îr‹
:

192 
emôãr
.
îr‹
)

194 
YAML_MEMORY_ERROR
:

195 
	`Ârötf
(
°dîr
, "MemoryÉrror: NotÉnough memory forÉmitting\n");

198 
YAML_WRITER_ERROR
:

199 
	`Ârötf
(
°dîr
, "WrôîÉº‹: %s\n", 
emôãr
.
¥obÀm
);

202 
YAML_EMITTER_ERROR
:

203 
	`Ârötf
(
°dîr
, "Emôã∏îr‹: %s\n", 
emôãr
.
¥obÀm
);

208 
	`Ârötf
(
°dîr
, "InternalÉrror\n");

212 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

213 
	`yaml_emôãr_dñëe
(&
emôãr
);

216 
	}
}

	@contrib/yaml-0.1.4/tests/example-reformatter.c

2 
	~<yaml.h
>

4 
	~<°dlib.h
>

5 
	~<°dio.h
>

8 
	$maö
(
¨gc
, *
¨gv
[])

10 
hñp
 = 0;

11 
ˇn⁄iˇl
 = 0;

12 
unicode
 = 0;

13 
k
;

14 
d⁄e
 = 0;

16 
yaml_∑r£r_t
 
∑r£r
;

17 
yaml_emôãr_t
 
emôãr
;

18 
yaml_evít_t
 
evít
;

22 
	`mem£t
(&
∑r£r
, 0, (parser));

23 
	`mem£t
(&
emôãr
, 0, (emitter));

24 
	`mem£t
(&
evít
, 0, (event));

28 
k
 = 1; k < 
¨gc
; k ++)

30 i‡(
	`°rcmp
(
¨gv
[
k
], "-h") == 0

31 || 
	`°rcmp
(
¨gv
[
k
], "--help") == 0) {

32 
hñp
 = 1;

35 i‡(
	`°rcmp
(
¨gv
[
k
], "-c") == 0

36 || 
	`°rcmp
(
¨gv
[
k
], "--canonical") == 0) {

37 
ˇn⁄iˇl
 = 1;

40 i‡(
	`°rcmp
(
¨gv
[
k
], "-u") == 0

41 || 
	`°rcmp
(
¨gv
[
k
], "--unicode") == 0) {

42 
unicode
 = 1;

46 
	`Ârötf
(
°dîr
, "Unrecognized option: %s\n"

48 
¨gv
[
k
],árgv[0]);

55 i‡(
hñp
)

57 
	`¥ötf
("%s [--canonical] [--unicode] <input >output\n"

62 
¨gv
[0],árgv[0]);

68 i‡(!
	`yaml_∑r£r_öôülize
(&
∑r£r
))

69 
∑r£r_îr‹
;

71 i‡(!
	`yaml_emôãr_öôülize
(&
emôãr
))

72 
emôãr_îr‹
;

76 
	`yaml_∑r£r_£t_öput_fûe
(&
∑r£r
, 
°dö
);

80 
	`yaml_emôãr_£t_ouçut_fûe
(&
emôãr
, 
°dout
);

82 
	`yaml_emôãr_£t_ˇn⁄iˇl
(&
emôãr
, 
ˇn⁄iˇl
);

83 
	`yaml_emôãr_£t_unicode
(&
emôãr
, 
unicode
);

87 !
d⁄e
)

91 i‡(!
	`yaml_∑r£r_∑r£
(&
∑r£r
, &
evít
))

92 
∑r£r_îr‹
;

96 i‡(
evít
.
ty≥
 =
YAML_STREAM_END_EVENT
) {

97 
d⁄e
 = 1;

102 i‡(!
	`yaml_emôãr_emô
(&
emôãr
, &
evít
))

103 
emôãr_îr‹
;

106 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

107 
	`yaml_emôãr_dñëe
(&
emôãr
);

111 
∑r£r_îr‹
:

115 
∑r£r
.
îr‹
)

117 
YAML_MEMORY_ERROR
:

118 
	`Ârötf
(
°dîr
, "MemoryÉrror: NotÉnough memory forÖarsing\n");

121 
YAML_READER_ERROR
:

122 i‡(
∑r£r
.
¥obÀm_vÆue
 != -1) {

123 
	`Ârötf
(
°dîr
, "RódîÉº‹: %s: #%Xáà%d\n", 
∑r£r
.
¥obÀm
,

124 
∑r£r
.
¥obÀm_vÆue
,Ö¨£r.
¥obÀm_off£t
);

127 
	`Ârötf
(
°dîr
, "RódîÉº‹: %†© %d\n", 
∑r£r
.
¥obÀm
,

128 
∑r£r
.
¥obÀm_off£t
);

132 
YAML_SCANNER_ERROR
:

133 i‡(
∑r£r
.
c⁄ãxt
) {

134 
	`Ârötf
(
°dîr
, "ScannerÉrror: %sátÜine %d, column %d\n"

135 "%†©Üöê%d, cﬁum¿%d\n", 
∑r£r
.
c⁄ãxt
,

136 
∑r£r
.
c⁄ãxt_m¨k
.
löe
+1,Ö¨£r.c⁄ãxt_m¨k.
cﬁumn
+1,

137 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

138 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

141 
	`Ârötf
(
°dîr
, "ScannerÉrror: %sátÜine %d, column %d\n",

142 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

143 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

147 
YAML_PARSER_ERROR
:

148 i‡(
∑r£r
.
c⁄ãxt
) {

149 
	`Ârötf
(
°dîr
, "ParserÉrror: %sátÜine %d, column %d\n"

150 "%†©Üöê%d, cﬁum¿%d\n", 
∑r£r
.
c⁄ãxt
,

151 
∑r£r
.
c⁄ãxt_m¨k
.
löe
+1,Ö¨£r.c⁄ãxt_m¨k.
cﬁumn
+1,

152 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

153 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

156 
	`Ârötf
(
°dîr
, "ParserÉrror: %sátÜine %d, column %d\n",

157 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_m¨k
.
löe
+1,

158 
∑r£r
.
¥obÀm_m¨k
.
cﬁumn
+1);

164 
	`Ârötf
(
°dîr
, "InternalÉrror\n");

168 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

169 
	`yaml_emôãr_dñëe
(&
emôãr
);

173 
emôãr_îr‹
:

177 
emôãr
.
îr‹
)

179 
YAML_MEMORY_ERROR
:

180 
	`Ârötf
(
°dîr
, "MemoryÉrror: NotÉnough memory forÉmitting\n");

183 
YAML_WRITER_ERROR
:

184 
	`Ârötf
(
°dîr
, "WrôîÉº‹: %s\n", 
emôãr
.
¥obÀm
);

187 
YAML_EMITTER_ERROR
:

188 
	`Ârötf
(
°dîr
, "Emôã∏îr‹: %s\n", 
emôãr
.
¥obÀm
);

193 
	`Ârötf
(
°dîr
, "InternalÉrror\n");

197 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

198 
	`yaml_emôãr_dñëe
(&
emôãr
);

201 
	}
}

	@contrib/yaml-0.1.4/tests/run-dumper.c

1 
	~<yaml.h
>

3 
	~<°dlib.h
>

4 
	~<°dio.h
>

5 
	~<°rög.h
>

7 #ifde‡
NDEBUG


8 #unde‡
NDEBUG


10 
	~<as£π.h
>

12 
	#BUFFER_SIZE
 65536

	)

13 
	#MAX_DOCUMENTS
 16

	)

15 
	$c›y_documít
(
yaml_documít_t
 *
documít_to
, yaml_documít_à*
documít_‰om
)

17 
yaml_node_t
 *
node
;

18 
yaml_node_ôem_t
 *
ôem
;

19 
yaml_node_∑ú_t
 *
∑ú
;

21 i‡(!
	`yaml_documít_öôülize
(
documít_to
, 
documít_‰om
->
vîsi⁄_dúe˘ive
,

22 
documít_‰om
->
èg_dúe˘ives
.
°¨t
,

23 
documít_‰om
->
èg_dúe˘ives
.
íd
,

24 
documít_‰om
->
°¨t_im∂icô
, documít_‰om->
íd_im∂icô
))

27 
node
 = 
documít_‰om
->
nodes
.
°¨t
;

28 
node
 < 
documít_‰om
->
nodes
.
t›
;Çode ++) {

29 
node
->
ty≥
) {

30 
YAML_SCALAR_NODE
:

31 i‡(!
	`yaml_documít_add_sˇœr
(
documít_to
, 
node
->
èg
,

32 
node
->
d©a
.
sˇœr
.
vÆue
,Çode->d©a.sˇœr.
Àngth
,

33 
node
->
d©a
.
sˇœr
.
°yÀ
)Ë
îr‹
;

35 
YAML_SEQUENCE_NODE
:

36 i‡(!
	`yaml_documít_add_£quí˚
(
documít_to
, 
node
->
èg
,

37 
node
->
d©a
.
£quí˚
.
°yÀ
)Ë
îr‹
;

39 
YAML_MAPPING_NODE
:

40 i‡(!
	`yaml_documít_add_m≠pög
(
documít_to
, 
node
->
èg
,

41 
node
->
d©a
.
m≠pög
.
°yÀ
)Ë
îr‹
;

44 
	`as£π
(0);

49 
node
 = 
documít_‰om
->
nodes
.
°¨t
;

50 
node
 < 
documít_‰om
->
nodes
.
t›
;Çode ++) {

51 
node
->
ty≥
) {

52 
YAML_SEQUENCE_NODE
:

53 
ôem
 = 
node
->
d©a
.
£quí˚
.
ôems
.
°¨t
;

54 
ôem
 < 
node
->
d©a
.
£quí˚
.
ôems
.
t›
; item ++) {

55 i‡(!
	`yaml_documít_≠≥nd_£quí˚_ôem
(
documít_to
,

56 
node
 - 
documít_‰om
->
nodes
.
°¨t
 + 1,

57 *
ôem
)Ë
îr‹
;

60 
YAML_MAPPING_NODE
:

61 
∑ú
 = 
node
->
d©a
.
m≠pög
.
∑ús
.
°¨t
;

62 
∑ú
 < 
node
->
d©a
.
m≠pög
.
∑ús
.
t›
;Öair ++) {

63 i‡(!
	`yaml_documít_≠≥nd_m≠pög_∑ú
(
documít_to
,

64 
node
 - 
documít_‰om
->
nodes
.
°¨t
 + 1,

65 
∑ú
->
key
,Öaú->
vÆue
)Ë
îr‹
;

74 
îr‹
:

75 
	`yaml_documít_dñëe
(
documít_to
);

77 
	}
}

79 
	$com∑ª_nodes
(
yaml_documít_t
 *
documít1
, 
ödex1
,

80 
yaml_documít_t
 *
documít2
, 
ödex2
)

82 
yaml_node_t
 *
node1
 = 
	`yaml_documít_gë_node
(
documít1
, 
ödex1
);

83 
yaml_node_t
 *
node2
 = 
	`yaml_documít_gë_node
(
documít2
, 
ödex2
);

84 
k
;

86 
	`as£π
(
node1
);

87 
	`as£π
(
node2
);

89 i‡(
node1
->
ty≥
 !
node2
->type)

92 i‡(
	`°rcmp
((*)
node1
->
èg
, (*)
node2
->tag) != 0)  0;

94 
node1
->
ty≥
) {

95 
YAML_SCALAR_NODE
:

96 i‡(
node1
->
d©a
.
sˇœr
.
Àngth
 !
node2
->data.scalar.length)

98 i‡(
	`°∫cmp
((*)
node1
->
d©a
.
sˇœr
.
vÆue
, (*)
node2
->data.scalar.value,

99 
node1
->
d©a
.
sˇœr
.
Àngth
) != 0)  0;

101 
YAML_SEQUENCE_NODE
:

102 i‡((
node1
->
d©a
.
£quí˚
.
ôems
.
t›
 -Çode1->d©a.£quí˚.ôems.
°¨t
) !=

103 (
node2
->
d©a
.
£quí˚
.
ôems
.
t›
 -Çode2->d©a.£quí˚.ôems.
°¨t
))

105 
k
 = 0; k < (
node1
->
d©a
.
£quí˚
.
ôems
.
t›
 -Çode1->d©a.£quí˚.ôems.
°¨t
); k ++) {

106 i‡(!
	`com∑ª_nodes
(
documít1
, 
node1
->
d©a
.
£quí˚
.
ôems
.
°¨t
[
k
],

107 
documít2
, 
node2
->
d©a
.
£quí˚
.
ôems
.
°¨t
[
k
]))  0;

110 
YAML_MAPPING_NODE
:

111 i‡((
node1
->
d©a
.
m≠pög
.
∑ús
.
t›
 -Çode1->d©a.m≠pög.∑ús.
°¨t
) !=

112 (
node2
->
d©a
.
m≠pög
.
∑ús
.
t›
 -Çode2->d©a.m≠pög.∑ús.
°¨t
))

114 
k
 = 0; k < (
node1
->
d©a
.
m≠pög
.
∑ús
.
t›
 -Çode1->d©a.m≠pög.∑ús.
°¨t
); k ++) {

115 i‡(!
	`com∑ª_nodes
(
documít1
, 
node1
->
d©a
.
m≠pög
.
∑ús
.
°¨t
[
k
].
key
,

116 
documít2
, 
node2
->
d©a
.
m≠pög
.
∑ús
.
°¨t
[
k
].
key
))  0;

117 i‡(!
	`com∑ª_nodes
(
documít1
, 
node1
->
d©a
.
m≠pög
.
∑ús
.
°¨t
[
k
].
vÆue
,

118 
documít2
, 
node2
->
d©a
.
m≠pög
.
∑ús
.
°¨t
[
k
].
vÆue
))  0;

122 
	`as£π
(0);

126 
	}
}

128 
	$com∑ª_documíts
(
yaml_documít_t
 *
documít1
, yaml_documít_à*
documít2
)

130 
k
;

132 i‡((
documít1
->
vîsi⁄_dúe˘ive
 && !
documít2
->version_directive)

133 || (!
documít1
->
vîsi⁄_dúe˘ive
 && 
documít2
->version_directive)

134 || (
documít1
->
vîsi⁄_dúe˘ive
 && 
documít2
->version_directive

135 && (
documít1
->
vîsi⁄_dúe˘ive
->
maj‹
 !
documít2
->version_directive->major

136 || 
documít1
->
vîsi⁄_dúe˘ive
->
mö‹
 !
documít2
->version_directive->minor)))

139 i‡((
documít1
->
èg_dúe˘ives
.
íd
 - documít1->èg_dúe˘ives.
°¨t
) !=

140 (
documít2
->
èg_dúe˘ives
.
íd
 - documít2->èg_dúe˘ives.
°¨t
))

142 
k
 = 0; k < (
documít1
->
èg_dúe˘ives
.
íd
 - documít1->èg_dúe˘ives.
°¨t
); k ++) {

143 i‡((
	`°rcmp
((*)
documít1
->
èg_dúe˘ives
.
°¨t
[
k
].
h™dÀ
,

144 (*)
documít2
->
èg_dúe˘ives
.
°¨t
[
k
].
h™dÀ
) != 0)

145 || (
	`°rcmp
((*)
documít1
->
èg_dúe˘ives
.
°¨t
[
k
].
¥efix
,

146 (*)
documít2
->
èg_dúe˘ives
.
°¨t
[
k
].
¥efix
) != 0))

150 i‡((
documít1
->
nodes
.
t›
 - documít1->nodes.
°¨t
) !=

151 (
documít2
->
nodes
.
t›
 - documít2->nodes.
°¨t
))

154 i‡(
documít1
->
nodes
.
t›
 !documít1->nodes.
°¨t
) {

155 i‡(!
	`com∑ª_nodes
(
documít1
, 1, 
documít2
, 1))

160 
	}
}

162 
	$¥öt_ouçut
(*
«me
, *
buf„r
, 
size_t
 
size
, 
cou¡
)

164 
FILE
 *
fûe
;

165 
d©a
[
BUFFER_SIZE
];

166 
size_t
 
d©a_size
 = 1;

167 
size_t
 
tŸÆ_size
 = 0;

168 i‡(
cou¡
 >= 0) {

169 
	`¥ötf
("FAILED (©Åhêdocumíà#%d)\nSOURCE:\n", 
cou¡
+1);

171 
fûe
 = 
	`f›í
(
«me
, "rb");

172 
	`as£π
(
fûe
);

173 
d©a_size
 > 0) {

174 
d©a_size
 = 
	`‰ód
(
d©a
, 1, 
BUFFER_SIZE
, 
fûe
);

175 
	`as£π
(!
	`„º‹
(
fûe
));

176 i‡(!
d©a_size
) ;

177 
	`as£π
(
	`fwrôe
(
d©a
, 1, 
d©a_size
, 
°dout
) == data_size);

178 
tŸÆ_size
 +
d©a_size
;

179 i‡(
	`„of
(
fûe
)) ;

181 
	`f˛o£
(
fûe
);

182 
	`¥ötf
("#### (Àngth: %d)\n", 
tŸÆ_size
);

183 
	`¥ötf
("OUTPUT:\n%s#### (Àngth: %d)\n", 
buf„r
, 
size
);

185 
	}
}

188 
	$maö
(
¨gc
, *
¨gv
[])

190 
numbî
;

191 
ˇn⁄iˇl
 = 0;

192 
unicode
 = 0;

194 
numbî
 = 1;

195 
numbî
 < 
¨gc
) {

196 i‡(
	`°rcmp
(
¨gv
[
numbî
], "-c") == 0) {

197 
ˇn⁄iˇl
 = 1;

199 i‡(
	`°rcmp
(
¨gv
[
numbî
], "-u") == 0) {

200 
unicode
 = 1;

202 i‡(
¨gv
[
numbî
][0] == '-') {

203 
	`¥ötf
("Unknow¿›ti⁄: '%s'\n", 
¨gv
[
numbî
]);

206 i‡(
¨gv
[
numbî
][0] == '-') {

207 i‡(
numbî
 < 
¨gc
-1) {

208 
	`memmove
(
¨gv
+
numbî
,árgv+numbî+1, (
¨gc
-number-1)*(*));

210 
¨gc
 --;

213 
numbî
 ++;

217 i‡(
¨gc
 < 2) {

218 
	`¥ötf
("Ußge: %†[-c] [-u] fûe1.yam»...\n", 
¨gv
[0]);

222 
numbî
 = 1;Çumbî < 
¨gc
;Çumber ++)

224 
FILE
 *
fûe
;

225 
yaml_∑r£r_t
 
∑r£r
;

226 
yaml_emôãr_t
 
emôãr
;

228 
yaml_documít_t
 
documít
;

229 
buf„r
[
BUFFER_SIZE
];

230 
size_t
 
wrôãn
 = 0;

231 
yaml_documít_t
 
documíts
[
MAX_DOCUMENTS
];

232 
size_t
 
documít_numbî
 = 0;

233 
d⁄e
 = 0;

234 
cou¡
 = 0;

235 
îr‹
 = 0;

236 
k
;

237 
	`mem£t
(
buf„r
, 0, 
BUFFER_SIZE
);

238 
	`mem£t
(
documíts
, 0, 
MAX_DOCUMENTS
*(
yaml_documít_t
));

240 
	`¥ötf
("[%d] Lﬂdög, dumpög,ándÜﬂdögágaö '%s': ", 
numbî
, 
¨gv
[number]);

241 
	`fÊush
(
°dout
);

243 
fûe
 = 
	`f›í
(
¨gv
[
numbî
], "rb");

244 
	`as£π
(
fûe
);

246 
	`as£π
(
	`yaml_∑r£r_öôülize
(&
∑r£r
));

247 
	`yaml_∑r£r_£t_öput_fûe
(&
∑r£r
, 
fûe
);

248 
	`as£π
(
	`yaml_emôãr_öôülize
(&
emôãr
));

249 i‡(
ˇn⁄iˇl
) {

250 
	`yaml_emôãr_£t_ˇn⁄iˇl
(&
emôãr
, 1);

252 i‡(
unicode
) {

253 
	`yaml_emôãr_£t_unicode
(&
emôãr
, 1);

255 
	`yaml_emôãr_£t_ouçut_°rög
(&
emôãr
, 
buf„r
, 
BUFFER_SIZE
, &
wrôãn
);

256 
	`yaml_emôãr_›í
(&
emôãr
);

258 !
d⁄e
)

260 i‡(!
	`yaml_∑r£r_lﬂd
(&
∑r£r
, &
documít
)) {

261 
îr‹
 = 1;

265 
d⁄e
 = (!
	`yaml_documít_gë_roŸ_node
(&
documít
));

266 i‡(!
d⁄e
) {

267 
	`as£π
(
documít_numbî
 < 
MAX_DOCUMENTS
);

268 
	`as£π
(
	`c›y_documít
(&(
documíts
[
documít_numbî
++]), &
documít
));

269 
	`as£π
(
	`yaml_emôãr_dump
(&
emôãr
, &
documít
) ||

270 (
	`yaml_emôãr_Êush
(&
emôãr
Ë&& 
	`¥öt_ouçut
(
¨gv
[
numbî
], 
buf„r
, 
wrôãn
, 
cou¡
)));

271 
cou¡
 ++;

274 
	`yaml_documít_dñëe
(&
documít
);

278 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

279 
	`as£π
(!
	`f˛o£
(
fûe
));

280 
	`yaml_emôãr_˛o£
(&
emôãr
);

281 
	`yaml_emôãr_dñëe
(&
emôãr
);

283 i‡(!
îr‹
)

285 
cou¡
 = 
d⁄e
 = 0;

286 
	`as£π
(
	`yaml_∑r£r_öôülize
(&
∑r£r
));

287 
	`yaml_∑r£r_£t_öput_°rög
(&
∑r£r
, 
buf„r
, 
wrôãn
);

289 !
d⁄e
)

291 
	`as£π
(
	`yaml_∑r£r_lﬂd
(&
∑r£r
, &
documít
Ë|| 
	`¥öt_ouçut
(
¨gv
[
numbî
], 
buf„r
, 
wrôãn
, 
cou¡
));

292 
d⁄e
 = (!
	`yaml_documít_gë_roŸ_node
(&
documít
));

293 i‡(!
d⁄e
) {

294 
	`as£π
(
	`com∑ª_documíts
(
documíts
+
cou¡
, &
documít
Ë|| 
	`¥öt_ouçut
(
¨gv
[
numbî
], 
buf„r
, 
wrôãn
, count));

295 
cou¡
 ++;

297 
	`yaml_documít_dñëe
(&
documít
);

299 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

302 
k
 = 0; k < 
documít_numbî
; k ++) {

303 
	`yaml_documít_dñëe
(
documíts
+
k
);

306 
	`¥ötf
("PASSED (Àngth: %d)\n", 
wrôãn
);

307 
	`¥öt_ouçut
(
¨gv
[
numbî
], 
buf„r
, 
wrôãn
, -1);

311 
	}
}

	@contrib/yaml-0.1.4/tests/run-emitter.c

1 
	~<yaml.h
>

3 
	~<°dlib.h
>

4 
	~<°dio.h
>

5 
	~<°rög.h
>

7 #ifde‡
NDEBUG


8 #unde‡
NDEBUG


10 
	~<as£π.h
>

12 
	#BUFFER_SIZE
 65536

	)

13 
	#MAX_EVENTS
 1024

	)

15 
	$c›y_evít
(
yaml_evít_t
 *
evít_to
, yaml_evít_à*
evít_‰om
)

17 
evít_‰om
->
ty≥
)

19 
YAML_STREAM_START_EVENT
:

20  
	`yaml_°ªam_°¨t_evít_öôülize
(
evít_to
,

21 
evít_‰om
->
d©a
.
°ªam_°¨t
.
ícodög
);

23 
YAML_STREAM_END_EVENT
:

24  
	`yaml_°ªam_íd_evít_öôülize
(
evít_to
);

26 
YAML_DOCUMENT_START_EVENT
:

27  
	`yaml_documít_°¨t_evít_öôülize
(
evít_to
,

28 
evít_‰om
->
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
,

29 
evít_‰om
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t
,

30 
evít_‰om
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
,

31 
evít_‰om
->
d©a
.
documít_°¨t
.
im∂icô
);

33 
YAML_DOCUMENT_END_EVENT
:

34  
	`yaml_documít_íd_evít_öôülize
(
evít_to
,

35 
evít_‰om
->
d©a
.
documít_íd
.
im∂icô
);

37 
YAML_ALIAS_EVENT
:

38  
	`yaml_Æüs_evít_öôülize
(
evít_to
,

39 
evít_‰om
->
d©a
.
Æüs
.
™ch‹
);

41 
YAML_SCALAR_EVENT
:

42  
	`yaml_sˇœr_evít_öôülize
(
evít_to
,

43 
evít_‰om
->
d©a
.
sˇœr
.
™ch‹
,

44 
evít_‰om
->
d©a
.
sˇœr
.
èg
,

45 
evít_‰om
->
d©a
.
sˇœr
.
vÆue
,

46 
evít_‰om
->
d©a
.
sˇœr
.
Àngth
,

47 
evít_‰om
->
d©a
.
sˇœr
.
∂aö_im∂icô
,

48 
evít_‰om
->
d©a
.
sˇœr
.
quŸed_im∂icô
,

49 
evít_‰om
->
d©a
.
sˇœr
.
°yÀ
);

51 
YAML_SEQUENCE_START_EVENT
:

52  
	`yaml_£quí˚_°¨t_evít_öôülize
(
evít_to
,

53 
evít_‰om
->
d©a
.
£quí˚_°¨t
.
™ch‹
,

54 
evít_‰om
->
d©a
.
£quí˚_°¨t
.
èg
,

55 
evít_‰om
->
d©a
.
£quí˚_°¨t
.
im∂icô
,

56 
evít_‰om
->
d©a
.
£quí˚_°¨t
.
°yÀ
);

58 
YAML_SEQUENCE_END_EVENT
:

59  
	`yaml_£quí˚_íd_evít_öôülize
(
evít_to
);

61 
YAML_MAPPING_START_EVENT
:

62  
	`yaml_m≠pög_°¨t_evít_öôülize
(
evít_to
,

63 
evít_‰om
->
d©a
.
m≠pög_°¨t
.
™ch‹
,

64 
evít_‰om
->
d©a
.
m≠pög_°¨t
.
èg
,

65 
evít_‰om
->
d©a
.
m≠pög_°¨t
.
im∂icô
,

66 
evít_‰om
->
d©a
.
m≠pög_°¨t
.
°yÀ
);

68 
YAML_MAPPING_END_EVENT
:

69  
	`yaml_m≠pög_íd_evít_öôülize
(
evít_to
);

72 
	`as£π
(1);

76 
	}
}

78 
	$com∑ª_evíts
(
yaml_evít_t
 *
evít1
, yaml_evít_à*
evít2
)

80 
k
;

82 i‡(
evít1
->
ty≥
 !
evít2
->type)

85 
evít1
->
ty≥
)

87 
YAML_STREAM_START_EVENT
:

92 
YAML_DOCUMENT_START_EVENT
:

93 i‡((
evít1
->
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
 && !
evít2
->data.document_start.version_directive)

94 || (!
evít1
->
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
 && 
evít2
->data.document_start.version_directive)

95 || (
evít1
->
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
 && 
evít2
->data.document_start.version_directive

96 && (
evít1
->
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
->
maj‹
 !
evít2
->data.document_start.version_directive->major

97 || 
evít1
->
d©a
.
documít_°¨t
.
vîsi⁄_dúe˘ive
->
mö‹
 !
evít2
->data.document_start.version_directive->minor)))

99 i‡((
evít1
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
 -Évít1->d©a.documít_°¨t.èg_dúe˘ives.
°¨t
) !=

100 (
evít2
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
 -Évít2->d©a.documít_°¨t.èg_dúe˘ives.
°¨t
))

102 
k
 = 0; k < (
evít1
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
íd
 -Évít1->d©a.documít_°¨t.èg_dúe˘ives.
°¨t
); k ++) {

103 i‡((
	`°rcmp
((*)
evít1
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t
[
k
].
h™dÀ
,

104 (*)
evít2
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t
[
k
].
h™dÀ
) != 0)

105 || (
	`°rcmp
((*)
evít1
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t
[
k
].
¥efix
,

106 (*)
evít2
->
d©a
.
documít_°¨t
.
èg_dúe˘ives
.
°¨t
[
k
].
¥efix
) != 0))

113 
YAML_DOCUMENT_END_EVENT
:

118 
YAML_ALIAS_EVENT
:

119  (
	`°rcmp
((*)
evít1
->
d©a
.
Æüs
.
™ch‹
,

120 (*)
evít2
->
d©a
.
Æüs
.
™ch‹
) == 0);

122 
YAML_SCALAR_EVENT
:

123 i‡((
evít1
->
d©a
.
sˇœr
.
™ch‹
 && !
evít2
->data.scalar.anchor)

124 || (!
evít1
->
d©a
.
sˇœr
.
™ch‹
 && 
evít2
->data.scalar.anchor)

125 || (
evít1
->
d©a
.
sˇœr
.
™ch‹
 && 
evít2
->data.scalar.anchor

126 && 
	`°rcmp
((*)
evít1
->
d©a
.
sˇœr
.
™ch‹
,

127 (*)
evít2
->
d©a
.
sˇœr
.
™ch‹
) != 0))

129 i‡((
evít1
->
d©a
.
sˇœr
.
èg
 && !
evít2
->data.scalar.tag

130 && 
	`°rcmp
((*)
evít1
->
d©a
.
sˇœr
.
èg
, "!") != 0)

131 || (!
evít1
->
d©a
.
sˇœr
.
èg
 && 
evít2
->data.scalar.tag

132 && 
	`°rcmp
((*)
evít2
->
d©a
.
sˇœr
.
èg
, "!") != 0)

133 || (
evít1
->
d©a
.
sˇœr
.
èg
 && 
evít2
->data.scalar.tag

134 && 
	`°rcmp
((*)
evít1
->
d©a
.
sˇœr
.
èg
,

135 (*)
evít2
->
d©a
.
sˇœr
.
èg
) != 0))

137 i‡((
evít1
->
d©a
.
sˇœr
.
Àngth
 !
evít2
->data.scalar.length)

138 || 
	`memcmp
(
evít1
->
d©a
.
sˇœr
.
vÆue
, 
evít2
->data.scalar.value,

139 
evít1
->
d©a
.
sˇœr
.
Àngth
) != 0)

141 i‡((
evít1
->
d©a
.
sˇœr
.
∂aö_im∂icô
 !
evít2
->data.scalar.plain_implicit)

142 || (
evít2
->
d©a
.
sˇœr
.
quŸed_im∂icô
 !=Évent2->data.scalar.quoted_implicit)

147 
YAML_SEQUENCE_START_EVENT
:

148 i‡((
evít1
->
d©a
.
£quí˚_°¨t
.
™ch‹
 && !
evít2
->data.sequence_start.anchor)

149 || (!
evít1
->
d©a
.
£quí˚_°¨t
.
™ch‹
 && 
evít2
->data.sequence_start.anchor)

150 || (
evít1
->
d©a
.
£quí˚_°¨t
.
™ch‹
 && 
evít2
->data.sequence_start.anchor

151 && 
	`°rcmp
((*)
evít1
->
d©a
.
£quí˚_°¨t
.
™ch‹
,

152 (*)
evít2
->
d©a
.
£quí˚_°¨t
.
™ch‹
) != 0))

154 i‡((
evít1
->
d©a
.
£quí˚_°¨t
.
èg
 && !
evít2
->data.sequence_start.tag)

155 || (!
evít1
->
d©a
.
£quí˚_°¨t
.
èg
 && 
evít2
->data.sequence_start.tag)

156 || (
evít1
->
d©a
.
£quí˚_°¨t
.
èg
 && 
evít2
->data.sequence_start.tag

157 && 
	`°rcmp
((*)
evít1
->
d©a
.
£quí˚_°¨t
.
èg
,

158 (*)
evít2
->
d©a
.
£quí˚_°¨t
.
èg
) != 0))

160 i‡((
evít1
->
d©a
.
£quí˚_°¨t
.
im∂icô
 !
evít2
->data.sequence_start.implicit)

165 
YAML_MAPPING_START_EVENT
:

166 i‡((
evít1
->
d©a
.
m≠pög_°¨t
.
™ch‹
 && !
evít2
->data.mapping_start.anchor)

167 || (!
evít1
->
d©a
.
m≠pög_°¨t
.
™ch‹
 && 
evít2
->data.mapping_start.anchor)

168 || (
evít1
->
d©a
.
m≠pög_°¨t
.
™ch‹
 && 
evít2
->data.mapping_start.anchor

169 && 
	`°rcmp
((*)
evít1
->
d©a
.
m≠pög_°¨t
.
™ch‹
,

170 (*)
evít2
->
d©a
.
m≠pög_°¨t
.
™ch‹
) != 0))

172 i‡((
evít1
->
d©a
.
m≠pög_°¨t
.
èg
 && !
evít2
->data.mapping_start.tag)

173 || (!
evít1
->
d©a
.
m≠pög_°¨t
.
èg
 && 
evít2
->data.mapping_start.tag)

174 || (
evít1
->
d©a
.
m≠pög_°¨t
.
èg
 && 
evít2
->data.mapping_start.tag

175 && 
	`°rcmp
((*)
evít1
->
d©a
.
m≠pög_°¨t
.
èg
,

176 (*)
evít2
->
d©a
.
m≠pög_°¨t
.
èg
) != 0))

178 i‡((
evít1
->
d©a
.
m≠pög_°¨t
.
im∂icô
 !
evít2
->data.mapping_start.implicit)

186 
	}
}

188 
	$¥öt_ouçut
(*
«me
, *
buf„r
, 
size_t
 
size
, 
cou¡
)

190 
FILE
 *
fûe
;

191 
d©a
[
BUFFER_SIZE
];

192 
size_t
 
d©a_size
 = 1;

193 
size_t
 
tŸÆ_size
 = 0;

194 i‡(
cou¡
 >= 0) {

195 
	`¥ötf
("FAILED (©Åhêevíà#%d)\nSOURCE:\n", 
cou¡
+1);

197 
fûe
 = 
	`f›í
(
«me
, "rb");

198 
	`as£π
(
fûe
);

199 
d©a_size
 > 0) {

200 
d©a_size
 = 
	`‰ód
(
d©a
, 1, 
BUFFER_SIZE
, 
fûe
);

201 
	`as£π
(!
	`„º‹
(
fûe
));

202 i‡(!
d©a_size
) ;

203 
	`as£π
(
	`fwrôe
(
d©a
, 1, 
d©a_size
, 
°dout
) == data_size);

204 
tŸÆ_size
 +
d©a_size
;

205 i‡(
	`„of
(
fûe
)) ;

207 
	`f˛o£
(
fûe
);

208 
	`¥ötf
("#### (Àngth: %d)\n", 
tŸÆ_size
);

209 
	`¥ötf
("OUTPUT:\n%s#### (Àngth: %d)\n", 
buf„r
, 
size
);

211 
	}
}

214 
	$maö
(
¨gc
, *
¨gv
[])

216 
numbî
;

217 
ˇn⁄iˇl
 = 0;

218 
unicode
 = 0;

220 
numbî
 = 1;

221 
numbî
 < 
¨gc
) {

222 i‡(
	`°rcmp
(
¨gv
[
numbî
], "-c") == 0) {

223 
ˇn⁄iˇl
 = 1;

225 i‡(
	`°rcmp
(
¨gv
[
numbî
], "-u") == 0) {

226 
unicode
 = 1;

228 i‡(
¨gv
[
numbî
][0] == '-') {

229 
	`¥ötf
("Unknow¿›ti⁄: '%s'\n", 
¨gv
[
numbî
]);

232 i‡(
¨gv
[
numbî
][0] == '-') {

233 i‡(
numbî
 < 
¨gc
-1) {

234 
	`memmove
(
¨gv
+
numbî
,árgv+numbî+1, (
¨gc
-number-1)*(*));

236 
¨gc
 --;

239 
numbî
 ++;

243 i‡(
¨gc
 < 2) {

244 
	`¥ötf
("Ußge: %†[-c] [-u] fûe1.yam»...\n", 
¨gv
[0]);

248 
numbî
 = 1;Çumbî < 
¨gc
;Çumber ++)

250 
FILE
 *
fûe
;

251 
yaml_∑r£r_t
 
∑r£r
;

252 
yaml_emôãr_t
 
emôãr
;

253 
yaml_evít_t
 
evít
;

254 
buf„r
[
BUFFER_SIZE
];

255 
size_t
 
wrôãn
 = 0;

256 
yaml_evít_t
 
evíts
[
MAX_EVENTS
];

257 
size_t
 
evít_numbî
 = 0;

258 
d⁄e
 = 0;

259 
cou¡
 = 0;

260 
îr‹
 = 0;

261 
k
;

262 
	`mem£t
(
buf„r
, 0, 
BUFFER_SIZE
);

263 
	`mem£t
(
evíts
, 0, 
MAX_EVENTS
*(
yaml_evít_t
));

265 
	`¥ötf
("[%d] P¨sög,Émôtög,ándÖ¨sögágaö '%s': ", 
numbî
, 
¨gv
[number]);

266 
	`fÊush
(
°dout
);

268 
fûe
 = 
	`f›í
(
¨gv
[
numbî
], "rb");

269 
	`as£π
(
fûe
);

271 
	`as£π
(
	`yaml_∑r£r_öôülize
(&
∑r£r
));

272 
	`yaml_∑r£r_£t_öput_fûe
(&
∑r£r
, 
fûe
);

273 
	`as£π
(
	`yaml_emôãr_öôülize
(&
emôãr
));

274 i‡(
ˇn⁄iˇl
) {

275 
	`yaml_emôãr_£t_ˇn⁄iˇl
(&
emôãr
, 1);

277 i‡(
unicode
) {

278 
	`yaml_emôãr_£t_unicode
(&
emôãr
, 1);

280 
	`yaml_emôãr_£t_ouçut_°rög
(&
emôãr
, 
buf„r
, 
BUFFER_SIZE
, &
wrôãn
);

282 !
d⁄e
)

284 i‡(!
	`yaml_∑r£r_∑r£
(&
∑r£r
, &
evít
)) {

285 
îr‹
 = 1;

289 
d⁄e
 = (
evít
.
ty≥
 =
YAML_STREAM_END_EVENT
);

290 
	`as£π
(
evít_numbî
 < 
MAX_EVENTS
);

291 
	`as£π
(
	`c›y_evít
(&(
evíts
[
evít_numbî
++]), &
evít
));

292 
	`as£π
(
	`yaml_emôãr_emô
(&
emôãr
, &
evít
) ||

293 (
	`yaml_emôãr_Êush
(&
emôãr
Ë&& 
	`¥öt_ouçut
(
¨gv
[
numbî
], 
buf„r
, 
wrôãn
, 
cou¡
)));

294 
cou¡
 ++;

297 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

298 
	`as£π
(!
	`f˛o£
(
fûe
));

299 
	`yaml_emôãr_dñëe
(&
emôãr
);

301 i‡(!
îr‹
)

303 
cou¡
 = 
d⁄e
 = 0;

304 
	`as£π
(
	`yaml_∑r£r_öôülize
(&
∑r£r
));

305 
	`yaml_∑r£r_£t_öput_°rög
(&
∑r£r
, 
buf„r
, 
wrôãn
);

307 !
d⁄e
)

309 
	`as£π
(
	`yaml_∑r£r_∑r£
(&
∑r£r
, &
evít
Ë|| 
	`¥öt_ouçut
(
¨gv
[
numbî
], 
buf„r
, 
wrôãn
, 
cou¡
));

310 
d⁄e
 = (
evít
.
ty≥
 =
YAML_STREAM_END_EVENT
);

311 
	`as£π
(
	`com∑ª_evíts
(
evíts
+
cou¡
, &
evít
Ë|| 
	`¥öt_ouçut
(
¨gv
[
numbî
], 
buf„r
, 
wrôãn
, count));

312 
	`yaml_evít_dñëe
(&
evít
);

313 
cou¡
 ++;

315 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

318 
k
 = 0; k < 
evít_numbî
; k ++) {

319 
	`yaml_evít_dñëe
(
evíts
+
k
);

322 
	`¥ötf
("PASSED (Àngth: %d)\n", 
wrôãn
);

323 
	`¥öt_ouçut
(
¨gv
[
numbî
], 
buf„r
, 
wrôãn
, -1);

327 
	}
}

	@contrib/yaml-0.1.4/tests/run-loader.c

1 
	~<yaml.h
>

3 
	~<°dlib.h
>

4 
	~<°dio.h
>

6 #ifde‡
NDEBUG


7 #unde‡
NDEBUG


9 
	~<as£π.h
>

12 
	$maö
(
¨gc
, *
¨gv
[])

14 
numbî
;

16 i‡(
¨gc
 < 2) {

17 
	`¥ötf
("Ußge: %†fûe1.yam»...\n", 
¨gv
[0]);

21 
numbî
 = 1;Çumbî < 
¨gc
;Çumber ++)

23 
FILE
 *
fûe
;

24 
yaml_∑r£r_t
 
∑r£r
;

25 
yaml_documít_t
 
documít
;

26 
d⁄e
 = 0;

27 
cou¡
 = 0;

28 
îr‹
 = 0;

30 
	`¥ötf
("[%d] Lﬂdög '%s': ", 
numbî
, 
¨gv
[number]);

31 
	`fÊush
(
°dout
);

33 
fûe
 = 
	`f›í
(
¨gv
[
numbî
], "rb");

34 
	`as£π
(
fûe
);

36 
	`as£π
(
	`yaml_∑r£r_öôülize
(&
∑r£r
));

38 
	`yaml_∑r£r_£t_öput_fûe
(&
∑r£r
, 
fûe
);

40 !
d⁄e
)

42 i‡(!
	`yaml_∑r£r_lﬂd
(&
∑r£r
, &
documít
)) {

43 
îr‹
 = 1;

47 
d⁄e
 = (!
	`yaml_documít_gë_roŸ_node
(&
documít
));

49 
	`yaml_documít_dñëe
(&
documít
);

51 i‡(!
d⁄e
Ë
cou¡
 ++;

54 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

56 
	`as£π
(!
	`f˛o£
(
fûe
));

58 
	`¥ötf
("%†(%d documíts)\n", (
îr‹
 ? "FAILURE" : "SUCCESS"), 
cou¡
);

62 
	}
}

	@contrib/yaml-0.1.4/tests/run-parser.c

1 
	~<yaml.h
>

3 
	~<°dlib.h
>

4 
	~<°dio.h
>

6 #ifde‡
NDEBUG


7 #unde‡
NDEBUG


9 
	~<as£π.h
>

12 
	$maö
(
¨gc
, *
¨gv
[])

14 
numbî
;

16 i‡(
¨gc
 < 2) {

17 
	`¥ötf
("Ußge: %†fûe1.yam»...\n", 
¨gv
[0]);

21 
numbî
 = 1;Çumbî < 
¨gc
;Çumber ++)

23 
FILE
 *
fûe
;

24 
yaml_∑r£r_t
 
∑r£r
;

25 
yaml_evít_t
 
evít
;

26 
d⁄e
 = 0;

27 
cou¡
 = 0;

28 
îr‹
 = 0;

30 
	`¥ötf
("[%d] P¨sög '%s': ", 
numbî
, 
¨gv
[number]);

31 
	`fÊush
(
°dout
);

33 
fûe
 = 
	`f›í
(
¨gv
[
numbî
], "rb");

34 
	`as£π
(
fûe
);

36 
	`as£π
(
	`yaml_∑r£r_öôülize
(&
∑r£r
));

38 
	`yaml_∑r£r_£t_öput_fûe
(&
∑r£r
, 
fûe
);

40 !
d⁄e
)

42 i‡(!
	`yaml_∑r£r_∑r£
(&
∑r£r
, &
evít
)) {

43 
îr‹
 = 1;

47 
d⁄e
 = (
evít
.
ty≥
 =
YAML_STREAM_END_EVENT
);

49 
	`yaml_evít_dñëe
(&
evít
);

51 
cou¡
 ++;

54 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

56 
	`as£π
(!
	`f˛o£
(
fûe
));

58 
	`¥ötf
("%†(%dÉvíts)\n", (
îr‹
 ? "FAILURE" : "SUCCESS"), 
cou¡
);

62 
	}
}

	@contrib/yaml-0.1.4/tests/run-scanner.c

1 
	~<yaml.h
>

3 
	~<°dlib.h
>

4 
	~<°dio.h
>

6 #ifde‡
NDEBUG


7 #unde‡
NDEBUG


9 
	~<as£π.h
>

12 
	$maö
(
¨gc
, *
¨gv
[])

14 
numbî
;

16 i‡(
¨gc
 < 2) {

17 
	`¥ötf
("Ußge: %†fûe1.yam»...\n", 
¨gv
[0]);

21 
numbî
 = 1;Çumbî < 
¨gc
;Çumber ++)

23 
FILE
 *
fûe
;

24 
yaml_∑r£r_t
 
∑r£r
;

25 
yaml_tokí_t
 
tokí
;

26 
d⁄e
 = 0;

27 
cou¡
 = 0;

28 
îr‹
 = 0;

30 
	`¥ötf
("[%d] Sˇ¬ög '%s': ", 
numbî
, 
¨gv
[number]);

31 
	`fÊush
(
°dout
);

33 
fûe
 = 
	`f›í
(
¨gv
[
numbî
], "rb");

34 
	`as£π
(
fûe
);

36 
	`as£π
(
	`yaml_∑r£r_öôülize
(&
∑r£r
));

38 
	`yaml_∑r£r_£t_öput_fûe
(&
∑r£r
, 
fûe
);

40 !
d⁄e
)

42 i‡(!
	`yaml_∑r£r_sˇn
(&
∑r£r
, &
tokí
)) {

43 
îr‹
 = 1;

47 
d⁄e
 = (
tokí
.
ty≥
 =
YAML_STREAM_END_TOKEN
);

49 
	`yaml_tokí_dñëe
(&
tokí
);

51 
cou¡
 ++;

54 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

56 
	`as£π
(!
	`f˛o£
(
fûe
));

58 
	`¥ötf
("%†(%dÅokís)\n", (
îr‹
 ? "FAILURE" : "SUCCESS"), 
cou¡
);

62 
	}
}

	@contrib/yaml-0.1.4/tests/test-reader.c

1 
	~<yaml.h
>

3 
	$YAML_DECLARE
()

4 
	`yaml_∑r£r_upd©e_buf„r
(
yaml_∑r£r_t
 *
∑r£r
, 
size_t
 
Àngth
);

6 
	~<°dlib.h
>

7 
	~<°dio.h
>

9 #ifde‡
NDEBUG


10 #unde‡
NDEBUG


12 
	~<as£π.h
>

20 *
tôÀ
;

21 *
ã°
;

22 
ªsu…
;

23 } 
	tã°_ˇ£
;

25 
ã°_ˇ£
 
utf8_£quí˚s
[] = {

101 {
NULL
, NULL, 0}

102 
	}
};

104 
ã°_ˇ£
 
	gboms
[] = {

112 {
NULL
, NULL, 0}

115 *
	gbom_‹igöÆ
 = "Hi is \xd0\x9f\xd1\x80\xd0\xb8\xd0\xb2\xd0\xb5\xd1\x82";

117 
	$check_utf8_£quí˚s
()

119 
yaml_∑r£r_t
 
∑r£r
;

120 
Áûed
 = 0;

121 
k
;

122 
	`¥ötf
("checking utf-8 sequences...\n");

123 
k
 = 0; 
utf8_£quí˚s
[k].
ã°
; k++) {

124 *
tôÀ
 = 
utf8_£quí˚s
[
k
].title;

125 
check
 = 
utf8_£quí˚s
[
k
].
ªsu…
;

126 
ªsu…
;

127 *
°¨t
 = 
utf8_£quí˚s
[
k
].
ã°
;

128 *
íd
 = 
°¨t
;

129 
	`¥ötf
("\t%s:\n", 
tôÀ
);

131 *
íd
 != '|' && *end != '!')Énd++;

132 
	`yaml_∑r£r_öôülize
(&
∑r£r
);

133 
	`yaml_∑r£r_£t_öput_°rög
(&
∑r£r
, (*)
°¨t
, 
íd
-start);

134 
ªsu…
 = 
	`yaml_∑r£r_upd©e_buf„r
(&
∑r£r
, 
íd
-
°¨t
);

135 i‡(
ªsu…
 !
check
) {

136 
	`¥ötf
("\t\t- ");

137 
Áûed
 ++;

140 
	`¥ötf
("\t\t+ ");

142 i‡(!
∑r£r
.
îr‹
) {

143 
	`¥ötf
("(noÉrror)\n");

145 i‡(
∑r£r
.
îr‹
 =
YAML_READER_ERROR
) {

146 i‡(
∑r£r
.
¥obÀm_vÆue
 != -1) {

147 
	`¥ötf
("(readerÉrror: %s: #%Xát %d)\n",

148 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_vÆue
,Ö¨£r.
¥obÀm_off£t
);

151 
	`¥ötf
("(readerÉrror: %sát %d)\n",

152 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_off£t
);

155 i‡(*
íd
 == '!') ;

156 
°¨t
 = ++
íd
;

157 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

159 
	`¥ötf
("\n");

161 
	`¥ötf
("checkög utf-8 sequí˚s: %d faû(s)\n", 
Áûed
);

162  
Áûed
;

163 
	}
}

165 
	$check_boms
()

167 
yaml_∑r£r_t
 
∑r£r
;

168 
Áûed
 = 0;

169 
k
;

170 
	`¥ötf
("checking boms...\n");

171 
k
 = 0; 
boms
[k].
ã°
; k++) {

172 *
tôÀ
 = 
boms
[
k
].title;

173 
check
 = 
boms
[
k
].
ªsu…
;

174 
ªsu…
;

175 *
°¨t
 = 
boms
[
k
].
ã°
;

176 *
íd
 = 
°¨t
;

177 *
íd
 != '!')Énd++;

178 
	`¥ötf
("\t%s: ", 
tôÀ
);

179 
	`yaml_∑r£r_öôülize
(&
∑r£r
);

180 
	`yaml_∑r£r_£t_öput_°rög
(&
∑r£r
, (*)
°¨t
, 
íd
-start);

181 
ªsu…
 = 
	`yaml_∑r£r_upd©e_buf„r
(&
∑r£r
, 
íd
-
°¨t
);

182 i‡(!
ªsu…
) {

183 
	`¥ötf
("- (ªadîÉº‹: %†© %d)\n", 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_off£t
);

184 
Áûed
++;

187 i‡(
∑r£r
.
uƒód
 !
check
) {

188 
	`¥ötf
("- (Àngth=%d whûêex≥˘edÜígth=%d)\n", 
∑r£r
.
uƒód
, 
check
);

189 
Áûed
++;

191 i‡(
	`memcmp
(
∑r£r
.
buf„r
.
°¨t
, 
bom_‹igöÆ
, 
check
) != 0) {

192 
	`¥ötf
("- (vÆuê'%s' d€†nŸÉquÆÅÿthê‹igöÆ vÆuê'%s')\n", 
∑r£r
.
buf„r
.
°¨t
, 
bom_‹igöÆ
);

193 
Áûed
++;

196 
	`¥ötf
("+\n");

199 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

201 
	`¥ötf
("checkög boms: %d faû(s)\n", 
Áûed
);

202  
Áûed
;

203 
	}
}

205 
	#LONG
 100000

	)

207 
	$check_l⁄g_utf8
()

209 
yaml_∑r£r_t
 
∑r£r
;

210 
k
 = 0;

211 
j
;

212 
Áûed
 = 0;

213 
ch0
, 
ch1
;

214 *
buf„r
 = 
	`mÆloc
(3+
LONG
*2);

215 
	`as£π
(
buf„r
);

216 
	`¥ötf
("checkingáÜong utf8 sequence...\n");

217 
buf„r
[
k
++] = '\xef';

218 
buf„r
[
k
++] = '\xbb';

219 
buf„r
[
k
++] = '\xbf';

220 
j
 = 0; j < 
LONG
; j ++) {

221 i‡(
j
 % 2) {

222 
buf„r
[
k
++] = '\xd0';

223 
buf„r
[
k
++] = '\x90';

226 
buf„r
[
k
++] = '\xd0';

227 
buf„r
[
k
++] = '\xaf';

230 
	`yaml_∑r£r_öôülize
(&
∑r£r
);

231 
	`yaml_∑r£r_£t_öput_°rög
(&
∑r£r
, 
buf„r
, 3+
LONG
*2);

232 
k
 = 0; k < 
LONG
; k++) {

233 i‡(!
∑r£r
.
uƒód
) {

234 i‡(!
	`yaml_∑r£r_upd©e_buf„r
(&
∑r£r
, 1)) {

235 
	`¥ötf
("\åódîÉº‹: %†© %d\n", 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_off£t
);

236 
Áûed
 = 1;

240 i‡(!
∑r£r
.
uƒód
) {

241 
	`¥ötf
("\äŸÉnough ch¨a˘î†© %d\n", 
k
);

242 
Áûed
 = 1;

245 i‡(
k
 % 2) {

246 
ch0
 = '\xd0';

247 
ch1
 = '\x90';

250 
ch0
 = '\xd0';

251 
ch1
 = '\xaf';

253 i‡(
∑r£r
.
buf„r
.
poöãr
[0] !
ch0
 ||Ö¨£r.buf„r.poöãr[1] !
ch1
) {

254 
	`¥ötf
("\tincorrect UTF-8 sequence: %X %X instead of %X %X\n",

255 ()
∑r£r
.
buf„r
.
poöãr
[0], ()parser.buffer.pointer[1],

256 ()
ch0
, ()
ch1
);

257 
Áûed
 = 1;

260 
∑r£r
.
buf„r
.
poöãr
 += 2;

261 
∑r£r
.
uƒód
 -= 1;

263 i‡(!
Áûed
) {

264 i‡(!
	`yaml_∑r£r_upd©e_buf„r
(&
∑r£r
, 1)) {

265 
	`¥ötf
("\åódîÉº‹: %†© %d\n", 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_off£t
);

266 
Áûed
 = 1;

268 i‡(
∑r£r
.
buf„r
.
poöãr
[0] != '\0') {

269 
	`¥ötf
("\ãx≥˘ed NUL, found %X (eof=%d, uƒód=%d)\n", ()
∑r£r
.
buf„r
.
poöãr
[0],Ö¨£r.
eof
,Ö¨£r.
uƒód
);

270 
Áûed
 = 1;

273 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

274 
	`‰ì
(
buf„r
);

275 
	`¥ötf
("checkögáÜ⁄g utf8 sequí˚: %d faû(s)\n", 
Áûed
);

276  
Áûed
;

277 
	}
}

279 
	$check_l⁄g_utf16
()

281 
yaml_∑r£r_t
 
∑r£r
;

282 
k
 = 0;

283 
j
;

284 
Áûed
 = 0;

285 
ch0
, 
ch1
;

286 *
buf„r
 = 
	`mÆloc
(2+
LONG
*2);

287 
	`as£π
(
buf„r
);

288 
	`¥ötf
("checkingáÜong utf16 sequence...\n");

289 
buf„r
[
k
++] = '\xff';

290 
buf„r
[
k
++] = '\xfe';

291 
j
 = 0; j < 
LONG
; j ++) {

292 i‡(
j
 % 2) {

293 
buf„r
[
k
++] = '\x10';

294 
buf„r
[
k
++] = '\x04';

297 
buf„r
[
k
++] = '/';

298 
buf„r
[
k
++] = '\x04';

301 
	`yaml_∑r£r_öôülize
(&
∑r£r
);

302 
	`yaml_∑r£r_£t_öput_°rög
(&
∑r£r
, 
buf„r
, 2+
LONG
*2);

303 
k
 = 0; k < 
LONG
; k++) {

304 i‡(!
∑r£r
.
uƒód
) {

305 i‡(!
	`yaml_∑r£r_upd©e_buf„r
(&
∑r£r
, 1)) {

306 
	`¥ötf
("\åódîÉº‹: %†© %d\n", 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_off£t
);

307 
Áûed
 = 1;

311 i‡(!
∑r£r
.
uƒód
) {

312 
	`¥ötf
("\äŸÉnough ch¨a˘î†© %d\n", 
k
);

313 
Áûed
 = 1;

316 i‡(
k
 % 2) {

317 
ch0
 = '\xd0';

318 
ch1
 = '\x90';

321 
ch0
 = '\xd0';

322 
ch1
 = '\xaf';

324 i‡(
∑r£r
.
buf„r
.
poöãr
[0] !
ch0
 ||Ö¨£r.buf„r.poöãr[1] !
ch1
) {

325 
	`¥ötf
("\tincorrect UTF-8 sequence: %X %X instead of %X %X\n",

326 ()
∑r£r
.
buf„r
.
poöãr
[0], ()parser.buffer.pointer[1],

327 ()
ch0
, ()
ch1
);

328 
Áûed
 = 1;

331 
∑r£r
.
buf„r
.
poöãr
 += 2;

332 
∑r£r
.
uƒód
 -= 1;

334 i‡(!
Áûed
) {

335 i‡(!
	`yaml_∑r£r_upd©e_buf„r
(&
∑r£r
, 1)) {

336 
	`¥ötf
("\åódîÉº‹: %†© %d\n", 
∑r£r
.
¥obÀm
,Ö¨£r.
¥obÀm_off£t
);

337 
Áûed
 = 1;

339 i‡(
∑r£r
.
buf„r
.
poöãr
[0] != '\0') {

340 
	`¥ötf
("\ãx≥˘ed NUL, found %X (eof=%d, uƒód=%d)\n", ()
∑r£r
.
buf„r
.
poöãr
[0],Ö¨£r.
eof
,Ö¨£r.
uƒód
);

341 
Áûed
 = 1;

344 
	`yaml_∑r£r_dñëe
(&
∑r£r
);

345 
	`‰ì
(
buf„r
);

346 
	`¥ötf
("checkögáÜ⁄g utf16 sequí˚: %d faû(s)\n", 
Áûed
);

347  
Áûed
;

348 
	}
}

351 
	$maö
()

353  
	`check_utf8_£quí˚s
(Ë+ 
	`check_boms
(Ë+ 
	`check_l⁄g_utf8
(Ë+ 
	`check_l⁄g_utf16
();

354 
	}
}

	@contrib/yaml-0.1.4/tests/test-version.c

1 
	~<yaml.h
>

3 
	~<°dlib.h
>

4 
	~<°dio.h
>

6 #ifde‡
NDEBUG


7 #unde‡
NDEBUG


9 
	~<as£π.h
>

12 
	$maö
()

14 
maj‹
 = -1;

15 
mö‹
 = -1;

16 
∑tch
 = -1;

17 
buf
[64];

19 
	`yaml_gë_vîsi⁄
(&
maj‹
, &
mö‹
, &
∑tch
);

20 
	`•rötf
(
buf
, "%d.%d.%d", 
maj‹
, 
mö‹
, 
∑tch
);

21 
	`as£π
(
	`°rcmp
(
buf
, 
	`yaml_gë_vîsi⁄_°rög
()) == 0);

24 
	`¥ötf
("sizeof—okíË%d\n", (
yaml_tokí_t
));

25 
	`¥ötf
("sizeof”vítË%d\n", (
yaml_evít_t
));

26 
	`¥ötf
("sizeof’¨£rË%d\n", (
yaml_∑r£r_t
));

29 
	}
}

	@include/nc.h

17 #i‚de‡
_NC_H_


18 
	#_NC_H_


	)

19 
	~<°döt.h
>

20 
	~<°dlib.h
>

21 
nc_run_°™dÆ⁄e
(
¨gc
, **
¨gv
);

22 
nc_run_lib
(
log_Àvñ
, *
log_fûe
, *
c⁄f_fûe
, *
pid_fûe
,

23 *
zk_£rvîs
, *
zk_roŸ
, 
uöt16_t
 
°©s_p‹t
, *
°©s_addr
,

24 
°©s_öãrvÆ
, 
size_t
 
mbuf_size
, 
uöt16_t
 
¥oxy_p‹t
, 

25 *
¥oxy_«me
);

	@src/event/nc_epoll.c

18 
	~<nc_c‹e.h
>

20 #ifde‡
NC_HAVE_EPOLL


22 
	~<sys/ïﬁl.h
>

24 
evít_ba£
 *

25 
	$evít_ba£_¸óã
(
√vít
, 
evít_cb_t
 
cb
)

27 
evít_ba£
 *
evb
;

28 
°©us
, 
ï
;

29 
ïﬁl_evít
 *
evít
;

31 
	`ASSERT
(
√vít
 > 0);

33 
ï
 = 
	`ïﬁl_¸óã
(
√vít
);

34 i‡(
ï
 < 0) {

35 
	`log_îr‹
("ïﬁ»¸óã o‡sizê%d faûed: %s", 
√vít
, 
	`°ªº‹
(
î∫o
));

36  
NULL
;

39 
evít
 = 
	`nc_ˇŒoc
(
√vít
, (*event));

40 i‡(
evít
 =
NULL
) {

41 
°©us
 = 
	`˛o£
(
ï
);

42 i‡(
°©us
 < 0) {

43 
	`log_îr‹
("˛o£É %d faûed, ign‹ed: %s", 
ï
, 
	`°ªº‹
(
î∫o
));

45  
NULL
;

48 
evb
 = 
	`nc_Æloc
((*evb));

49 i‡(
evb
 =
NULL
) {

50 
	`nc_‰ì
(
evít
);

51 
°©us
 = 
	`˛o£
(
ï
);

52 i‡(
°©us
 < 0) {

53 
	`log_îr‹
("˛o£É %d faûed, ign‹ed: %s", 
ï
, 
	`°ªº‹
(
î∫o
));

55  
NULL
;

58 
evb
->
ï
 =Ép;

59 
evb
->
evít
 =Évent;

60 
evb
->
√vít
 =Çevent;

61 
evb
->
cb
 = cb;

63 
	`log_debug
(
LOG_INFO
, "ê%d wôhÇevíà%d", 
evb
->
ï
,Évb->
√vít
);

65  
evb
;

66 
	}
}

69 
	$evít_ba£_de°roy
(
evít_ba£
 *
evb
)

71 
°©us
;

73 i‡(
evb
 =
NULL
) {

77 
	`ASSERT
(
evb
->
ï
 > 0);

79 
	`nc_‰ì
(
evb
->
evít
);

81 
°©us
 = 
	`˛o£
(
evb
->
ï
);

82 i‡(
°©us
 < 0) {

83 
	`log_îr‹
("˛o£É %d faûed, ign‹ed: %s", 
evb
->
ï
, 
	`°ªº‹
(
î∫o
));

85 
evb
->
ï
 = -1;

87 
	`nc_‰ì
(
evb
);

88 
	}
}

91 
	$evít_add_ö
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

93 
°©us
;

94 
ïﬁl_evít
 
evít
;

95 
ï
 = 
evb
->ep;

97 
	`ASSERT
(
ï
 > 0);

98 
	`ASSERT
(
c
 !
NULL
);

99 
	`ASSERT
(
c
->
sd
 > 0);

101 i‡(
c
->
ªcv_a˘ive
) {

105 
evít
.
evíts
 = (
uöt32_t
)(
EPOLLIN
 | 
EPOLLET
);

106 
evít
.
d©a
.
±r
 = 
c
;

108 
°©us
 = 
	`ïﬁl_˘l
(
ï
, 
EPOLL_CTL_MOD
, 
c
->
sd
, &
evít
);

109 i‡(
°©us
 < 0) {

110 
	`log_îr‹
("ïﬁ»˘»⁄É %d sd %d faûed: %s", 
ï
, 
c
->
sd
,

111 
	`°ªº‹
(
î∫o
));

113 
c
->
ªcv_a˘ive
 = 1;

116  
°©us
;

117 
	}
}

120 
	$evít_dñ_ö
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

123 
	}
}

126 
	$evít_add_out
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

128 
°©us
;

129 
ïﬁl_evít
 
evít
;

130 
ï
 = 
evb
->ep;

132 
	`ASSERT
(
ï
 > 0);

133 
	`ASSERT
(
c
 !
NULL
);

134 
	`ASSERT
(
c
->
sd
 > 0);

135 
	`ASSERT
(
c
->
ªcv_a˘ive
);

137 i‡(
c
->
£nd_a˘ive
) {

141 
evít
.
evíts
 = (
uöt32_t
)(
EPOLLIN
 | 
EPOLLOUT
 | 
EPOLLET
);

142 
evít
.
d©a
.
±r
 = 
c
;

144 
°©us
 = 
	`ïﬁl_˘l
(
ï
, 
EPOLL_CTL_MOD
, 
c
->
sd
, &
evít
);

145 i‡(
°©us
 < 0) {

146 
	`log_îr‹
("ïﬁ»˘»⁄É %d sd %d faûed: %s", 
ï
, 
c
->
sd
,

147 
	`°ªº‹
(
î∫o
));

149 
c
->
£nd_a˘ive
 = 1;

152  
°©us
;

153 
	}
}

156 
	$evít_dñ_out
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

158 
°©us
;

159 
ïﬁl_evít
 
evít
;

160 
ï
 = 
evb
->ep;

162 
	`ASSERT
(
ï
 > 0);

163 
	`ASSERT
(
c
 !
NULL
);

164 
	`ASSERT
(
c
->
sd
 > 0);

165 
	`ASSERT
(
c
->
ªcv_a˘ive
);

167 i‡(!
c
->
£nd_a˘ive
) {

171 
evít
.
evíts
 = (
uöt32_t
)(
EPOLLIN
 | 
EPOLLET
);

172 
evít
.
d©a
.
±r
 = 
c
;

174 
°©us
 = 
	`ïﬁl_˘l
(
ï
, 
EPOLL_CTL_MOD
, 
c
->
sd
, &
evít
);

175 i‡(
°©us
 < 0) {

176 
	`log_îr‹
("ïﬁ»˘»⁄É %d sd %d faûed: %s", 
ï
, 
c
->
sd
,

177 
	`°ªº‹
(
î∫o
));

179 
c
->
£nd_a˘ive
 = 0;

182  
°©us
;

183 
	}
}

186 
	$evít_add_c⁄n
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

188 
°©us
;

189 
ïﬁl_evít
 
evít
;

190 
ï
 = 
evb
->ep;

192 
	`ASSERT
(
ï
 > 0);

193 
	`ASSERT
(
c
 !
NULL
);

194 
	`ASSERT
(
c
->
sd
 > 0);

196 
evít
.
evíts
 = (
uöt32_t
)(
EPOLLIN
 | 
EPOLLOUT
 | 
EPOLLET
);

197 
evít
.
d©a
.
±r
 = 
c
;

199 
°©us
 = 
	`ïﬁl_˘l
(
ï
, 
EPOLL_CTL_ADD
, 
c
->
sd
, &
evít
);

200 i‡(
°©us
 < 0) {

201 
	`log_îr‹
("ïﬁ»˘»⁄É %d sd %d faûed: %s", 
ï
, 
c
->
sd
,

202 
	`°ªº‹
(
î∫o
));

204 
c
->
£nd_a˘ive
 = 1;

205 
c
->
ªcv_a˘ive
 = 1;

208  
°©us
;

209 
	}
}

212 
	$evít_dñ_c⁄n
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

214 
°©us
;

215 
ï
 = 
evb
->ep;

217 
	`ASSERT
(
ï
 > 0);

218 
	`ASSERT
(
c
 !
NULL
);

219 
	`ASSERT
(
c
->
sd
 > 0);

221 
°©us
 = 
	`ïﬁl_˘l
(
ï
, 
EPOLL_CTL_DEL
, 
c
->
sd
, 
NULL
);

222 i‡(
°©us
 < 0) {

223 
	`log_îr‹
("ïﬁ»˘»⁄É %d sd %d faûed: %s", 
ï
, 
c
->
sd
,

224 
	`°ªº‹
(
î∫o
));

226 
c
->
ªcv_a˘ive
 = 0;

227 
c
->
£nd_a˘ive
 = 0;

230  
°©us
;

231 
	}
}

234 
	$evít_waô
(
evít_ba£
 *
evb
, 
timeout
)

236 
ï
 = 
evb
->ep;

237 
ïﬁl_evít
 *
evít
 = 
evb
->event;

238 
√vít
 = 
evb
->nevent;

240 
	`ASSERT
(
ï
 > 0);

241 
	`ASSERT
(
evít
 !
NULL
);

242 
	`ASSERT
(
√vít
 > 0);

245 
i
, 
nsd
;

247 
nsd
 = 
	`ïﬁl_waô
(
ï
, 
evít
, 
√vít
, 
timeout
);

248 i‡(
nsd
 > 0) {

249 
i
 = 0; i < 
nsd
; i++) {

250 
ïﬁl_evít
 *
ev
 = &
evb
->
evít
[
i
];

251 
uöt32_t
 
evíts
 = 0;

253 
	`log_debug
(
LOG_VVERB
, "ïﬁ»%04"
PRIX32
"Åriggered on conn %p",

254 
ev
->
evíts
,Év->
d©a
.
±r
);

256 i‡(
ev
->
evíts
 & 
EPOLLERR
) {

257 
evíts
 |
EVENT_ERR
;

260 i‡(
ev
->
evíts
 & (
EPOLLIN
 | 
EPOLLHUP
)) {

261 
evíts
 |
EVENT_READ
;

264 i‡(
ev
->
evíts
 & 
EPOLLOUT
) {

265 
evíts
 |
EVENT_WRITE
;

268 i‡(
evb
->
cb
 !
NULL
) {

269 
evb
->
	`cb
(
ev
->
d©a
.
±r
, 
evíts
);

272  
nsd
;

275 i‡(
nsd
 == 0) {

276 i‡(
timeout
 == -1) {

277 
	`log_îr‹
("epoll wait onÉ %d with %dÉventsánd %dÅimeout "

278 "ªtu∫edÇÿevíts", 
ï
, 
√vít
, 
timeout
);

285 i‡(
î∫o
 =
EINTR
) {

289 
	`log_îr‹
("ïﬁ»waô o¿ê%d wôh %dÉvít†Áûed: %s", 
ï
, 
√vít
,

290 
	`°ªº‹
(
î∫o
));

294 
	`NOT_REACHED
();

295 
	}
}

298 
	$evít_lo›_°©s
(
evít_°©s_cb_t
 
cb
, *
¨g
)

300 
°©s
 *
°
 = 
¨g
;

301 
°©us
, 
ï
;

302 
ïﬁl_evít
 
ev
;

304 
ï
 = 
	`ïﬁl_¸óã
(1);

305 i‡(
ï
 < 0) {

306 
	`log_îr‹
("ïﬁ»¸óã faûed: %s", 
	`°ªº‹
(
î∫o
));

310 
ev
.
d©a
.
fd
 = 
°
->
sd
;

311 
ev
.
evíts
 = 
EPOLLIN
;

313 
°©us
 = 
	`ïﬁl_˘l
(
ï
, 
EPOLL_CTL_ADD
, 
°
->
sd
, &
ev
);

314 i‡(
°©us
 < 0) {

315 
	`log_îr‹
("ïﬁ»˘»⁄É %d sd %d faûed: %s", 
ï
, 
°
->
sd
,

316 
	`°ªº‹
(
î∫o
));

317 
îr‹
;

321 
n
;

323 
n
 = 
	`ïﬁl_waô
(
ï
, &
ev
, 1, 
°
->
öãrvÆ
);

324 i‡(
n
 < 0) {

325 i‡(
î∫o
 =
EINTR
) {

328 
	`log_îr‹
("ïﬁ»waô o¿ê%d wôh m %d faûed: %s", 
ï
,

329 
°
->
sd
, 
	`°ªº‹
(
î∫o
));

333 
	`cb
(
°
, &
n
);

336 
îr‹
:

337 
°©us
 = 
	`˛o£
(
ï
);

338 i‡(
°©us
 < 0) {

339 
	`log_îr‹
("˛o£É %d faûed, ign‹ed: %s", 
ï
, 
	`°ªº‹
(
î∫o
));

341 
ï
 = -1;

342 
	}
}

	@src/event/nc_event.h

18 #i‚de‡
_NC_EVENT_H_


19 
	#_NC_EVENT_H_


	)

21 
	~<nc_c‹e.h
>

23 
	#EVENT_SIZE
 1024

	)

25 
	#EVENT_READ
 0x0000ff

	)

26 
	#EVENT_WRITE
 0x00ff00

	)

27 
	#EVENT_ERR
 0xff0000

	)

29 (*
	tevít_cb_t
)(*, 
	tuöt32_t
);

30 (*
	tevít_°©s_cb_t
)(*, *);

32 #ifde‡
NC_HAVE_KQUEUE


34 
	sevít_ba£
 {

35 
kq
;

37 
kevít
 *
ch™ge
;

38 
nch™ge
;

40 
kevít
 *
evít
;

41 
√vít
;

42 
ƒëu∫ed
;

43 
≈ro˚s£d
;

45 
evít_cb_t
 
cb
;

48 #ñi‡
NC_HAVE_EPOLL


50 
	sevít_ba£
 {

51 
ï
;

53 
ïﬁl_evít
 *
evít
;

54 
√vít
;

56 
evít_cb_t
 
cb
;

59 #ñi‡
NC_HAVE_EVENT_PORTS


61 
	~<p‹t.h
>

63 
	sevít_ba£
 {

64 
evp
;

66 
p‹t_evít_t
 *
evít
;

67 
√vít
;

69 
evít_cb_t
 
cb
;

73 #îr‹ 
missög
 
sˇœbÀ
 
I
/
O
 
evít
 
nŸifiˇti⁄
 
mech™ism


76 
evít_ba£
 *
	`evít_ba£_¸óã
(
size
, 
evít_cb_t
 
cb
);

77 
	`evít_ba£_de°roy
(
evít_ba£
 *
evb
);

79 
	`evít_add_ö
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
);

80 
	`evít_dñ_ö
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
);

81 
	`evít_add_out
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
);

82 
	`evít_dñ_out
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
);

83 
	`evít_add_c⁄n
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
);

84 
	`evít_dñ_c⁄n
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
);

85 
	`evít_waô
(
evít_ba£
 *
evb
, 
timeout
);

86 
	`evít_lo›_°©s
(
evít_°©s_cb_t
 
cb
, *
¨g
);

	@src/event/nc_evport.c

18 
	~<nc_c‹e.h
>

20 #ifde‡
NC_HAVE_EVENT_PORTS


22 
	~<p‹t.h
>

23 
	~<pﬁl.h
>

25 
evít_ba£
 *

26 
	$evít_ba£_¸óã
(
√vít
, 
evít_cb_t
 
cb
)

28 
evít_ba£
 *
evb
;

29 
°©us
, 
evp
;

30 
p‹t_evít_t
 *
evít
;

32 
	`ASSERT
(
√vít
 > 0);

34 
evp
 = 
	`p‹t_¸óã
();

35 i‡(
evp
 < 0) {

36 
	`log_îr‹
("p‹à¸óã faûed: %s", 
	`°ªº‹
(
î∫o
));

37  
NULL
;

40 
evít
 = 
	`nc_ˇŒoc
(
√vít
, (*event));

41 i‡(
evít
 =
NULL
) {

42 
°©us
 = 
	`˛o£
(
evp
);

43 i‡(
°©us
 < 0) {

44 
	`log_îr‹
("˛o£Év∞%d faûed, ign‹ed: %s", 
evp
, 
	`°ªº‹
(
î∫o
));

46  
NULL
;

49 
evb
 = 
	`nc_Æloc
((*evb));

50 i‡(
evb
 =
NULL
) {

51 
	`nc_‰ì
(
evít
);

52 
°©us
 = 
	`˛o£
(
evp
);

53 i‡(
°©us
 < 0) {

54 
	`log_îr‹
("˛o£Év∞%d faûed, ign‹ed: %s", 
evp
, 
	`°ªº‹
(
î∫o
));

56  
NULL
;

59 
evb
->
evp
 =Évp;

60 
evb
->
evít
 =Évent;

61 
evb
->
√vít
 =Çevent;

62 
evb
->
cb
 = cb;

64 
	`log_debug
(
LOG_INFO
, "ev∞%d wôhÇevíà%d", 
evb
->
evp
,Évb->
√vít
);

66  
evb
;

67 
	}
}

70 
	$evít_ba£_de°roy
(
evít_ba£
 *
evb
)

72 
°©us
;

74 i‡(
evb
 =
NULL
) {

78 
	`ASSERT
(
evb
->
evp
 >= 0);

80 
	`nc_‰ì
(
evb
->
evít
);

82 
°©us
 = 
	`˛o£
(
evb
->
evp
);

83 i‡(
°©us
 < 0) {

84 
	`log_îr‹
("˛o£Év∞%d faûed, ign‹ed: %s", 
evb
->
evp
, 
	`°ªº‹
(
î∫o
));

86 
evb
->
evp
 = -1;

88 
	`nc_‰ì
(
evb
);

89 
	}
}

92 
	$evít_add_ö
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

95 
	}
}

98 
	$evít_dñ_ö
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

101 
	}
}

104 
	$evít_add_out
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

106 
°©us
;

107 
evp
 = 
evb
->evp;

109 
	`ASSERT
(
evp
 > 0);

110 
	`ASSERT
(
c
 !
NULL
);

111 
	`ASSERT
(
c
->
sd
 > 0);

112 
	`ASSERT
(
c
->
ªcv_a˘ive
);

114 i‡(
c
->
£nd_a˘ive
) {

118 
°©us
 = 
	`p‹t_assocüã
(
evp
, 
PORT_SOURCE_FD
, 
c
->
sd
, 
POLLIN
 | 
POLLOUT
, c);

119 i‡(
°©us
 < 0) {

120 
	`log_îr‹
("p‹àassocüã o¿ev∞%d sd %d faûed: %s", 
evp
, 
c
->
sd
,

121 
	`°ªº‹
(
î∫o
));

123 
c
->
£nd_a˘ive
 = 1;

126  
°©us
;

127 
	}
}

130 
	$evít_dñ_out
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

132 
°©us
;

133 
evp
 = 
evb
->evp;

135 
	`ASSERT
(
evp
 > 0);

136 
	`ASSERT
(
c
 !
NULL
);

137 
	`ASSERT
(
c
->
sd
 > 0);

138 
	`ASSERT
(
c
->
ªcv_a˘ive
);

140 i‡(!
c
->
£nd_a˘ive
) {

144 
°©us
 = 
	`p‹t_assocüã
(
evp
, 
PORT_SOURCE_FD
, 
c
->
sd
, 
POLLIN
, c);

145 i‡(
°©us
 < 0) {

146 
	`log_îr‹
("p‹àassocüã o¿ev∞%d sd %d faûed: %s", 
evp
, 
c
->
sd
,

147 
	`°ªº‹
(
î∫o
));

149 
c
->
£nd_a˘ive
 = 0;

152  
°©us
;

153 
	}
}

156 
	$evít_add_c⁄n
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

158 
°©us
;

159 
evp
 = 
evb
->evp;

161 
	`ASSERT
(
evp
 > 0);

162 
	`ASSERT
(
c
 !
NULL
);

163 
	`ASSERT
(
c
->
sd
 > 0);

164 
	`ASSERT
(!
c
->
ªcv_a˘ive
);

165 
	`ASSERT
(!
c
->
£nd_a˘ive
);

167 
°©us
 = 
	`p‹t_assocüã
(
evp
, 
PORT_SOURCE_FD
, 
c
->
sd
, 
POLLIN
 | 
POLLOUT
, c);

168 i‡(
°©us
 < 0) {

169 
	`log_îr‹
("p‹àassocüã o¿ev∞%d sd %d faûed: %s", 
evp
, 
c
->
sd
,

170 
	`°ªº‹
(
î∫o
));

172 
c
->
£nd_a˘ive
 = 1;

173 
c
->
ªcv_a˘ive
 = 1;

176  
°©us
;

177 
	}
}

180 
	$evít_dñ_c⁄n
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

182 
°©us
;

183 
evp
 = 
evb
->evp;

185 
	`ASSERT
(
evp
 > 0);

186 
	`ASSERT
(
c
 !
NULL
);

187 
	`ASSERT
(
c
->
sd
 > 0);

189 i‡(!
c
->
£nd_a˘ive
 && !c->
ªcv_a˘ive
) {

202 
°©us
 = 
	`p‹t_dissocüã
(
evp
, 
PORT_SOURCE_FD
, 
c
->
sd
);

203 i‡(
°©us
 < 0 && 
î∫o
 !
ENOENT
) {

204 
	`log_îr‹
("p‹àdissocüãÉv∞%d sd %d faûed: %s", 
evp
, 
c
->
sd
,

205 
	`°ªº‹
(
î∫o
));

206  
°©us
;

209 
c
->
ªcv_a˘ive
 = 0;

210 
c
->
£nd_a˘ive
 = 0;

213 
	}
}

216 
	$evít_ªassocüã
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

218 
°©us
, 
evíts
;

219 
evp
 = 
evb
->evp;

221 
	`ASSERT
(
evp
 > 0);

222 
	`ASSERT
(
c
 !
NULL
);

223 
	`ASSERT
(
c
->
sd
 > 0);

224 
	`ASSERT
(
c
->
ªcv_a˘ive
);

226 i‡(
c
->
£nd_a˘ive
) {

227 
evíts
 = 
POLLIN
 | 
POLLOUT
;

229 
evíts
 = 
POLLIN
;

232 
°©us
 = 
	`p‹t_assocüã
(
evp
, 
PORT_SOURCE_FD
, 
c
->
sd
, 
evíts
 , c);

233 i‡(
°©us
 < 0) {

234 
	`log_îr‹
("p‹àassocüã o¿ev∞%d sd %d faûed: %s", 
evp
, 
c
->
sd
,

235 
	`°ªº‹
(
î∫o
));

238  
°©us
;

239 
	}
}

242 
	$evít_waô
(
evít_ba£
 *
evb
, 
timeout
)

244 
evp
 = 
evb
->evp;

245 
p‹t_evít_t
 *
evít
 = 
evb
->event;

246 
√vít
 = 
evb
->nevent;

247 
time•ec
 
ts
, *
t•
;

249 
	`ASSERT
(
evp
 > 0);

250 
	`ASSERT
(
evít
 !
NULL
);

251 
	`ASSERT
(
√vít
 > 0);

254 i‡(
timeout
 < 0) {

255 
t•
 = 
NULL
;

257 
t•
 = &
ts
;

258 
t•
->
tv_£c
 = 
timeout
 / 1000LL;

259 
t•
->
tv_n£c
 = (
timeout
 % 1000LL) * 1000000LL;

263 
i
, 
°©us
;

264 
ƒëu∫ed
 = 1;

274 
°©us
 = 
	`p‹t_gën
(
evp
, 
evít
, 
√vít
, &
ƒëu∫ed
, 
t•
);

275 i‡(
°©us
 < 0) {

276 i‡(
î∫o
 =
EINTR
 ||Éºnÿ=
EAGAIN
) {

285 i‡(
î∫o
 !
ETIME
) {

286 
	`log_îr‹
("p‹àgë¿⁄Év∞%d wôh %dÉvít†Áûed: %s", 
evp
,

287 
√vít
, 
	`°ªº‹
(
î∫o
));

292 i‡(
ƒëu∫ed
 > 0) {

293 
i
 = 0; i < 
ƒëu∫ed
; i++) {

294 
p‹t_evít_t
 *
ev
 = &
evb
->
evít
[
i
];

295 
uöt32_t
 
evíts
 = 0;

297 
	`log_debug
(
LOG_VVERB
, "p‹à%04"
PRIX32
" from source %d "

298 "åiggîed o¿c⁄¿%p", 
ev
->
p‹ãv_evíts
,

299 
ev
->
p‹ãv_sour˚
,Év->
p‹ãv_u£r
);

301 i‡(
ev
->
p‹ãv_evíts
 & 
POLLERR
) {

302 
evíts
 |
EVENT_ERR
;

305 i‡(
ev
->
p‹ãv_evíts
 & 
POLLIN
) {

306 
evíts
 |
EVENT_READ
;

309 i‡(
ev
->
p‹ãv_evíts
 & 
POLLOUT
) {

310 
evíts
 |
EVENT_WRITE
;

313 i‡(
evb
->
cb
 !
NULL
 && 
evíts
 != 0) {

314 
°©us
 = 
evb
->
	`cb
(
ev
->
p‹ãv_u£r
, 
evíts
);

315 i‡(
°©us
 < 0) {

332 
	`evít_ªassocüã
(
evb
, 
ev
->
p‹ãv_u£r
);

336  
ƒëu∫ed
;

339 i‡(
timeout
 == -1) {

340 
	`log_îr‹
("port getn onÉvp %d with %dÉventsánd %dÅimeout "

341 "ªtu∫edÇÿevíts", 
evp
, 
√vít
, 
timeout
);

348 
	`NOT_REACHED
();

349 
	}
}

352 
	$evít_lo›_°©s
(
evít_°©s_cb_t
 
cb
, *
¨g
)

354 
°©s
 *
°
 = 
¨g
;

355 
°©us
, 
evp
;

356 
p‹t_evít_t
 
evít
;

357 
time•ec
 
ts
, *
t•
;

359 
evp
 = 
	`p‹t_¸óã
();

360 i‡(
evp
 < 0) {

361 
	`log_îr‹
("p‹à¸óã faûed: %s", 
	`°ªº‹
(
î∫o
));

365 
°©us
 = 
	`p‹t_assocüã
(
evp
, 
PORT_SOURCE_FD
, 
°
->
sd
, 
POLLIN
, 
NULL
);

366 i‡(
°©us
 < 0) {

367 
	`log_îr‹
("p‹àassocüã o¿ev∞%d sd %d faûed: %s", 
evp
, 
°
->
sd
,

368 
	`°ªº‹
(
î∫o
));

369 
îr‹
;

373 i‡(
°
->
öãrvÆ
 < 0) {

374 
t•
 = 
NULL
;

376 
t•
 = &
ts
;

377 
t•
->
tv_£c
 = 
°
->
öãrvÆ
 / 1000LL;

378 
t•
->
tv_n£c
 = (
°
->
öãrvÆ
 % 1000LL) * 1000000LL;

383 
ƒëu∫ed
 = 1;

385 
°©us
 = 
	`p‹t_gën
(
evp
, &
evít
, 1, &
ƒëu∫ed
, 
t•
);

386 i‡(
°©us
 !
NC_OK
) {

387 i‡(
î∫o
 =
EINTR
 ||Éºnÿ=
EAGAIN
) {

391 i‡(
î∫o
 !
ETIME
) {

392 
	`log_îr‹
("p‹àgë¿⁄Év∞%d wôh m %d faûed: %s", 
evp
,

393 
°
->
sd
, 
	`°ªº‹
(
î∫o
));

394 
îr‹
;

398 
	`ASSERT
(
ƒëu∫ed
 <= 1);

400 i‡(
ƒëu∫ed
 == 1) {

402 
°©us
 = 
	`p‹t_assocüã
(
evp
, 
PORT_SOURCE_FD
, 
°
->
sd
, 
POLLIN
, 
NULL
);

403 i‡(
°©us
 < 0) {

404 
	`log_îr‹
("p‹àassocüã o¿ev∞%d sd %d faûed: %s", 
evp
, 
°
->
sd
,

405 
	`°ªº‹
(
î∫o
));

409 
	`cb
(
°
, &
ƒëu∫ed
);

412 
îr‹
:

413 
°©us
 = 
	`˛o£
(
evp
);

414 i‡(
°©us
 < 0) {

415 
	`log_îr‹
("˛o£Év∞%d faûed, ign‹ed: %s", 
evp
, 
	`°ªº‹
(
î∫o
));

417 
evp
 = -1;

418 
	}
}

	@src/event/nc_kqueue.c

18 
	~<nc_c‹e.h
>

20 #ifde‡
NC_HAVE_KQUEUE


22 
	~<sys/evít.h
>

24 
evít_ba£
 *

25 
	$evít_ba£_¸óã
(
√vít
, 
evít_cb_t
 
cb
)

27 
evít_ba£
 *
evb
;

28 
°©us
, 
kq
;

29 
kevít
 *
ch™ge
, *
evít
;

31 
	`ASSERT
(
√vít
 > 0);

33 
kq
 = 
	`kqueue
();

34 i‡(
kq
 < 0) {

35 
	`log_îr‹
("kqueuêÁûed: %s", 
	`°ªº‹
(
î∫o
));

36  
NULL
;

39 
ch™ge
 = 
	`nc_ˇŒoc
(
√vít
, (*change));

40 i‡(
ch™ge
 =
NULL
) {

41 
°©us
 = 
	`˛o£
(
kq
);

42 i‡(
°©us
 < 0) {

43 
	`log_îr‹
("˛o£ kq %d faûed, ign‹ed: %s", 
kq
, 
	`°ªº‹
(
î∫o
));

45  
NULL
;

48 
evít
 = 
	`nc_ˇŒoc
(
√vít
, (*event));

49 i‡(
evít
 =
NULL
) {

50 
	`nc_‰ì
(
ch™ge
);

51 
°©us
 = 
	`˛o£
(
kq
);

52 i‡(
°©us
 < 0) {

53 
	`log_îr‹
("˛o£ kq %d faûed, ign‹ed: %s", 
kq
, 
	`°ªº‹
(
î∫o
));

55  
NULL
;

58 
evb
 = 
	`nc_Æloc
((*evb));

59 i‡(
evb
 =
NULL
) {

60 
	`nc_‰ì
(
ch™ge
);

61 
	`nc_‰ì
(
evít
);

62 
°©us
 = 
	`˛o£
(
kq
);

63 i‡(
°©us
 < 0) {

64 
	`log_îr‹
("˛o£ kq %d faûed, ign‹ed: %s", 
kq
, 
	`°ªº‹
(
î∫o
));

66  
NULL
;

69 
evb
->
kq
 = kq;

70 
evb
->
ch™ge
 = change;

71 
evb
->
nch™ge
 = 0;

72 
evb
->
evít
 =Évent;

73 
evb
->
√vít
 =Çevent;

74 
evb
->
ƒëu∫ed
 = 0;

75 
evb
->
≈ro˚s£d
 = 0;

76 
evb
->
cb
 = cb;

78 
	`log_debug
(
LOG_INFO
, "kq %d wôhÇevíà%d", 
evb
->
kq
,Évb->
√vít
);

80  
evb
;

81 
	}
}

84 
	$evít_ba£_de°roy
(
evít_ba£
 *
evb
)

86 
°©us
;

88 i‡(
evb
 =
NULL
) {

92 
	`ASSERT
(
evb
->
kq
 > 0);

94 
	`nc_‰ì
(
evb
->
ch™ge
);

95 
	`nc_‰ì
(
evb
->
evít
);

97 
°©us
 = 
	`˛o£
(
evb
->
kq
);

98 i‡(
°©us
 < 0) {

99 
	`log_îr‹
("˛o£ kq %d faûed, ign‹ed: %s", 
evb
->
kq
, 
	`°ªº‹
(
î∫o
));

101 
evb
->
kq
 = -1;

103 
	`nc_‰ì
(
evb
);

104 
	}
}

107 
	$evít_add_ö
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

109 
kevít
 *
evít
;

111 
	`ASSERT
(
evb
->
kq
 > 0);

112 
	`ASSERT
(
c
 !
NULL
);

113 
	`ASSERT
(
c
->
sd
 > 0);

114 
	`ASSERT
(
evb
->
nch™ge
 <Évb->
√vít
);

116 i‡(
c
->
ªcv_a˘ive
) {

120 
evít
 = &
evb
->
ch™ge
[evb->
nch™ge
++];

121 
	`EV_SET
(
evít
, 
c
->
sd
, 
EVFILT_READ
, 
EV_ADD
 | 
EV_CLEAR
, 0, 0, c);

123 
c
->
ªcv_a˘ive
 = 1;

126 
	}
}

129 
	$evít_dñ_ö
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

131 
kevít
 *
evít
;

133 
	`ASSERT
(
evb
->
kq
 > 0);

134 
	`ASSERT
(
c
 !
NULL
);

135 
	`ASSERT
(
c
->
sd
 > 0);

136 
	`ASSERT
(
evb
->
nch™ge
 <Évb->
√vít
);

138 i‡(!
c
->
ªcv_a˘ive
) {

142 
evít
 = &
evb
->
ch™ge
[evb->
nch™ge
++];

143 
	`EV_SET
(
evít
, 
c
->
sd
, 
EVFILT_READ
, 
EV_DELETE
, 0, 0, c);

145 
c
->
ªcv_a˘ive
 = 0;

148 
	}
}

151 
	$evít_add_out
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

153 
kevít
 *
evít
;

155 
	`ASSERT
(
evb
->
kq
 > 0);

156 
	`ASSERT
(
c
 !
NULL
);

157 
	`ASSERT
(
c
->
sd
 > 0);

158 
	`ASSERT
(
c
->
ªcv_a˘ive
);

159 
	`ASSERT
(
evb
->
nch™ge
 <Évb->
√vít
);

161 i‡(
c
->
£nd_a˘ive
) {

165 
evít
 = &
evb
->
ch™ge
[evb->
nch™ge
++];

166 
	`EV_SET
(
evít
, 
c
->
sd
, 
EVFILT_WRITE
, 
EV_ADD
 | 
EV_CLEAR
, 0, 0, c);

168 
c
->
£nd_a˘ive
 = 1;

171 
	}
}

174 
	$evít_dñ_out
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

176 
kevít
 *
evít
;

178 
	`ASSERT
(
evb
->
kq
 > 0);

179 
	`ASSERT
(
c
 !
NULL
);

180 
	`ASSERT
(
c
->
sd
 > 0);

181 
	`ASSERT
(
c
->
ªcv_a˘ive
);

182 
	`ASSERT
(
evb
->
nch™ge
 <Évb->
√vít
);

184 i‡(!
c
->
£nd_a˘ive
) {

188 
evít
 = &
evb
->
ch™ge
[evb->
nch™ge
++];

189 
	`EV_SET
(
evít
, 
c
->
sd
, 
EVFILT_WRITE
, 
EV_DELETE
, 0, 0, c);

191 
c
->
£nd_a˘ive
 = 0;

194 
	}
}

197 
	$evít_add_c⁄n
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

199 
	`ASSERT
(
evb
->
kq
 > 0);

200 
	`ASSERT
(
c
 !
NULL
);

201 
	`ASSERT
(
c
->
sd
 > 0);

202 
	`ASSERT
(!
c
->
ªcv_a˘ive
);

203 
	`ASSERT
(!
c
->
£nd_a˘ive
);

204 
	`ASSERT
(
evb
->
nch™ge
 <Évb->
√vít
);

206 
	`evít_add_ö
(
evb
, 
c
);

207 
	`evít_add_out
(
evb
, 
c
);

210 
	}
}

213 
	$evít_dñ_c⁄n
(
evít_ba£
 *
evb
, 
c⁄n
 *
c
)

215 
i
;

217 
	`ASSERT
(
evb
->
kq
 > 0);

218 
	`ASSERT
(
c
 !
NULL
);

219 
	`ASSERT
(
c
->
sd
 > 0);

220 
	`ASSERT
(
evb
->
nch™ge
 <Évb->
√vít
);

222 
	`evít_dñ_out
(
evb
, 
c
);

223 
	`evít_dñ_ö
(
evb
, 
c
);

230 
i
 = 
evb
->
≈ro˚s£d
 + 1; i <Évb->
ƒëu∫ed
; i++) {

231 
kevít
 *
ev
 = &
evb
->
evít
[
i
];

232 i‡(
ev
->
idít
 =(
uöçå_t
)
c
->
sd
) {

233 
ev
->
Êags
 = 0;

234 
ev
->
fûãr
 = 0;

240 
	}
}

243 
	$evít_waô
(
evít_ba£
 *
evb
, 
timeout
)

245 
kq
 = 
evb
->kq;

246 
time•ec
 
ts
, *
t•
;

248 
	`ASSERT
(
kq
 > 0);

251 i‡(
timeout
 < 0) {

252 
t•
 = 
NULL
;

254 
t•
 = &
ts
;

255 
t•
->
tv_£c
 = 
timeout
 / 1000LL;

256 
t•
->
tv_n£c
 = (
timeout
 % 1000LL) * 1000000LL;

273 
evb
->
ƒëu∫ed
 = 
	`kevít
(
kq
,Évb->
ch™ge
,Évb->
nch™ge
,Évb->
evít
,

274 
evb
->
√vít
, 
t•
);

275 
evb
->
nch™ge
 = 0;

276 i‡(
evb
->
ƒëu∫ed
 > 0) {

277 
evb
->
≈ro˚s£d
 = 0;Évb->≈ro˚s£d <Évb->
ƒëu∫ed
;

278 
evb
->
≈ro˚s£d
++) {

279 
kevít
 *
ev
 = &
evb
->
evít
[evb->
≈ro˚s£d
];

280 
uöt32_t
 
evíts
 = 0;

282 
	`log_debug
(
LOG_VVERB
, "kevíà%04"
PRIX32
" with filter %d "

283 "åiggîed o¿sd %d", 
ev
->
Êags
,Év->
fûãr
,

284 
ev
->
idít
);

292 i‡(
ev
->
Êags
 & 
EV_ERROR
) {

304 i‡(
ev
->
d©a
 =
EBADF
 ||Év->d©®=
EINVAL
 ||

305 
ev
->
d©a
 =
ENOENT
 ||Év->d©®=
EINTR
) {

308 
evíts
 |
EVENT_ERR
;

311 i‡(
ev
->
fûãr
 =
EVFILT_READ
) {

312 
evíts
 |
EVENT_READ
;

315 i‡(
ev
->
fûãr
 =
EVFILT_WRITE
) {

316 
evíts
 |
EVENT_WRITE
;

319 i‡(
evb
->
cb
 !
NULL
 && 
evíts
 != 0) {

320 
evb
->
	`cb
(
ev
->
ud©a
, 
evíts
);

323  
evb
->
ƒëu∫ed
;

326 i‡(
evb
->
ƒëu∫ed
 == 0) {

327 i‡(
timeout
 == -1) {

328 
	`log_îr‹
("kevent on kq %d with %dÉventsánd %dÅimeout "

329 "ªtu∫edÇÿevíts", 
kq
, 
evb
->
√vít
, 
timeout
);

336 i‡(
î∫o
 =
EINTR
) {

340 
	`log_îr‹
("kevíà⁄ kq %d wôh %dÉvít†Áûed: %s", 
kq
, 
evb
->
√vít
,

341 
	`°ªº‹
(
î∫o
));

345 
	`NOT_REACHED
();

346 
	}
}

349 
	$evít_lo›_°©s
(
evít_°©s_cb_t
 
cb
, *
¨g
)

351 
°©s
 *
°
 = 
¨g
;

352 
°©us
, 
kq
;

353 
kevít
 
ch™ge
, 
evít
;

354 
time•ec
 
ts
, *
t•
;

356 
kq
 = 
	`kqueue
();

357 i‡(
kq
 < 0) {

358 
	`log_îr‹
("kqueuêÁûed: %s", 
	`°ªº‹
(
î∫o
));

362 
	`EV_SET
(&
ch™ge
, 
°
->
sd
, 
EVFILT_READ
, 
EV_ADD
 | 
EV_CLEAR
, 0, 0, 
NULL
);

365 i‡(
°
->
öãrvÆ
 < 0) {

366 
t•
 = 
NULL
;

368 
t•
 = &
ts
;

369 
t•
->
tv_£c
 = 
°
->
öãrvÆ
 / 1000LL;

370 
t•
->
tv_n£c
 = (
°
->
öãrvÆ
 % 1000LL) * 1000000LL;

374 
ƒëu∫ed
;

376 
ƒëu∫ed
 = 
	`kevít
(
kq
, &
ch™ge
, 1, &
evít
, 1, 
t•
);

377 i‡(
ƒëu∫ed
 < 0) {

378 i‡(
î∫o
 =
EINTR
) {

381 
	`log_îr‹
("kevíà⁄ kq %d wôh m %d faûed: %s", 
kq
, 
°
->
sd
,

382 
	`°ªº‹
(
î∫o
));

383 
îr‹
;

386 
	`ASSERT
(
ƒëu∫ed
 <= 1);

388 i‡(
ƒëu∫ed
 == 1) {

389 
kevít
 *
ev
 = &
evít
;

391 i‡(
ev
->
Êags
 & 
EV_ERROR
) {

392 i‡(
ev
->
d©a
 =
EINTR
) {

395 
	`log_îr‹
("kevíà⁄ kq %d wôh m %d faûed: %s", 
kq
, 
°
->
sd
,

396 
	`°ªº‹
(
ev
->
d©a
));

397 
îr‹
;

401 
	`cb
(
°
, &
ƒëu∫ed
);

404 
îr‹
:

405 
°©us
 = 
	`˛o£
(
kq
);

406 i‡(
°©us
 < 0) {

407 
	`log_îr‹
("˛o£ kq %d faûed, ign‹ed: %s", 
kq
, 
	`°ªº‹
(
î∫o
));

409 
kq
 = -1;

410 
	}
}

	@src/hashkit/nc_crc16.c

18 
	~<nc_c‹e.h
>

20 c⁄° 
uöt16_t
 
	g¸c16èb
[256] = {

55 
uöt32_t


56 
	$hash_¸c16
(c⁄° *
key
, 
size_t
 
key_Àngth
)

58 
uöt64_t
 
x
;

59 
uöt32_t
 
¸c
 = 0;

61 
x
=0; x < 
key_Àngth
; x++) {

62 
¸c
 = (¸¯<< 8Ë^ 
¸c16èb
[((¸¯>> 8Ë^ *
key
++) & 0x00ff];

65  
¸c
;

66 
	}
}

	@src/hashkit/nc_crc32.c

25 
	~<nc_c‹e.h
>

27 c⁄° 
uöt32_t
 
	g¸c32èb
[256] = {

98 
uöt32_t


99 
	$hash_¸c32
(c⁄° *
key
, 
size_t
 
key_Àngth
)

101 
uöt64_t
 
x
;

102 
uöt32_t
 
¸c
 = 
UINT32_MAX
;

104 
x
 = 0; x < 
key_Àngth
; x++) {

105 
¸c
 = (¸¯>> 8Ë^ 
¸c32èb
[(¸¯^ (
uöt64_t
)
key
[
x
]) & 0xff];

108  ((~
¸c
) >> 16) & 0x7fff;

109 
	}
}

111 
uöt32_t


112 
	$hash_¸c32a
(c⁄° *
key
, 
size_t
 
key_Àngth
)

114 c⁄° 
uöt8_t
 *
p
 = 
key
;

115 
uöt32_t
 
¸c
;

117 
¸c
 = ~0U;

118 
key_Àngth
--) {

119 
¸c
 = 
¸c32èb
[(¸¯^ *
p
++) & 0xFF] ^ (crc >> 8);

122  
¸c
 ^ ~0U;

123 
	}
}

	@src/hashkit/nc_fnv.c

18 
	~<nc_c‹e.h
>

20 
uöt64_t
 
	gFNV_64_INIT
 = 
UINT64_C
(0xcbf29ce484222325);

21 
uöt64_t
 
	gFNV_64_PRIME
 = 
UINT64_C
(0x100000001b3);

22 
uöt32_t
 
	gFNV_32_INIT
 = 2166136261UL;

23 
uöt32_t
 
	gFNV_32_PRIME
 = 16777619;

25 
uöt32_t


26 
	$hash_‚v1_64
(c⁄° *
key
, 
size_t
 
key_Àngth
)

28 
uöt64_t
 
hash
 = 
FNV_64_INIT
;

29 
size_t
 
x
;

31 
x
 = 0; x < 
key_Àngth
; x++) {

32 
hash
 *
FNV_64_PRIME
;

33 
hash
 ^(
uöt64_t
)
key
[
x
];

36  (
uöt32_t
)
hash
;

37 
	}
}

39 
uöt32_t


40 
	$hash_‚v1a_64
(c⁄° *
key
, 
size_t
 
key_Àngth
)

42 
uöt32_t
 
hash
 = (uöt32_tË
FNV_64_INIT
;

43 
size_t
 
x
;

45 
x
 = 0; x < 
key_Àngth
; x++) {

46 
uöt32_t
 
vÆ
 = (uöt32_t)
key
[
x
];

47 
hash
 ^
vÆ
;

48 
hash
 *(
uöt32_t
Ë
FNV_64_PRIME
;

51  
hash
;

52 
	}
}

54 
uöt32_t


55 
	$hash_‚v1_32
(c⁄° *
key
, 
size_t
 
key_Àngth
)

57 
uöt32_t
 
hash
 = 
FNV_32_INIT
;

58 
size_t
 
x
;

60 
x
 = 0; x < 
key_Àngth
; x++) {

61 
uöt32_t
 
vÆ
 = (uöt32_t)
key
[
x
];

62 
hash
 *
FNV_32_PRIME
;

63 
hash
 ^
vÆ
;

66  
hash
;

67 
	}
}

69 
uöt32_t


70 
	$hash_‚v1a_32
(c⁄° *
key
, 
size_t
 
key_Àngth
)

72 
uöt32_t
 
hash
 = 
FNV_32_INIT
;

73 
size_t
 
x
;

75 
x
0; x < 
key_Àngth
; x++) {

76 
uöt32_t
 
vÆ
 = (uöt32_t)
key
[
x
];

77 
hash
 ^
vÆ
;

78 
hash
 *
FNV_32_PRIME
;

81  
hash
;

82 
	}
}

	@src/hashkit/nc_hashkit.h

18 #i‚de‡
_NC_HASHKIT_H_


19 
	#_NC_HASHKIT_H_


	)

21 
	~<nc_c‹e.h
>

22 
	~<nc_£rvî.h
>

24 
	#HASH_CODEC
(
ACTION
) \

25 
	`ACTION
–
HASH_ONE_AT_A_TIME
, 
⁄e_©_a_time
 ) \

26 
	`ACTION
–
HASH_MD5
, 
md5
 ) \

27 
	`ACTION
–
HASH_CRC16
, 
¸c16
 ) \

28 
	`ACTION
–
HASH_CRC32
, 
¸c32
 ) \

29 
	`ACTION
–
HASH_CRC32A
, 
¸c32a
 ) \

30 
	`ACTION
–
HASH_FNV1_64
, 
‚v1_64
 ) \

31 
	`ACTION
–
HASH_FNV1A_64
, 
‚v1a_64
 ) \

32 
	`ACTION
–
HASH_FNV1_32
, 
‚v1_32
 ) \

33 
	`ACTION
–
HASH_FNV1A_32
, 
‚v1a_32
 ) \

34 
	`ACTION
–
HASH_HSIEH
, 
hsõh
 ) \

35 
	`ACTION
–
HASH_MURMUR
, 
murmur
 ) \

36 
	`ACTION
–
HASH_JENKINS
, 
jíkös
 ) \

37 

	)

38 
	#DIST_CODEC
(
ACTION
) \

39 
	`ACTION
–
DIST_KETAMA
, 
këama
 ) \

40 
	`ACTION
–
DIST_MODULA
, 
moduœ
 ) \

41 
	`ACTION
–
DIST_RANDOM
, 
øndom
 ) \

42 

	)

43 
	#DEFINE_ACTION
(
_hash
, 
_«me
Ë_hash,

	)

44 
	ehash_ty≥
 {

45 
HASH_CODEC
–
DEFINE_ACTION
 )

46 
	mHASH_SENTINEL


47 } 
	thash_ty≥_t
;

48 #unde‡
DEFINE_ACTION


50 
	#DEFINE_ACTION
(
_di°
, 
_«me
Ë_di°,

	)

51 
	edi°_ty≥
 {

52 
DIST_CODEC
–
DEFINE_ACTION
 )

53 
	mDIST_SENTINEL


54 } 
	tdi°_ty≥_t
;

55 #unde‡
DEFINE_ACTION


57 
uöt32_t
 
hash_⁄e_©_a_time
(c⁄° *
key
, 
size_t
 
key_Àngth
);

58 
md5_sig«tuª
(c⁄° *
key
, 
Àngth
, *
ªsu…
);

59 
uöt32_t
 
hash_md5
(c⁄° *
key
, 
size_t
 
key_Àngth
);

60 
uöt32_t
 
hash_¸c16
(c⁄° *
key
, 
size_t
 
key_Àngth
);

61 
uöt32_t
 
hash_¸c32
(c⁄° *
key
, 
size_t
 
key_Àngth
);

62 
uöt32_t
 
hash_¸c32a
(c⁄° *
key
, 
size_t
 
key_Àngth
);

63 
uöt32_t
 
hash_‚v1_64
(c⁄° *
key
, 
size_t
 
key_Àngth
);

64 
uöt32_t
 
hash_‚v1a_64
(c⁄° *
key
, 
size_t
 
key_Àngth
);

65 
uöt32_t
 
hash_‚v1_32
(c⁄° *
key
, 
size_t
 
key_Àngth
);

66 
uöt32_t
 
hash_‚v1a_32
(c⁄° *
key
, 
size_t
 
key_Àngth
);

67 
uöt32_t
 
hash_hsõh
(c⁄° *
key
, 
size_t
 
key_Àngth
);

68 
uöt32_t
 
hash_jíkös
(c⁄° *
key
, 
size_t
 
Àngth
);

69 
uöt32_t
 
hash_murmur
(c⁄° *
key
, 
size_t
 
Àngth
);

71 
r°©us_t
 
këama_upd©e
(
£rvî_poﬁ
 *
poﬁ
);

72 
uöt32_t
 
këama_di•©ch
(
c⁄töuum
 *c⁄töuum, uöt32_à
nc⁄töuum
, uöt32_à
hash
);

73 
r°©us_t
 
moduœ_upd©e
(
£rvî_poﬁ
 *
poﬁ
);

74 
uöt32_t
 
moduœ_di•©ch
(
c⁄töuum
 *c⁄töuum, uöt32_à
nc⁄töuum
, uöt32_à
hash
);

75 
r°©us_t
 
øndom_upd©e
(
£rvî_poﬁ
 *
poﬁ
);

76 
uöt32_t
 
øndom_di•©ch
(
c⁄töuum
 *c⁄töuum, uöt32_à
nc⁄töuum
, uöt32_à
hash
);

	@src/hashkit/nc_hsieh.c

26 
	~<nc_c‹e.h
>

28 #unde‡
gë16bôs


29 #i‡(
deföed
(
__GNUC__
Ë&& deföed(
__i386__
))

30 
	#gë16bôs
(
d
Ë(*((c⁄° 
uöt16_t
 *Ë(d)))

	)

33 #i‡!
deföed
 (
gë16bôs
)

34 
	#gë16bôs
(
d
Ë((((
uöt32_t
)(((c⁄° 
uöt8_t
 *)(d))[1])) << 8)\

35 +(
uöt32_t
)(((c⁄° 
uöt8_t
 *)(
d
))[0]Ë)

	)

38 
uöt32_t


39 
	$hash_hsõh
(c⁄° *
key
, 
size_t
 
key_Àngth
)

41 
uöt32_t
 
hash
 = 0, 
tmp
;

42 
ªm
;

44 i‡(
key_Àngth
 <0 || 
key
 =
NULL
) {

48 
ªm
 = 
key_Àngth
 & 3;

49 
key_Àngth
 >>= 2;

52 ;
key_Àngth
 > 0; key_length--) {

53 
hash
 +
	`gë16bôs
 (
key
);

54 
tmp
 = (
	`gë16bôs
 (
key
+2Ë<< 11Ë^ 
hash
;

55 
hash
 = (hash << 16Ë^ 
tmp
;

56 
key
 +2* (
uöt16_t
);

57 
hash
 += hash >> 11;

61 
ªm
) {

63 
hash
 +
	`gë16bôs
 (
key
);

64 
hash
 ^= hash << 16;

65 
hash
 ^(
uöt32_t
)
key
[ (
uöt16_t
)] << 18;

66 
hash
 += hash >> 11;

70 
hash
 +
	`gë16bôs
 (
key
);

71 
hash
 ^= hash << 11;

72 
hash
 += hash >> 17;

76 
hash
 +()(*
key
);

77 
hash
 ^= hash << 10;

78 
hash
 += hash >> 1;

85 
hash
 ^= hash << 3;

86 
hash
 += hash >> 5;

87 
hash
 ^= hash << 4;

88 
hash
 += hash >> 17;

89 
hash
 ^= hash << 25;

90 
hash
 += hash >> 6;

92  
hash
;

93 
	}
}

	@src/hashkit/nc_jenkins.c

30 
	~<nc_c‹e.h
>

32 
	#hashsize
(
n
Ë((
uöt32_t
)1<<“))

	)

33 
	#hashmask
(
n
Ë(
	`hashsize
“)-1)

	)

34 
	#rŸ
(
x
,
k
Ë(((x)<<(k)Ë| ((x)>>(32-(k))))

	)

36 
	#mix
(
a
,
b
,
c
) \

38 
a
 -
c
;á ^
	`rŸ
(c, 4); c +
b
; \

39 
b
 -
a
; b ^
	`rŸ
◊, 6);á +
c
; \

40 
c
 -
b
; c ^
	`rŸ
(b, 8); b +
a
; \

41 
a
 -
c
;á ^
	`rŸ
(c,16); c +
b
; \

42 
b
 -
a
; b ^
	`rŸ
◊,19);á +
c
; \

43 
c
 -
b
; c ^
	`rŸ
(b, 4); b +
a
; \

44 }

	)

46 
	#föÆ
(
a
,
b
,
c
) \

48 
c
 ^
b
; c -
	`rŸ
(b,14); \

49 
a
 ^
c
;á -
	`rŸ
(c,11); \

50 
b
 ^
a
; b -
	`rŸ
(a,25); \

51 
c
 ^
b
; c -
	`rŸ
(b,16); \

52 
a
 ^
c
;á -
	`rŸ
(c,4); \

53 
b
 ^
a
; b -
	`rŸ
(a,14); \

54 
c
 ^
b
; c -
	`rŸ
(b,24); \

55 }

	)

57 
	#JENKINS_INITVAL
 13

	)

75 
uöt32_t


76 
	$hash_jíkös
(c⁄° *
key
, 
size_t
 
Àngth
)

78 
uöt32_t
 
a
,
b
,
c
;

79 uni⁄ { c⁄° *
±r
; 
size_t
 
i
; } 
u
;

82 
a
 = 
b
 = 
c
 = 0xdódbì‡+ ((
uöt32_t
)
Àngth
Ë+ 
JENKINS_INITVAL
;

84 
u
.
±r
 = 
key
;

85 #i‚de‡
WORDS_BIGENDIAN


86 i‡((
u
.
i
 & 0x3) == 0)

88 c⁄° 
uöt32_t
 *
k
 = (c⁄° uöt32_à*)
key
;

91 
Àngth
 > 12)

93 
a
 +
k
[0];

94 
b
 +
k
[1];

95 
c
 +
k
[2];

96 
	`mix
(
a
,
b
,
c
);

97 
Àngth
 -= 12;

98 
k
 += 3;

111 
Àngth
)

113 12: 
c
+=
k
[2]; 
b
+=k[1]; 
a
+=k[0]; ;

114 11: 
c
+=
k
[2]&0xffffff; 
b
+=k[1]; 
a
+=k[0]; ;

115 10: 
c
+=
k
[2]&0xffff; 
b
+=k[1]; 
a
+=k[0]; ;

116 9 : 
c
+=
k
[2]&0xff; 
b
+=k[1]; 
a
+=k[0]; ;

117 8 : 
b
+=
k
[1]; 
a
+=k[0]; ;

118 7 : 
b
+=
k
[1]&0xffffff; 
a
+=k[0]; ;

119 6 : 
b
+=
k
[1]&0xffff; 
a
+=k[0]; ;

120 5 : 
b
+=
k
[1]&0xff; 
a
+=k[0]; ;

121 4 : 
a
+=
k
[0]; ;

122 3 : 
a
+=
k
[0]&0xffffff; ;

123 2 : 
a
+=
k
[0]&0xffff; ;

124 1 : 
a
+=
k
[0]&0xff; ;

125 0 :  
c
;

126 :  
c
;

130 i‡((
u
.
i
 & 0x1) == 0)

132 c⁄° 
uöt16_t
 *
k
 = (c⁄° uöt16_à*)
key
;

133 c⁄° 
uöt8_t
 *
k8
;

136 
Àngth
 > 12)

138 
a
 +
k
[0] + (((
uöt32_t
)k[1])<<16);

139 
b
 +
k
[2] + (((
uöt32_t
)k[3])<<16);

140 
c
 +
k
[4] + (((
uöt32_t
)k[5])<<16);

141 
	`mix
(
a
,
b
,
c
);

142 
Àngth
 -= 12;

143 
k
 += 6;

147 
k8
 = (c⁄° 
uöt8_t
 *)
k
;

148 
Àngth
)

150 12: 
c
+=
k
[4]+(((
uöt32_t
)k[5])<<16);

151 
b
+=
k
[2]+(((
uöt32_t
)k[3])<<16);

152 
a
+=
k
[0]+(((
uöt32_t
)k[1])<<16);

154 11: 
c
+=((
uöt32_t
)
k8
[10])<<16;

155 10: 
c
+=
k
[4];

156 
b
+=
k
[2]+(((
uöt32_t
)k[3])<<16);

157 
a
+=
k
[0]+(((
uöt32_t
)k[1])<<16);

159 9 : 
c
+=
k8
[8];

160 8 : 
b
+=
k
[2]+(((
uöt32_t
)k[3])<<16);

161 
a
+=
k
[0]+(((
uöt32_t
)k[1])<<16);

163 7 : 
b
+=((
uöt32_t
)
k8
[6])<<16;

164 6 : 
b
+=
k
[2];

165 
a
+=
k
[0]+(((
uöt32_t
)k[1])<<16);

167 5 : 
b
+=
k8
[4];

168 4 : 
a
+=
k
[0]+(((
uöt32_t
)k[1])<<16);

170 3 : 
a
+=((
uöt32_t
)
k8
[2])<<16;

171 2 : 
a
+=
k
[0];

173 1 : 
a
+=
k8
[0];

175 0 :  
c
;

176 :  
c
;

183 c⁄° 
uöt8_t
 *
k
 = (c⁄° uöt8_à*)
key
;

186 
Àngth
 > 12)

188 
a
 +
k
[0];

189 
a
 +((
uöt32_t
)
k
[1])<<8;

190 
a
 +((
uöt32_t
)
k
[2])<<16;

191 
a
 +((
uöt32_t
)
k
[3])<<24;

192 
b
 +
k
[4];

193 
b
 +((
uöt32_t
)
k
[5])<<8;

194 
b
 +((
uöt32_t
)
k
[6])<<16;

195 
b
 +((
uöt32_t
)
k
[7])<<24;

196 
c
 +
k
[8];

197 
c
 +((
uöt32_t
)
k
[9])<<8;

198 
c
 +((
uöt32_t
)
k
[10])<<16;

199 
c
 +((
uöt32_t
)
k
[11])<<24;

200 
	`mix
(
a
,
b
,
c
);

201 
Àngth
 -= 12;

202 
k
 += 12;

206 
Àngth
)

208 12: 
c
+=((
uöt32_t
)
k
[11])<<24;

209 11: 
c
+=((
uöt32_t
)
k
[10])<<16;

210 10: 
c
+=((
uöt32_t
)
k
[9])<<8;

211 9 : 
c
+=
k
[8];

212 8 : 
b
+=((
uöt32_t
)
k
[7])<<24;

213 7 : 
b
+=((
uöt32_t
)
k
[6])<<16;

214 6 : 
b
+=((
uöt32_t
)
k
[5])<<8;

215 5 : 
b
+=
k
[4];

216 4 : 
a
+=((
uöt32_t
)
k
[3])<<24;

217 3 : 
a
+=((
uöt32_t
)
k
[2])<<16;

218 2 : 
a
+=((
uöt32_t
)
k
[1])<<8;

219 1 : 
a
+=
k
[0];

221 0 :  
c
;

222  :  
c
;

224 #i‚de‡
WORDS_BIGENDIAN


228 
	`föÆ
(
a
,
b
,
c
);

229  
c
;

230 
	}
}

	@src/hashkit/nc_ketama.c

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

20 
	~<m©h.h
>

22 
	~<nc_c‹e.h
>

23 
	~<nc_£rvî.h
>

24 
	~<nc_hashkô.h
>

26 
	#KETAMA_CONTINUUM_ADDITION
 10

	)

27 
	#KETAMA_POINTS_PER_SERVER
 160

	)

28 
	#KETAMA_MAX_HOSTLEN
 86

	)

30 
uöt32_t


31 
	$këama_hash
(c⁄° *
key
, 
size_t
 
key_Àngth
, 
uöt32_t
 
Æignmít
)

33 
ªsu…s
[16];

35 
	`md5_sig«tuª
((*)
key
, 
key_Àngth
, 
ªsu…s
);

37  ((
uöt32_t
Ë(
ªsu…s
[3 + 
Æignmít
 * 4] & 0xFF) << 24)

38 | ((
uöt32_t
Ë(
ªsu…s
[2 + 
Æignmít
 * 4] & 0xFF) << 16)

39 | ((
uöt32_t
Ë(
ªsu…s
[1 + 
Æignmít
 * 4] & 0xFF) << 8)

40 | (
ªsu…s
[0 + 
Æignmít
 * 4] & 0xFF);

41 
	}
}

44 
	$këama_ôem_cmp
(c⁄° *
t1
, c⁄° *
t2
)

46 c⁄° 
c⁄töuum
 *
˘1
 = 
t1
, *
˘2
 = 
t2
;

48 i‡(
˘1
->
vÆue
 =
˘2
->value) {

50 } i‡(
˘1
->
vÆue
 > 
˘2
->value) {

55 
	}
}

57 
r°©us_t


58 
	$këama_upd©e
(
£rvî_poﬁ
 *
poﬁ
)

60 
uöt32_t
 
n£rvî
;

61 
uöt32_t
 
∆ive_£rvî
;

62 
uöt32_t
 
poöãr_≥r_£rvî
;

63 
uöt32_t
 
poöãr_≥r_hash
;

64 
uöt32_t
 
poöãr_cou¡î
;

65 
uöt32_t
 
poöãr_ödex
;

66 
uöt32_t
 
poöts_≥r_£rvî
;

67 
uöt32_t
 
c⁄töuum_ödex
;

68 
uöt32_t
 
c⁄töuum_addôi⁄
;

69 
uöt32_t
 
£rvî_ödex
;

70 
uöt32_t
 
vÆue
;

71 
uöt32_t
 
tŸÆ_weight
;

72 
öt64_t
 
now
;

74 
	`ASSERT
(
	`¨øy_n
(&
poﬁ
->
£rvî
) > 0);

76 
now
 = 
	`nc_u£c_now
();

77 i‡(
now
 < 0) {

78  
NC_ERROR
;

85 
n£rvî
 = 
	`¨øy_n
(&
poﬁ
->
£rvî
);

86 
∆ive_£rvî
 = 0;

87 
tŸÆ_weight
 = 0;

88 
poﬁ
->
√xt_ªbuûd
 = 0LL;

89 
£rvî_ödex
 = 0; sîvî_ödex < 
n£rvî
; server_index++) {

90 
£rvî
 *£rvî = 
	`¨øy_gë
(&
poﬁ
->£rvî, 
£rvî_ödex
);

92 i‡(
poﬁ
->
auto_eje˘_ho°s
) {

93 i‡(
£rvî
->
√xt_ªåy
 <
now
) {

94 
£rvî
->
√xt_ªåy
 = 0LL;

95 
∆ive_£rvî
++;

96 } i‡(
poﬁ
->
√xt_ªbuûd
 == 0LL ||

97 
£rvî
->
√xt_ªåy
 < 
poﬁ
->
√xt_ªbuûd
) {

98 
poﬁ
->
√xt_ªbuûd
 = 
£rvî
->
√xt_ªåy
;

101 
∆ive_£rvî
++;

104 
	`ASSERT
(
£rvî
->
weight
 > 0);

107 i‡(!
poﬁ
->
auto_eje˘_ho°s
 || 
£rvî
->
√xt_ªåy
 <
now
) {

108 
tŸÆ_weight
 +
£rvî
->
weight
;

112 
poﬁ
->
∆ive_£rvî
 =Çlive_server;

114 i‡(
∆ive_£rvî
 == 0) {

115 
	`log_debug
(
LOG_DEBUG
, "nÿlivê£rvî†f‹Öoﬁ %"
PRIu32
" '%.*s'",

116 
poﬁ
->
idx
,Öoﬁ->
«me
.
Àn
,Öoﬁ->«me.
d©a
);

118  
NC_OK
;

120 
	`log_debug
(
LOG_DEBUG
, "%"
PRIu32
" of %"PRIu32" serversáreÜive forÖool "

121 "%"
PRIu32
" '%.*s'", 
∆ive_£rvî
, 
n£rvî
, 
poﬁ
->
idx
,

122 
poﬁ
->
«me
.
Àn
,Öoﬁ->«me.
d©a
);

124 
c⁄töuum_addôi⁄
 = 
KETAMA_CONTINUUM_ADDITION
;

125 
poöts_≥r_£rvî
 = 
KETAMA_POINTS_PER_SERVER
;

130 i‡(
∆ive_£rvî
 > 
poﬁ
->
n£rvî_c⁄töuum
) {

131 
c⁄töuum
 *continuum;

132 
uöt32_t
 
n£rvî_c⁄töuum
 = 
∆ive_£rvî
 + 
c⁄töuum_addôi⁄
;

133 
uöt32_t
 
nc⁄töuum
 = 
n£rvî_c⁄töuum
 * 
poöts_≥r_£rvî
;

135 
c⁄töuum
 = 
	`nc_ªÆloc
(
poﬁ
->c⁄töuum, (*c⁄töuumË* 
nc⁄töuum
);

136 i‡(
c⁄töuum
 =
NULL
) {

137  
NC_ENOMEM
;

140 
poﬁ
->
c⁄töuum
 = continuum;

141 
poﬁ
->
n£rvî_c⁄töuum
 =Çserver_continuum;

149 
c⁄töuum_ödex
 = 0;

150 
poöãr_cou¡î
 = 0;

151 
£rvî_ödex
 = 0; sîvî_ödex < 
n£rvî
; server_index++) {

152 
£rvî
 *server;

153 
p˘
;

155 
£rvî
 = 
	`¨øy_gë
(&
poﬁ
->£rvî, 
£rvî_ödex
);

157 i‡(
poﬁ
->
auto_eje˘_ho°s
 && 
£rvî
->
√xt_ªåy
 > 
now
) {

161 
p˘
 = ()
£rvî
->
weight
 / ()
tŸÆ_weight
;

162 
poöãr_≥r_£rvî
 = (
uöt32_t
Ë((
	`Êo‹f
((Ë(
p˘
 * 
KETAMA_POINTS_PER_SERVER
 / 4 * ()
∆ive_£rvî
 + 0.0000000001))) * 4);

163 
poöãr_≥r_hash
 = 4;

165 
	`log_debug
(
LOG_VERB
, "%.*†weighà%"
PRIu32
" of %"PRIu32" "

166 "p˘ %0.5‡poöt†≥∏£rvî %"
PRIu32
"",

167 
£rvî
->
«me
.
Àn
, sîvî->«me.
d©a
, sîvî->
weight
,

168 
tŸÆ_weight
, 
p˘
, 
poöãr_≥r_£rvî
);

170 
poöãr_ödex
 = 1;

171 
poöãr_ödex
 <
poöãr_≥r_£rvî
 / 
poöãr_≥r_hash
;

172 
poöãr_ödex
++) {

174 
ho°
[
KETAMA_MAX_HOSTLEN
]= "";

175 
size_t
 
ho°Àn
;

176 
uöt32_t
 
x
;

178 
ho°Àn
 = 
	`¢¥ötf
(
ho°
, 
KETAMA_MAX_HOSTLEN
, "%.*s-%u",

179 
£rvî
->
«me
.
Àn
, sîvî->«me.
d©a
,

180 
poöãr_ödex
 - 1);

182 
x
 = 0; x < 
poöãr_≥r_hash
; x++) {

183 
vÆue
 = 
	`këama_hash
(
ho°
, 
ho°Àn
, 
x
);

184 
poﬁ
->
c⁄töuum
[
c⁄töuum_ödex
].
ödex
 = 
£rvî_ödex
;

185 
poﬁ
->
c⁄töuum
[
c⁄töuum_ödex
++].
vÆue
 = value;

188 
poöãr_cou¡î
 +
poöãr_≥r_£rvî
;

191 
poﬁ
->
nc⁄töuum
 = 
poöãr_cou¡î
;

192 
	`qs‹t
(
poﬁ
->
c⁄töuum
,Öoﬁ->
nc⁄töuum
, (*pool->continuum),

193 
këama_ôem_cmp
);

195 
poöãr_ödex
 = 0;

196 
poöãr_ödex
 < ((
∆ive_£rvî
 * 
KETAMA_POINTS_PER_SERVER
) - 1);

197 
poöãr_ödex
++) {

198 i‡(
poöãr_ödex
 + 1 >
poöãr_cou¡î
) {

201 
	`ASSERT
(
poﬁ
->
c⁄töuum
[
poöãr_ödex
].
vÆue
 <=

202 
poﬁ
->
c⁄töuum
[
poöãr_ödex
 + 1].
vÆue
);

205 
	`log_debug
(
LOG_VERB
, "upd©edÖoﬁ %"
PRIu32
" '%.*s' with %"PRIu32" of "

206 "%"
PRIu32
" serversÜive in %"PRIu32" slotsánd %"PRIu32" "

207 "a˘ivêpoöt†ö %"
PRIu32
" slŸs", 
poﬁ
->
idx
,

208 
poﬁ
->
«me
.
Àn
,Öoﬁ->«me.
d©a
, 
∆ive_£rvî
, 
n£rvî
,

209 
poﬁ
->
n£rvî_c⁄töuum
,Öoﬁ->
nc⁄töuum
,

210 (
poﬁ
->
n£rvî_c⁄töuum
 + 
c⁄töuum_addôi⁄
Ë* 
poöts_≥r_£rvî
);

212  
NC_OK
;

213 
	}
}

215 
uöt32_t


216 
	$këama_di•©ch
(
c⁄töuum
 *c⁄töuum, 
uöt32_t
 
nc⁄töuum
, uöt32_à
hash
)

218 
c⁄töuum
 *
begö
, *
íd
, *
À·
, *
right
, *
middÀ
;

220 
	`ASSERT
(
c⁄töuum
 !
NULL
);

221 
	`ASSERT
(
nc⁄töuum
 != 0);

223 
begö
 = 
À·
 = 
c⁄töuum
;

224 
íd
 = 
right
 = 
c⁄töuum
 + 
nc⁄töuum
;

226 
À·
 < 
right
) {

227 
middÀ
 = 
À·
 + (
right
 -Üeft) / 2;

228 i‡(
middÀ
->
vÆue
 < 
hash
) {

229 
À·
 = 
middÀ
 + 1;

231 
right
 = 
middÀ
;

235 i‡(
right
 =
íd
) {

236 
right
 = 
begö
;

239  
right
->
ödex
;

240 
	}
}

	@src/hashkit/nc_md5.c

18 
	~<nc_c‹e.h
>

29 
	~<°rög.h
>

31 
	tMD5_u32∂us
;

34 
MD5_u32∂us
 
	mlo
, 
	mhi
;

35 
MD5_u32∂us
 
	ma
, 
	mb
, 
	mc
, 
	md
;

36 
	mbuf„r
[64];

37 
MD5_u32∂us
 
	mblock
[16];

38 } 
	tMD5_CTX
;

47 
	#F
(
x
, 
y
, 
z
Ë((zË^ ((xË& ((yË^ (z))))

	)

48 
	#G
(
x
, 
y
, 
z
Ë((yË^ ((zË& ((xË^ (y))))

	)

49 
	#H
(
x
, 
y
, 
z
Ë((xË^ (yË^ (z))

	)

50 
	#I
(
x
, 
y
, 
z
Ë((yË^ ((xË| ~(z)))

	)

55 
	#STEP
(
f
, 
a
, 
b
, 
c
, 
d
, 
x
, 
t
, 
s
) \

56 (
a
Ë+
	`f
((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
t
); \

57 (
a
Ë((◊Ë<< (
s
)) | (((a) & 0xffffffff) >> (32 - (s)))); \

58 (
a
Ë+(
b
);

	)

68 #i‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
Ë|| deföed(
__vax__
)

69 
	#SET
(
n
) \

70 (*(
MD5_u32∂us
 *)&
±r
[(
n
Ë* 4])

	)

71 
	#GET
(
n
) \

72 
	`SET
(
n
)

	)

74 
	#SET
(
n
) \

75 (
˘x
->
block
[(
n
)] = \

76 (
MD5_u32∂us
)
±r
[(
n
) * 4] | \

77 ((
MD5_u32∂us
)
±r
[(
n
) * 4 + 1] << 8) | \

78 ((
MD5_u32∂us
)
±r
[(
n
) * 4 + 2] << 16) | \

79 ((
MD5_u32∂us
)
±r
[(
n
Ë* 4 + 3] << 24))

	)

80 
	#GET
(
n
) \

81 (
˘x
->
block
[(
n
)])

	)

89 
	$body
(
MD5_CTX
 *
˘x
, *
d©a
, 
size
)

91 *
±r
;

92 
MD5_u32∂us
 
a
, 
b
, 
c
, 
d
;

93 
MD5_u32∂us
 
ßved_a
, 
ßved_b
, 
ßved_c
, 
ßved_d
;

95 
±r
 = 
d©a
;

97 
a
 = 
˘x
->a;

98 
b
 = 
˘x
->b;

99 
c
 = 
˘x
->c;

100 
d
 = 
˘x
->d;

103 
ßved_a
 = 
a
;

104 
ßved_b
 = 
b
;

105 
ßved_c
 = 
c
;

106 
ßved_d
 = 
d
;

109 
	`STEP
(
F
, 
a
, 
b
, 
c
, 
d
, 
	`SET
(0), 0xd76aa478, 7)

110 
	`STEP
(
F
, 
d
, 
a
, 
b
, 
c
, 
	`SET
(1), 0xe8c7b756, 12)

111 
	`STEP
(
F
, 
c
, 
d
, 
a
, 
b
, 
	`SET
(2), 0x242070db, 17)

112 
	`STEP
(
F
, 
b
, 
c
, 
d
, 
a
, 
	`SET
(3), 0xc1bdceee, 22)

113 
	`STEP
(
F
, 
a
, 
b
, 
c
, 
d
, 
	`SET
(4), 0xf57c0faf, 7)

114 
	`STEP
(
F
, 
d
, 
a
, 
b
, 
c
, 
	`SET
(5), 0x4787c62a, 12)

115 
	`STEP
(
F
, 
c
, 
d
, 
a
, 
b
, 
	`SET
(6), 0xa8304613, 17)

116 
	`STEP
(
F
, 
b
, 
c
, 
d
, 
a
, 
	`SET
(7), 0xfd469501, 22)

117 
	`STEP
(
F
, 
a
, 
b
, 
c
, 
d
, 
	`SET
(8), 0x698098d8, 7)

118 
	`STEP
(
F
, 
d
, 
a
, 
b
, 
c
, 
	`SET
(9), 0x8b44f7af, 12)

119 
	`STEP
(
F
, 
c
, 
d
, 
a
, 
b
, 
	`SET
(10), 0xffff5bb1, 17)

120 
	`STEP
(
F
, 
b
, 
c
, 
d
, 
a
, 
	`SET
(11), 0x895cd7be, 22)

121 
	`STEP
(
F
, 
a
, 
b
, 
c
, 
d
, 
	`SET
(12), 0x6b901122, 7)

122 
	`STEP
(
F
, 
d
, 
a
, 
b
, 
c
, 
	`SET
(13), 0xfd987193, 12)

123 
	`STEP
(
F
, 
c
, 
d
, 
a
, 
b
, 
	`SET
(14), 0xa679438e, 17)

124 
	`STEP
(
F
, 
b
, 
c
, 
d
, 
a
, 
	`SET
(15), 0x49b40821, 22)

127 
	`STEP
(
G
, 
a
, 
b
, 
c
, 
d
, 
	`GET
(1), 0xf61e2562, 5)

128 
	`STEP
(
G
, 
d
, 
a
, 
b
, 
c
, 
	`GET
(6), 0xc040b340, 9)

129 
	`STEP
(
G
, 
c
, 
d
, 
a
, 
b
, 
	`GET
(11), 0x265e5a51, 14)

130 
	`STEP
(
G
, 
b
, 
c
, 
d
, 
a
, 
	`GET
(0), 0xe9b6c7aa, 20)

131 
	`STEP
(
G
, 
a
, 
b
, 
c
, 
d
, 
	`GET
(5), 0xd62f105d, 5)

132 
	`STEP
(
G
, 
d
, 
a
, 
b
, 
c
, 
	`GET
(10), 0x02441453, 9)

133 
	`STEP
(
G
, 
c
, 
d
, 
a
, 
b
, 
	`GET
(15), 0xd8a1e681, 14)

134 
	`STEP
(
G
, 
b
, 
c
, 
d
, 
a
, 
	`GET
(4), 0xe7d3fbc8, 20)

135 
	`STEP
(
G
, 
a
, 
b
, 
c
, 
d
, 
	`GET
(9), 0x21e1cde6, 5)

136 
	`STEP
(
G
, 
d
, 
a
, 
b
, 
c
, 
	`GET
(14), 0xc33707d6, 9)

137 
	`STEP
(
G
, 
c
, 
d
, 
a
, 
b
, 
	`GET
(3), 0xf4d50d87, 14)

138 
	`STEP
(
G
, 
b
, 
c
, 
d
, 
a
, 
	`GET
(8), 0x455a14ed, 20)

139 
	`STEP
(
G
, 
a
, 
b
, 
c
, 
d
, 
	`GET
(13), 0xa9e3e905, 5)

140 
	`STEP
(
G
, 
d
, 
a
, 
b
, 
c
, 
	`GET
(2), 0xfcefa3f8, 9)

141 
	`STEP
(
G
, 
c
, 
d
, 
a
, 
b
, 
	`GET
(7), 0x676f02d9, 14)

142 
	`STEP
(
G
, 
b
, 
c
, 
d
, 
a
, 
	`GET
(12), 0x8d2a4c8a, 20)

145 
	`STEP
(
H
, 
a
, 
b
, 
c
, 
d
, 
	`GET
(5), 0xfffa3942, 4)

146 
	`STEP
(
H
, 
d
, 
a
, 
b
, 
c
, 
	`GET
(8), 0x8771f681, 11)

147 
	`STEP
(
H
, 
c
, 
d
, 
a
, 
b
, 
	`GET
(11), 0x6d9d6122, 16)

148 
	`STEP
(
H
, 
b
, 
c
, 
d
, 
a
, 
	`GET
(14), 0xfde5380c, 23)

149 
	`STEP
(
H
, 
a
, 
b
, 
c
, 
d
, 
	`GET
(1), 0xa4beea44, 4)

150 
	`STEP
(
H
, 
d
, 
a
, 
b
, 
c
, 
	`GET
(4), 0x4bdecfa9, 11)

151 
	`STEP
(
H
, 
c
, 
d
, 
a
, 
b
, 
	`GET
(7), 0xf6bb4b60, 16)

152 
	`STEP
(
H
, 
b
, 
c
, 
d
, 
a
, 
	`GET
(10), 0xbebfbc70, 23)

153 
	`STEP
(
H
, 
a
, 
b
, 
c
, 
d
, 
	`GET
(13), 0x289b7ec6, 4)

154 
	`STEP
(
H
, 
d
, 
a
, 
b
, 
c
, 
	`GET
(0), 0xeaa127fa, 11)

155 
	`STEP
(
H
, 
c
, 
d
, 
a
, 
b
, 
	`GET
(3), 0xd4ef3085, 16)

156 
	`STEP
(
H
, 
b
, 
c
, 
d
, 
a
, 
	`GET
(6), 0x04881d05, 23)

157 
	`STEP
(
H
, 
a
, 
b
, 
c
, 
d
, 
	`GET
(9), 0xd9d4d039, 4)

158 
	`STEP
(
H
, 
d
, 
a
, 
b
, 
c
, 
	`GET
(12), 0xe6db99e5, 11)

159 
	`STEP
(
H
, 
c
, 
d
, 
a
, 
b
, 
	`GET
(15), 0x1fa27cf8, 16)

160 
	`STEP
(
H
, 
b
, 
c
, 
d
, 
a
, 
	`GET
(2), 0xc4ac5665, 23)

163 
	`STEP
(
I
, 
a
, 
b
, 
c
, 
d
, 
	`GET
(0), 0xf4292244, 6)

164 
	`STEP
(
I
, 
d
, 
a
, 
b
, 
c
, 
	`GET
(7), 0x432aff97, 10)

165 
	`STEP
(
I
, 
c
, 
d
, 
a
, 
b
, 
	`GET
(14), 0xab9423a7, 15)

166 
	`STEP
(
I
, 
b
, 
c
, 
d
, 
a
, 
	`GET
(5), 0xfc93a039, 21)

167 
	`STEP
(
I
, 
a
, 
b
, 
c
, 
d
, 
	`GET
(12), 0x655b59c3, 6)

168 
	`STEP
(
I
, 
d
, 
a
, 
b
, 
c
, 
	`GET
(3), 0x8f0ccc92, 10)

169 
	`STEP
(
I
, 
c
, 
d
, 
a
, 
b
, 
	`GET
(10), 0xffeff47d, 15)

170 
	`STEP
(
I
, 
b
, 
c
, 
d
, 
a
, 
	`GET
(1), 0x85845dd1, 21)

171 
	`STEP
(
I
, 
a
, 
b
, 
c
, 
d
, 
	`GET
(8), 0x6fa87e4f, 6)

172 
	`STEP
(
I
, 
d
, 
a
, 
b
, 
c
, 
	`GET
(15), 0xfe2ce6e0, 10)

173 
	`STEP
(
I
, 
c
, 
d
, 
a
, 
b
, 
	`GET
(6), 0xa3014314, 15)

174 
	`STEP
(
I
, 
b
, 
c
, 
d
, 
a
, 
	`GET
(13), 0x4e0811a1, 21)

175 
	`STEP
(
I
, 
a
, 
b
, 
c
, 
d
, 
	`GET
(4), 0xf7537e82, 6)

176 
	`STEP
(
I
, 
d
, 
a
, 
b
, 
c
, 
	`GET
(11), 0xbd3af235, 10)

177 
	`STEP
(
I
, 
c
, 
d
, 
a
, 
b
, 
	`GET
(2), 0x2ad7d2bb, 15)

178 
	`STEP
(
I
, 
b
, 
c
, 
d
, 
a
, 
	`GET
(9), 0xeb86d391, 21)

180 
a
 +
ßved_a
;

181 
b
 +
ßved_b
;

182 
c
 +
ßved_c
;

183 
d
 +
ßved_d
;

185 
±r
 += 64;

186 } 
size
 -= 64);

188 
˘x
->
a
 =á;

189 
˘x
->
b
 = b;

190 
˘x
->
c
 = c;

191 
˘x
->
d
 = d;

193  
±r
;

194 
	}
}

197 
	$MD5_Inô
(
MD5_CTX
 *
˘x
)

199 
˘x
->
a
 = 0x67452301;

200 
˘x
->
b
 = 0xefcdab89;

201 
˘x
->
c
 = 0x98badcfe;

202 
˘x
->
d
 = 0x10325476;

204 
˘x
->
lo
 = 0;

205 
˘x
->
hi
 = 0;

206 
	}
}

209 
	$MD5_Upd©e
(
MD5_CTX
 *
˘x
, *
d©a
, 
size
)

211 
MD5_u32∂us
 
ßved_lo
;

212 
u£d
, 
‰ì
;

214 
ßved_lo
 = 
˘x
->
lo
;

215 i‡((
˘x
->
lo
 = (
ßved_lo
 + 
size
) & 0x1fffffff) < saved_lo) {

216 
˘x
->
hi
++;

218 
˘x
->
hi
 +
size
 >> 29;

220 
u£d
 = 
ßved_lo
 & 0x3f;

222 i‡(
u£d
) {

223 
‰ì
 = 64 - 
u£d
;

225 i‡(
size
 < 
‰ì
) {

226 
	`mem˝y
(&
˘x
->
buf„r
[
u£d
], 
d©a
, 
size
);

230 
	`mem˝y
(&
˘x
->
buf„r
[
u£d
], 
d©a
, 
‰ì
);

231 
d©a
 = (*)d©®+ 
‰ì
;

232 
size
 -
‰ì
;

233 
	`body
(
˘x
, ctx->
buf„r
, 64);

236 i‡(
size
 >= 64) {

237 
d©a
 = 
	`body
(
˘x
, d©a, 
size
 & ~()0x3f);

238 
size
 &= 0x3f;

241 
	`mem˝y
(
˘x
->
buf„r
, 
d©a
, 
size
);

242 
	}
}

245 
	$MD5_FöÆ
(*
ªsu…
, 
MD5_CTX
 *
˘x
)

247 
u£d
, 
‰ì
;

249 
u£d
 = 
˘x
->
lo
 & 0x3f;

251 
˘x
->
buf„r
[
u£d
++] = 0x80;

253 
‰ì
 = 64 - 
u£d
;

255 i‡(
‰ì
 < 8) {

256 
	`mem£t
(&
˘x
->
buf„r
[
u£d
], 0, 
‰ì
);

257 
	`body
(
˘x
, ctx->
buf„r
, 64);

258 
u£d
 = 0;

259 
‰ì
 = 64;

262 
	`mem£t
(&
˘x
->
buf„r
[
u£d
], 0, 
‰ì
 - 8);

264 
˘x
->
lo
 <<= 3;

265 
˘x
->
buf„r
[56] = ctx->
lo
;

266 
˘x
->
buf„r
[57] = ctx->
lo
 >> 8;

267 
˘x
->
buf„r
[58] = ctx->
lo
 >> 16;

268 
˘x
->
buf„r
[59] = ctx->
lo
 >> 24;

269 
˘x
->
buf„r
[60] = ctx->
hi
;

270 
˘x
->
buf„r
[61] = ctx->
hi
 >> 8;

271 
˘x
->
buf„r
[62] = ctx->
hi
 >> 16;

272 
˘x
->
buf„r
[63] = ctx->
hi
 >> 24;

274 
	`body
(
˘x
, ctx->
buf„r
, 64);

276 
ªsu…
[0] = 
˘x
->
a
;

277 
ªsu…
[1] = 
˘x
->
a
 >> 8;

278 
ªsu…
[2] = 
˘x
->
a
 >> 16;

279 
ªsu…
[3] = 
˘x
->
a
 >> 24;

280 
ªsu…
[4] = 
˘x
->
b
;

281 
ªsu…
[5] = 
˘x
->
b
 >> 8;

282 
ªsu…
[6] = 
˘x
->
b
 >> 16;

283 
ªsu…
[7] = 
˘x
->
b
 >> 24;

284 
ªsu…
[8] = 
˘x
->
c
;

285 
ªsu…
[9] = 
˘x
->
c
 >> 8;

286 
ªsu…
[10] = 
˘x
->
c
 >> 16;

287 
ªsu…
[11] = 
˘x
->
c
 >> 24;

288 
ªsu…
[12] = 
˘x
->
d
;

289 
ªsu…
[13] = 
˘x
->
d
 >> 8;

290 
ªsu…
[14] = 
˘x
->
d
 >> 16;

291 
ªsu…
[15] = 
˘x
->
d
 >> 24;

293 
	`mem£t
(
˘x
, 0, (*ctx));

294 
	}
}

301 
	$md5_sig«tuª
(*
key
, 
Àngth
, *
ªsu…
)

303 
MD5_CTX
 
my_md5
;

305 
	`MD5_Inô
(&
my_md5
);

306 ()
	`MD5_Upd©e
(&
my_md5
, 
key
, 
Àngth
);

307 
	`MD5_FöÆ
(
ªsu…
, &
my_md5
);

308 
	}
}

310 
uöt32_t


311 
	$hash_md5
(c⁄° *
key
, 
size_t
 
key_Àngth
)

313 
ªsu…s
[16];

315 
	`md5_sig«tuª
((*)
key
, ()
key_Àngth
, 
ªsu…s
);

317  ((
uöt32_t
Ë(
ªsu…s
[3] & 0xFF) << 24) |

318 ((
uöt32_t
Ë(
ªsu…s
[2] & 0xFF) << 16) |

319 ((
uöt32_t
Ë(
ªsu…s
[1] & 0xFF) << 8) |

320 (
ªsu…s
[0] & 0xFF);

321 
	}
}

	@src/hashkit/nc_modula.c

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

21 
	~<nc_c‹e.h
>

22 
	~<nc_£rvî.h
>

23 
	~<nc_hashkô.h
>

25 
	#MODULA_CONTINUUM_ADDITION
 10

	)

26 
	#MODULA_POINTS_PER_SERVER
 1

	)

28 
r°©us_t


29 
	$moduœ_upd©e
(
£rvî_poﬁ
 *
poﬁ
)

31 
uöt32_t
 
n£rvî
;

32 
uöt32_t
 
∆ive_£rvî
;

33 
uöt32_t
 
poöãr_≥r_£rvî
;

34 
uöt32_t
 
poöãr_cou¡î
;

35 
uöt32_t
 
poöts_≥r_£rvî
;

36 
uöt32_t
 
c⁄töuum_ödex
;

37 
uöt32_t
 
c⁄töuum_addôi⁄
;

38 
uöt32_t
 
£rvî_ödex
;

39 
uöt32_t
 
weight_ödex
;

40 
uöt32_t
 
tŸÆ_weight
;

41 
öt64_t
 
now
;

43 
now
 = 
	`nc_u£c_now
();

44 i‡(
now
 < 0) {

45  
NC_ERROR
;

48 
n£rvî
 = 
	`¨øy_n
(&
poﬁ
->
£rvî
);

49 
∆ive_£rvî
 = 0;

50 
tŸÆ_weight
 = 0;

51 
poﬁ
->
√xt_ªbuûd
 = 0LL;

53 
£rvî_ödex
 = 0; sîvî_ödex < 
n£rvî
; server_index++) {

54 
£rvî
 *£rvî = 
	`¨øy_gë
(&
poﬁ
->£rvî, 
£rvî_ödex
);

56 i‡(
poﬁ
->
auto_eje˘_ho°s
) {

57 i‡(
£rvî
->
√xt_ªåy
 <
now
) {

58 
£rvî
->
√xt_ªåy
 = 0LL;

59 
∆ive_£rvî
++;

60 } i‡(
poﬁ
->
√xt_ªbuûd
 == 0LL ||

61 
£rvî
->
√xt_ªåy
 < 
poﬁ
->
√xt_ªbuûd
) {

62 
poﬁ
->
√xt_ªbuûd
 = 
£rvî
->
√xt_ªåy
;

65 
∆ive_£rvî
++;

68 
	`ASSERT
(
£rvî
->
weight
 > 0);

71 i‡(!
poﬁ
->
auto_eje˘_ho°s
 || 
£rvî
->
√xt_ªåy
 <
now
) {

72 
tŸÆ_weight
 +
£rvî
->
weight
;

76 
poﬁ
->
∆ive_£rvî
 =Çlive_server;

78 i‡(
∆ive_£rvî
 == 0) {

79 
	`ASSERT
(
poﬁ
->
c⁄töuum
 !
NULL
);

80 
	`ASSERT
(
poﬁ
->
nc⁄töuum
 != 0);

82 
	`log_debug
(
LOG_DEBUG
, "nÿlivê£rvî†f‹Öoﬁ %"
PRIu32
" '%.*s'",

83 
poﬁ
->
idx
,Öoﬁ->
«me
.
Àn
,Öoﬁ->«me.
d©a
);

85  
NC_OK
;

87 
	`log_debug
(
LOG_DEBUG
, "%"
PRIu32
" of %"PRIu32" serversáreÜive forÖool "

88 "%"
PRIu32
" '%.*s'", 
∆ive_£rvî
, 
n£rvî
, 
poﬁ
->
idx
,

89 
poﬁ
->
«me
.
Àn
,Öoﬁ->«me.
d©a
);

91 
c⁄töuum_addôi⁄
 = 
MODULA_CONTINUUM_ADDITION
;

92 
poöts_≥r_£rvî
 = 
MODULA_POINTS_PER_SERVER
;

98 i‡(
tŸÆ_weight
 > 
poﬁ
->
n£rvî_c⁄töuum
) {

99 
c⁄töuum
 *continuum;

100 
uöt32_t
 
n£rvî_c⁄töuum
 = 
tŸÆ_weight
 + 
MODULA_CONTINUUM_ADDITION
;

101 
uöt32_t
 
nc⁄töuum
 = 
n£rvî_c⁄töuum
 * 
MODULA_POINTS_PER_SERVER
;

103 
c⁄töuum
 = 
	`nc_ªÆloc
(
poﬁ
->c⁄töuum, (*c⁄töuumË* 
nc⁄töuum
);

104 i‡(
c⁄töuum
 =
NULL
) {

105  
NC_ENOMEM
;

108 
poﬁ
->
c⁄töuum
 = continuum;

109 
poﬁ
->
n£rvî_c⁄töuum
 =Çserver_continuum;

114 
c⁄töuum_ödex
 = 0;

115 
poöãr_cou¡î
 = 0;

116 
£rvî_ödex
 = 0; sîvî_ödex < 
n£rvî
; server_index++) {

117 
£rvî
 *£rvî = 
	`¨øy_gë
(&
poﬁ
->£rvî, 
£rvî_ödex
);

119 i‡(
poﬁ
->
auto_eje˘_ho°s
 && 
£rvî
->
√xt_ªåy
 > 
now
) {

123 
weight_ödex
 = 0; weight_ödex < 
£rvî
->
weight
; weight_index++) {

124 
poöãr_≥r_£rvî
 = 1;

126 
poﬁ
->
c⁄töuum
[
c⁄töuum_ödex
].
ödex
 = 
£rvî_ödex
;

127 
poﬁ
->
c⁄töuum
[
c⁄töuum_ödex
++].
vÆue
 = 0;

129 
poöãr_cou¡î
 +
poöãr_≥r_£rvî
;

132 
poﬁ
->
nc⁄töuum
 = 
poöãr_cou¡î
;

134 
	`log_debug
(
LOG_VERB
, "upd©edÖoﬁ %"
PRIu32
" '%.*s' with %"PRIu32" of "

135 "%"
PRIu32
" serversÜive in %"PRIu32" slotsánd %"PRIu32" "

136 "a˘ivêpoöt†ö %"
PRIu32
" slŸs", 
poﬁ
->
idx
,

137 
poﬁ
->
«me
.
Àn
,Öoﬁ->«me.
d©a
, 
∆ive_£rvî
, 
n£rvî
,

138 
poﬁ
->
n£rvî_c⁄töuum
,Öoﬁ->
nc⁄töuum
,

139 (
poﬁ
->
n£rvî_c⁄töuum
 + 
c⁄töuum_addôi⁄
Ë* 
poöts_≥r_£rvî
);

141  
NC_OK
;

143 
	}
}

145 
uöt32_t


146 
	$moduœ_di•©ch
(
c⁄töuum
 *c⁄töuum, 
uöt32_t
 
nc⁄töuum
, uöt32_à
hash
)

148 
c⁄töuum
 *
c
;

150 
	`ASSERT
(
c⁄töuum
 !
NULL
);

151 
	`ASSERT
(
nc⁄töuum
 != 0);

153 
c
 = 
c⁄töuum
 + 
hash
 % 
nc⁄töuum
;

155  
c
->
ödex
;

156 
	}
}

	@src/hashkit/nc_murmur.c

35 
	~<nc_c‹e.h
>

37 
uöt32_t


38 
	$hash_murmur
(c⁄° *
key
, 
size_t
 
Àngth
)

45 c⁄° 
m
 = 0x5bd1e995;

46 c⁄° 
uöt32_t
 
£ed
 = (0xdódbì‡* (uöt32_t)
Àngth
);

47 c⁄° 
r
 = 24;

52 
uöt32_t
 
h
 = 
£ed
 ^ (uöt32_t)
Àngth
;

56 c⁄° * 
d©a
 = (c⁄° *)
key
;

58 
Àngth
 >= 4) {

59 
k
 = *(*)
d©a
;

61 
k
 *
m
;

62 
k
 ^k >> 
r
;

63 
k
 *
m
;

65 
h
 *
m
;

66 
h
 ^
k
;

68 
d©a
 += 4;

69 
Àngth
 -= 4;

74 
Àngth
) {

76 
h
 ^((
uöt32_t
)
d©a
[2]) << 16;

79 
h
 ^((
uöt32_t
)
d©a
[1]) << 8;

82 
h
 ^
d©a
[0];

83 
h
 *
m
;

94 
h
 ^= h >> 13;

95 
h
 *
m
;

96 
h
 ^= h >> 15;

98  
h
;

99 
	}
}

	@src/hashkit/nc_one_at_a_time.c

32 
	~<nc_c‹e.h
>

34 
uöt32_t


35 
	$hash_⁄e_©_a_time
(c⁄° *
key
, 
size_t
 
key_Àngth
)

37 c⁄° *
±r
 = 
key
;

38 
uöt32_t
 
vÆue
 = 0;

40 
key_Àngth
--) {

41 
uöt32_t
 
vÆ
 = (uöt32_tË*
±r
++;

42 
vÆue
 +
vÆ
;

43 
vÆue
 += (value << 10);

44 
vÆue
 ^= (value >> 6);

46 
vÆue
 += (value << 3);

47 
vÆue
 ^= (value >> 11);

48 
vÆue
 += (value << 15);

50  
vÆue
;

51 
	}
}

	@src/hashkit/nc_random.c

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

21 
	~<nc_c‹e.h
>

22 
	~<nc_£rvî.h
>

23 
	~<nc_hashkô.h
>

25 
	#RANDOM_CONTINUUM_ADDITION
 10

	)

26 
	#RANDOM_POINTS_PER_SERVER
 1

	)

28 
r°©us_t


29 
	$øndom_upd©e
(
£rvî_poﬁ
 *
poﬁ
)

31 
uöt32_t
 
n£rvî
;

32 
uöt32_t
 
∆ive_£rvî
;

33 
uöt32_t
 
poöãr_≥r_£rvî
;

34 
uöt32_t
 
poöãr_cou¡î
;

35 
uöt32_t
 
poöts_≥r_£rvî
;

36 
uöt32_t
 
c⁄töuum_ödex
;

37 
uöt32_t
 
c⁄töuum_addôi⁄
;

38 
uöt32_t
 
£rvî_ödex
;

39 
öt64_t
 
now
;

41 
now
 = 
	`nc_u£c_now
();

42 i‡(
now
 < 0) {

43  
NC_ERROR
;

46 
n£rvî
 = 
	`¨øy_n
(&
poﬁ
->
£rvî
);

47 
∆ive_£rvî
 = 0;

48 
poﬁ
->
√xt_ªbuûd
 = 0LL;

50 
£rvî_ödex
 = 0; sîvî_ödex < 
n£rvî
; server_index++) {

51 
£rvî
 *£rvî = 
	`¨øy_gë
(&
poﬁ
->£rvî, 
£rvî_ödex
);

53 i‡(
poﬁ
->
auto_eje˘_ho°s
) {

54 i‡(
£rvî
->
√xt_ªåy
 <
now
) {

55 
£rvî
->
√xt_ªåy
 = 0LL;

56 
∆ive_£rvî
++;

57 } i‡(
poﬁ
->
√xt_ªbuûd
 == 0LL ||

58 
£rvî
->
√xt_ªåy
 < 
poﬁ
->
√xt_ªbuûd
) {

59 
poﬁ
->
√xt_ªbuûd
 = 
£rvî
->
√xt_ªåy
;

62 
∆ive_£rvî
++;

66 
poﬁ
->
∆ive_£rvî
 =Çlive_server;

68 i‡(
∆ive_£rvî
 == 0) {

69 
	`ASSERT
(
poﬁ
->
c⁄töuum
 !
NULL
);

70 
	`ASSERT
(
poﬁ
->
nc⁄töuum
 != 0);

72 
	`log_debug
(
LOG_DEBUG
, "nÿlivê£rvî†f‹Öoﬁ %"
PRIu32
" '%.*s'",

73 
poﬁ
->
idx
,Öoﬁ->
«me
.
Àn
,Öoﬁ->«me.
d©a
);

75  
NC_OK
;

77 
	`log_debug
(
LOG_DEBUG
, "%"
PRIu32
" of %"PRIu32" serversáreÜive forÖool "

78 "%"
PRIu32
" '%.*s'", 
∆ive_£rvî
, 
n£rvî
, 
poﬁ
->
idx
,

79 
poﬁ
->
«me
.
Àn
,Öoﬁ->«me.
d©a
);

81 
c⁄töuum_addôi⁄
 = 
RANDOM_CONTINUUM_ADDITION
;

82 
poöts_≥r_£rvî
 = 
RANDOM_POINTS_PER_SERVER
;

88 i‡(
∆ive_£rvî
 > 
poﬁ
->
n£rvî_c⁄töuum
) {

89 
c⁄töuum
 *continuum;

90 
uöt32_t
 
n£rvî_c⁄töuum
 = 
∆ive_£rvî
 + 
RANDOM_CONTINUUM_ADDITION
;

91 
uöt32_t
 
nc⁄töuum
 = 
n£rvî_c⁄töuum
 * 
RANDOM_POINTS_PER_SERVER
;

93 
c⁄töuum
 = 
	`nc_ªÆloc
(
poﬁ
->c⁄töuum, (*c⁄töuumË* 
nc⁄töuum
);

94 i‡(
c⁄töuum
 =
NULL
) {

95  
NC_ENOMEM
;

98 
	`§™dom
((
uöt32_t
)
	`time
(
NULL
));

100 
poﬁ
->
c⁄töuum
 = continuum;

101 
poﬁ
->
n£rvî_c⁄töuum
 =Çserver_continuum;

106 
c⁄töuum_ödex
 = 0;

107 
poöãr_cou¡î
 = 0;

108 
£rvî_ödex
 = 0; sîvî_ödex < 
n£rvî
; server_index++) {

109 
£rvî
 *£rvî = 
	`¨øy_gë
(&
poﬁ
->£rvî, 
£rvî_ödex
);

111 i‡(
poﬁ
->
auto_eje˘_ho°s
 && 
£rvî
->
√xt_ªåy
 > 
now
) {

115 
poöãr_≥r_£rvî
 = 1;

117 
poﬁ
->
c⁄töuum
[
c⁄töuum_ödex
].
ödex
 = 
£rvî_ödex
;

118 
poﬁ
->
c⁄töuum
[
c⁄töuum_ödex
++].
vÆue
 = 0;

120 
poöãr_cou¡î
 +
poöãr_≥r_£rvî
;

122 
poﬁ
->
nc⁄töuum
 = 
poöãr_cou¡î
;

124 
	`log_debug
(
LOG_VERB
, "upd©edÖoﬁ %"
PRIu32
" '%.*s' with %"PRIu32" of "

125 "%"
PRIu32
" serversÜive in %"PRIu32" slotsánd %"PRIu32" "

126 "a˘ivêpoöt†ö %"
PRIu32
" slŸs", 
poﬁ
->
idx
,

127 
poﬁ
->
«me
.
Àn
,Öoﬁ->«me.
d©a
, 
∆ive_£rvî
, 
n£rvî
,

128 
poﬁ
->
n£rvî_c⁄töuum
,Öoﬁ->
nc⁄töuum
,

129 (
poﬁ
->
n£rvî_c⁄töuum
 + 
c⁄töuum_addôi⁄
Ë* 
poöts_≥r_£rvî
);

131  
NC_OK
;

133 
	}
}

135 
uöt32_t


136 
	$øndom_di•©ch
(
c⁄töuum
 *c⁄töuum, 
uöt32_t
 
nc⁄töuum
, uöt32_à
hash
)

138 
c⁄töuum
 *
c
;

140 
	`ASSERT
(
c⁄töuum
 !
NULL
);

141 
	`ASSERT
(
nc⁄töuum
 != 0);

143 
c
 = 
c⁄töuum
 + 
	`øndom
(Ë% 
nc⁄töuum
;

145  
c
->
ödex
;

146 
	}
}

	@src/hdr_histogram/hdr_atomic.h

7 #i‚de‡
HDR_ATOMIC_H__


8 
	#HDR_ATOMIC_H__


	)

11 #i‡
deföed
(
_MSC_VER
)

13 
	~<°döt.h
>

14 
	~<öåö.h
>

16 
__ölöe
 * 
	$hdr_©omic_lﬂd_poöãr
(** 
poöãr
)

18 
	`_RódB¨rõr
();

19  *
poöãr
;

20 
	}
}

22 
	$hdr_©omic_°‹e_poöãr
(** 
poöãr
, * 
vÆue
)

24 
	`_WrôeB¨rõr
();

25 *
poöãr
 = 
vÆue
;

26 
	}
}

28 
öt64_t
 
__ölöe
 
	$hdr_©omic_lﬂd_64
(
öt64_t
* 
fõld
)

30 
	`_RódB¨rõr
();

31  *
fõld
;

32 
	}
}

34 
__ölöe
 
	$hdr_©omic_°‹e_64
(
öt64_t
* 
fõld
, i¡64_à
vÆue
)

36 
	`_WrôeB¨rõr
();

37 *
fõld
 = 
vÆue
;

38 
	}
}

40 
öt64_t
 
__ölöe
 
	$hdr_©omic_exch™ge_64
(vﬁ©ûê
öt64_t
* 
fõld
, i¡64_à
öôül
)

42  
	`_I¡îlockedExch™ge64
(
fõld
, 
öôül
);

43 
	}
}

45 
öt64_t
 
__ölöe
 
	$hdr_©omic_add_„tch_64
(vﬁ©ûê
öt64_t
* 
fõld
, i¡64_à
vÆue
)

47  
	`_I¡îlockedExch™geAdd64
(
fõld
, 
vÆue
) + value;

48 
	}
}

51 
	#hdr_©omic_lﬂd_poöãr
(
x
Ë
	`__©omic_lﬂd_n
(x, 
__ATOMIC_SEQ_CST
)

	)

52 
	#hdr_©omic_°‹e_poöãr
(
f
,
v
Ë
	`__©omic_°‹e_n
(f,v, 
__ATOMIC_SEQ_CST
)

	)

53 
	#hdr_©omic_lﬂd_64
(
x
Ë
	`__©omic_lﬂd_n
(x, 
__ATOMIC_SEQ_CST
)

	)

54 
	#hdr_©omic_°‹e_64
(
f
,
v
Ë
	`__©omic_°‹e_n
(f,v, 
__ATOMIC_SEQ_CST
)

	)

55 
	#hdr_©omic_exch™ge_64
(
f
,
i
Ë
	`__©omic_exch™ge_n
(f,i, 
__ATOMIC_SEQ_CST
)

	)

56 
	#hdr_©omic_add_„tch_64
(
fõld
, 
vÆue
Ë
	`__©omic_add_„tch
(fõld, vÆue, 
__ATOMIC_SEQ_CST
)

	)

	@src/hdr_histogram/hdr_encoding.c

5 
	~<î∫o.h
>

6 
	~<°ddef.h
>

7 
	~<m©h.h
>

9 
	~"hdr_ícodög.h
"

10 
	~"hdr_ã°s.h
"

12 
	$zig_zag_ícode_i64
(
uöt8_t
* 
buf„r
, 
öt64_t
 
sig√d_vÆue
)

14 
öt64_t
 
vÆue
 = 
sig√d_vÆue
;

16 
vÆue
 = (value << 1) ^ (value >> 63);

17 
byãsWrôãn
 = 0;

18 i‡(
vÆue
 >> 7 == 0)

20 
buf„r
[0] = (
uöt8_t
Ë
vÆue
;

21 
byãsWrôãn
 = 1;

25 
buf„r
[0] = (
uöt8_t
Ë((
vÆue
 & 0x7F) | 0x80);

26 i‡(
vÆue
 >> 14 == 0)

28 
buf„r
[1] = (
uöt8_t
Ë(
vÆue
 >> 7);

29 
byãsWrôãn
 = 2;

33 
buf„r
[1] = (
uöt8_t
Ë((
vÆue
 >> 7 | 0x80));

34 i‡(
vÆue
 >> 21 == 0)

36 
buf„r
[2] = (
uöt8_t
Ë(
vÆue
 >> 14);

37 
byãsWrôãn
 = 3;

41 
buf„r
[2] = (
uöt8_t
Ë(
vÆue
 >> 14 | 0x80);

42 i‡(
vÆue
 >> 28 == 0)

44 
buf„r
[3] = (
uöt8_t
Ë(
vÆue
 >> 21);

45 
byãsWrôãn
 = 4;

49 
buf„r
[3] = (
uöt8_t
Ë(
vÆue
 >> 21 | 0x80);

50 i‡(
vÆue
 >> 35 == 0)

52 
buf„r
[4] = (
uöt8_t
Ë(
vÆue
 >> 28);

53 
byãsWrôãn
 = 5;

57 
buf„r
[4] = (
uöt8_t
Ë(
vÆue
 >> 28 | 0x80);

58 i‡(
vÆue
 >> 42 == 0)

60 
buf„r
[5] = (
uöt8_t
Ë(
vÆue
 >> 35);

61 
byãsWrôãn
 = 6;

65 
buf„r
[5] = (
uöt8_t
Ë(
vÆue
 >> 35 | 0x80);

66 i‡(
vÆue
 >> 49 == 0)

68 
buf„r
[6] = (
uöt8_t
Ë(
vÆue
 >> 42);

69 
byãsWrôãn
 = 7;

73 
buf„r
[6] = (
uöt8_t
Ë(
vÆue
 >> 42 | 0x80);

74 i‡(
vÆue
 >> 56 == 0)

76 
buf„r
[7] = (
uöt8_t
Ë(
vÆue
 >> 49);

77 
byãsWrôãn
 = 8;

81 
buf„r
[7] = (
uöt8_t
Ë(
vÆue
 >> 49 | 0x80);

82 
buf„r
[8] = (
uöt8_t
Ë(
vÆue
 >> 56);

83 
byãsWrôãn
 = 9;

93  
byãsWrôãn
;

94 
	}
}

96 
	$zig_zag_decode_i64
(c⁄° 
uöt8_t
* 
buf„r
, 
öt64_t
* 
ªtVÆ
)

98 
uöt64_t
 
v
 = 
buf„r
[0];

99 
uöt64_t
 
vÆue
 = 
v
 & 0x7F;

100 
byãsRód
 = 1;

101 i‡((
v
 & 0x80) != 0)

103 
byãsRód
 = 2;

104 
v
 = 
buf„r
[1];

105 
vÆue
 |(
v
 & 0x7F) << 7;

106 i‡((
v
 & 0x80) != 0)

108 
byãsRód
 = 3;

109 
v
 = 
buf„r
[2];

110 
vÆue
 |(
v
 & 0x7F) << 14;

111 i‡((
v
 & 0x80) != 0)

113 
byãsRód
 = 4;

114 
v
 = 
buf„r
[3];

115 
vÆue
 |(
v
 & 0x7F) << 21;

116 i‡((
v
 & 0x80) != 0)

118 
byãsRód
 = 5;

119 
v
 = 
buf„r
[4];

120 
vÆue
 |(
v
 & 0x7F) << 28;

121 i‡((
v
 & 0x80) != 0)

123 
byãsRód
 = 6;

124 
v
 = 
buf„r
[5];

125 
vÆue
 |(
v
 & 0x7F) << 35;

126 i‡((
v
 & 0x80) != 0)

128 
byãsRód
 = 7;

129 
v
 = 
buf„r
[6];

130 
vÆue
 |(
v
 & 0x7F) << 42;

131 i‡((
v
 & 0x80) != 0)

133 
byãsRód
 = 8;

134 
v
 = 
buf„r
[7];

135 
vÆue
 |(
v
 & 0x7F) << 49;

136 i‡((
v
 & 0x80) != 0)

138 
byãsRód
 = 9;

139 
v
 = 
buf„r
[8];

140 
vÆue
 |
v
 << 56;

150 
vÆue
 = (value >> 1) ^ (-(value & 1));

151 *
ªtVÆ
 = (
öt64_t
Ë
vÆue
;

153  
byãsRód
;

154 
	}
}

156 c⁄° 
	gba£64_èbÀ
[] =

165 
	$gë_ba£_64
(
uöt32_t
 
_24_bô_vÆue
, 
shi·
)

167 
uöt32_t
 
_6_bô_vÆue
 = 0x3F & (
_24_bô_vÆue
 >> 
shi·
);

168  
ba£64_èbÀ
[
_6_bô_vÆue
];

169 
	}
}

171 
	$‰om_ba£_64
(
c
)

173 i‡('A' <
c
 && c <= 'Z')

175  
c
 - 'A';

177 i‡('a' <
c
 && c <= 'z')

179  (
c
 - 'a') + 26;

181 i‡('0' <
c
 && c <= '9')

183  (
c
 - '0') + 52;

185 i‡('+' =
c
)

189 i‡('/' =
c
)

193 i‡('=' =
c
)

198  
EINVAL
;

199 
	}
}

201 
size_t
 
	$hdr_ba£64_ícoded_Àn
(
size_t
 
decoded_size
)

203  (
size_t
Ë(
	`˚û
(
decoded_size
 / 3.0) * 4.0);

204 
	}
}

206 
size_t
 
	$hdr_ba£64_decoded_Àn
(
size_t
 
ícoded_size
)

208  (
ícoded_size
 / 4) * 3;

209 
	}
}

211 
	$hdr_ba£64_ícode_block_∑d
(c⁄° 
uöt8_t
* 
öput
, * 
ouçut
, 
size_t
 
∑d
)

213 
uöt32_t
 
_24_bô_vÆue
 = 0;

215 
∑d
)

218 
_24_bô_vÆue
 = (
öput
[0] << 16) + (input[1] << 8);

220 
ouçut
[0] = 
	`gë_ba£_64
(
_24_bô_vÆue
, 18);

221 
ouçut
[1] = 
	`gë_ba£_64
(
_24_bô_vÆue
, 12);

222 
ouçut
[2] = 
	`gë_ba£_64
(
_24_bô_vÆue
, 6);

223 
ouçut
[3] = '=';

228 
_24_bô_vÆue
 = (
öput
[0] << 16);

230 
ouçut
[0] = 
	`gë_ba£_64
(
_24_bô_vÆue
, 18);

231 
ouçut
[1] = 
	`gë_ba£_64
(
_24_bô_vÆue
, 12);

232 
ouçut
[2] = '=';

233 
ouçut
[3] = '=';

241 
	}
}

246 
	$hdr_ba£64_ícode_block
(c⁄° 
uöt8_t
* 
öput
, * 
ouçut
)

248 
uöt32_t
 
_24_bô_vÆue
 = (
öput
[0] << 16) + (input[1] << 8) + (input[2]);

250 
ouçut
[0] = 
	`gë_ba£_64
(
_24_bô_vÆue
, 18);

251 
ouçut
[1] = 
	`gë_ba£_64
(
_24_bô_vÆue
, 12);

252 
ouçut
[2] = 
	`gë_ba£_64
(
_24_bô_vÆue
, 6);

253 
ouçut
[3] = 
	`gë_ba£_64
(
_24_bô_vÆue
, 0);

254 
	}
}

256 
	$hdr_ba£64_ícode
(

257 c⁄° 
uöt8_t
* 
öput
, 
size_t
 
öput_Àn
, * 
ouçut
, size_à
ouçut_Àn
)

259 i‡(
	`hdr_ba£64_ícoded_Àn
(
öput_Àn
Ë!
ouçut_Àn
)

261  
EINVAL
;

264 
size_t
 
i
 = 0;

265 
size_t
 
j
 = 0;

266 ; 
öput_Àn
 - 
i
 >3 && 
j
 < 
ouçut_Àn
; i += 3, j += 4)

268 
	`hdr_ba£64_ícode_block
(&
öput
[
i
], &
ouçut
[
j
]);

271 
size_t
 
ªmaöög
 = 
öput_Àn
 - 
i
;

273 
	`hdr_ba£64_ícode_block_∑d
(&
öput
[
i
], &
ouçut
[
j
], 
ªmaöög
);

276 
	}
}

281 
	$hdr_ba£64_decode_block
(c⁄° * 
öput
, 
uöt8_t
* 
ouçut
)

283 
uöt32_t
 
_24_bô_vÆue
 = 0;

285 
_24_bô_vÆue
 |
	`‰om_ba£_64
(
öput
[0]) << 18;

286 
_24_bô_vÆue
 |
	`‰om_ba£_64
(
öput
[1]) << 12;

287 
_24_bô_vÆue
 |
	`‰om_ba£_64
(
öput
[2]) << 6;

288 
_24_bô_vÆue
 |
	`‰om_ba£_64
(
öput
[3]);

290 
ouçut
[0] = (
uöt8_t
Ë((
_24_bô_vÆue
 >> 16) & 0xFF);

291 
ouçut
[1] = (
uöt8_t
Ë((
_24_bô_vÆue
 >> 8) & 0xFF);

292 
ouçut
[2] = (
uöt8_t
Ë((
_24_bô_vÆue
) & 0xFF);

293 
	}
}

295 
	$hdr_ba£64_decode
(

296 c⁄° * 
öput
, 
size_t
 
öput_Àn
, 
uöt8_t
* 
ouçut
, size_à
ouçut_Àn
)

298 
size_t
 
i
, 
j
;

300 i‡(
öput_Àn
 < 4 ||

301 (
öput_Àn
 & 3) != 0 ||

302 (
öput_Àn
 / 4Ë* 3 !
ouçut_Àn
)

304  
EINVAL
;

307 
i
 = 0, 
j
 = 0; i < 
öput_Àn
; i += 4, j += 3)

309 
	`hdr_ba£64_decode_block
(&
öput
[
i
], &
ouçut
[
j
]);

313 
	}
}

	@src/hdr_histogram/hdr_encoding.h

5 #i‚de‡
HDR_ENCODING_H


6 
	#HDR_ENCODING_H


	)

8 
	~<°döt.h
>

10 
	#MAX_BYTES_LEB128
 9

	)

12 #ifde‡
__˝lu•lus


23 
zig_zag_ícode_i64
(
uöt8_t
* 
buf„r
, 
öt64_t
 
sig√d_vÆue
);

32 
zig_zag_decode_i64
(c⁄° 
uöt8_t
* 
buf„r
, 
öt64_t
* 
sig√d_vÆue
);

40 
size_t
 
hdr_ba£64_ícoded_Àn
(size_à
decoded_size
);

50 
hdr_ba£64_ícode
(

51 c⁄° 
uöt8_t
* 
öput
, 
size_t
 
öput_Àn
, * 
ouçut
, size_à
ouçut_Àn
);

60 
size_t
 
hdr_ba£64_decoded_Àn
(size_à
ícoded_size
);

70 
hdr_ba£64_decode
(

71 c⁄° * 
öput
, 
size_t
 
öput_Àn
, 
uöt8_t
* 
ouçut
, size_à
ouçut_Àn
);

73 #ifde‡
__˝lu•lus


	@src/hdr_histogram/hdr_endian.h

6 #i‚de‡
HDR_ENDIAN_H__


7 
	#HDR_ENDIAN_H__


	)

9 #i‡(
deföed
(
_WIN16
Ë|| deföed(
_WIN32
Ë|| deföed(
_WIN64
)Ë&& !deföed(
__WINDOWS__
)

11 
	#__WINDOWS__


	)

15 #i‡
deföed
(
__löux__
Ë|| deföed(
__CYGWIN__
)

17 
	~<ídün.h
>

19 #ñi‡
deföed
(
__APPLE__
)

21 
	~<libkîn/OSByãOrdî.h
>

23 
	#htobe16
(
x
Ë
	`OSSw≠Ho°ToBigI¡16
(x)

	)

24 
	#htﬁe16
(
x
Ë
	`OSSw≠Ho°ToLôéeI¡16
(x)

	)

25 
	#be16toh
(
x
Ë
	`OSSw≠BigToHo°I¡16
(x)

	)

26 
	#À16toh
(
x
Ë
	`OSSw≠LôéeToHo°I¡16
(x)

	)

28 
	#htobe32
(
x
Ë
	`OSSw≠Ho°ToBigI¡32
(x)

	)

29 
	#htﬁe32
(
x
Ë
	`OSSw≠Ho°ToLôéeI¡32
(x)

	)

30 
	#be32toh
(
x
Ë
	`OSSw≠BigToHo°I¡32
(x)

	)

31 
	#À32toh
(
x
Ë
	`OSSw≠LôéeToHo°I¡32
(x)

	)

33 
	#htobe64
(
x
Ë
	`OSSw≠Ho°ToBigI¡64
(x)

	)

34 
	#htﬁe64
(
x
Ë
	`OSSw≠Ho°ToLôéeI¡64
(x)

	)

35 
	#be64toh
(
x
Ë
	`OSSw≠BigToHo°I¡64
(x)

	)

36 
	#À64toh
(
x
Ë
	`OSSw≠LôéeToHo°I¡64
(x)

	)

38 
	#__BYTE_ORDER
 
BYTE_ORDER


	)

39 
	#__BIG_ENDIAN
 
BIG_ENDIAN


	)

40 
	#__LITTLE_ENDIAN
 
LITTLE_ENDIAN


	)

41 
	#__PDP_ENDIAN
 
PDP_ENDIAN


	)

43 #ñi‡
deföed
(
__O≥nBSD__
)

45 
	~<sys/ídün.h
>

47 #ñi‡
deföed
(
__NëBSD__
Ë|| deföed(
__FªeBSD__
Ë|| deföed(
__Døg⁄Fly__
)

49 
	~<sys/ídün.h
>

51 
	#be16toh
(
x
Ë
	`bëoh16
(x)

	)

52 
	#À16toh
(
x
Ë
	`Àtoh16
(x)

	)

54 
	#be32toh
(
x
Ë
	`bëoh32
(x)

	)

55 
	#À32toh
(
x
Ë
	`Àtoh32
(x)

	)

57 
	#be64toh
(
x
Ë
	`bëoh64
(x)

	)

58 
	#À64toh
(
x
Ë
	`Àtoh64
(x)

	)

60 #ñi‡
deföed
(
__WINDOWS__
)

62 
	~<wösock2.h
>

64 #i‡
BYTE_ORDER
 =
LITTLE_ENDIAN


66 
	#htobe16
(
x
Ë
	`ht⁄s
(x)

	)

67 
	#htﬁe16
(
x
Ë(x)

	)

68 
	#be16toh
(
x
Ë
	`¡ohs
(x)

	)

69 
	#À16toh
(
x
Ë(x)

	)

71 
	#htobe32
(
x
Ë
	`ht⁄l
(x)

	)

72 
	#htﬁe32
(
x
Ë(x)

	)

73 
	#be32toh
(
x
Ë
	`¡ohl
(x)

	)

74 
	#À32toh
(
x
Ë(x)

	)

76 
	#htobe64
(
x
Ë
	`ht⁄Œ
(x)

	)

77 
	#htﬁe64
(
x
Ë(x)

	)

78 
	#be64toh
(
x
Ë
	`¡ohŒ
(x)

	)

79 
	#À64toh
(
x
Ë(x)

	)

81 #ñi‡
BYTE_ORDER
 =
BIG_ENDIAN


84 
	#htobe16
(
x
Ë(x)

	)

85 
	#htﬁe16
(
x
Ë
	`__buûtö_bsw≠16
(x)

	)

86 
	#be16toh
(
x
Ë(x)

	)

87 
	#À16toh
(
x
Ë
	`__buûtö_bsw≠16
(x)

	)

89 
	#htobe32
(
x
Ë(x)

	)

90 
	#htﬁe32
(
x
Ë
	`__buûtö_bsw≠32
(x)

	)

91 
	#be32toh
(
x
Ë(x)

	)

92 
	#À32toh
(
x
Ë
	`__buûtö_bsw≠32
(x)

	)

94 
	#htobe64
(
x
Ë(x)

	)

95 
	#htﬁe64
(
x
Ë
	`__buûtö_bsw≠64
(x)

	)

96 
	#be64toh
(
x
Ë(x)

	)

97 
	#À64toh
(
x
Ë
	`__buûtö_bsw≠64
(x)

	)

101 #îr‹ 
byã
 
‹dî
 
nŸ
 
suµ‹ãd


105 
	#__BYTE_ORDER
 
BYTE_ORDER


	)

106 
	#__BIG_ENDIAN
 
BIG_ENDIAN


	)

107 
	#__LITTLE_ENDIAN
 
LITTLE_ENDIAN


	)

108 
	#__PDP_ENDIAN
 
PDP_ENDIAN


	)

112 #îr‹ 
∂©f‹m
 
nŸ
 
suµ‹ãd


	@src/hdr_histogram/hdr_histogram.c

7 
	~<°dlib.h
>

8 
	~<°dboﬁ.h
>

9 
	~<m©h.h
>

10 
	~<as£π.h
>

11 
	~<°dio.h
>

12 
	~<°rög.h
>

13 
	~<°döt.h
>

14 
	~<î∫o.h
>

15 
	~<öây≥s.h
>

17 
	~"hdr_hi°ogøm.h
"

18 
	~"hdr_ã°s.h
"

28 
öt32_t
 
	$n‹mÆize_ödex
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt32_t
 
ödex
)

30 i‡(
h
->
n‹mÆizög_ödex_off£t
 == 0)

32  
ödex
;

35 
öt32_t
 
n‹mÆized_ödex
 = 
ödex
 - 
h
->
n‹mÆizög_ödex_off£t
;

36 
öt32_t
 
adju°mít
 = 0;

38 i‡(
n‹mÆized_ödex
 < 0)

40 
adju°mít
 = 
h
->
cou¡s_Àn
;

42 i‡(
n‹mÆized_ödex
 >
h
->
cou¡s_Àn
)

44 
adju°mít
 = -
h
->
cou¡s_Àn
;

47  
n‹mÆized_ödex
 + 
adju°mít
;

48 
	}
}

50 
öt64_t
 
	$cou¡s_gë_dúe˘
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt32_t
 
ödex
)

52  
h
->
cou¡s
[
ödex
];

53 
	}
}

55 
öt64_t
 
	$cou¡s_gë_n‹mÆi£d
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt32_t
 
ödex
)

57  
	`cou¡s_gë_dúe˘
(
h
, 
	`n‹mÆize_ödex
(h, 
ödex
));

58 
	}
}

60 
	$cou¡s_öc_n‹mÆi£d
(

61 
hdr_hi°ogøm
* 
h
, 
öt32_t
 
ödex
, 
öt64_t
 
vÆue
)

63 
öt32_t
 
n‹mÆi£d_ödex
 = 
	`n‹mÆize_ödex
(
h
, 
ödex
);

64 
h
->
cou¡s
[
n‹mÆi£d_ödex
] +
vÆue
;

65 
h
->
tŸÆ_cou¡
 +
vÆue
;

66 
	}
}

68 
	$upd©e_mö_max
(
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
)

70 
h
->
mö_vÆue
 = (
vÆue
 < h->min_value && value != 0) ? value : h->min_value;

71 
h
->
max_vÆue
 = (
vÆue
 > h->max_value) ? value : h->max_value;

72 
	}
}

82 
öt64_t
 
	$powî
(
öt64_t
 
ba£
, i¡64_à
exp
)

84 
öt64_t
 
ªsu…
 = 1;

85 
exp
)

87 
ªsu…
 *
ba£
; 
exp
--;

89  
ªsu…
;

90 
	}
}

92 #i‡
deföed
(
_MSC_VER
)

93 #¥agm®
öåösic
(
_BôSˇnRevî£64
)

96 
öt32_t
 
	$gë_buckë_ödex
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
)

98 #i‡
	`deföed
(
_MSC_VER
)

99 
uöt32_t
 
Àadög_zîo
 = 0;

100 
	`_BôSˇnRevî£64
(&
Àadög_zîo
, 
vÆue
 | 
h
->
sub_buckë_mask
);

101 
öt32_t
 
pow2˚ûög
 = 64 - (63 - 
Àadög_zîo
);

103 
öt32_t
 
pow2˚ûög
 = 64 - 
	`__buûtö_˛zŒ
(
vÆue
 | 
h
->
sub_buckë_mask
);

105  
pow2˚ûög
 - 
h
->
unô_magnôude
 - (h->
sub_buckë_hÆf_cou¡_magnôude
 + 1);

106 
	}
}

108 
öt32_t
 
	$gë_sub_buckë_ödex
(
öt64_t
 
vÆue
, 
öt32_t
 
buckë_ödex
, i¡32_à
unô_magnôude
)

110  (
öt32_t
)(
vÆue
 >> (
buckë_ödex
 + 
unô_magnôude
));

111 
	}
}

113 
öt32_t
 
	$cou¡s_ödex
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt32_t
 
buckë_ödex
, i¡32_à
sub_buckë_ödex
)

117 
öt32_t
 
buckë_ba£_ödex
 = (
buckë_ödex
 + 1Ë<< 
h
->
sub_buckë_hÆf_cou¡_magnôude
;

119 
öt32_t
 
off£t_ö_buckë
 = 
sub_buckë_ödex
 - 
h
->
sub_buckë_hÆf_cou¡
;

121  
buckë_ba£_ödex
 + 
off£t_ö_buckë
;

122 
	}
}

124 
öt64_t
 
	$vÆue_‰om_ödex
(
öt32_t
 
buckë_ödex
, i¡32_à
sub_buckë_ödex
, i¡32_à
unô_magnôude
)

126  ((
öt64_t
Ë
sub_buckë_ödex
Ë<< (
buckë_ödex
 + 
unô_magnôude
);

127 
	}
}

129 
öt32_t
 
	$cou¡s_ödex_f‹
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
)

131 
öt32_t
 
buckë_ödex
 = 
	`gë_buckë_ödex
(
h
, 
vÆue
);

132 
öt32_t
 
sub_buckë_ödex
 = 
	`gë_sub_buckë_ödex
(
vÆue
, 
buckë_ödex
, 
h
->
unô_magnôude
);

134  
	`cou¡s_ödex
(
h
, 
buckë_ödex
, 
sub_buckë_ödex
);

135 
	}
}

137 
öt64_t
 
	$hdr_vÆue_©_ödex
(c⁄° 
hdr_hi°ogøm
 *
h
, 
öt32_t
 
ödex
)

139 
öt32_t
 
buckë_ödex
 = (
ödex
 >> 
h
->
sub_buckë_hÆf_cou¡_magnôude
) - 1;

140 
öt32_t
 
sub_buckë_ödex
 = (
ödex
 & (
h
->
sub_buckë_hÆf_cou¡
 - 1)) + h->sub_bucket_half_count;

142 i‡(
buckë_ödex
 < 0)

144 
sub_buckë_ödex
 -
h
->
sub_buckë_hÆf_cou¡
;

145 
buckë_ödex
 = 0;

148  
	`vÆue_‰om_ödex
(
buckë_ödex
, 
sub_buckë_ödex
, 
h
->
unô_magnôude
);

149 
	}
}

151 
öt64_t
 
	$hdr_size_of_equivÆít_vÆue_ønge
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
)

153 
öt32_t
 
buckë_ödex
 = 
	`gë_buckë_ödex
(
h
, 
vÆue
);

154 
öt32_t
 
sub_buckë_ödex
 = 
	`gë_sub_buckë_ödex
(
vÆue
, 
buckë_ödex
, 
h
->
unô_magnôude
);

155 
öt32_t
 
adju°ed_buckë
 = (
sub_buckë_ödex
 >
h
->
sub_buckë_cou¡
Ë? (
buckë_ödex
 + 1) : bucket_index;

156  
	`INT64_C
(1Ë<< (
h
->
unô_magnôude
 + 
adju°ed_buckë
);

157 
	}
}

159 
öt64_t
 
	$lowe°_equivÆít_vÆue
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
)

161 
öt32_t
 
buckë_ödex
 = 
	`gë_buckë_ödex
(
h
, 
vÆue
);

162 
öt32_t
 
sub_buckë_ödex
 = 
	`gë_sub_buckë_ödex
(
vÆue
, 
buckë_ödex
, 
h
->
unô_magnôude
);

163  
	`vÆue_‰om_ödex
(
buckë_ödex
, 
sub_buckë_ödex
, 
h
->
unô_magnôude
);

164 
	}
}

166 
öt64_t
 
	$hdr_√xt_n⁄_equivÆít_vÆue
(c⁄° 
hdr_hi°ogøm
 *
h
, 
öt64_t
 
vÆue
)

168  
	`lowe°_equivÆít_vÆue
(
h
, 
vÆue
Ë+ 
	`hdr_size_of_equivÆít_vÆue_ønge
(h, value);

169 
	}
}

171 
öt64_t
 
	$highe°_equivÆít_vÆue
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
)

173  
	`hdr_√xt_n⁄_equivÆít_vÆue
(
h
, 
vÆue
) - 1;

174 
	}
}

176 
öt64_t
 
	$hdr_medün_equivÆít_vÆue
(c⁄° 
hdr_hi°ogøm
 *
h
, 
öt64_t
 
vÆue
)

178  
	`lowe°_equivÆít_vÆue
(
h
, 
vÆue
Ë+ (
	`hdr_size_of_equivÆít_vÆue_ønge
(h, value) >> 1);

179 
	}
}

181 
öt64_t
 
	$n⁄_zîo_mö
(c⁄° 
hdr_hi°ogøm
* 
h
)

183 i‡(
INT64_MAX
 =
h
->
mö_vÆue
)

185  
INT64_MAX
;

188  
	`lowe°_equivÆít_vÆue
(
h
, h->
mö_vÆue
);

189 
	}
}

191 
	$hdr_ª£t_öã∫Æ_cou¡îs
(
hdr_hi°ogøm
* 
h
)

193 
mö_n⁄_zîo_ödex
 = -1;

194 
max_ödex
 = -1;

195 
öt64_t
 
ob£rved_tŸÆ_cou¡
 = 0;

196 
i
;

198 
i
 = 0; i < 
h
->
cou¡s_Àn
; i++)

200 
öt64_t
 
cou¡_©_ödex
;

202 i‡((
cou¡_©_ödex
 = 
	`cou¡s_gë_dúe˘
(
h
, 
i
)) > 0)

204 
ob£rved_tŸÆ_cou¡
 +
cou¡_©_ödex
;

205 
max_ödex
 = 
i
;

206 i‡(
mö_n⁄_zîo_ödex
 =-1 && 
i
 != 0)

208 
mö_n⁄_zîo_ödex
 = 
i
;

213 i‡(
max_ödex
 == -1)

215 
h
->
max_vÆue
 = 0;

219 
öt64_t
 
max_vÆue
 = 
	`hdr_vÆue_©_ödex
(
h
, 
max_ödex
);

220 
h
->
max_vÆue
 = 
	`highe°_equivÆít_vÆue
(h, max_value);

223 i‡(
mö_n⁄_zîo_ödex
 == -1)

225 
h
->
mö_vÆue
 = 
INT64_MAX
;

229 
h
->
mö_vÆue
 = 
	`hdr_vÆue_©_ödex
(h, 
mö_n⁄_zîo_ödex
);

232 
h
->
tŸÆ_cou¡
 = 
ob£rved_tŸÆ_cou¡
;

233 
	}
}

235 
öt32_t
 
	$buckës_√eded_to_covî_vÆue
(
öt64_t
 
vÆue
, 
öt32_t
 
sub_buckë_cou¡
, i¡32_à
unô_magnôude
)

237 
öt64_t
 
smÆÀ°_u¡øckabÀ_vÆue
 = ((öt64_tË
sub_buckë_cou¡
Ë<< 
unô_magnôude
;

238 
öt32_t
 
buckës_√eded
 = 1;

239 
smÆÀ°_u¡øckabÀ_vÆue
 <
vÆue
)

241 i‡(
smÆÀ°_u¡øckabÀ_vÆue
 > 
INT64_MAX
 / 2)

243  
buckës_√eded
 + 1;

245 
smÆÀ°_u¡øckabÀ_vÆue
 <<= 1;

246 
buckës_√eded
++;

249  
buckës_√eded
;

250 
	}
}

260 
	$hdr_ˇlcuœã_buckë_c⁄fig
(

261 
öt64_t
 
lowe°_åackabÀ_vÆue
,

262 
öt64_t
 
highe°_åackabÀ_vÆue
,

263 
signifiˇ¡_figuªs
,

264 
hdr_hi°ogøm_buckë_c⁄fig
* 
cfg
)

266 i‡(
lowe°_åackabÀ_vÆue
 < 1 ||

267 
signifiˇ¡_figuªs
 < 1 || 5 < significant_figures)

269  
EINVAL
;

271 i‡(
lowe°_åackabÀ_vÆue
 * 2 > 
highe°_åackabÀ_vÆue
)

273  
EINVAL
;

276 
cfg
->
lowe°_åackabÀ_vÆue
 =Üowest_trackable_value;

277 
cfg
->
signifiˇ¡_figuªs
 = significant_figures;

278 
cfg
->
highe°_åackabÀ_vÆue
 = highest_trackable_value;

280 
öt64_t
 
œrge°_vÆue_wôh_sögÀ_unô_ªsﬁuti⁄
 = 2 * 
	`powî
(10, 
signifiˇ¡_figuªs
);

281 
öt32_t
 
sub_buckë_cou¡_magnôude
 = (öt32_tË
	`˚û
(
	`log
(()
œrge°_vÆue_wôh_sögÀ_unô_ªsﬁuti⁄
) /Üog(2));

282 
cfg
->
sub_buckë_hÆf_cou¡_magnôude
 = ((
sub_buckë_cou¡_magnôude
 > 1) ? sub_bucket_count_magnitude : 1) - 1;

284 
cfg
->
unô_magnôude
 = (
öt32_t
Ë
	`Êo‹
(
	`log
(()
lowe°_åackabÀ_vÆue
) /Üog(2));

286 
cfg
->
sub_buckë_cou¡
 = (
öt32_t
Ë
	`pow
(2, (cfg->
sub_buckë_hÆf_cou¡_magnôude
 + 1));

287 
cfg
->
sub_buckë_hÆf_cou¡
 = cfg->
sub_buckë_cou¡
 / 2;

288 
cfg
->
sub_buckë_mask
 = ((
öt64_t
Ëcfg->
sub_buckë_cou¡
 - 1Ë<< cfg->
unô_magnôude
;

291 
cfg
->
buckë_cou¡
 = 
	`buckës_√eded_to_covî_vÆue
(
highe°_åackabÀ_vÆue
, cfg->
sub_buckë_cou¡
, (
öt32_t
)cfg->
unô_magnôude
);

292 
cfg
->
cou¡s_Àn
 = (cfg->
buckë_cou¡
 + 1Ë* (cfg->
sub_buckë_cou¡
 / 2);

295 
	}
}

297 
	$hdr_öô_¥óŒoˇãd
(
hdr_hi°ogøm
* 
h
, 
hdr_hi°ogøm_buckë_c⁄fig
* 
cfg
)

299 
h
->
lowe°_åackabÀ_vÆue
 = 
cfg
->lowest_trackable_value;

300 
h
->
highe°_åackabÀ_vÆue
 = 
cfg
->highest_trackable_value;

301 
h
->
unô_magnôude
 = (
öt32_t
)
cfg
->unit_magnitude;

302 
h
->
signifiˇ¡_figuªs
 = (
öt32_t
)
cfg
->significant_figures;

303 
h
->
sub_buckë_hÆf_cou¡_magnôude
 = 
cfg
->sub_bucket_half_count_magnitude;

304 
h
->
sub_buckë_hÆf_cou¡
 = 
cfg
->sub_bucket_half_count;

305 
h
->
sub_buckë_mask
 = 
cfg
->sub_bucket_mask;

306 
h
->
sub_buckë_cou¡
 = 
cfg
->sub_bucket_count;

307 
h
->
mö_vÆue
 = 
INT64_MAX
;

308 
h
->
max_vÆue
 = 0;

309 
h
->
n‹mÆizög_ödex_off£t
 = 0;

310 
h
->
c⁄vîsi⁄_øtio
 = 1.0;

311 
h
->
buckë_cou¡
 = 
cfg
->bucket_count;

312 
h
->
cou¡s_Àn
 = 
cfg
->counts_len;

313 
h
->
tŸÆ_cou¡
 = 0;

314 
	}
}

316 
	$hdr_öô
(

317 
öt64_t
 
lowe°_åackabÀ_vÆue
,

318 
öt64_t
 
highe°_åackabÀ_vÆue
,

319 
signifiˇ¡_figuªs
,

320 
hdr_hi°ogøm
** 
ªsu…
)

322 
hdr_hi°ogøm_buckë_c⁄fig
 
cfg
;

324 
r
 = 
	`hdr_ˇlcuœã_buckë_c⁄fig
(
lowe°_åackabÀ_vÆue
, 
highe°_åackabÀ_vÆue
, 
signifiˇ¡_figuªs
, &
cfg
);

325 i‡(
r
)

327  
r
;

330 
size_t
 
hi°ogøm_size
 = (
hdr_hi°ogøm
Ë+ 
cfg
.
cou¡s_Àn
 * (
öt64_t
);

331 
hdr_hi°ogøm
* 
hi°ogøm
 = 
	`mÆloc
(
hi°ogøm_size
);

333 i‡(!
hi°ogøm
)

335  
ENOMEM
;

339 
	`mem£t
((*Ë
hi°ogøm
, 0, 
hi°ogøm_size
);

341 
	`hdr_öô_¥óŒoˇãd
(
hi°ogøm
, &
cfg
);

342 *
ªsu…
 = 
hi°ogøm
;

345 
	}
}

348 
	$hdr_Æloc
(
öt64_t
 
highe°_åackabÀ_vÆue
, 
signifiˇ¡_figuªs
, 
hdr_hi°ogøm
** 
ªsu…
)

350  
	`hdr_öô
(1, 
highe°_åackabÀ_vÆue
, 
signifiˇ¡_figuªs
, 
ªsu…
);

351 
	}
}

354 
	$hdr_ª£t
(
hdr_hi°ogøm
 *
h
)

356 
h
->
tŸÆ_cou¡
=0;

357 
h
->
mö_vÆue
 = 
INT64_MAX
;

358 
h
->
max_vÆue
 = 0;

359 
	`mem£t
((*Ë&
h
->
cou¡s
, 0, ((
öt64_t
Ë* h->
cou¡s_Àn
));

361 
	}
}

363 
size_t
 
	$hdr_gë_mem‹y_size
(
hdr_hi°ogøm
 *
h
)

365  (
hdr_hi°ogøm
Ë+ 
h
->
cou¡s_Àn
 * (
öt64_t
);

366 
	}
}

377 
boﬁ
 
	$hdr_ªc‹d_vÆue
(
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
)

379  
	`hdr_ªc‹d_vÆues
(
h
, 
vÆue
, 1);

380 
	}
}

382 
boﬁ
 
	$hdr_ªc‹d_vÆues
(
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
, i¡64_à
cou¡
)

384 i‡(
vÆue
 < 0)

386  
Ál£
;

389 
öt32_t
 
cou¡s_ödex
 = 
	`cou¡s_ödex_f‹
(
h
, 
vÆue
);

391 i‡(
cou¡s_ödex
 < 0 || 
h
->
cou¡s_Àn
 <= counts_index)

393  
Ál£
;

396 
	`cou¡s_öc_n‹mÆi£d
(
h
, 
cou¡s_ödex
, 
cou¡
);

397 
	`upd©e_mö_max
(
h
, 
vÆue
);

399  
åue
;

400 
	}
}

402 
boﬁ
 
	$hdr_ªc‹d_c‹ª˘ed_vÆue
(
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
, i¡64_à
ex≥˘ed_öãrvÆ
)

404  
	`hdr_ªc‹d_c‹ª˘ed_vÆues
(
h
, 
vÆue
, 1, 
ex≥˘ed_öãrvÆ
);

405 
	}
}

408 
boﬁ
 
	$hdr_ªc‹d_c‹ª˘ed_vÆues
(
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
, i¡64_à
cou¡
, i¡64_à
ex≥˘ed_öãrvÆ
)

410 i‡(!
	`hdr_ªc‹d_vÆues
(
h
, 
vÆue
, 
cou¡
))

412  
Ál£
;

415 i‡(
ex≥˘ed_öãrvÆ
 <0 || 
vÆue
 <=Éxpected_interval)

417  
åue
;

420 
öt64_t
 
missög_vÆue
 = 
vÆue
 - 
ex≥˘ed_öãrvÆ
;

421 ; 
missög_vÆue
 >
ex≥˘ed_öãrvÆ
; missing_value -=Éxpected_interval)

423 i‡(!
	`hdr_ªc‹d_vÆues
(
h
, 
missög_vÆue
, 
cou¡
))

425  
Ál£
;

429  
åue
;

430 
	}
}

432 
öt64_t
 
	$hdr_add
(
hdr_hi°ogøm
* 
h
, c⁄° hdr_hi°ogøm* 
‰om
)

434 
hdr_ôî
 
ôî
;

435 
	`hdr_ôî_ªc‹ded_öô
(&
ôî
, 
‰om
);

436 
öt64_t
 
dr›≥d
 = 0;

438 
	`hdr_ôî_√xt
(&
ôî
))

440 
öt64_t
 
vÆue
 = 
ôî
.value;

441 
öt64_t
 
cou¡
 = 
ôî
.count;

443 i‡(!
	`hdr_ªc‹d_vÆues
(
h
, 
vÆue
, 
cou¡
))

445 
dr›≥d
 +
cou¡
;

449  
dr›≥d
;

450 
	}
}

452 
öt64_t
 
	$hdr_add_whûe_c‹ª˘ög_f‹_co‹dö©ed_omissi⁄
(

453 
hdr_hi°ogøm
* 
h
, hdr_hi°ogøm* 
‰om
, 
öt64_t
 
ex≥˘ed_öãrvÆ
)

455 
hdr_ôî
 
ôî
;

456 
	`hdr_ôî_ªc‹ded_öô
(&
ôî
, 
‰om
);

457 
öt64_t
 
dr›≥d
 = 0;

459 
	`hdr_ôî_√xt
(&
ôî
))

461 
öt64_t
 
vÆue
 = 
ôî
.value;

462 
öt64_t
 
cou¡
 = 
ôî
.count;

464 i‡(!
	`hdr_ªc‹d_c‹ª˘ed_vÆues
(
h
, 
vÆue
, 
cou¡
, 
ex≥˘ed_öãrvÆ
))

466 
dr›≥d
 +
cou¡
;

470  
dr›≥d
;

471 
	}
}

484 
öt64_t
 
	$hdr_max
(c⁄° 
hdr_hi°ogøm
* 
h
)

486 i‡(0 =
h
->
max_vÆue
)

491  
	`highe°_equivÆít_vÆue
(
h
, h->
max_vÆue
);

492 
	}
}

494 
öt64_t
 
	$hdr_mö
(c⁄° 
hdr_hi°ogøm
* 
h
)

496 i‡(0 < 
	`hdr_cou¡_©_ödex
(
h
, 0))

501  
	`n⁄_zîo_mö
(
h
);

502 
	}
}

504 
öt64_t
 
	$hdr_vÆue_©_≥r˚¡ûe
(c⁄° 
hdr_hi°ogøm
* 
h
, 
≥r˚¡ûe
)

506 
hdr_ôî
 
ôî
;

507 
	`hdr_ôî_öô
(&
ôî
, 
h
);

509 
ªque°ed_≥r˚¡ûe
 = 
≥r˚¡ûe
 < 100.0 ?Öercentile : 100.0;

510 
öt64_t
 
cou¡_©_≥r˚¡ûe
 =

511 (
öt64_t
Ë(((
ªque°ed_≥r˚¡ûe
 / 100Ë* 
h
->
tŸÆ_cou¡
) + 0.5);

512 
cou¡_©_≥r˚¡ûe
 = count_at_percentile > 1 ? count_at_percentile : 1;

513 
öt64_t
 
tŸÆ
 = 0;

515 
	`hdr_ôî_√xt
(&
ôî
))

517 
tŸÆ
 +
ôî
.
cou¡
;

519 i‡(
tŸÆ
 >
cou¡_©_≥r˚¡ûe
)

521 
öt64_t
 
vÆue_‰om_ödex
 = 
ôî
.
vÆue
;

522  
	`highe°_equivÆít_vÆue
(
h
, 
vÆue_‰om_ödex
);

527 
	}
}

529 
	$hdr_món
(c⁄° 
hdr_hi°ogøm
* 
h
)

531 
hdr_ôî
 
ôî
;

532 
öt64_t
 
tŸÆ
 = 0;

534 
	`hdr_ôî_öô
(&
ôî
, 
h
);

536 
	`hdr_ôî_√xt
(&
ôî
))

538 i‡(0 !
ôî
.
cou¡
)

540 
tŸÆ
 +
ôî
.
cou¡
 * 
	`hdr_medün_equivÆít_vÆue
(
h
, iãr.
vÆue
);

544  (
tŸÆ
 * 1.0Ë/ 
h
->
tŸÆ_cou¡
;

545 
	}
}

547 
	$hdr_°ddev
(c⁄° 
hdr_hi°ogøm
* 
h
)

549 
món
 = 
	`hdr_món
(
h
);

550 
geomëric_dev_tŸÆ
 = 0.0;

552 
hdr_ôî
 
ôî
;

553 
	`hdr_ôî_öô
(&
ôî
, 
h
);

555 
	`hdr_ôî_√xt
(&
ôî
))

557 i‡(0 !
ôî
.
cou¡
)

559 
dev
 = (
	`hdr_medün_equivÆít_vÆue
(
h
, 
ôî
.
vÆue
Ë* 1.0Ë- 
món
;

560 
geomëric_dev_tŸÆ
 +(
dev
 * devË* 
ôî
.
cou¡
;

564  
	`sqπ
(
geomëric_dev_tŸÆ
 / 
h
->
tŸÆ_cou¡
);

565 
	}
}

567 
boﬁ
 
	$hdr_vÆues_¨e_equivÆít
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt64_t
 
a
, i¡64_à
b
)

569  
	`lowe°_equivÆít_vÆue
(
h
, 
a
Ë=lowe°_equivÆít_vÆue(h, 
b
);

570 
	}
}

572 
öt64_t
 
	$hdr_lowe°_equivÆít_vÆue
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
)

574  
	`lowe°_equivÆít_vÆue
(
h
, 
vÆue
);

575 
	}
}

577 
öt64_t
 
	$hdr_cou¡_©_vÆue
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
)

579  
	`cou¡s_gë_n‹mÆi£d
(
h
, 
	`cou¡s_ödex_f‹
(h, 
vÆue
));

580 
	}
}

582 
öt64_t
 
	$hdr_cou¡_©_ödex
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt32_t
 
ödex
)

584  
	`cou¡s_gë_n‹mÆi£d
(
h
, 
ödex
);

585 
	}
}

597 
boﬁ
 
	$has_buckës
(
hdr_ôî
* 
ôî
)

599  
ôî
->
cou¡s_ödex
 < iãr->
h
->
cou¡s_Àn
;

600 
	}
}

602 
boﬁ
 
	$has_√xt
(
hdr_ôî
* 
ôî
)

604  
ôî
->
cumuœtive_cou¡
 < iãr->
h
->
tŸÆ_cou¡
;

605 
	}
}

607 
boﬁ
 
	$move_√xt
(
hdr_ôî
* 
ôî
)

609 
ôî
->
cou¡s_ödex
++;

611 i‡(!
	`has_buckës
(
ôî
))

613  
Ál£
;

616 
ôî
->
cou¡
 = 
	`cou¡s_gë_n‹mÆi£d
(ôî->
h
, iãr->
cou¡s_ödex
);

617 
ôî
->
cumuœtive_cou¡
 +ôî->
cou¡
;

619 
ôî
->
vÆue
 = 
	`hdr_vÆue_©_ödex
(ôî->
h
, iãr->
cou¡s_ödex
);

620 
ôî
->
highe°_equivÆít_vÆue
 = 
	`highe°_equivÆít_vÆue
(ôî->
h
, iãr->
vÆue
);

621 
ôî
->
lowe°_equivÆít_vÆue
 = 
	`lowe°_equivÆít_vÆue
(ôî->
h
, iãr->
vÆue
);

622 
ôî
->
medün_equivÆít_vÆue
 = 
	`hdr_medün_equivÆít_vÆue
(ôî->
h
, iãr->
vÆue
);

624  
åue
;

625 
	}
}

627 
öt64_t
 
	$≥ek_√xt_vÆue_‰om_ödex
(
hdr_ôî
* 
ôî
)

629  
	`hdr_vÆue_©_ödex
(
ôî
->
h
, iãr->
cou¡s_ödex
 + 1);

630 
	}
}

632 
boﬁ
 
	$√xt_vÆue_gª©î_th™_ªp‹tög_Àvñ_uµî_bound
(

633 
hdr_ôî
 *
ôî
, 
öt64_t
 
ªp‹tög_Àvñ_uµî_bound
)

635 i‡(
ôî
->
cou¡s_ödex
 >ôî->
h
->
cou¡s_Àn
)

637  
Ál£
;

640  
	`≥ek_√xt_vÆue_‰om_ödex
(
ôî
Ë> 
ªp‹tög_Àvñ_uµî_bound
;

641 
	}
}

643 
boﬁ
 
	$_basic_ôî_√xt
(
hdr_ôî
 *
ôî
)

645 i‡(!
	`has_√xt
(
ôî
))

647  
Ál£
;

650 
	`move_√xt
(
ôî
);

652  
åue
;

653 
	}
}

655 
	$_upd©e_ôî©ed_vÆues
(
hdr_ôî
* 
ôî
, 
öt64_t
 
√w_vÆue_ôî©ed_to
)

657 
ôî
->
vÆue_ôî©ed_‰om
 = iãr->
vÆue_ôî©ed_to
;

658 
ôî
->
vÆue_ôî©ed_to
 = 
√w_vÆue_ôî©ed_to
;

659 
	}
}

661 
boﬁ
 
	$_Æl_vÆues_ôî_√xt
(
hdr_ôî
* 
ôî
)

663 
boﬁ
 
ªsu…
 = 
	`move_√xt
(
ôî
);

665 i‡(
ªsu…
)

667 
	`_upd©e_ôî©ed_vÆues
(
ôî
, iãr->
vÆue
);

670  
ªsu…
;

671 
	}
}

673 
	$hdr_ôî_öô
(
hdr_ôî
* 
ôî
, c⁄° 
hdr_hi°ogøm
* 
h
)

675 
ôî
->
h
 = h;

677 
ôî
->
cou¡s_ödex
 = -1;

678 
ôî
->
cou¡
 = 0;

679 
ôî
->
cumuœtive_cou¡
 = 0;

680 
ôî
->
vÆue
 = 0;

681 
ôî
->
highe°_equivÆít_vÆue
 = 0;

682 
ôî
->
vÆue_ôî©ed_‰om
 = 0;

683 
ôî
->
vÆue_ôî©ed_to
 = 0;

685 
ôî
->
_√xt_Â
 = 
_Æl_vÆues_ôî_√xt
;

686 
	}
}

688 
boﬁ
 
	$hdr_ôî_√xt
(
hdr_ôî
* 
ôî
)

690  
ôî
->
	`_√xt_Â
(iter);

691 
	}
}

701 
boﬁ
 
	$_≥r˚¡ûe_ôî_√xt
(
hdr_ôî
* 
ôî
)

703 
hdr_ôî_≥r˚¡ûes
* 
≥r˚¡ûes
 = &
ôî
->
•ecifics
.percentiles;

705 i‡(!
	`has_√xt
(
ôî
))

707 i‡(
≥r˚¡ûes
->
£í_œ°_vÆue
)

709  
Ál£
;

712 
≥r˚¡ûes
->
£í_œ°_vÆue
 = 
åue
;

713 
≥r˚¡ûes
->
≥r˚¡ûe
 = 100.0;

715  
åue
;

718 i‡(
ôî
->
cou¡s_ödex
 =-1 && !
	`_basic_ôî_√xt
(iter))

720  
Ál£
;

725 
cuºít_≥r˚¡ûe
 = (100.0 * (Ë
ôî
->
cumuœtive_cou¡
Ë/ iãr->
h
->
tŸÆ_cou¡
;

726 i‡(
ôî
->
cou¡
 != 0 &&

727 
≥r˚¡ûes
->
≥r˚¡ûe_to_ôî©e_to
 <
cuºít_≥r˚¡ûe
)

729 
	`_upd©e_ôî©ed_vÆues
(
ôî
, 
	`highe°_equivÆít_vÆue
(ôî->
h
, iãr->
vÆue
));

731 
≥r˚¡ûes
->
≥r˚¡ûe
 =Öî˚¡ûes->
≥r˚¡ûe_to_ôî©e_to
;

732 
öt64_t
 
ãmp
 = (öt64_t)(
	`log
(100 / (100.0 - (
≥r˚¡ûes
->
≥r˚¡ûe_to_ôî©e_to
))) /Üog(2)) + 1;

733 
öt64_t
 
hÆf_di°™˚
 = (öt64_tË
	`pow
(2, (Ë
ãmp
);

734 
öt64_t
 
≥r˚¡ûe_ªp‹tög_ticks
 = 
≥r˚¡ûes
->
ticks_≥r_hÆf_di°™˚
 * 
hÆf_di°™˚
;

735 
≥r˚¡ûes
->
≥r˚¡ûe_to_ôî©e_to
 +100.0 / 
≥r˚¡ûe_ªp‹tög_ticks
;

737  
åue
;

740 
	`_basic_ôî_√xt
(
ôî
));

742  
åue
;

743 
	}
}

745 
	$hdr_ôî_≥r˚¡ûe_öô
(
hdr_ôî
* 
ôî
, c⁄° 
hdr_hi°ogøm
* 
h
, 
öt32_t
 
ticks_≥r_hÆf_di°™˚
)

747 
ôî
->
h
 = h;

749 
	`hdr_ôî_öô
(
ôî
, 
h
);

751 
ôî
->
•ecifics
.
≥r˚¡ûes
.
£í_œ°_vÆue
 = 
Ál£
;

752 
ôî
->
•ecifics
.
≥r˚¡ûes
.
ticks_≥r_hÆf_di°™˚
 =Åicks_per_half_distance;

753 
ôî
->
•ecifics
.
≥r˚¡ûes
.
≥r˚¡ûe_to_ôî©e_to
 = 0.0;

754 
ôî
->
•ecifics
.
≥r˚¡ûes
.
≥r˚¡ûe
 = 0.0;

756 
ôî
->
_√xt_Â
 = 
_≥r˚¡ûe_ôî_√xt
;

757 
	}
}

759 
	$f‹m©_löe_°rög
(* 
°r
, 
size_t
 
Àn
, 
signifiˇ¡_figuªs
, 
f‹m©_ty≥
 
f‹m©
)

761 #i‡
	`deföed
(
_MSC_VER
)

762 
	#¢¥ötf
 
_¢¥ötf


	)

763 #¥agm®
	`w¨nög
(
push
)

764 #¥agm®
	`w¨nög
(
dißbÀ
: 4996)

766 c⁄° * 
f‹m©_°r
 = "%s%d%s";

768 
f‹m©
)

770 
CSV
:

771 
	`¢¥ötf
(
°r
, 
Àn
, 
f‹m©_°r
, "%.", 
signifiˇ¡_figuªs
, "f,%f,%d,%.2f\n");

773 
CLASSIC
:

774 
	`¢¥ötf
(
°r
, 
Àn
, 
f‹m©_°r
, "%12.", 
signifiˇ¡_figuªs
, "f %12f %12d %12.2f\n");

777 
	`¢¥ötf
(
°r
, 
Àn
, 
f‹m©_°r
, "%12.", 
signifiˇ¡_figuªs
, "f %12f %12d %12.2f\n");

779 #i‡
	`deföed
(
_MSC_VER
)

780 #unde‡
¢¥ötf


781 #¥agm®
	`w¨nög
(
p›
)

783 
	}
}

795 
boﬁ
 
	$_ªc‹ded_ôî_√xt
(
hdr_ôî
* 
ôî
)

797 
	`_basic_ôî_√xt
(
ôî
))

799 i‡(
ôî
->
cou¡
 != 0)

801 
	`_upd©e_ôî©ed_vÆues
(
ôî
, iãr->
vÆue
);

803 
ôî
->
•ecifics
.
ªc‹ded
.
cou¡_added_ö_this_ôî©i⁄_°ï
 = iãr->
cou¡
;

804  
åue
;

808  
Ál£
;

809 
	}
}

811 
	$hdr_ôî_ªc‹ded_öô
(
hdr_ôî
* 
ôî
, c⁄° 
hdr_hi°ogøm
* 
h
)

813 
	`hdr_ôî_öô
(
ôî
, 
h
);

815 
ôî
->
•ecifics
.
ªc‹ded
.
cou¡_added_ö_this_ôî©i⁄_°ï
 = 0;

817 
ôî
->
_√xt_Â
 = 
_ªc‹ded_ôî_√xt
;

818 
	}
}

829 
boﬁ
 
	$_ôî_löór_√xt
(
hdr_ôî
* 
ôî
)

831 
hdr_ôî_löór
* 
löór
 = &
ôî
->
•ecifics
.linear;

833 
löór
->
cou¡_added_ö_this_ôî©i⁄_°ï
 = 0;

835 i‡(
	`has_√xt
(
ôî
) ||

836 
	`√xt_vÆue_gª©î_th™_ªp‹tög_Àvñ_uµî_bound
(

837 
ôî
, 
löór
->
√xt_vÆue_ªp‹tög_Àvñ_lowe°_equivÆít
))

841 i‡(
ôî
->
vÆue
 >
löór
->
√xt_vÆue_ªp‹tög_Àvñ_lowe°_equivÆít
)

843 
	`_upd©e_ôî©ed_vÆues
(
ôî
, 
löór
->
√xt_vÆue_ªp‹tög_Àvñ
);

845 
löór
->
√xt_vÆue_ªp‹tög_Àvñ
 +löór->
vÆue_unôs_≥r_buckë
;

846 
löór
->
√xt_vÆue_ªp‹tög_Àvñ_lowe°_equivÆít
 =

847 
	`lowe°_equivÆít_vÆue
(
ôî
->
h
, 
löór
->
√xt_vÆue_ªp‹tög_Àvñ
);

849  
åue
;

852 i‡(!
	`move_√xt
(
ôî
))

854  
åue
;

857 
löór
->
cou¡_added_ö_this_ôî©i⁄_°ï
 +
ôî
->
cou¡
;

859 
åue
);

862  
Ál£
;

863 
	}
}

866 
	$hdr_ôî_löór_öô
(
hdr_ôî
* 
ôî
, c⁄° 
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue_unôs_≥r_buckë
)

868 
	`hdr_ôî_öô
(
ôî
, 
h
);

870 
ôî
->
•ecifics
.
löór
.
cou¡_added_ö_this_ôî©i⁄_°ï
 = 0;

871 
ôî
->
•ecifics
.
löór
.
vÆue_unôs_≥r_buckë
 = value_units_per_bucket;

872 
ôî
->
•ecifics
.
löór
.
√xt_vÆue_ªp‹tög_Àvñ
 = 
vÆue_unôs_≥r_buckë
;

873 
ôî
->
•ecifics
.
löór
.
√xt_vÆue_ªp‹tög_Àvñ_lowe°_equivÆít
 = 
	`lowe°_equivÆít_vÆue
(
h
, 
vÆue_unôs_≥r_buckë
);

875 
ôî
->
_√xt_Â
 = 
_ôî_löór_√xt
;

876 
	}
}

886 
boﬁ
 
	$_log_ôî_√xt
(
hdr_ôî
 *
ôî
)

888 
hdr_ôî_log
* 
log¨ôhmic
 = &
ôî
->
•ecifics
.
log
;

890 
log¨ôhmic
->
cou¡_added_ö_this_ôî©i⁄_°ï
 = 0;

892 i‡(
	`has_√xt
(
ôî
) ||

893 
	`√xt_vÆue_gª©î_th™_ªp‹tög_Àvñ_uµî_bound
(

894 
ôî
, 
log¨ôhmic
->
√xt_vÆue_ªp‹tög_Àvñ_lowe°_equivÆít
))

898 i‡(
ôî
->
vÆue
 >
log¨ôhmic
->
√xt_vÆue_ªp‹tög_Àvñ_lowe°_equivÆít
)

900 
	`_upd©e_ôî©ed_vÆues
(
ôî
, 
log¨ôhmic
->
√xt_vÆue_ªp‹tög_Àvñ
);

902 
log¨ôhmic
->
√xt_vÆue_ªp‹tög_Àvñ
 *(
öt64_t
Óog¨ôhmic->
log_ba£
;

903 
log¨ôhmic
->
√xt_vÆue_ªp‹tög_Àvñ_lowe°_equivÆít
 = 
	`lowe°_equivÆít_vÆue
(
ôî
->
h
,Üog¨ôhmic->
√xt_vÆue_ªp‹tög_Àvñ
);

905  
åue
;

908 i‡(!
	`move_√xt
(
ôî
))

910  
åue
;

913 
log¨ôhmic
->
cou¡_added_ö_this_ôî©i⁄_°ï
 +
ôî
->
cou¡
;

915 
åue
);

918  
Ál£
;

919 
	}
}

921 
	$hdr_ôî_log_öô
(

922 
hdr_ôî
* 
ôî
,

923 c⁄° 
hdr_hi°ogøm
* 
h
,

924 
öt64_t
 
vÆue_unôs_fú°_buckë
,

925 
log_ba£
)

927 
	`hdr_ôî_öô
(
ôî
, 
h
);

928 
ôî
->
•ecifics
.
log
.
cou¡_added_ö_this_ôî©i⁄_°ï
 = 0;

929 
ôî
->
•ecifics
.
log
.
log_ba£
 =Üog_base;

930 
ôî
->
•ecifics
.
log
.
√xt_vÆue_ªp‹tög_Àvñ
 = 
vÆue_unôs_fú°_buckë
;

931 
ôî
->
•ecifics
.
log
.
√xt_vÆue_ªp‹tög_Àvñ_lowe°_equivÆít
 = 
	`lowe°_equivÆít_vÆue
(
h
, 
vÆue_unôs_fú°_buckë
);

933 
ôî
->
_√xt_Â
 = 
_log_ôî_√xt
;

934 
	}
}

938 c⁄° * 
	$f‹m©_hód_°rög
(
f‹m©_ty≥
 
f‹m©
)

940 
f‹m©
)

942 
CSV
:

944 
CLASSIC
:

949 
	}
}

951 c⁄° 
	gCLASSIC_FOOTER
[] =

953 "#[Max = %12.3f, TŸÆ cou¡ = %12" 
PRIu64
 "]\n"

956 
	$hdr_≥r˚¡ûes_¥öt
(

957 
hdr_hi°ogøm
* 
h
, 
FILE
* 
°ªam
, 
öt32_t
 
ticks_≥r_hÆf_di°™˚
,

958 
vÆue_sˇÀ
, 
f‹m©_ty≥
 
f‹m©
)

960 
löe_f‹m©
[25];

961 
	`f‹m©_löe_°rög
(
löe_f‹m©
, 25, 
h
->
signifiˇ¡_figuªs
, 
f‹m©
);

962 c⁄° * 
hód_f‹m©
 = 
	`f‹m©_hód_°rög
(
f‹m©
);

963 
rc
 = 0;

965 
hdr_ôî
 
ôî
;

966 
	`hdr_ôî_≥r˚¡ûe_öô
(&
ôî
, 
h
, 
ticks_≥r_hÆf_di°™˚
);

968 i‡(
	`Ârötf
(

969 
°ªam
, 
hód_f‹m©
,

972 
rc
 = 
EIO
;

973 
˛ónup
;

976 
hdr_ôî_≥r˚¡ûes
 * 
≥r˚¡ûes
 = &
ôî
.
•ecifics
.percentiles;

977 
	`hdr_ôî_√xt
(&
ôî
))

979 
vÆue
 = 
ôî
.
highe°_equivÆít_vÆue
 / 
vÆue_sˇÀ
;

980 
≥r˚¡ûe
 = 
≥r˚¡ûes
->percentile / 100.0;

981 
öt64_t
 
tŸÆ_cou¡
 = 
ôî
.
cumuœtive_cou¡
;

982 
övîãd_≥r˚¡ûe
 = (1.0 / (1.0 - 
≥r˚¡ûe
));

984 i‡(
	`Ârötf
(

985 
°ªam
, 
löe_f‹m©
, 
vÆue
, 
≥r˚¡ûe
, 
tŸÆ_cou¡
, 
övîãd_≥r˚¡ûe
) < 0)

987 
rc
 = 
EIO
;

988 
˛ónup
;

992 i‡(
CLASSIC
 =
f‹m©
)

994 
món
 = 
	`hdr_món
(
h
Ë/ 
vÆue_sˇÀ
;

995 
°ddev
 = 
	`hdr_°ddev
(
h
Ë/ 
vÆue_sˇÀ
;

996 
max
 = 
	`hdr_max
(
h
Ë/ 
vÆue_sˇÀ
;

998 i‡(
	`Ârötf
(

999 
°ªam
, 
CLASSIC_FOOTER
, 
món
, 
°ddev
, 
max
,

1000 
h
->
tŸÆ_cou¡
, h->
buckë_cou¡
, h->
sub_buckë_cou¡
) < 0)

1002 
rc
 = 
EIO
;

1003 
˛ónup
;

1007 
˛ónup
:

1008  
rc
;

1009 
	}
}

	@src/hdr_histogram/hdr_histogram.h

10 #i‚de‡
HDR_HISTOGRAM_H


11 
	#HDR_HISTOGRAM_H
 1

	)

13 
	~<°döt.h
>

14 
	~<°dboﬁ.h
>

15 
	~<°dio.h
>

17 
	shdr_hi°ogøm


19 
öt64_t
 
	mlowe°_åackabÀ_vÆue
;

20 
öt64_t
 
	mhighe°_åackabÀ_vÆue
;

21 
öt32_t
 
	munô_magnôude
;

22 
öt32_t
 
	msignifiˇ¡_figuªs
;

23 
öt32_t
 
	msub_buckë_hÆf_cou¡_magnôude
;

24 
öt32_t
 
	msub_buckë_hÆf_cou¡
;

25 
öt64_t
 
	msub_buckë_mask
;

26 
öt32_t
 
	msub_buckë_cou¡
;

27 
öt32_t
 
	mbuckë_cou¡
;

28 
öt64_t
 
	mmö_vÆue
;

29 
öt64_t
 
	mmax_vÆue
;

30 
öt32_t
 
	mn‹mÆizög_ödex_off£t
;

31 
	mc⁄vîsi⁄_øtio
;

32 
öt32_t
 
	mcou¡s_Àn
;

33 
öt64_t
 
	mtŸÆ_cou¡
;

34 
öt64_t
 
	mcou¡s
[0];

37 #ifde‡
__˝lu•lus


62 
hdr_öô
(

63 
öt64_t
 
lowe°_åackabÀ_vÆue
,

64 
öt64_t
 
highe°_åackabÀ_vÆue
,

65 
signifiˇ¡_figuªs
,

66 
hdr_hi°ogøm
** 
ªsu…
);

74 
hdr_Æloc
(
öt64_t
 
highe°_åackabÀ_vÆue
, 
signifiˇ¡_figuªs
, 
hdr_hi°ogøm
** 
ªsu…
);

86 
hdr_ª£t
(
hdr_hi°ogøm
 *
h
);

94 
size_t
 
hdr_gë_mem‹y_size
(
hdr_hi°ogøm
 *
h
);

105 
boﬁ
 
hdr_ªc‹d_vÆue
(
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
);

118 
boﬁ
 
hdr_ªc‹d_vÆues
(
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
, i¡64_à
cou¡
);

136 
boﬁ
 
hdr_ªc‹d_c‹ª˘ed_vÆue
(
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
, i¡64_à
ex≥x˘ed_öãrvÆ
);

148 
boﬁ
 
hdr_ªc‹d_c‹ª˘ed_vÆues
(
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
, i¡64_à
cou¡
, i¡64_à
ex≥˘ed_öãrvÆ
);

160 
öt64_t
 
hdr_add
(
hdr_hi°ogøm
* 
h
, c⁄° hdr_hi°ogøm* 
‰om
);

172 
öt64_t
 
hdr_add_whûe_c‹ª˘ög_f‹_co‹dö©ed_omissi⁄
(

173 
hdr_hi°ogøm
* 
h
, hdr_hi°ogøm* 
‰om
, 
öt64_t
 
ex≥˘ed_öãrvÆ
);

181 
öt64_t
 
hdr_mö
(c⁄° 
hdr_hi°ogøm
* 
h
);

189 
öt64_t
 
hdr_max
(c⁄° 
hdr_hi°ogøm
* 
h
);

197 
öt64_t
 
hdr_vÆue_©_≥r˚¡ûe
(c⁄° 
hdr_hi°ogøm
* 
h
, 
≥r˚¡ûe
);

205 
hdr_°ddev
(c⁄° 
hdr_hi°ogøm
* 
h
);

213 
hdr_món
(c⁄° 
hdr_hi°ogøm
* 
h
);

225 
boﬁ
 
hdr_vÆues_¨e_equivÆít
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt64_t
 
a
, i¡64_à
b
);

236 
öt64_t
 
hdr_lowe°_equivÆít_vÆue
(c⁄° 
hdr_hi°ogøm
* 
h
, i¡64_à
vÆue
);

247 
öt64_t
 
hdr_cou¡_©_vÆue
(c⁄° 
hdr_hi°ogøm
* 
h
, i¡64_à
vÆue
);

248 
öt64_t
 
hdr_cou¡_©_ödex
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt32_t
 
ödex
);

249 
öt64_t
 
hdr_vÆue_©_ödex
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt32_t
 
ödex
);

251 
	shdr_ôî_≥r˚¡ûes


253 
boﬁ
 
£í_œ°_vÆue
;

254 
öt32_t
 
ticks_≥r_hÆf_di°™˚
;

255 
≥r˚¡ûe_to_ôî©e_to
;

256 
≥r˚¡ûe
;

259 
	shdr_ôî_ªc‹ded


261 
öt64_t
 
cou¡_added_ö_this_ôî©i⁄_°ï
;

264 
	shdr_ôî_löór


266 
öt64_t
 
vÆue_unôs_≥r_buckë
;

267 
öt64_t
 
cou¡_added_ö_this_ôî©i⁄_°ï
;

268 
öt64_t
 
√xt_vÆue_ªp‹tög_Àvñ
;

269 
öt64_t
 
√xt_vÆue_ªp‹tög_Àvñ_lowe°_equivÆít
;

272 
	shdr_ôî_log


274 
log_ba£
;

275 
öt64_t
 
cou¡_added_ö_this_ôî©i⁄_°ï
;

276 
öt64_t
 
√xt_vÆue_ªp‹tög_Àvñ
;

277 
öt64_t
 
√xt_vÆue_ªp‹tög_Àvñ_lowe°_equivÆít
;

288 
	shdr_ôî


290 c⁄° 
hdr_hi°ogøm
* 
h
;

292 
öt32_t
 
cou¡s_ödex
;

294 
öt64_t
 
cou¡
;

296 
öt64_t
 
cumuœtive_cou¡
;

298 
öt64_t
 
vÆue
;

299 
öt64_t
 
highe°_equivÆít_vÆue
;

300 
öt64_t
 
lowe°_equivÆít_vÆue
;

301 
öt64_t
 
medün_equivÆít_vÆue
;

302 
öt64_t
 
vÆue_ôî©ed_‰om
;

303 
öt64_t
 
vÆue_ôî©ed_to
;

307 
hdr_ôî_≥r˚¡ûes
 
≥r˚¡ûes
;

308 
hdr_ôî_ªc‹ded
 
ªc‹ded
;

309 
hdr_ôî_löór
 
löór
;

310 
hdr_ôî_log
 
log
;

311 } 
•ecifics
;

313 
boﬁ
 (*
_√xt_Â
)(
hdr_ôî
* 
ôî
);

323 
hdr_ôî_öô
(
hdr_ôî
* 
ôî
, c⁄° 
hdr_hi°ogøm
* 
h
);

328 
hdr_ôî_≥r˚¡ûe_öô
(
hdr_ôî
* 
ôî
, c⁄° 
hdr_hi°ogøm
* 
h
, 
öt32_t
 
ticks_≥r_hÆf_di°™˚
);

333 
hdr_ôî_ªc‹ded_öô
(
hdr_ôî
* 
ôî
, c⁄° 
hdr_hi°ogøm
* 
h
);

338 
hdr_ôî_löór_öô
(

339 
hdr_ôî
* 
ôî
,

340 c⁄° 
hdr_hi°ogøm
* 
h
,

341 
öt64_t
 
vÆue_unôs_≥r_buckë
);

346 
hdr_ôî_log_öô
(

347 
hdr_ôî
* 
ôî
,

348 c⁄° 
hdr_hi°ogøm
* 
h
,

349 
öt64_t
 
vÆue_unôs_fú°_buckë
,

350 
log_ba£
);

359 
boﬁ
 
hdr_ôî_√xt
(
hdr_ôî
* 
ôî
);

362 
CLASSIC
,

363 
CSV


364 } 
	tf‹m©_ty≥
;

378 
hdr_≥r˚¡ûes_¥öt
(

379 
hdr_hi°ogøm
* 
h
, 
FILE
* 
°ªam
, 
öt32_t
 
ticks_≥r_hÆf_di°™˚
,

380 
vÆue_sˇÀ
, 
f‹m©_ty≥
 
f‹m©
);

385 
	shdr_hi°ogøm_buckë_c⁄fig


387 
öt64_t
 
lowe°_åackabÀ_vÆue
;

388 
öt64_t
 
highe°_åackabÀ_vÆue
;

389 
öt64_t
 
unô_magnôude
;

390 
öt64_t
 
signifiˇ¡_figuªs
;

391 
öt32_t
 
sub_buckë_hÆf_cou¡_magnôude
;

392 
öt32_t
 
sub_buckë_hÆf_cou¡
;

393 
öt64_t
 
sub_buckë_mask
;

394 
öt32_t
 
sub_buckë_cou¡
;

395 
öt32_t
 
buckë_cou¡
;

396 
öt32_t
 
cou¡s_Àn
;

399 
hdr_ˇlcuœã_buckë_c⁄fig
(

400 
öt64_t
 
lowe°_åackabÀ_vÆue
,

401 
öt64_t
 
highe°_åackabÀ_vÆue
,

402 
signifiˇ¡_figuªs
,

403 
hdr_hi°ogøm_buckë_c⁄fig
* 
cfg
);

405 
hdr_öô_¥óŒoˇãd
(
hdr_hi°ogøm
* 
h
, 
hdr_hi°ogøm_buckë_c⁄fig
* 
cfg
);

407 
öt64_t
 
hdr_size_of_equivÆít_vÆue_ønge
(c⁄° 
hdr_hi°ogøm
 *
h
, i¡64_à
vÆue
);

408 
öt64_t
 
hdr_√xt_n⁄_equivÆít_vÆue
(c⁄° 
hdr_hi°ogøm
 *
h
, i¡64_à
vÆue
);

409 
öt64_t
 
hdr_medün_equivÆít_vÆue
(c⁄° 
hdr_hi°ogøm
 *
h
, i¡64_à
vÆue
);

411 #ifde‡
__˝lu•lus


	@src/hdr_histogram/hdr_histogram_log.c

7 
	~<°döt.h
>

8 
	~<°dlib.h
>

9 
	~<°dboﬁ.h
>

10 
	~<öây≥s.h
>

11 
	~<°dio.h
>

12 
	~<°rög.h
>

13 #i‡
deföed
(
_MSC_VER
)

14 #unde‡
HAVE_UNISTD_H


16 
	~<zlib.h
>

17 
	~<î∫o.h
>

18 
	~<˘y≥.h
>

19 
	~<m©h.h
>

20 
	~<time.h
>

22 
	~"hdr_ícodög.h
"

23 
	~"hdr_hi°ogøm.h
"

24 
	~"hdr_hi°ogøm_log.h
"

25 
	~"hdr_ã°s.h
"

27 #i‡
deföed
(
_MSC_VER
)

28 
	~<ötß„.h
>

29 
SSIZE_T
 
	tssize_t
;

30 #¥agm®
commít
(
lib
, "ws2_32.lib")

31 #¥agm®
w¨nög
(
push
)

32 #¥agm®
w¨nög
(
dißbÀ
: 4996)

35 
	~"hdr_ídün.h
"

38 
öt32_t
 
cou¡s_ödex_f‹
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
);

41 
	#FAIL_AND_CLEANUP
(
œbñ
, 
îr‹_«me
, 
îr‹
) \

44 
îr‹_«me
 = 
îr‹
; \

45 
œbñ
; \

47 0)

	)

49 
	$ªÆloc_buf„r
(

50 ** 
buf„r
, 
size_t
 
nmemb
, 
ssize_t
 
size
)

52 
size_t
 
Àn
 = 
nmemb
 * 
size
;

53 i‡(
NULL
 =*
buf„r
)

55 *
buf„r
 = 
	`mÆloc
(
Àn
);

59 *
buf„r
 = 
	`ªÆloc
(*buf„r, 
Àn
);

62 i‡(
NULL
 =*
buf„r
)

64  
ENOMEM
;

68 
	`mem£t
(*
buf„r
, 0, 
Àn
);

71 
	}
}

81 
ssize_t
 
	$nuŒ_åaûög_whôe•a˚
(* 
s
, 
ssize_t
 
Àn
)

83 
ssize_t
 
i
 = 
Àn
;

84 --
i
 != -1)

86 i‡(
	`is•a˚
(
s
[
i
]))

88 
s
[
i
] = '\0';

92  
i
 + 1;

97 
	}
}

107 c⁄° 
öt32_t
 
	gV0_ENCODING_COOKIE
 = 0x1c849308;

108 c⁄° 
öt32_t
 
	gV0_COMPRESSION_COOKIE
 = 0x1c849309;

110 c⁄° 
öt32_t
 
	gV1_ENCODING_COOKIE
 = 0x1c849301;

111 c⁄° 
öt32_t
 
	gV1_COMPRESSION_COOKIE
 = 0x1c849302;

113 c⁄° 
öt32_t
 
	gV2_ENCODING_COOKIE
 = 0x1c849303;

114 c⁄° 
öt32_t
 
	gV2_COMPRESSION_COOKIE
 = 0x1c849304;

116 
öt32_t
 
	$gë_cookõ_ba£
(
öt32_t
 
cookõ
)

118  (
cookõ
 & ~0xf0);

119 
	}
}

121 
öt32_t
 
	$w‹d_size_‰om_cookõ
(
öt32_t
 
cookõ
)

123  (
cookõ
 & 0xf0) >> 4;

124 
	}
}

126 c⁄° * 
	$hdr_°ªº‹
(
î∫um
)

128 
î∫um
)

130 
HDR_COMPRESSION_COOKIE_MISMATCH
:

132 
HDR_ENCODING_COOKIE_MISMATCH
:

134 
HDR_DEFLATE_INIT_FAIL
:

136 
HDR_DEFLATE_FAIL
:

138 
HDR_INFLATE_INIT_FAIL
:

140 
HDR_INFLATE_FAIL
:

142 
HDR_LOG_INVALID_VERSION
:

144 
HDR_TRAILING_ZEROS_INVALID
:

146 
HDR_VALUE_TRUNCATED
:

148 
HDR_ENCODED_INPUT_TOO_LONG
:

151  
	`°ªº‹
(
î∫um
);

153 
	}
}

155 
	$°rm_öô
(
z_°ªam
* 
°rm
)

157 
°rm
->
z‰ì
 = 
NULL
;

158 
°rm
->
zÆloc
 = 
NULL
;

159 
°rm
->
›aque
 = 
NULL
;

160 
°rm
->
√xt_ö
 = 
NULL
;

161 
°rm
->
avaû_ö
 = 0;

162 
	}
}

164 
	uuöt64_dbl_cvt


166 
uöt64_t
 
	ml
;

167 
	md
;

170 
	$öt64_bôs_to_doubÀ
(
öt64_t
 
i
)

172 
uöt64_dbl_cvt
 
x
;

174 
x
.
l
 = (
uöt64_t
Ë
i
;

175  
x
.
d
;

176 
	}
}

178 
uöt64_t
 
	$doubÀ_to_öt64_bôs
(
d
)

180 
uöt64_dbl_cvt
 
x
;

182 
x
.
d
 = d;

183  
x
.
l
;

184 
	}
}

186 #¥agm®
∑ck
(
push
, 1)

189 
öt32_t
 
	mcookõ
;

190 
öt32_t
 
	msignifiˇ¡_figuªs
;

191 
öt64_t
 
	mlowe°_åackabÀ_vÆue
;

192 
öt64_t
 
	mhighe°_åackabÀ_vÆue
;

193 
öt64_t
 
	mtŸÆ_cou¡
;

194 
öt64_t
 
	mcou¡s
[0];

195 } 
	t_ícodög_Êyweight_v0
;

199 
öt32_t
 
	mcookõ
;

200 
öt32_t
 
	m∑ylﬂd_Àn
;

201 
öt32_t
 
	mn‹mÆizög_ödex_off£t
;

202 
öt32_t
 
	msignifiˇ¡_figuªs
;

203 
öt64_t
 
	mlowe°_åackabÀ_vÆue
;

204 
öt64_t
 
	mhighe°_åackabÀ_vÆue
;

205 
uöt64_t
 
	mc⁄vîsi⁄_øtio_bôs
;

206 
uöt8_t
 
	mcou¡s
[0];

207 } 
	t_ícodög_Êyweight_v1
;

211 
öt32_t
 
	mcookõ
;

212 
öt32_t
 
	mÀngth
;

213 
uöt8_t
 
	md©a
[0];

214 } 
	t_com¥essi⁄_Êyweight
;

215 #¥agm®
∑ck
(
p›
)

217 
	$hdr_ícode_com¥es£d
(

218 
hdr_hi°ogøm
* 
h
,

219 
uöt8_t
** 
com¥es£d_hi°ogøm
,

220 
size_t
* 
com¥es£d_Àn
)

222 
_ícodög_Êyweight_v1
* 
ícoded
 = 
NULL
;

223 
_com¥essi⁄_Êyweight
* 
com¥es£d
 = 
NULL
;

224 
ªsu…
 = 0;

226 
öt32_t
 
Àn_to_max
 = 
	`cou¡s_ödex_f‹
(
h
, h->
max_vÆue
) + 1;

227 
öt32_t
 
cou¡s_limô
 = 
Àn_to_max
 < 
h
->
cou¡s_Àn
 ?Üen_to_max : h->counts_len;

229 c⁄° 
size_t
 
ícoded_Àn
 = (
_ícodög_Êyweight_v1
Ë+ 
MAX_BYTES_LEB128
 * (size_tË
cou¡s_limô
;

230 i‡((
ícoded
 = (
_ícodög_Êyweight_v1
*Ë
	`ˇŒoc
(
ícoded_Àn
, (
uöt8_t
))Ë=
NULL
)

232 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
ENOMEM
);

235 
d©a_ödex
 = 0;

236 
i
;

237 
i
 = 0; i < 
cou¡s_limô
;)

239 
öt64_t
 
vÆue
 = 
h
->
cou¡s
[
i
];

240 
i
++;

242 i‡(
vÆue
 == 0)

244 
öt32_t
 
zîos
 = 1;

246 
i
 < 
cou¡s_limô
 && 0 =
h
->
cou¡s
[i])

248 
zîos
++;

249 
i
++;

252 
d©a_ödex
 +
	`zig_zag_ícode_i64
(&
ícoded
->
cou¡s
[d©a_ödex], -
zîos
);

256 
d©a_ödex
 +
	`zig_zag_ícode_i64
(&
ícoded
->
cou¡s
[d©a_ödex], 
vÆue
);

260 
öt32_t
 
∑ylﬂd_Àn
 = 
d©a_ödex
;

261 
uL⁄g
 
ícoded_size
 = (
_ícodög_Êyweight_v1
Ë+ 
d©a_ödex
;

263 
ícoded
->
cookõ
 = 
	`htobe32
(
V2_ENCODING_COOKIE
 | 0x10);

264 
ícoded
->
∑ylﬂd_Àn
 = 
	`htobe32
(payload_len);

265 
ícoded
->
n‹mÆizög_ödex_off£t
 = 
	`htobe32
(
h
->normalizing_index_offset);

266 
ícoded
->
signifiˇ¡_figuªs
 = 
	`htobe32
(
h
->significant_figures);

267 
ícoded
->
lowe°_åackabÀ_vÆue
 = 
	`htobe64
(
h
->lowest_trackable_value);

268 
ícoded
->
highe°_åackabÀ_vÆue
 = 
	`htobe64
(
h
->highest_trackable_value);

269 
ícoded
->
c⁄vîsi⁄_øtio_bôs
 = 
	`htobe64
(
	`doubÀ_to_öt64_bôs
(
h
->
c⁄vîsi⁄_øtio
));

273 
uL⁄gf
 
de°Lí
 = 
	`com¥essBound
(
ícoded_size
);

274 
size_t
 
com¥es£d_size
 = (
_com¥essi⁄_Êyweight
Ë+ 
de°Lí
;

276 i‡((
com¥es£d
 = (
_com¥essi⁄_Êyweight
*Ë
	`mÆloc
(
com¥es£d_size
)Ë=
NULL
)

278 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
ENOMEM
);

281 i‡(
Z_OK
 !
	`com¥ess
(
com¥es£d
->
d©a
, &
de°Lí
, (
Byãf
*Ë
ícoded
, 
ícoded_size
))

283 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
HDR_DEFLATE_FAIL
);

286 
com¥es£d
->
cookõ
 = 
	`htobe32
(
V2_COMPRESSION_COOKIE
 | 0x10);

287 
com¥es£d
->
Àngth
 = 
	`htobe32
((
öt32_t
)
de°Lí
);

289 *
com¥es£d_hi°ogøm
 = (
uöt8_t
*Ë
com¥es£d
;

290 *
com¥es£d_Àn
 = (
_com¥essi⁄_Êyweight
Ë+ 
de°Lí
;

292 
˛ónup
:

293 
	`‰ì
(
ícoded
);

294 i‡(
ªsu…
 =
HDR_DEFLATE_FAIL
)

296 
	`‰ì
(
com¥es£d
);

299  
ªsu…
;

300 
	}
}

311 
hdr_ª£t_öã∫Æ_cou¡îs
(
hdr_hi°ogøm
* 
h
);

313 
	$_≠∂y_to_cou¡s_16
(
hdr_hi°ogøm
* 
h
, c⁄° 
öt16_t
* 
cou¡s_d©a
, c⁄° 
öt32_t
 
cou¡s_limô
)

315 
i
;

316 
i
 = 0; i < 
cou¡s_limô
; i++)

318 
h
->
cou¡s
[
i
] = 
	`be16toh
(
cou¡s_d©a
[i]);

320 
	}
}

322 
	$_≠∂y_to_cou¡s_32
(
hdr_hi°ogøm
* 
h
, c⁄° 
öt32_t
* 
cou¡s_d©a
, c⁄° i¡32_à
cou¡s_limô
)

324 
i
;

325 
i
 = 0; i < 
cou¡s_limô
; i++)

327 
h
->
cou¡s
[
i
] = 
	`be32toh
(
cou¡s_d©a
[i]);

329 
	}
}

331 
	$_≠∂y_to_cou¡s_64
(
hdr_hi°ogøm
* 
h
, c⁄° 
öt64_t
* 
cou¡s_d©a
, c⁄° 
öt32_t
 
cou¡s_limô
)

333 
i
;

334 
i
 = 0; i < 
cou¡s_limô
; i++)

336 
h
->
cou¡s
[
i
] = 
	`be64toh
(
cou¡s_d©a
[i]);

338 
	}
}

340 
	$_≠∂y_to_cou¡s_zz
(
hdr_hi°ogøm
* 
h
, c⁄° 
uöt8_t
* 
cou¡s_d©a
, c⁄° 
öt32_t
 
d©a_limô
)

342 
öt64_t
 
d©a_ödex
 = 0;

343 
öt32_t
 
cou¡s_ödex
 = 0;

344 
öt64_t
 
vÆue
;

346 
d©a_ödex
 < 
d©a_limô
 && 
cou¡s_ödex
 < 
h
->
cou¡s_Àn
)

348 
d©a_ödex
 +
	`zig_zag_decode_i64
(&
cou¡s_d©a
[d©a_ödex], &
vÆue
);

350 i‡(
vÆue
 < 0)

352 
öt64_t
 
zîos
 = -
vÆue
;

354 i‡(
vÆue
 <
INT32_MIN
 || 
cou¡s_ödex
 + 
zîos
 > 
h
->
cou¡s_Àn
)

356  
HDR_TRAILING_ZEROS_INVALID
;

359 
cou¡s_ödex
 +(
öt32_t
Ë
zîos
;

363 
h
->
cou¡s
[
cou¡s_ödex
] = 
vÆue
;

364 
cou¡s_ödex
++;

368 i‡(
d©a_ödex
 > 
d©a_limô
)

370  
HDR_VALUE_TRUNCATED
;

372 i‡(
d©a_ödex
 < 
d©a_limô
)

374  
HDR_ENCODED_INPUT_TOO_LONG
;

378 
	}
}

380 
	$_≠∂y_to_cou¡s
(

381 
hdr_hi°ogøm
* 
h
, c⁄° 
öt32_t
 
w‹d_size
, c⁄° 
uöt8_t
* 
cou¡s_d©a
, c⁄° i¡32_à
cou¡s_limô
)

383 
w‹d_size
)

386 
	`_≠∂y_to_cou¡s_16
(
h
, (
öt16_t
*Ë
cou¡s_d©a
, 
cou¡s_limô
);

390 
	`_≠∂y_to_cou¡s_32
(
h
, (
öt32_t
*Ë
cou¡s_d©a
, 
cou¡s_limô
);

394 
	`_≠∂y_to_cou¡s_64
(
h
, (
öt64_t
*Ë
cou¡s_d©a
, 
cou¡s_limô
);

398  
	`_≠∂y_to_cou¡s_zz
(
h
, 
cou¡s_d©a
, 
cou¡s_limô
);

403 
	}
}

405 
	$hdr_decode_com¥es£d_v0
(

406 
_com¥essi⁄_Êyweight
* 
com¥essi⁄_Êyweight
,

407 
size_t
 
Àngth
,

408 
hdr_hi°ogøm
** 
hi°ogøm
)

410 
hdr_hi°ogøm
* 
h
 = 
NULL
;

411 
ªsu…
 = 0;

412 
uöt8_t
* 
cou¡s_¨øy
 = 
NULL
;

413 
_ícodög_Êyweight_v0
 
ícodög_Êyweight
;

414 
z_°ªam
 
°rm
;

416 
	`°rm_öô
(&
°rm
);

417 i‡(
	`öÊ©eInô
(&
°rm
Ë!
Z_OK
)

419 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
HDR_INFLATE_FAIL
);

422 
öt32_t
 
com¥es£d_Àngth
 = 
	`be32toh
(
com¥essi⁄_Êyweight
->
Àngth
);

424 i‡(
com¥es£d_Àngth
 < 0 || 
Àngth
 - (
_com¥essi⁄_Êyweight
Ë< (
size_t
)compressed_length)

426 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
EINVAL
);

429 
°rm
.
√xt_ö
 = 
com¥essi⁄_Êyweight
->
d©a
;

430 
°rm
.
avaû_ö
 = (
uI¡
Ë
com¥es£d_Àngth
;

431 
°rm
.
√xt_out
 = (
uöt8_t
 *Ë&
ícodög_Êyweight
;

432 
°rm
.
avaû_out
 = (
_ícodög_Êyweight_v0
);

434 i‡(
	`öÊ©e
(&
°rm
, 
Z_SYNC_FLUSH
Ë!
Z_OK
)

436 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
HDR_INFLATE_FAIL
);

439 
öt32_t
 
ícodög_cookõ
 = 
	`gë_cookõ_ba£
(
	`be32toh
(
ícodög_Êyweight
.
cookõ
));

440 i‡(
V0_ENCODING_COOKIE
 !
ícodög_cookõ
)

442 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
HDR_ENCODING_COOKIE_MISMATCH
);

445 
öt32_t
 
w‹d_size
 = 
	`w‹d_size_‰om_cookõ
(
	`be32toh
(
ícodög_Êyweight
.
cookõ
));

446 
öt64_t
 
lowe°_åackabÀ_vÆue
 = 
	`be64toh
(
ícodög_Êyweight
.lowest_trackable_value);

447 
öt64_t
 
highe°_åackabÀ_vÆue
 = 
	`be64toh
(
ícodög_Êyweight
.highest_trackable_value);

448 
öt32_t
 
signifiˇ¡_figuªs
 = 
	`be32toh
(
ícodög_Êyweight
.significant_figures);

450 i‡(
	`hdr_öô
(

451 
lowe°_åackabÀ_vÆue
,

452 
highe°_åackabÀ_vÆue
,

453 
signifiˇ¡_figuªs
,

454 &
h
) != 0)

456 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
ENOMEM
);

459 
öt32_t
 
cou¡s_¨øy_Àn
 = 
h
->
cou¡s_Àn
 * 
w‹d_size
;

460 i‡((
cou¡s_¨øy
 = 
	`ˇŒoc
(1, (
size_t
Ë
cou¡s_¨øy_Àn
)Ë=
NULL
)

462 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
ENOMEM
);

465 
°rm
.
√xt_out
 = 
cou¡s_¨øy
;

466 
°rm
.
avaû_out
 = (
uI¡
Ë
cou¡s_¨øy_Àn
;

468 i‡(
	`öÊ©e
(&
°rm
, 
Z_FINISH
Ë!
Z_STREAM_END
)

470 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
HDR_INFLATE_FAIL
);

473 
	`_≠∂y_to_cou¡s
(
h
, 
w‹d_size
, 
cou¡s_¨øy
, h->
cou¡s_Àn
);

475 
	`hdr_ª£t_öã∫Æ_cou¡îs
(
h
);

476 
h
->
n‹mÆizög_ödex_off£t
 = 0;

477 
h
->
c⁄vîsi⁄_øtio
 = 1.0;

479 
˛ónup
:

480 ()
	`öÊ©eEnd
(&
°rm
);

481 
	`‰ì
(
cou¡s_¨øy
);

483 i‡(
ªsu…
 != 0)

485 
	`‰ì
(
h
);

487 i‡(
NULL
 =*
hi°ogøm
)

489 *
hi°ogøm
 = 
h
;

493 
	`hdr_add
(*
hi°ogøm
, 
h
);

494 
	`‰ì
(
h
);

497  
ªsu…
;

498 
	}
}

500 
	$hdr_decode_com¥es£d_v1
(

501 
_com¥essi⁄_Êyweight
* 
com¥essi⁄_Êyweight
,

502 
size_t
 
Àngth
,

503 
hdr_hi°ogøm
** 
hi°ogøm
)

505 
hdr_hi°ogøm
* 
h
 = 
NULL
;

506 
ªsu…
 = 0;

507 
uöt8_t
* 
cou¡s_¨øy
 = 
NULL
;

508 
_ícodög_Êyweight_v1
 
ícodög_Êyweight
;

509 
z_°ªam
 
°rm
;

511 
	`°rm_öô
(&
°rm
);

512 i‡(
	`öÊ©eInô
(&
°rm
Ë!
Z_OK
)

514 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
HDR_INFLATE_FAIL
);

517 
öt32_t
 
com¥es£d_Àngth
 = 
	`be32toh
(
com¥essi⁄_Êyweight
->
Àngth
);

519 i‡(
com¥es£d_Àngth
 < 0 || 
Àngth
 - (
_com¥essi⁄_Êyweight
Ë< (
size_t
)compressed_length)

521 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
EINVAL
);

524 
°rm
.
√xt_ö
 = 
com¥essi⁄_Êyweight
->
d©a
;

525 
°rm
.
avaû_ö
 = (
uI¡
Ë
com¥es£d_Àngth
;

526 
°rm
.
√xt_out
 = (
uöt8_t
 *Ë&
ícodög_Êyweight
;

527 
°rm
.
avaû_out
 = (
_ícodög_Êyweight_v1
);

529 i‡(
	`öÊ©e
(&
°rm
, 
Z_SYNC_FLUSH
Ë!
Z_OK
)

531 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
HDR_INFLATE_FAIL
);

534 
öt32_t
 
ícodög_cookõ
 = 
	`gë_cookõ_ba£
(
	`be32toh
(
ícodög_Êyweight
.
cookõ
));

535 i‡(
V1_ENCODING_COOKIE
 !
ícodög_cookõ
)

537 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
HDR_ENCODING_COOKIE_MISMATCH
);

540 
öt32_t
 
w‹d_size
 = 
	`w‹d_size_‰om_cookõ
(
	`be32toh
(
ícodög_Êyweight
.
cookõ
));

541 
öt32_t
 
cou¡s_limô
 = 
	`be32toh
(
ícodög_Êyweight
.
∑ylﬂd_Àn
Ë/ 
w‹d_size
;

542 
öt64_t
 
lowe°_åackabÀ_vÆue
 = 
	`be64toh
(
ícodög_Êyweight
.lowest_trackable_value);

543 
öt64_t
 
highe°_åackabÀ_vÆue
 = 
	`be64toh
(
ícodög_Êyweight
.highest_trackable_value);

544 
öt32_t
 
signifiˇ¡_figuªs
 = 
	`be32toh
(
ícodög_Êyweight
.significant_figures);

546 i‡(
	`hdr_öô
(

547 
lowe°_åackabÀ_vÆue
,

548 
highe°_åackabÀ_vÆue
,

549 
signifiˇ¡_figuªs
,

550 &
h
) != 0)

552 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
ENOMEM
);

556 
öt32_t
 
cou¡s_¨øy_Àn
 = 
cou¡s_limô
 * 
w‹d_size
;

558 i‡((
cou¡s_¨øy
 = 
	`ˇŒoc
(1, (
size_t
Ë
cou¡s_¨øy_Àn
)Ë=
NULL
)

560 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
ENOMEM
);

563 
°rm
.
√xt_out
 = 
cou¡s_¨øy
;

564 
°rm
.
avaû_out
 = (
uI¡
Ë
cou¡s_¨øy_Àn
;

566 i‡(
	`öÊ©e
(&
°rm
, 
Z_FINISH
Ë!
Z_STREAM_END
)

568 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
HDR_INFLATE_FAIL
);

571 
	`_≠∂y_to_cou¡s
(
h
, 
w‹d_size
, 
cou¡s_¨øy
, 
cou¡s_limô
);

573 
h
->
n‹mÆizög_ödex_off£t
 = 
	`be32toh
(
ícodög_Êyweight
.normalizing_index_offset);

574 
h
->
c⁄vîsi⁄_øtio
 = 
	`öt64_bôs_to_doubÀ
(
	`be64toh
(
ícodög_Êyweight
.
c⁄vîsi⁄_øtio_bôs
));

575 
	`hdr_ª£t_öã∫Æ_cou¡îs
(
h
);

577 
˛ónup
:

578 ()
	`öÊ©eEnd
(&
°rm
);

579 
	`‰ì
(
cou¡s_¨øy
);

581 i‡(
ªsu…
 != 0)

583 
	`‰ì
(
h
);

585 i‡(
NULL
 =*
hi°ogøm
)

587 *
hi°ogøm
 = 
h
;

591 
	`hdr_add
(*
hi°ogøm
, 
h
);

592 
	`‰ì
(
h
);

595  
ªsu…
;

596 
	}
}

598 
	$hdr_decode_com¥es£d_v2
(

599 
_com¥essi⁄_Êyweight
* 
com¥essi⁄_Êyweight
,

600 
size_t
 
Àngth
,

601 
hdr_hi°ogøm
** 
hi°ogøm
)

603 
hdr_hi°ogøm
* 
h
 = 
NULL
;

604 
ªsu…
 = 0;

605 
uöt8_t
* 
cou¡s_¨øy
 = 
NULL
;

606 
_ícodög_Êyweight_v1
 
ícodög_Êyweight
;

607 
z_°ªam
 
°rm
;

609 
	`°rm_öô
(&
°rm
);

610 i‡(
	`öÊ©eInô
(&
°rm
Ë!
Z_OK
)

612 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
HDR_INFLATE_FAIL
);

615 
öt32_t
 
com¥es£d_Àngth
 = 
	`be32toh
(
com¥essi⁄_Êyweight
->
Àngth
);

617 i‡(
com¥es£d_Àngth
 < 0 || 
Àngth
 - (
_com¥essi⁄_Êyweight
Ë< (
size_t
)compressed_length)

619 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
EINVAL
);

622 
°rm
.
√xt_ö
 = 
com¥essi⁄_Êyweight
->
d©a
;

623 
°rm
.
avaû_ö
 = (
uI¡
Ë
com¥es£d_Àngth
;

624 
°rm
.
√xt_out
 = (
uöt8_t
 *Ë&
ícodög_Êyweight
;

625 
°rm
.
avaû_out
 = (
_ícodög_Êyweight_v1
);

627 i‡(
	`öÊ©e
(&
°rm
, 
Z_SYNC_FLUSH
Ë!
Z_OK
)

629 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
HDR_INFLATE_FAIL
);

632 
öt32_t
 
ícodög_cookõ
 = 
	`gë_cookõ_ba£
(
	`be32toh
(
ícodög_Êyweight
.
cookõ
));

633 i‡(
V2_ENCODING_COOKIE
 !
ícodög_cookõ
)

635 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
HDR_ENCODING_COOKIE_MISMATCH
);

638 
öt32_t
 
cou¡s_limô
 = 
	`be32toh
(
ícodög_Êyweight
.
∑ylﬂd_Àn
);

639 
öt64_t
 
lowe°_åackabÀ_vÆue
 = 
	`be64toh
(
ícodög_Êyweight
.lowest_trackable_value);

640 
öt64_t
 
highe°_åackabÀ_vÆue
 = 
	`be64toh
(
ícodög_Êyweight
.highest_trackable_value);

641 
öt32_t
 
signifiˇ¡_figuªs
 = 
	`be32toh
(
ícodög_Êyweight
.significant_figures);

643 i‡(
	`hdr_öô
(

644 
lowe°_åackabÀ_vÆue
,

645 
highe°_åackabÀ_vÆue
,

646 
signifiˇ¡_figuªs
,

647 &
h
) != 0)

649 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
ENOMEM
);

655 i‡((
cou¡s_¨øy
 = 
	`ˇŒoc
(1, (
size_t
Ë
cou¡s_limô
 + 9)Ë=
NULL
)

657 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
ENOMEM
);

660 
°rm
.
√xt_out
 = 
cou¡s_¨øy
;

661 
°rm
.
avaû_out
 = (
uI¡
Ë
cou¡s_limô
;

663 i‡(
	`öÊ©e
(&
°rm
, 
Z_FINISH
Ë!
Z_STREAM_END
)

665 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
HDR_INFLATE_FAIL
);

668 
r
 = 
	`_≠∂y_to_cou¡s_zz
(
h
, 
cou¡s_¨øy
, 
cou¡s_limô
);

669 i‡(0 !
r
)

671 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
r
);

674 
h
->
n‹mÆizög_ödex_off£t
 = 
	`be32toh
(
ícodög_Êyweight
.normalizing_index_offset);

675 
h
->
c⁄vîsi⁄_øtio
 = 
	`öt64_bôs_to_doubÀ
(
	`be64toh
(
ícodög_Êyweight
.
c⁄vîsi⁄_øtio_bôs
));

676 
	`hdr_ª£t_öã∫Æ_cou¡îs
(
h
);

678 
˛ónup
:

679 ()
	`öÊ©eEnd
(&
°rm
);

680 
	`‰ì
(
cou¡s_¨øy
);

682 i‡(
ªsu…
 != 0)

684 
	`‰ì
(
h
);

686 i‡(
NULL
 =*
hi°ogøm
)

688 *
hi°ogøm
 = 
h
;

692 
	`hdr_add
(*
hi°ogøm
, 
h
);

693 
	`‰ì
(
h
);

696  
ªsu…
;

697 
	}
}

699 
	$hdr_decode_com¥es£d
(

700 
uöt8_t
* 
buf„r
, 
size_t
 
Àngth
, 
hdr_hi°ogøm
** 
hi°ogøm
)

702 i‡(
Àngth
 < (
_com¥essi⁄_Êyweight
))

704  
EINVAL
;

707 
_com¥essi⁄_Êyweight
* 
com¥essi⁄_Êyweight
 = (_com¥essi⁄_Êyweight*Ë
buf„r
;

709 
öt32_t
 
com¥essi⁄_cookõ
 = 
	`gë_cookõ_ba£
(
	`be32toh
(
com¥essi⁄_Êyweight
->
cookõ
));

710 i‡(
V0_COMPRESSION_COOKIE
 =
com¥essi⁄_cookõ
)

712  
	`hdr_decode_com¥es£d_v0
(
com¥essi⁄_Êyweight
, 
Àngth
, 
hi°ogøm
);

714 i‡(
V1_COMPRESSION_COOKIE
 =
com¥essi⁄_cookõ
)

716  
	`hdr_decode_com¥es£d_v1
(
com¥essi⁄_Êyweight
, 
Àngth
, 
hi°ogøm
);

718 i‡(
V2_COMPRESSION_COOKIE
 =
com¥essi⁄_cookõ
)

720  
	`hdr_decode_com¥es£d_v2
(
com¥essi⁄_Êyweight
, 
Àngth
, 
hi°ogøm
);

723  
HDR_COMPRESSION_COOKIE_MISMATCH
;

724 
	}
}

734 
	$hdr_log_wrôî_öô
(
hdr_log_wrôî
* 
wrôî
)

736 ()
wrôî
;

738 
	}
}

740 
	#LOG_VERSION
 "1.2"

	)

741 
	#LOG_MAJOR_VERSION
 1

	)

743 
	$¥öt_u£r_¥efix
(
FILE
* 
f
, c⁄° * 
¥efix
)

745 i‡(!
¥efix
)

750  
	`Ârötf
(
f
, "#[%s]\n", 
¥efix
);

751 
	}
}

753 
	$¥öt_vîsi⁄
(
FILE
* 
f
, c⁄° * 
vîsi⁄
)

755  
	`Ârötf
(
f
, "#[Hi°ogømÜog f‹m© vîsi⁄ %s]\n", 
vîsi⁄
);

756 
	}
}

758 
	$¥öt_time
(
FILE
* 
f
, 
hdr_time•ec
* 
time°amp
)

760 
time_°r
[128];

761 
tm
 
d©e_time
;

763 i‡(!
time°amp
)

768 #i‡
	`deföed
(
__WINDOWS__
)

769 
	`_gmtime32_s
(&
d©e_time
, &
time°amp
->
tv_£c
);

771 
	`gmtime_r
(&
time°amp
->
tv_£c
, &
d©e_time
);

773 
ms
 = 
time°amp
->
tv_n£c
 / 1000000;

774 
	`°r·ime
(
time_°r
, 128, "%®%b %X %Z %Y", &
d©e_time
);

776  
	`Ârötf
(

777 
f
, "#[StartTime: %d.%ld (seconds sinceÉpoch), %s]\n",

778 (Ë
time°amp
->
tv_£c
, 
ms
, 
time_°r
);

779 
	}
}

781 
	$¥öt_hódî
(
FILE
* 
f
)

783  
	`Ârötf
(
f
, "\"StartTimestamp\",\"EndTimestamp\",\"Interval_Max\",\"Interval_Compressed_Histogram\"\n");

784 
	}
}

791 
	$hdr_log_wrôe_hódî
(

792 
hdr_log_wrôî
* 
wrôî
, 
FILE
* 
fûe
,

793 c⁄° * 
u£r_¥efix
, 
hdr_time•ec
* 
time°amp
)

795 ()
wrôî
;

797 i‡(
	`¥öt_u£r_¥efix
(
fûe
, 
u£r_¥efix
) < 0)

799  
EIO
;

801 i‡(
	`¥öt_vîsi⁄
(
fûe
, 
LOG_VERSION
) < 0)

803  
EIO
;

805 i‡(
	`¥öt_time
(
fûe
, 
time°amp
) < 0)

807  
EIO
;

809 i‡(
	`¥öt_hódî
(
fûe
) < 0)

811  
EIO
;

815 
	}
}

817 
	$hdr_log_wrôe
(

818 
hdr_log_wrôî
* 
wrôî
,

819 
FILE
* 
fûe
,

820 c⁄° 
hdr_time•ec
* 
°¨t_time°amp
,

821 c⁄° 
hdr_time•ec
* 
íd_time°amp
,

822 
hdr_hi°ogøm
* 
hi°ogøm
)

824 
uöt8_t
* 
com¥es£d_hi°ogøm
 = 
NULL
;

825 
size_t
 
com¥es£d_Àn
 = 0;

826 * 
ícoded_hi°ogøm
 = 
NULL
;

827 
rc
 = 0;

828 
ªsu…
 = 0;

829 
size_t
 
ícoded_Àn
;

831 ()
wrôî
;

833 
rc
 = 
	`hdr_ícode_com¥es£d
(
hi°ogøm
, &
com¥es£d_hi°ogøm
, &
com¥es£d_Àn
);

834 i‡(
rc
 != 0)

836 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
rc
);

839 
ícoded_Àn
 = 
	`hdr_ba£64_ícoded_Àn
(
com¥es£d_Àn
);

840 
ícoded_hi°ogøm
 = 
	`ˇŒoc
(
ícoded_Àn
 + 1, ());

842 
rc
 = 
	`hdr_ba£64_ícode
(

843 
com¥es£d_hi°ogøm
, 
com¥es£d_Àn
, 
ícoded_hi°ogøm
, 
ícoded_Àn
);

844 i‡(
rc
 != 0)

846 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
rc
);

849 i‡(
	`Ârötf
(

850 
fûe
, "%d.%d,%d.%d,%"
PRIu64
".0,%s\n",

851 (Ë
°¨t_time°amp
->
tv_£c
, (Ë(°¨t_time°amp->
tv_n£c
 / 1000000),

852 (Ë
íd_time°amp
->
tv_£c
, (Ë”nd_time°amp->
tv_n£c
 / 1000000),

853 
	`hdr_max
(
hi°ogøm
),

854 
ícoded_hi°ogøm
) < 0)

856 
ªsu…
 = 
EIO
;

859 
˛ónup
:

860 
	`‰ì
(
com¥es£d_hi°ogøm
);

861 
	`‰ì
(
ícoded_hi°ogøm
);

863  
ªsu…
;

864 
	}
}

874 
	$hdr_log_ªadî_öô
(
hdr_log_ªadî
* 
ªadî
)

876 
ªadî
->
maj‹_vîsi⁄
 = 0;

877 
ªadî
->
mö‹_vîsi⁄
 = 0;

878 
ªadî
->
°¨t_time°amp
.
tv_£c
 = 0;

879 
ªadî
->
°¨t_time°amp
.
tv_n£c
 = 0;

882 
	}
}

884 
	$sˇn_log_f‹m©
(
hdr_log_ªadî
* 
ªadî
, c⁄° * 
löe
)

886 c⁄° * 
f‹m©
 = "#[HistogramÜog format version %d.%d]";

887 
	`ssˇnf
(
löe
, 
f‹m©
, &
ªadî
->
maj‹_vîsi⁄
, &ªadî->
mö‹_vîsi⁄
);

888 
	}
}

890 
	$sˇn_°¨t_time
(
hdr_log_ªadî
* 
ªadî
, c⁄° * 
löe
)

892 c⁄° * 
f‹m©
 = "#[StartTime: %d.%d [^\n]";

893 
time°amp_s
 = 0;

894 
åaûög_ms
 = 0;

896 i‡(
	`ssˇnf
(
löe
, 
f‹m©
, &
time°amp_s
, &
åaûög_ms
) == 2)

898 
ªadî
->
°¨t_time°amp
.
tv_£c
 = 
time°amp_s
;

899 
ªadî
->
°¨t_time°amp
.
tv_n£c
 = 
åaûög_ms
 * 1000000;

901 
	}
}

903 
	$sˇn_hódî_löe
(
hdr_log_ªadî
* 
ªadî
, c⁄° * 
löe
)

905 
	`sˇn_log_f‹m©
(
ªadî
, 
löe
);

906 
	`sˇn_°¨t_time
(
ªadî
, 
löe
);

907 
	}
}

909 
boﬁ
 
	$vÆid©e_log_vîsi⁄
(
hdr_log_ªadî
* 
ªadî
)

911  
ªadî
->
maj‹_vîsi⁄
 =
LOG_MAJOR_VERSION
 &&

912 (
ªadî
->
mö‹_vîsi⁄
 == 0 ||Ñeader->minor_version == 1 ||Ñeader->minor_version == 2);

913 
	}
}

915 
	#HEADER_LINE_LENGTH
 128

	)

917 
	$hdr_log_ªad_hódî
(
hdr_log_ªadî
* 
ªadî
, 
FILE
* 
fûe
)

919 
löe
[
HEADER_LINE_LENGTH
];

921 
boﬁ
 
∑rsög_hódî
 = 
åue
;

925 
c
 = 
	`fgëc
(
fûe
);

926 
	`ungëc
(
c
, 
fûe
);

928 
c
)

932 i‡(
	`fgës
(
löe
, 
HEADER_LINE_LENGTH
, 
fûe
Ë=
NULL
)

934  
EIO
;

937 
	`sˇn_hódî_löe
(
ªadî
, 
löe
);

941 i‡(
	`fgës
(
löe
, 
HEADER_LINE_LENGTH
, 
fûe
Ë=
NULL
)

943  
EIO
;

946 
∑rsög_hódî
 = 
Ál£
;

950 
∑rsög_hódî
 = 
Ál£
;

953 
∑rsög_hódî
);

955 i‡(!
	`vÆid©e_log_vîsi⁄
(
ªadî
))

957  
HDR_LOG_INVALID_VERSION
;

961 
	}
}

963 
	$upd©e_time•ec
(
hdr_time•ec
* 
ts
, 
time_s
, 
time_ms
)

965 i‡(
NULL
 =
ts
)

970 
ts
->
tv_£c
 = 
time_s
;

971 
ts
->
tv_n£c
 = 
time_ms
 * 1000000;

972 
	}
}

974 #i‡
deföed
(
_MSC_VER
)

976 
ssize_t
 
	$hdr_ªad_chunk
(* 
buf„r
, 
size_t
 
Àngth
, 
ãrmö©‹
, 
FILE
* 
°ªam
)

978 i‡(
buf„r
 =
NULL
 || 
Àngth
 == 0)

983 
size_t
 
i
 = 0; i < 
Àngth
; ++i)

985 
c
 = 
	`fgëc
(
°ªam
);

986 
buf„r
[
i
] = ()
c
;

987 i‡(
c
 =(Ë'\0' || c =(Ë
ãrmö©‹
 || c =
EOF
)

989 
buf„r
[
i
] = '\0';

990  
i
;

994  
Àngth
;

995 
	}
}

998 
ssize_t
 
	$hdr_gëlöe
(** 
löïå
, 
FILE
* 
°ªam
)

1000 i‡(
°ªam
 =
NULL
)

1005 
size_t
 
Æloˇti⁄
 = 128;

1006 
size_t
 
u£d
 = 0;

1008 * 
s¸©ch
 = 
NULL
;

1011 
Æloˇti⁄
 +=állocation;

1013 * 
bef‹e
 = 
s¸©ch
;

1014 
s¸©ch
 = 
	`ªÆloc
(s¸©ch, 
Æloˇti⁄
);

1015 i‡(
s¸©ch
 =
NULL
)

1017 i‡(
bef‹e
)

1019 
	`‰ì
(
bef‹e
);

1024 
size_t
 
w™ãd
 = 
Æloˇti⁄
 - 
u£d
 - 1;

1025 
size_t
 
ªad_Àngth
 = 
	`hdr_ªad_chunk
(
s¸©ch
 + 
u£d
, 
w™ãd
, '\n', 
°ªam
);

1026 
u£d
 +
ªad_Àngth
;

1029 i‡(
ªad_Àngth
 < 
w™ãd
 || 
s¸©ch
[
u£d
 - 1] == '\n' || scratch[used - 1] == '\0')

1031 
s¸©ch
[
u£d
] = '\0';

1032 *
löïå
 = 
s¸©ch
;

1033  
u£d
;

1036 
	}
}

1039 
ssize_t
 
	$hdr_gëlöe
(** 
löïå
, 
FILE
* 
°ªam
)

1041 
size_t
 
löe_Àngth
 = 0;

1042  
	`gëlöe
(
löïå
, &
löe_Àngth
, 
°ªam
);

1043 
	}
}

1046 
	$hdr_log_ªad
(

1047 
hdr_log_ªadî
* 
ªadî
, 
FILE
* 
fûe
, 
hdr_hi°ogøm
** 
hi°ogøm
,

1048 
hdr_time•ec
* 
time°amp
, hdr_time•ec* 
öãrvÆ
)

1050 c⁄° * 
f‹m©
 = "%d.%d,%d.%d,%d.%d,%s";

1051 * 
ba£64_hi°ogøm
 = 
NULL
;

1052 
uöt8_t
* 
com¥es£d_hi°ogøm
 = 
NULL
;

1053 * 
löe
 = 
NULL
;

1054 
ªsu…
 = 0;

1056 
begö_s
 = 0;

1057 
begö_ms
 = 0;

1058 
íd_s
 = 0;

1059 
íd_ms
 = 0;

1060 
öãrvÆ_max_s
 = 0;

1061 
öãrvÆ_max_ms
 = 0;

1063 ()
ªadî
;

1065 
ssize_t
 
ªad
 = 
	`hdr_gëlöe
(&
löe
, 
fûe
);

1066 i‡(-1 =
ªad
)

1068 i‡(0 =
î∫o
)

1070 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
EOF
);

1074 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
EIO
);

1078 
	`nuŒ_åaûög_whôe•a˚
(
löe
, 
ªad
);

1079 i‡(
	`°æí
(
löe
) == 0)

1081 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
EOF
);

1084 
r
;

1085 
r
 = 
	`ªÆloc_buf„r
((**)&
ba£64_hi°ogøm
, (), 
ªad
);

1086 i‡(
r
 != 0)

1088 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
ENOMEM
);

1091 
r
 = 
	`ªÆloc_buf„r
((**)&
com¥es£d_hi°ogøm
, (
uöt8_t
), 
ªad
);

1092 i‡(
r
 != 0)

1094 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
ENOMEM
);

1097 
num_tokís
 = 
	`ssˇnf
(

1098 
löe
, 
f‹m©
, &
begö_s
, &
begö_ms
, &
íd_s
, &
íd_ms
,

1099 &
öãrvÆ_max_s
, &
öãrvÆ_max_ms
, 
ba£64_hi°ogøm
);

1101 i‡(
num_tokís
 != 7)

1103 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
EINVAL
);

1106 
size_t
 
ba£64_Àn
 = 
	`°æí
(
ba£64_hi°ogøm
);

1107 
size_t
 
com¥es£d_Àn
 = 
	`hdr_ba£64_decoded_Àn
(
ba£64_Àn
);

1109 
r
 = 
	`hdr_ba£64_decode
(

1110 
ba£64_hi°ogøm
, 
ba£64_Àn
, 
com¥es£d_hi°ogøm
, 
com¥es£d_Àn
);

1112 i‡(
r
 != 0)

1114 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
r
);

1117 
r
 = 
	`hdr_decode_com¥es£d
(
com¥es£d_hi°ogøm
, 
com¥es£d_Àn
, 
hi°ogøm
);

1118 i‡(
r
 != 0)

1120 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
r
);

1123 
	`upd©e_time•ec
(
time°amp
, 
begö_s
, 
begö_ms
);

1124 
	`upd©e_time•ec
(
öãrvÆ
, 
íd_s
, 
íd_ms
);

1126 
˛ónup
:

1127 
	`‰ì
(
löe
);

1128 
	`‰ì
(
ba£64_hi°ogøm
);

1129 
	`‰ì
(
com¥es£d_hi°ogøm
);

1131  
ªsu…
;

1132 
	}
}

1134 
	$hdr_log_ícode
(
hdr_hi°ogøm
* 
hi°ogøm
, ** 
ícoded_hi°ogøm
)

1136 *
ícoded_hi°ogøm_tmp
 = 
NULL
;

1137 
uöt8_t
* 
com¥es£d_hi°ogøm
 = 
NULL
;

1138 
size_t
 
com¥es£d_Àn
 = 0;

1139 
rc
 = 0;

1140 
ªsu…
 = 0;

1141 
size_t
 
ícoded_Àn
;

1143 
rc
 = 
	`hdr_ícode_com¥es£d
(
hi°ogøm
, &
com¥es£d_hi°ogøm
, &
com¥es£d_Àn
);

1144 i‡(
rc
 != 0)

1146 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
rc
);

1149 
ícoded_Àn
 = 
	`hdr_ba£64_ícoded_Àn
(
com¥es£d_Àn
);

1150 
ícoded_hi°ogøm_tmp
 = 
	`ˇŒoc
(
ícoded_Àn
 + 1, ());

1152 
rc
 = 
	`hdr_ba£64_ícode
(

1153 
com¥es£d_hi°ogøm
, 
com¥es£d_Àn
, 
ícoded_hi°ogøm_tmp
, 
ícoded_Àn
);

1154 i‡(
rc
 != 0)

1156 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
rc
);

1159 *
ícoded_hi°ogøm
 = 
ícoded_hi°ogøm_tmp
;

1161 
˛ónup
:

1162 
	`‰ì
(
com¥es£d_hi°ogøm
);

1164  
ªsu…
;

1165 
	}
}

1167 
	$hdr_log_decode
(
hdr_hi°ogøm
** 
hi°ogøm
, * 
ba£64_hi°ogøm
, 
size_t
 
ba£64_Àn
)

1169 
r
;

1170 
uöt8_t
* 
com¥es£d_hi°ogøm
 = 
NULL
;

1171 
ªsu…
 = 0;

1173 
size_t
 
com¥es£d_Àn
 = 
	`hdr_ba£64_decoded_Àn
(
ba£64_Àn
);

1174 
com¥es£d_hi°ogøm
 = 
	`mÆloc
((
uöt8_t
)*
com¥es£d_Àn
);

1175 
	`mem£t
(
com¥es£d_hi°ogøm
, 0, 
com¥es£d_Àn
);

1177 
r
 = 
	`hdr_ba£64_decode
(

1178 
ba£64_hi°ogøm
, 
ba£64_Àn
, 
com¥es£d_hi°ogøm
, 
com¥es£d_Àn
);

1180 i‡(
r
 != 0)

1182 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
r
);

1185 
r
 = 
	`hdr_decode_com¥es£d
(
com¥es£d_hi°ogøm
, 
com¥es£d_Àn
, 
hi°ogøm
);

1186 i‡(
r
 != 0)

1188 
	`FAIL_AND_CLEANUP
(
˛ónup
, 
ªsu…
, 
r
);

1191 
˛ónup
:

1192 
	`‰ì
(
com¥es£d_hi°ogøm
);

1194  
ªsu…
;

1195 
	}
}

1197 #i‡
deföed
(
_MSC_VER
)

1198 #¥agm®
w¨nög
(
p›
)

	@src/hdr_histogram/hdr_histogram_log.h

10 #i‚de‡
HDR_HISTOGRAM_H_LOG


11 
	#HDR_HISTOGRAM_H_LOG
 1

	)

13 
	#HDR_COMPRESSION_COOKIE_MISMATCH
 -29999

	)

14 
	#HDR_ENCODING_COOKIE_MISMATCH
 -29998

	)

15 
	#HDR_DEFLATE_INIT_FAIL
 -29997

	)

16 
	#HDR_DEFLATE_FAIL
 -29996

	)

17 
	#HDR_INFLATE_INIT_FAIL
 -29995

	)

18 
	#HDR_INFLATE_FAIL
 -29994

	)

19 
	#HDR_LOG_INVALID_VERSION
 -29993

	)

20 
	#HDR_TRAILING_ZEROS_INVALID
 -29992

	)

21 
	#HDR_VALUE_TRUNCATED
 -29991

	)

22 
	#HDR_ENCODED_INPUT_TOO_LONG
 -29990

	)

24 
	~<°döt.h
>

25 
	~<°dboﬁ.h
>

26 
	~<°dio.h
>

28 
	~"hdr_time.h
"

29 
	~"hdr_hi°ogøm.h
"

31 #ifde‡
__˝lu•lus


38 
hdr_log_ícode
(
hdr_hi°ogøm
* 
hi°ogøm
, ** 
ícoded_hi°ogøm
);

43 
hdr_log_decode
(
hdr_hi°ogøm
** 
hi°ogøm
, * 
ba£64_hi°ogøm
, 
size_t
 
ba£64_Àn
);

45 
	shdr_log_wrôî


47 
uöt32_t
 
n⁄˚
;

56 
hdr_log_wrôî_öô
(
hdr_log_wrôî
* 
wrôî
);

69 
hdr_log_wrôe_hódî
(

70 
hdr_log_wrôî
* 
wrôî
,

71 
FILE
* 
fûe
,

72 c⁄° * 
u£r_¥efix
,

73 
hdr_time•ec
* 
time°amp
);

96 
hdr_log_wrôe
(

97 
hdr_log_wrôî
* 
wrôî
,

98 
FILE
* 
fûe
,

99 c⁄° 
hdr_time•ec
* 
°¨t_time°amp
,

100 c⁄° 
hdr_time•ec
* 
íd_time°amp
,

101 
hdr_hi°ogøm
* 
hi°ogøm
);

103 
	shdr_log_ªadî


105 
maj‹_vîsi⁄
;

106 
mö‹_vîsi⁄
;

107 
hdr_time•ec
 
°¨t_time°amp
;

116 
hdr_log_ªadî_öô
(
hdr_log_ªadî
* 
ªadî
);

126 
hdr_log_ªad_hódî
(
hdr_log_ªadî
* 
ªadî
, 
FILE
* 
fûe
);

150 
hdr_log_ªad
(

151 
hdr_log_ªadî
* 
ªadî
, 
FILE
* 
fûe
, 
hdr_hi°ogøm
** 
hi°ogøm
,

152 
hdr_time•ec
* 
time°amp
, hdr_time•ec* 
öãrvÆ
);

160 c⁄° * 
hdr_°ªº‹
(
î∫um
);

162 #ifde‡
__˝lu•lus


	@src/hdr_histogram/hdr_interval_recorder.c

7 
	~"hdr_©omic.h
"

8 
	~"hdr_öãrvÆ_ªc‹dî.h
"

10 
	$hdr_öãrvÆ_ªc‹dî_öô
(
hdr_öãrvÆ_ªc‹dî
* 
r
)

12  
	`hdr_wrôî_ªadî_pha£r_öô
(&
r
->
pha£r
);

13 
	}
}

15 
	$hdr_öãrvÆ_ªc‹dî_de°roy
(
hdr_öãrvÆ_ªc‹dî
* 
r
)

17 
	`hdr_wrôî_ªadî_pha£r_de°‹y
(&
r
->
pha£r
);

18 
	}
}

20 
hdr_öãrvÆ_ªc‹dî_upd©e
(

21 
hdr_öãrvÆ_ªc‹dî
* 
r
,

22 (*
upd©e_a˘i⁄
)(*, *),

23 * 
¨g
)

25 
öt64_t
 
vÆ
 = 
	`hdr_pha£r_wrôî_íãr
(&
r
->
pha£r
);

27 * 
a˘ive
 = 
	`hdr_©omic_lﬂd_poöãr
(&
r
->active);

29 
	`upd©e_a˘i⁄
(
a˘ive
, 
¨g
);

31 
	`hdr_pha£r_wrôî_exô
(&
r
->
pha£r
, 
vÆ
);

32 
	}
}

34 * 
	$hdr_öãrvÆ_ªc‹dî_ßm∂e
(
hdr_öãrvÆ_ªc‹dî
* 
r
)

36 * 
ãmp
;

38 
	`hdr_pha£r_ªadî_lock
(&
r
->
pha£r
);

40 
ãmp
 = 
r
->
öa˘ive
;

43 
r
->
öa˘ive
 = 
	`hdr_©omic_lﬂd_poöãr
(&r->
a˘ive
);

46 
	`hdr_©omic_°‹e_poöãr
(&
r
->
a˘ive
, 
ãmp
);

48 
	`hdr_pha£r_Êù_pha£
(&
r
->
pha£r
, 0);

50 
	`hdr_pha£r_ªadî_u∆ock
(&
r
->
pha£r
);

52  
r
->
öa˘ive
;

53 
	}
}

	@src/hdr_histogram/hdr_interval_recorder.h

7 #i‚de‡
HDR_INTERVAL_RECORDER_H


8 
	#HDR_INTERVAL_RECORDER_H
 1

	)

10 
	~"hdr_wrôî_ªadî_pha£r.h
"

12 
	$HDR_ALIGN_PREFIX
(8)

13 
	shdr_öãrvÆ_ªc‹dî


15 * 
a˘ive
;

16 * 
öa˘ive
;

17 
hdr_wrôî_ªadî_pha£r
 
pha£r
;

19 
	`HDR_ALIGN_SUFFIX
(8);

21 #ifde‡
__˝lu•lus


25 
	`hdr_öãrvÆ_ªc‹dî_öô
(
hdr_öãrvÆ_ªc‹dî
* 
r
);

27 
	`hdr_öãrvÆ_ªc‹dî_de°roy
(
hdr_öãrvÆ_ªc‹dî
* 
r
);

29 
	`hdr_öãrvÆ_ªc‹dî_upd©e
(

30 
hdr_öãrvÆ_ªc‹dî
* 
r
,

31 (*
upd©e_a˘i⁄
)(*, *),

32 * 
¨g
);

34 * 
	`hdr_öãrvÆ_ªc‹dî_ßm∂e
(
hdr_öãrvÆ_ªc‹dî
* 
r
);

36 #ifde‡
__˝lu•lus


37 
	}
}

	@src/hdr_histogram/hdr_tests.h

1 #i‚de‡
HDR_TESTS_H


2 
	#HDR_TESTS_H


	)

6 
	~"hdr_hi°ogøm.h
"

8 #ifde‡
__˝lu•lus


12 
hdr_ª£t_öã∫Æ_cou¡îs
(
hdr_hi°ogøm
* 
h
);

13 
öt32_t
 
cou¡s_ödex_f‹
(c⁄° 
hdr_hi°ogøm
* 
h
, 
öt64_t
 
vÆue
);

14 
hdr_ícode_com¥es£d
(
hdr_hi°ogøm
* 
h
, 
uöt8_t
** 
com¥es£d_hi°ogøm
, 
size_t
* 
com¥es£d_Àn
);

15 
hdr_decode_com¥es£d
(
uöt8_t
* 
buf„r
, 
size_t
 
Àngth
, 
hdr_hi°ogøm
** 
hi°ogøm
);

16 
hdr_ba£64_decode_block
(c⁄° * 
öput
, 
uöt8_t
* 
ouçut
);

17 
hdr_ba£64_ícode_block
(c⁄° 
uöt8_t
* 
öput
, * 
ouçut
);

19 #ifde‡
__˝lu•lus


	@src/hdr_histogram/hdr_thread.c

7 
	~<°dlib.h
>

8 
	~"hdr_thªad.h
"

10 
hdr_muãx
* 
	$hdr_muãx_Æloc
()

12  
	`mÆloc
((
hdr_muãx
));

13 
	}
}

15 
	$hdr_muãx_‰ì
(
hdr_muãx
* 
muãx
)

17 
	`‰ì
(
muãx
);

18 
	}
}

20 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN64
Ë|| deföed(
__CYGWIN__
)

22 #i‡!
deföed
(
WIN32_LEAN_AND_MEAN
)

23 
	#WIN32_LEAN_AND_MEAN


	)

26 
	~<wödows.h
>

28 
	$hdr_muãx_öô
(
hdr_muãx
* 
muãx
)

30 
	`InôülizeCrôiˇlSe˘i⁄
((
CRITICAL_SECTION
*)(
muãx
->
_¸ôiˇl_£˘i⁄
));

32 
	}
}

34 
	$hdr_muãx_de°roy
(
hdr_muãx
* 
muãx
)

36 
	`DñëeCrôiˇlSe˘i⁄
((
CRITICAL_SECTION
*)(
muãx
->
_¸ôiˇl_£˘i⁄
));

37 
	}
}

39 
	$hdr_muãx_lock
(
hdr_muãx
* 
muãx
)

41 
	`E¡îCrôiˇlSe˘i⁄
((
CRITICAL_SECTION
*)(
muãx
->
_¸ôiˇl_£˘i⁄
));

42 
	}
}

44 
	$hdr_muãx_u∆ock
(
hdr_muãx
* 
muãx
)

46 
	`LóveCrôiˇlSe˘i⁄
((
CRITICAL_SECTION
*)(
muãx
->
_¸ôiˇl_£˘i⁄
));

47 
	}
}

50 
	~<±hªad.h
>

52 
	$hdr_muãx_öô
(
hdr_muãx
* 
muãx
)

54  
	`±hªad_muãx_öô
(&
muãx
->
_muãx
, 
NULL
);

55 
	}
}

57 
	$hdr_muãx_de°roy
(
hdr_muãx
* 
muãx
)

59 
	`±hªad_muãx_de°roy
(&
muãx
->
_muãx
);

60 
	}
}

62 
	$hdr_muãx_lock
(
hdr_muãx
* 
muãx
)

64 
	`±hªad_muãx_lock
(&
muãx
->
_muãx
);

65 
	}
}

67 
	$hdr_muãx_u∆ock
(
hdr_muãx
* 
muãx
)

69 
	`±hªad_muãx_u∆ock
(&
muãx
->
_muãx
);

70 
	}
}

	@src/hdr_histogram/hdr_thread.h

7 #i‚de‡
HDR_THREAD_H__


8 
	#HDR_THREAD_H__


	)

10 
	~<°döt.h
>

12 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN64
Ë|| deföed(
__CYGWIN__
)

15 
	#HDR_ALIGN_PREFIX
(
Æignmít
Ë
	`__de˛•ec
–
	`Æign
◊lignmítË)

	)

16 
	#HDR_ALIGN_SUFFIX
(
Æignmít
)

	)

18 
	shdr_muãx


20 
uöt8_t
 
	m_¸ôiˇl_£˘i⁄
[40];

21 } 
	thdr_muãx
;

25 
	~<±hªad.h
>

27 
	#HDR_ALIGN_PREFIX
(
Æignmít
)

	)

28 
	#HDR_ALIGN_SUFFIX
(
Æignmít
Ë
	`__©åibuã__
((
	`Æig√d
◊lignmít)))

	)

30 
	shdr_muãx


32 
±hªad_muãx_t
 
	m_muãx
;

33 } 
	thdr_muãx
;

36 #ifde‡
__˝lu•lus


40 
hdr_muãx
* 
hdr_muãx_Æloc
();

41 
hdr_muãx_‰ì
(
hdr_muãx
*);

43 
hdr_muãx_öô
(
hdr_muãx
* 
muãx
);

44 
hdr_muãx_de°roy
(
hdr_muãx
* 
muãx
);

46 
hdr_muãx_lock
(
hdr_muãx
* 
muãx
);

47 
hdr_muãx_u∆ock
(
hdr_muãx
* 
muãx
);

49 #ifde‡
__˝lu•lus


	@src/hdr_histogram/hdr_time.c

7 
	~"hdr_time.h
"

9 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN64
)

11 #i‡!
deföed
(
WIN32_LEAN_AND_MEAN
)

12 
	#WIN32_LEAN_AND_MEAN


	)

15 
	~<wödows.h
>

17 
	gs_˛ockPîiodSë
 = 0;

18 
	gs_˛ockPîiod
 = 1.0;

20 
	$hdr_gëtime
(
hdr_time•ec
* 
t
)

22 
LARGE_INTEGER
 
num
;

24 i‡(!
s_˛ockPîiodSë
)

26 
	`QuîyPîf‹m™˚Fªquícy
(&
num
);

27 
s_˛ockPîiod
 = 1.0 / (Ë
num
.
QuadP¨t
;

28 
s_˛ockPîiodSë
 = 1;

31 
	`QuîyPîf‹m™˚Cou¡î
(&
num
);

32 
£c⁄ds
 = 
num
.
QuadP¨t
 * 
s_˛ockPîiod
;

33 
öãgøl
;

34 
ªmaödî
 = 
	`modf
(
£c⁄ds
, &
öãgøl
);

36 
t
->
tv_£c
 = (Ë
öãgøl
;

37 
t
->
tv_n£c
 = (Ë(
ªmaödî
 * 1000000000);

38 
	}
}

40 #ñi‡
deföed
(
__APPLE__
)

42 
	~<mach/˛ock.h
>

43 
	~<mach/mach.h
>

46 
	$hdr_gëtime
(
hdr_time•ec
* 
ts
)

48 
˛ock_£rv_t
 
c˛ock
;

49 
mach_time•ec_t
 
mts
;

50 
	`ho°_gë_˛ock_£rvi˚
(
	`mach_ho°_£lf
(), 
CALENDAR_CLOCK
, &
c˛ock
);

51 
	`˛ock_gë_time
(
c˛ock
, &
mts
);

52 
	`mach_p‹t_dóŒoˇã
(
	`mach_èsk_£lf
(), 
c˛ock
);

53 
ts
->
tv_£c
 = 
mts
.tv_sec;

54 
ts
->
tv_n£c
 = 
mts
.tv_nsec;

55 
	}
}

57 #ñi‡
deföed
(
__löux__
Ë|| deföed(
__CYGWIN__
)

60 
	$hdr_gëtime
(
hdr_time•ec
* 
t
)

62 
	`˛ock_gëtime
(
CLOCK_MONOTONIC
, (
time•ec
*)
t
);

63 
	}
}

	@src/hdr_histogram/hdr_time.h

7 #i‚de‡
HDR_TIME_H__


8 
	#HDR_TIME_H__


	)

10 
	~<m©h.h
>

11 
	~<time.h
>

13 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN64
Ë|| deföed(
__CYGWIN__
)

15 
	shdr_time•ec


17 
	mtv_£c
;

18 
	mtv_n£c
;

19 } 
	thdr_time•ec
;

23 
time•ec
 
	thdr_time•ec
;

27 #ifde‡
__˝lu•lus


31 #i‡
deföed
(
_MSC_VER
)

32 
hdr_gëtime
(
hdr_time•ec
* 
t
);

34 
hdr_gëtime
(
hdr_time•ec
* 
t
);

37 #ifde‡
__˝lu•lus


	@src/hdr_histogram/hdr_writer_reader_phaser.c

7 
	~<°döt.h
>

8 
	~<°dlib.h
>

9 
	~<°dboﬁ.h
>

10 
	~<°dlib.h
>

11 
	~<î∫o.h
>

13 #i‡
deföed
(
_MSC_VER
)

14 
	~<WöSock2.h
>

16 
	~<uni°d.h
>

17 
	~<sched.h
>

20 
	~"hdr_©omic.h
"

21 
	~"hdr_thªad.h
"

23 
	~"hdr_wrôî_ªadî_pha£r.h
"

25 
öt64_t
 
	$_hdr_pha£r_gë_ïoch
(
öt64_t
* 
fõld
)

27  
	`hdr_©omic_lﬂd_64
(
fõld
);

28 
	}
}

30 
	$_hdr_pha£r_£t_ïoch
(
öt64_t
* 
fõld
, i¡64_à
vÆ
)

32 
	`hdr_©omic_°‹e_64
(
fõld
, 
vÆ
);

33 
	}
}

35 
öt64_t
 
	$_hdr_pha£r_ª£t_ïoch
(
öt64_t
* 
fõld
, i¡64_à
öôül_vÆue
)

37  
	`hdr_©omic_exch™ge_64
(
fõld
, 
öôül_vÆue
);

38 
	}
}

40 
	$hdr_wrôî_ªadî_pha£r_öô
(
hdr_wrôî_ªadî_pha£r
* 
p
)

42 i‡(
NULL
 =
p
)

44  
EINVAL
;

47 
p
->
°¨t_ïoch
 = 0;

48 
p
->
eví_íd_ïoch
 = 0;

49 
p
->
odd_íd_ïoch
 = 
INT64_MIN
;

50 
p
->
ªadî_muãx
 = 
	`hdr_muãx_Æloc
();

52 i‡(!
p
->
ªadî_muãx
)

54  
ENOMEM
;

57 
rc
 = 
	`hdr_muãx_öô
(
p
->
ªadî_muãx
);

58 i‡(0 !
rc
)

60  
rc
;

66 
	}
}

68 
	$hdr_wrôî_ªadî_pha£r_de°‹y
(
hdr_wrôî_ªadî_pha£r
* 
p
)

70 
	`hdr_muãx_de°roy
(
p
->
ªadî_muãx
);

71 
	}
}

73 
öt64_t
 
	$hdr_pha£r_wrôî_íãr
(
hdr_wrôî_ªadî_pha£r
* 
p
)

75  
	`hdr_©omic_add_„tch_64
(&
p
->
°¨t_ïoch
, 1);

76 
	}
}

78 
	$hdr_pha£r_wrôî_exô
(

79 
hdr_wrôî_ªadî_pha£r
* 
p
, 
öt64_t
 
¸ôiˇl_vÆue_©_íãr
)

81 
öt64_t
* 
íd_ïoch
 =

82 (
¸ôiˇl_vÆue_©_íãr
 < 0Ë? &
p
->
odd_íd_ïoch
 : &p->
eví_íd_ïoch
;

83 
	`hdr_©omic_add_„tch_64
(
íd_ïoch
, 1);

84 
	}
}

86 
	$hdr_pha£r_ªadî_lock
(
hdr_wrôî_ªadî_pha£r
* 
p
)

88 
	`hdr_muãx_lock
(
p
->
ªadî_muãx
);

89 
	}
}

91 
	$hdr_pha£r_ªadî_u∆ock
(
hdr_wrôî_ªadî_pha£r
* 
p
)

93 
	`hdr_muãx_u∆ock
(
p
->
ªadî_muãx
);

94 
	}
}

96 
	$hdr_pha£r_Êù_pha£
(

97 
hdr_wrôî_ªadî_pha£r
* 
p
, 
öt64_t
 
¶ìp_time_ns
)

101 
öt64_t
 
°¨t_ïoch
 = 
	`_hdr_pha£r_gë_ïoch
(&
p
->start_epoch);

103 
boﬁ
 
√xt_pha£_is_eví
 = (
°¨t_ïoch
 < 0);

106 
öt64_t
 
öôül_°¨t_vÆue
;

107 i‡(
√xt_pha£_is_eví
)

109 
öôül_°¨t_vÆue
 = 0;

110 
	`_hdr_pha£r_£t_ïoch
(&
p
->
eví_íd_ïoch
, 
öôül_°¨t_vÆue
);

114 
öôül_°¨t_vÆue
 = 
INT64_MIN
;

115 
	`_hdr_pha£r_£t_ïoch
(&
p
->
odd_íd_ïoch
, 
öôül_°¨t_vÆue
);

119 
öt64_t
 
°¨t_vÆue_©_Êù
 =

120 
	`_hdr_pha£r_ª£t_ïoch
(&
p
->
°¨t_ïoch
, 
öôül_°¨t_vÆue
);

122 
boﬁ
 
ˇught_up
 = 
Ál£
;

125 
öt64_t
* 
íd_ïoch
 =

126 
√xt_pha£_is_eví
 ? &
p
->
odd_íd_ïoch
 : &p->
eví_íd_ïoch
;

128 
ˇught_up
 = 
	`_hdr_pha£r_gë_ïoch
(
íd_ïoch
Ë=
°¨t_vÆue_©_Êù
;

130 i‡(!
ˇught_up
)

132 i‡(
¶ìp_time_ns
 == 0)

134 #i‡
	`deföed
(
_MSC_VER
)

135 
	`SÀï
(0);

137 
	`sched_yõld
();

142 #i‡
	`deföed
(
_MSC_VER
)

143 
timevÆ
 
tv
;

145 
tv
.
tv_£c
 = ()
¶ìp_time_ns
 / 1000000;

146 
tv
.
tv_u£c
 = 
¶ìp_time_ns
 % 1000000;

147 
	`£À˘
(0, 
NULL
, NULL, NULL, &
tv
);

149 
	`u¶ìp
(
¶ìp_time_ns
 / 1000);

154 !
ˇught_up
);

155 
	}
}

	@src/hdr_histogram/hdr_writer_reader_phaser.h

7 #i‚de‡
HDR_WRITER_READER_PHASER_H


8 
	#HDR_WRITER_READER_PHASER_H
 1

	)

10 
	~<°dlib.h
>

11 
	~<°dboﬁ.h
>

12 
	~<°dlib.h
>

13 
	~<hdr_thªad.h
>

14 
	~<î∫o.h
>

16 
	$HDR_ALIGN_PREFIX
(8)

17 
	shdr_wrôî_ªadî_pha£r


19 
öt64_t
 
°¨t_ïoch
;

20 
öt64_t
 
eví_íd_ïoch
;

21 
öt64_t
 
odd_íd_ïoch
;

22 
hdr_muãx
* 
ªadî_muãx
;

24 
	`HDR_ALIGN_SUFFIX
(8);

26 #ifde‡
__˝lu•lus


30 
	`hdr_wrôî_ªadî_pha£r_öô
(
hdr_wrôî_ªadî_pha£r
* 
p
);

32 
	`hdr_wrôî_ªadî_pha£r_de°‹y
(
hdr_wrôî_ªadî_pha£r
* 
p
);

34 
öt64_t
 
	`hdr_pha£r_wrôî_íãr
(
hdr_wrôî_ªadî_pha£r
* 
p
);

36 
	`hdr_pha£r_wrôî_exô
(

37 
hdr_wrôî_ªadî_pha£r
* 
p
, 
öt64_t
 
¸ôiˇl_vÆue_©_íãr
);

39 
	`hdr_pha£r_ªadî_lock
(
hdr_wrôî_ªadî_pha£r
* 
p
);

41 
	`hdr_pha£r_ªadî_u∆ock
(
hdr_wrôî_ªadî_pha£r
* 
p
);

43 
	`hdr_pha£r_Êù_pha£
(

44 
hdr_wrôî_ªadî_pha£r
* 
p
, 
öt64_t
 
¶ìp_time_ns
);

46 #ifde‡
__˝lu•lus


47 
	}
}

	@src/main.c

18 
	~<nc.h
>

21 
	$maö
(
¨gc
, **
¨gv
)

23 
	`nc_run_°™dÆ⁄e
(
¨gc
, 
¨gv
);

24 
	}
}

	@src/nc.c

18 
	~<sig«l.h
>

19 
	~<gë›t.h
>

20 
	~<f˙é.h
>

21 
	~<sys/°©.h
>

22 
	~<sys/ut¢ame.h
>

24 
	~<nc_c‹e.h
>

25 
	~<nc_c⁄f.h
>

26 
	~<nc_sig«l.h
>

27 
	~<nc.h
>

29 
	#NC_CONF_PATH
 "c⁄f/nut¸ackî.yml"

	)

31 
	#NC_LOG_DEFAULT
 
LOG_NOTICE


	)

32 
	#NC_LOG_MIN
 
LOG_EMERG


	)

33 
	#NC_LOG_MAX
 
LOG_PVERB


	)

34 
	#NC_LOG_PATH
 
NULL


	)

36 
	#NC_UDS_PATH
 "/tmp/"

	)

38 
	#NC_STATS_PORT
 
STATS_PORT


	)

39 
	#NC_STATS_ADDR
 
STATS_ADDR


	)

40 
	#NC_STATS_INTERVAL
 
STATS_INTERVAL


	)

42 
	#NC_PID_FILE
 
NULL


	)

44 
	#NC_MBUF_SIZE
 
MBUF_SIZE


	)

45 
	#NC_MBUF_MIN_SIZE
 
MBUF_MIN_SIZE


	)

46 
	#NC_MBUF_MAX_SIZE
 
MBUF_MAX_SIZE


	)

49 
	#NC_PROXY_PORT
 22100

	)

51 
	gshow_hñp
;

52 
	gã°_c⁄f
;

53 
	gd´m⁄ize
;

54 
	gshow_vîsi⁄
;

55 
	gdes¸ibe_°©s
;

57 
›ti⁄
 
	gl⁄g_›ti⁄s
[] = {

58 { "hñp", 
no_¨gumít
, 
NULL
, 'h' },

59 { "vîsi⁄", 
no_¨gumít
, 
NULL
, 'V' },

60 { "ã°-c⁄f", 
no_¨gumít
, 
NULL
, 't' },

61 { "d´m⁄ize", 
no_¨gumít
, 
NULL
, 'd' },

62 { "vîbo£", 
ªquúed_¨gumít
, 
NULL
, 'v' },

63 { "pid-fûe", 
ªquúed_¨gumít
, 
NULL
, 'p' },

64 { "poﬁ", 
ªquúed_¨gumít
, 
NULL
, 'l' },

65 { "des¸ibe-°©s", 
no_¨gumít
, 
NULL
, 'D' },

66 { "c⁄f-fûe", 
ªquúed_¨gumít
, 
NULL
, 'c' },

67 { "¥oxy-addr", 
ªquúed_¨gumít
, 
NULL
, 'x' },

68 { "¥oxy-p‹t", 
ªquúed_¨gumít
, 
NULL
, 'y' },

69 { "unix-∑th", 
ªquúed_¨gumít
, 
NULL
, 'u' },

70 { "ouçut", 
ªquúed_¨gumít
, 
NULL
, 'o' },

71 { "°©s-p‹t", 
ªquúed_¨gumít
, 
NULL
, 's' },

72 { "°©s-öãrvÆ", 
ªquúed_¨gumít
, 
NULL
, 'i' },

73 { "°©s-addr", 
ªquúed_¨gumít
, 
NULL
, 'a' },

74 { "mbuf-size", 
ªquúed_¨gumít
, 
NULL
, 'm' },

75 { "zookì≥r", 
ªquúed_¨gumít
, 
NULL
, 'z' },

76 { "zkc⁄fig", 
ªquúed_¨gumít
, 
NULL
, 'g' },

77 { 
NULL
, 0, NULL, 0 }

80 
	gsh‹t_›ti⁄s
[] = "hVtdDv:o:c:s:i:a:p:m:x:y:u:z:g:l:";

82 
r°©us_t


83 
	$nc_d´m⁄ize
(
dump_c‹e
)

85 
r°©us_t
 
°©us
;

86 
pid_t
 
pid
, 
sid
;

87 
fd
;

89 
pid
 = 
	`f‹k
();

90 
pid
) {

92 
	`log_îr‹
("f‹k(ËÁûed: %s", 
	`°ªº‹
(
î∫o
));

93  
NC_ERROR
;

100 
	`_exô
(0);

105 
sid
 = 
	`£tsid
();

106 i‡(
sid
 < 0) {

107 
	`log_îr‹
("£tsid(ËÁûed: %s", 
	`°ªº‹
(
î∫o
));

108  
NC_ERROR
;

111 i‡(
	`sig«l
(
SIGHUP
, 
SIG_IGN
Ë=
SIG_ERR
) {

112 
	`log_îr‹
("sig«l(SIGHUP, SIG_IGNËÁûed: %s", 
	`°ªº‹
(
î∫o
));

113  
NC_ERROR
;

116 
pid
 = 
	`f‹k
();

117 
pid
) {

119 
	`log_îr‹
("f‹k(ËÁûed: %s", 
	`°ªº‹
(
î∫o
));

120  
NC_ERROR
;

127 
	`_exô
(0);

133 i‡(
dump_c‹e
 == 0) {

134 
°©us
 = 
	`chdú
("/");

135 i‡(
°©us
 < 0) {

136 
	`log_îr‹
("chdú(\"/\"ËÁûed: %s", 
	`°ªº‹
(
î∫o
));

137  
NC_ERROR
;

142 
	`umask
(0);

146 
fd
 = 
	`›í
("/dev/nuŒ", 
O_RDWR
);

147 i‡(
fd
 < 0) {

148 
	`log_îr‹
("›í(\"/dev/nuŒ\"ËÁûed: %s", 
	`°ªº‹
(
î∫o
));

149  
NC_ERROR
;

152 
°©us
 = 
	`dup2
(
fd
, 
STDIN_FILENO
);

153 i‡(
°©us
 < 0) {

154 
	`log_îr‹
("dup2(%d, STDINËÁûed: %s", 
fd
, 
	`°ªº‹
(
î∫o
));

155 
	`˛o£
(
fd
);

156  
NC_ERROR
;

159 
°©us
 = 
	`dup2
(
fd
, 
STDOUT_FILENO
);

160 i‡(
°©us
 < 0) {

161 
	`log_îr‹
("dup2(%d, STDOUTËÁûed: %s", 
fd
, 
	`°ªº‹
(
î∫o
));

162 
	`˛o£
(
fd
);

163  
NC_ERROR
;

166 
°©us
 = 
	`dup2
(
fd
, 
STDERR_FILENO
);

167 i‡(
°©us
 < 0) {

168 
	`log_îr‹
("dup2(%d, STDERRËÁûed: %s", 
fd
, 
	`°ªº‹
(
î∫o
));

169 
	`˛o£
(
fd
);

170  
NC_ERROR
;

173 i‡(
fd
 > 
STDERR_FILENO
) {

174 
°©us
 = 
	`˛o£
(
fd
);

175 i‡(
°©us
 < 0) {

176 
	`log_îr‹
("˛o£(%dËÁûed: %s", 
fd
, 
	`°ªº‹
(
î∫o
));

177  
NC_ERROR
;

181  
NC_OK
;

182 
	}
}

185 
	$nc_¥öt_run
(
ö°™˚
 *
nci
)

187 
°©us
;

188 
ut¢ame
 
«me
;

190 
°©us
 = 
	`u«me
(&
«me
);

191 i‡(
°©us
 < 0) {

192 
	`loga
("nut¸ackî-%†°¨ãd o¿pid %d", 
NC_VERSION_STRING
, 
nci
->
pid
);

194 
	`loga
("nutcracker-%s built for %s %s %s started onÖid %d",

195 
NC_VERSION_STRING
, 
«me
.
sy¢ame
,Çame.
ªÀa£
,Çame.
machöe
,

196 
nci
->
pid
);

199 
	`loga
("run,ÑabbitÑun / digÅhat hole, forgetÅhe sun / "

202 
	}
}

205 
	$nc_¥öt_d⁄e
()

207 
	`loga
("done,Ñabbit done");

208 
	}
}

211 
	$nc_show_ußge
()

213 
	`log_°dîr
(

214 "Ußge:Çut¸ackî [-?hVdDt] [-v vîbosôyÜevñ] [-ÿouçuàfûe]" 
CRLF


215 " [-¯c⁄‡fûe] [-†°©†p‹t] [-®°©†addr]" 
CRLF


216 " [-ò°©†öãrvÆ] [-∞pid fûe] [-m mbu‡size]" 
CRLF


218 
	`log_°dîr
(

219 "O±i⁄s:" 
CRLF


220 " -h, --hñ∞ :Åhi†hñp" 
CRLF


221 " -V, --vîsi⁄ : show vîsi⁄ándÉxô" 
CRLF


222 " -t, --ã°-c⁄‡ :Åe° c⁄figuøti⁄ f‹ sy¡axÉº‹†™dÉxô" 
CRLF


223 " -d, --d´m⁄izê :Ñu¿a†®d´m⁄" 
CRLF


225 
	`log_°dîr
(

226 " -v, --vîbo£=N : sëÜoggögÜevñ (deÁu…: %d, mö: %d, max: %d)" 
CRLF


227 " -o, --ouçut=S : sëÜoggög fûê(deÁu…: %s)" 
CRLF


228 " -c, --c⁄f-fûe=S : së c⁄figuøti⁄ fûê(deÁu…: %s)" 
CRLF


229 " -s, --°©s-p‹t=N : së sèt†m⁄ô‹ögÖ‹à(deÁu…: %d)" 
CRLF


230 " -a, --°©s-addr=S : së sèt†m⁄ô‹ög i∞(deÁu…: %s)" 
CRLF


231 " -i, --°©s-öãrvÆ=N : së sèt†aggªg©i⁄ i¡îvÆ i¿m£¯(deÁu…: %d m£c)" 
CRLF


232 " -p, --pid-fûe=S : sëÖid fûê(deÁu…: %s)" 
CRLF


233 " -m, --mbuf-size=N : së sizêo‡mbu‡chunk i¿byã†(deÁu…: %d byãs)" 
CRLF


234 " -x, --¥oxy-add∏ : sëÖroxyÜi°íáddªs†(MUSTÖrovide)" 
CRLF


235 " -y, --¥oxy-p‹à : sëÖroxyÜi°íÖ‹à(MUSTÖrovide)" 
CRLF


237 "i‡¥oxyÇìd†tÿbödÅÿdﬂmö sockë)" 
CRLF


238 " -z, --zookì≥∏ : së zookì≥∏£rvî ho°†(MUSTÖrovide)" 
CRLF


239 " -g, --zkc⁄fig : së zkÖoﬁ c⁄fig fûê∑th (deÁu…: %s)" 
CRLF


240 " -l, --poﬁ=S :ÖoﬁÇamê(MUSTÖrovide)" 
CRLF


242 
NC_LOG_DEFAULT
, 
NC_LOG_MIN
, 
NC_LOG_MAX
,

243 
NC_LOG_PATH
 !
NULL
 ? NC_LOG_PATH : "stderr",

244 
NC_CONF_PATH
,

245 
NC_STATS_PORT
, 
NC_STATS_ADDR
, 
NC_STATS_INTERVAL
,

246 
NC_PID_FILE
 !
NULL
 ? NC_PID_FILE : "off",

247 
NC_MBUF_SIZE
,

248 
CONF_DEFAULT_CONF_ZNODE
);

249 
	}
}

251 
r°©us_t


252 
	$nc_¸óã_pidfûe
(
ö°™˚
 *
nci
)

254 
pid
[
NC_UINTMAX_MAXLEN
];

255 
fd
, 
pid_Àn
;

256 
ssize_t
 
n
;

258 
fd
 = 
	`›í
(
nci
->
pid_fûíame
, 
O_WRONLY
 | 
O_CREAT
 | 
O_TRUNC
, 0644);

259 i‡(
fd
 < 0) {

260 
	`log_îr‹
("›íögÖid fûê'%s' faûed: %s", 
nci
->
pid_fûíame
,

261 
	`°ªº‹
(
î∫o
));

262  
NC_ERROR
;

264 
nci
->
pidfûe
 = 1;

266 
pid_Àn
 = 
	`nc_¢¥ötf
(
pid
, 
NC_UINTMAX_MAXLEN
, "%d", 
nci
->pid);

268 
n
 = 
	`nc_wrôe
(
fd
, 
pid
, 
pid_Àn
);

269 i‡(
n
 < 0) {

270 
	`log_îr‹
("wrôêtÿpid fûê'%s' faûed: %s", 
nci
->
pid_fûíame
,

271 
	`°ªº‹
(
î∫o
));

272  
NC_ERROR
;

275 
	`˛o£
(
fd
);

277  
NC_OK
;

278 
	}
}

281 
	$nc_ªmove_pidfûe
(
ö°™˚
 *
nci
)

283 
°©us
;

285 
°©us
 = 
	`u∆ök
(
nci
->
pid_fûíame
);

286 i‡(
°©us
 < 0) {

287 
	`log_îr‹
("unlink ofÖid file '%s' failed, ignored: %s",

288 
nci
->
pid_fûíame
, 
	`°ªº‹
(
î∫o
));

290 
	}
}

296 
boﬁ


297 
	$nc_ã°_c⁄f
(
ö°™˚
 *
nci
)

299 
c⁄f
 *
cf
;

301 
cf
 = 
	`c⁄f_¸óã
(
nci
->
c⁄f_fûíame
);

302 i‡(
cf
 =
NULL
) {

303 
	`log_°dîr
("nutcracker: configuration file '%s' syntax is invalid",

304 
nci
->
c⁄f_fûíame
);

305  
Ál£
;

308 
	`c⁄f_de°roy
(
cf
);

310 
	`log_°dîr
("nutcracker: configuration file '%s' syntax is ok",

311 
nci
->
c⁄f_fûíame
);

312  
åue
;

313 
	}
}

317 
	$nc_£t_deÁu…_›ti⁄s
(
ö°™˚
 *
nci
)

319 
°©us
;

321 
nci
->
˘x
 = 
NULL
;

323 
nci
->
log_Àvñ
 = 
NC_LOG_DEFAULT
;

324 
nci
->
log_fûíame
 = 
NC_LOG_PATH
;

327 
nci
->
°©s_p‹t
 = 
NC_STATS_PORT
;

328 
nci
->
°©s_addr
 = 
NC_STATS_ADDR
;

329 
nci
->
°©s_öãrvÆ
 = 
NC_STATS_INTERVAL
;

331 
°©us
 = 
	`nc_gëho°«me
(
nci
->
ho°«me
, 
NC_MAXHOSTNAMELEN
);

332 i‡(
°©us
 < 0) {

333 
	`log_w¨n
("gëho°«mêÁûed, ign‹ed: %s", 
	`°ªº‹
(
î∫o
));

334 
	`nc_¢¥ötf
(
nci
->
ho°«me
, 
NC_MAXHOSTNAMELEN
, "unknown");

336 
nci
->
ho°«me
[
NC_MAXHOSTNAMELEN
 - 1] = '\0';

338 
nci
->
mbuf_chunk_size
 = 
NC_MBUF_SIZE
;

339 
nci
->
c⁄f_fûíame
 = 
NC_CONF_PATH
;

340 
nci
->
pid
 = (
pid_t
)-1;

341 
nci
->
pid_fûíame
 = 
NULL
;

342 
nci
->
pidfûe
 = 0;

343 
nci
->
poﬁ_«me
 = 
NULL
;

345 
nci
->
¥oxy_p‹t
 = 
NC_PROXY_PORT
;

346 
nci
->
unix_∑th
 = 
NULL
;

347 
nci
->
¥oxy_ù
 = 
NULL
;

348 
nci
->
zk_c⁄fig_roŸ
 = 
ZK_BASE
;

349 
nci
->
zk_£rvîs
 = 
NULL
;

350 
	}
}

352 
r°©us_t


353 
	$nc_gë_›ti⁄s
(
¨gc
, **
¨gv
, 
ö°™˚
 *
nci
)

355 
c
, 
vÆue
;

357 
›ãº
 = 0;

360 
c
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, 
sh‹t_›ti⁄s
, 
l⁄g_›ti⁄s
, 
NULL
);

361 i‡(
c
 == -1) {

366 
c
) {

368 
show_vîsi⁄
 = 1;

369 
show_hñp
 = 1;

373 
show_vîsi⁄
 = 1;

377 
ã°_c⁄f
 = 1;

381 
d´m⁄ize
 = 1;

386 
vÆue
 = 
	`nc_©oi
(
›èrg
, 
	`°æí
(optarg));

387 i‡(
vÆue
 < 0) {

388 
	`log_°dîr
("nutcracker: option -vÑequiresáÇumber");

389  
NC_ERROR
;

391 
nci
->
log_Àvñ
 = 
vÆue
;

394 
nci
->
poﬁ_«me
 = 
›èrg
;

397 
nci
->
pid_fûíame
 = 
›èrg
;

400 
nci
->
c⁄f_fûíame
 = 
›èrg
;

403 
nci
->
¥oxy_ù
 = 
›èrg
;

404 
	`log_°dîr
("nut¸ackî:ÖroxyÜi°íádddr: %s", 
nci
->
¥oxy_ù
);

407 
nci
->
¥oxy_p‹t
 = (
uöt16_t
)
	`nc_©oi
(
›èrg
, 
	`°æí
(optarg));

408 
	`log_°dîr
("nutcracker:ÖroxyÜistenÖort: %d",

409 
nci
->
¥oxy_p‹t
);

412 
nci
->
unix_∑th
 = 
›èrg
;

413 
	`log_°dîr
("nut¸ackî:ÖroxyÜi°íádddr: %s", 
nci
->
unix_∑th
);

417 
des¸ibe_°©s
 = 1;

418 
show_vîsi⁄
 = 1;

422 
nci
->
log_fûíame
 = 
›èrg
;

426 
vÆue
 = 
	`nc_©oi
(
›èrg
, 
	`°æí
(optarg));

427 i‡(
vÆue
 < 0) {

428 
	`log_°dîr
("nutcracker: option -sÑequiresáÇumber");

429  
NC_ERROR
;

431 i‡(!
	`nc_vÆid_p‹t
(
vÆue
)) {

432 
	`log_°dîr
("nutcracker: option -s value %d isÇotá valid "

433 "p‹t", 
vÆue
);

434  
NC_ERROR
;

437 
nci
->
°©s_p‹t
 = (
uöt16_t
)
vÆue
;

438 
	`log_°dîr
("nut¸ackî: sèt†§v o¿p‹à%d", 
vÆue
);

441 
vÆue
 = 
	`nc_©oi
(
›èrg
, 
	`°æí
(optarg));

442 i‡(
vÆue
 < 0) {

443 
	`log_°dîr
("nutcracker: option -iÑequiresáÇumber");

444  
NC_ERROR
;

447 
nci
->
°©s_öãrvÆ
 = 
vÆue
;

450 
nci
->
°©s_addr
 = 
›èrg
;

453 
vÆue
 = 
	`nc_©oi
(
›èrg
, 
	`°æí
(optarg));

454 i‡(
vÆue
 <= 0) {

455 
	`log_°dîr
("nutcracker: option -mÑequiresáÇon-zeroÇumber");

456  
NC_ERROR
;

459 i‡(
vÆue
 < 
NC_MBUF_MIN_SIZE
 || vÆuê> 
NC_MBUF_MAX_SIZE
) {

460 
	`log_°dîr
("nutcracker: mbuf chunk size must be between %zuánd"

461 " %zu byãs", 
NC_MBUF_MIN_SIZE
, 
NC_MBUF_MAX_SIZE
);

462  
NC_ERROR
;

465 
nci
->
mbuf_chunk_size
 = (
size_t
)
vÆue
;

469 
nci
->
zk_£rvîs
 = 
›èrg
;

470 
	`log_°dîr
("nutcracker: use zookeeper %s",

471 
nci
->
zk_£rvîs
);

475 
nci
->
zk_c⁄fig_roŸ
 = 
›èrg
;

476 
	`log_°dîr
("nutcracker: use zookeeper configÖath %s",

477 
nci
->
zk_c⁄fig_roŸ
);

481 
›t›t
) {

485 
	`log_°dîr
("nutcracker: option -%cÑequiresá fileÇame",

486 
›t›t
);

492 
	`log_°dîr
("nut¸ackî: o±i⁄ -%¯ªquúe†®numbî", 
›t›t
);

496 
	`log_°dîr
("nut¸ackî: o±i⁄ -%¯ªquúe†®°rög", 
›t›t
);

500 
	`log_°dîr
("nut¸ackî: invÆid o±i⁄ -- '%c'", 
›t›t
);

503  
NC_ERROR
;

506 
	`log_°dîr
("nut¸ackî: invÆid o±i⁄ -- '%c'", 
›t›t
);

507  
NC_ERROR
;

512  
NC_OK
;

513 
	}
}

515 
r°©us_t


516 
	$nc_¥e_run
(
ö°™˚
 *
nci
)

518 
r°©us_t
 
°©us
;

520 
°©us
 = 
	`log_öô
(
nci
->
log_Àvñ
,Çci->
log_fûíame
);

521 i‡(
°©us
 !
NC_OK
) {

522  
°©us
;

524 i‡(
d´m⁄ize
) {

525 
°©us
 = 
	`nc_d´m⁄ize
(1);

526 i‡(
°©us
 !
NC_OK
) {

527  
°©us
;

530 i‡(
nci
->
pid_fûíame
) {

531 
°©us
 = 
	`nc_¸óã_pidfûe
(
nci
);

532 i‡(
°©us
 !
NC_OK
) {

533  
°©us
;

536 
nci
->
pid
 = 
	`gëpid
();

538 
°©us
 = 
	`sig«l_öô
();

539 i‡(
°©us
 !
NC_OK
) {

540  
°©us
;

544 
	`nc_¥öt_run
(
nci
);

546  
NC_OK
;

547 
	}
}

550 
	$nc_po°_run
(
ö°™˚
 *
nci
)

552 i‡(
nci
->
pidfûe
) {

553 
	`nc_ªmove_pidfûe
(
nci
);

556 i‡(
nci
->
˘x
 &&Çci->˘x->
zkh
) {

557 
	`ZKClo£
(
nci
->
˘x
->
zkh
);

560 
	`sig«l_deöô
();

562 
	`nc_¥öt_d⁄e
();

564 
	`log_deöô
();

565 
	}
}

568 
	$nc_run
(
ö°™˚
 *
nci
)

570 
r°©us_t
 
°©us
;

571 
c⁄ãxt
 *
˘x
;

573 
˘x
 = 
	`c‹e_°¨t
(
nci
);

574 i‡(
˘x
 =
NULL
) {

580 
°©us
 = 
	`c‹e_lo›
(
˘x
);

581 i‡(
°©us
 !
NC_OK
) {

586 
	`c‹e_°›
(
˘x
);

587 
	}
}

590 
	$nc_run_°™dÆ⁄e
(
¨gc
, **
¨gv
)

592 
r°©us_t
 
°©us
;

593 
ö°™˚
 
nci
;

595 
	`nc_£t_deÁu…_›ti⁄s
(&
nci
);

597 
°©us
 = 
	`nc_gë_›ti⁄s
(
¨gc
, 
¨gv
, &
nci
);

598 i‡(
°©us
 !
NC_OK
) {

599 
	`nc_show_ußge
();

600 
	`exô
(1);

603 i‡(
show_vîsi⁄
) {

604 
	`log_°dîr
("Thi†i†nut¸ackî-%s" 
CRLF
, 
NC_VERSION_STRING
);

605 i‡(
show_hñp
) {

606 
	`nc_show_ußge
();

609 i‡(
des¸ibe_°©s
) {

610 
	`°©s_des¸ibe
();

613 
	`exô
(0);

616 i‡(
nci
.
¥oxy_ù
 =
NULL
 &&Çci.
unix_∑th
 == NULL) {

617 
	`log_°dîr
("mu°Örovidê¥oxy_ùándÖroxy_p‹àOR unix domaöÖ©h" 
CRLF
);

618 
	`nc_show_ußge
();

619 
	`exô
(1);

622 i‡(
nci
.
poﬁ_«me
 =
NULL
) {

623 
	`log_°dîr
("mu°Örovidêpoﬁ_«me" 
CRLF
);

624 
	`nc_show_ußge
();

625 
	`exô
(1);

628 i‡(
ã°_c⁄f
) {

629 i‡(!
	`nc_ã°_c⁄f
(&
nci
)) {

630 
	`exô
(1);

632 
	`exô
(0);

635 
°©us
 = 
	`nc_¥e_run
(&
nci
);

636 i‡(
°©us
 !
NC_OK
) {

637 
	`nc_po°_run
(&
nci
);

638 
	`exô
(1);

641 
	`nc_run
(&
nci
);

643 
	`nc_po°_run
(&
nci
);

645 
	`exô
(1);

646 
	}
}

649 
	$nc_run_lib
(
log_Àvñ
, *
log_fûe
, *
c⁄f_fûe
, *
pid_fûe
,

650 *
zk_£rvîs
, *
zk_roŸ
, 
uöt16_t
 
°©s_p‹t
, *
°©s_addr
,

651 
°©s_öãrvÆ
, 
size_t
 
mbuf_size
, 
uöt16_t
 
¥oxy_p‹t
, 

652 *
¥oxy_«me
){

654 
r°©us_t
 
°©us
;

655 
ö°™˚
 
nci
;

657 
	`nc_£t_deÁu…_›ti⁄s
(&
nci
);

659 i‡(
log_fûe
){

660 
nci
.
log_Àvñ
 =Üog_level;

661 
nci
.
log_fûíame
 = 
log_fûe
;

663 i‡(
c⁄f_fûe
) {

664 
nci
.
c⁄f_fûíame
 = 
c⁄f_fûe
;

666 i‡(
pid_fûe
) {

667 
nci
.
pid_fûíame
 = 
pid_fûe
;

669 i‡(
zk_roŸ
 && 
zk_£rvîs
) {

670 
nci
.
zk_c⁄fig_roŸ
 = 
zk_roŸ
;

671 
nci
.
zk_£rvîs
 = zk_servers;

673 i‡(
°©s_p‹t
 && 
°©s_addr
) {

674 
nci
.
°©s_p‹t
 = stats_port;

675 
nci
.
°©s_addr
 = stats_addr;

676 
nci
.
°©s_öãrvÆ
 = stats_interval;

678 i‡(
mbuf_size
) {

679 
nci
.
mbuf_chunk_size
 = 
mbuf_size
;

681 i‡(
¥oxy_p‹t
 && 
¥oxy_«me
) {

682 
nci
.
¥oxy_p‹t
 =Öroxy_port;

683 
nci
.
¥oxy_ù
 = 
¥oxy_«me
;

686 
°©us
 = 
	`nc_¥e_run
(&
nci
);

687 i‡(
°©us
 !
NC_OK
) {

688 
	`nc_po°_run
(&
nci
);

689  
NC_ERROR
;

692 
	`nc_run
(&
nci
);

694 
	`nc_po°_run
(&
nci
);

696  
NC_OK
;

697 
	}
}

	@src/nc_array.c

18 
	~<°dlib.h
>

20 
	~<nc_c‹e.h
>

22 
¨øy
 *

23 
	$¨øy_¸óã
(
uöt32_t
 
n
, 
size_t
 
size
)

25 
¨øy
 *
a
;

27 
	`ASSERT
(
n
 !0 && 
size
 != 0);

29 
a
 = 
	`nc_Æloc
((*a));

30 i‡(
a
 =
NULL
) {

31  
NULL
;

34 
a
->
ñem
 = 
	`nc_Æloc
(
n
 * 
size
);

35 i‡(
a
->
ñem
 =
NULL
) {

36 
	`nc_‰ì
(
a
);

37  
NULL
;

40 
a
->
√Àm
 = 0;

41 
a
->
size
 = size;

42 
a
->
«Œoc
 = 
n
;

44  
a
;

45 
	}
}

48 
	$¨øy_de°roy
(
¨øy
 *
a
)

50 
	`¨øy_deöô
(
a
);

51 
	`nc_‰ì
(
a
);

52 
	}
}

54 
r°©us_t


55 
	$¨øy_öô
(
¨øy
 *
a
, 
uöt32_t
 
n
, 
size_t
 
size
)

57 
	`ASSERT
(
n
 !0 && 
size
 != 0);

59 
a
->
ñem
 = 
	`nc_Æloc
(
n
 * 
size
);

60 i‡(
a
->
ñem
 =
NULL
) {

61  
NC_ENOMEM
;

64 
a
->
√Àm
 = 0;

65 
a
->
size
 = size;

66 
a
->
«Œoc
 = 
n
;

68  
NC_OK
;

69 
	}
}

72 
	$¨øy_deöô
(
¨øy
 *
a
)

74 
	`ASSERT
(
a
->
√Àm
 == 0);

76 i‡(
a
->
ñem
 !
NULL
) {

77 
	`nc_‰ì
(
a
->
ñem
);

79 
	}
}

81 
uöt32_t


82 
	$¨øy_idx
(
¨øy
 *
a
, *
ñem
)

84 
uöt8_t
 *
p
, *
q
;

85 
uöt32_t
 
off
, 
idx
;

87 
	`ASSERT
(
ñem
 >
a
->elem);

89 
p
 = 
a
->
ñem
;

90 
q
 = 
ñem
;

91 
off
 = (
uöt32_t
)(
q
 - 
p
);

93 
	`ASSERT
(
off
 % (
uöt32_t
)
a
->
size
 == 0);

95 
idx
 = 
off
 / (
uöt32_t
)
a
->
size
;

97  
idx
;

98 
	}
}

101 
	$¨øy_push
(
¨øy
 *
a
)

103 *
ñem
, *
√w
;

104 
size_t
 
size
;

106 i‡(
a
->
√Àm
 =a->
«Œoc
) {

109 
size
 = 
a
->sizê*á->
«Œoc
;

110 
√w
 = 
	`nc_ªÆloc
(
a
->
ñem
, 2 * 
size
);

111 i‡(
√w
 =
NULL
) {

112  
NULL
;

115 
a
->
ñem
 = 
√w
;

116 
a
->
«Œoc
 *= 2;

119 
ñem
 = (
uöt8_t
 *)
a
->ñem +á->
size
 *á->
√Àm
;

120 
a
->
√Àm
++;

122  
ñem
;

123 
	}
}

126 
	$¨øy_p›
(
¨øy
 *
a
)

128 *
ñem
;

130 
	`ASSERT
(
a
->
√Àm
 != 0);

132 
a
->
√Àm
--;

133 
ñem
 = (
uöt8_t
 *)
a
->ñem +á->
size
 *á->
√Àm
;

135  
ñem
;

136 
	}
}

139 
	$¨øy_gë
(
¨øy
 *
a
, 
uöt32_t
 
idx
)

141 *
ñem
;

143 
	`ASSERT
(
a
->
√Àm
 != 0);

144 
	`ASSERT
(
idx
 < 
a
->
√Àm
);

146 
ñem
 = (
uöt8_t
 *)
a
->ñem + (a->
size
 * 
idx
);

148  
ñem
;

149 
	}
}

152 
	$¨øy_t›
(
¨øy
 *
a
)

154 
	`ASSERT
(
a
->
√Àm
 != 0);

156  
	`¨øy_gë
(
a
,á->
√Àm
 - 1);

157 
	}
}

160 
	$¨øy_sw≠
(
¨øy
 *
a
, ¨øy *
b
)

162 
¨øy
 
tmp
;

164 
tmp
 = *
a
;

165 *
a
 = *
b
;

166 *
b
 = 
tmp
;

167 
	}
}

174 
	$¨øy_s‹t
(
¨øy
 *
a
, 
¨øy_com∑ª_t
 
com∑ª
)

176 
	`ASSERT
(
a
->
√Àm
 != 0);

178 
	`qs‹t
(
a
->
ñem
,á->
√Àm
,á->
size
, 
com∑ª
);

179 
	}
}

185 
r°©us_t


186 
	$¨øy_óch
(
¨øy
 *
a
, 
¨øy_óch_t
 
func
, *
d©a
)

188 
uöt32_t
 
i
, 
√Àm
;

190 
	`ASSERT
(
	`¨øy_n
(
a
) != 0);

191 
	`ASSERT
(
func
 !
NULL
);

193 
i
 = 0, 
√Àm
 = 
	`¨øy_n
(
a
); i <Çelem; i++) {

194 *
ñem
 = 
	`¨øy_gë
(
a
, 
i
);

195 
r°©us_t
 
°©us
;

197 
°©us
 = 
	`func
(
ñem
, 
d©a
);

198 i‡(
°©us
 !
NC_OK
) {

199  
°©us
;

203  
NC_OK
;

204 
	}
}

	@src/nc_array.h

18 #i‚de‡
_NC_ARRAY_H_


19 
	#_NC_ARRAY_H_


	)

21 
	~<nc_c‹e.h
>

23 (*
	t¨øy_com∑ª_t
)(const *, const *);

24 
	$r°©us_t
 (*
	t¨øy_óch_t
)(*, *);

26 
	s¨øy
 {

27 
uöt32_t
 
√Àm
;

28 *
ñem
;

29 
size_t
 
size
;

30 
uöt32_t
 
«Œoc
;

33 
	#nuŒ_¨øy
 { 0, 
NULL
, 0, 0 
	}

	)
}

35 
ölöe
 

36 
	$¨øy_nuŒ
(
¨øy
 *
a
)

38 
a
->
√Àm
 = 0;

39 
a
->
ñem
 = 
NULL
;

40 
a
->
size
 = 0;

41 
a
->
«Œoc
 = 0;

42 
	}
}

44 
ölöe
 

45 
	$¨øy_£t
(
¨øy
 *
a
, *
ñem
, 
size_t
 
size
, 
uöt32_t
 
«Œoc
)

47 
a
->
√Àm
 = 0;

48 
a
->
ñem
 =Élem;

49 
a
->
size
 = size;

50 
a
->
«Œoc
 =Çalloc;

51 
	}
}

53 
ölöe
 
uöt32_t


54 
	$¨øy_n
(c⁄° 
¨øy
 *
a
)

56  
a
->
√Àm
;

57 
	}
}

59 
¨øy
 *
¨øy_¸óã
(
uöt32_t
 
n
, 
size_t
 
size
);

60 
¨øy_de°roy
(
¨øy
 *
a
);

61 
r°©us_t
 
¨øy_öô
(
¨øy
 *
a
, 
uöt32_t
 
n
, 
size_t
 
size
);

62 
¨øy_deöô
(
¨øy
 *
a
);

64 
uöt32_t
 
¨øy_idx
(
¨øy
 *
a
, *
ñem
);

65 *
¨øy_push
(
¨øy
 *
a
);

66 *
¨øy_p›
(
¨øy
 *
a
);

67 *
¨øy_gë
(
¨øy
 *
a
, 
uöt32_t
 
idx
);

68 *
¨øy_t›
(
¨øy
 *
a
);

69 
¨øy_sw≠
(
¨øy
 *
a
, ¨øy *
b
);

70 
¨øy_s‹t
(
¨øy
 *
a
, 
¨øy_com∑ª_t
 
com∑ª
);

71 
r°©us_t
 
¨øy_óch
(
¨øy
 *
a
, 
¨øy_óch_t
 
func
, *
d©a
);

	@src/nc_client.c

18 
	~<nc_c‹e.h
>

19 
	~<nc_£rvî.h
>

20 
	~<nc_˛õ¡.h
>

23 
	$˛õ¡_ªf
(
c⁄n
 *c⁄n, *
ow√r
)

25 
£rvî_poﬁ
 *
poﬁ
 = 
ow√r
;

27 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

28 
	`ASSERT
(
c⁄n
->
ow√r
 =
NULL
);

35 
c⁄n
->
Ámûy
 = 0;

36 
c⁄n
->
addæí
 = 0;

37 
c⁄n
->
addr
 = 
NULL
;

39 
poﬁ
->
nc_c⁄n_q
++;

40 
	`TAILQ_INSERT_TAIL
(&
poﬁ
->
c_c⁄n_q
, 
c⁄n
, 
c⁄n_tqe
);

43 
c⁄n
->
ow√r
 = owner;

45 
	`log_debug
(
LOG_VVERB
, "ª‡c⁄¿%∞ow√∏%∞ötÿpoﬁ '%.*s'", 
c⁄n
, 
poﬁ
,

46 
poﬁ
->
«me
.
Àn
,Öoﬁ->«me.
d©a
);

47 
	}
}

50 
	$˛õ¡_uƒef
(
c⁄n
 *conn)

52 
£rvî_poﬁ
 *
poﬁ
;

54 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

55 
	`ASSERT
(
c⁄n
->
ow√r
 !
NULL
);

57 
poﬁ
 = 
c⁄n
->
ow√r
;

58 
c⁄n
->
ow√r
 = 
NULL
;

60 
	`ASSERT
(
poﬁ
->
nc_c⁄n_q
 != 0);

61 
poﬁ
->
nc_c⁄n_q
--;

62 
	`TAILQ_REMOVE
(&
poﬁ
->
c_c⁄n_q
, 
c⁄n
, 
c⁄n_tqe
);

64 
	`log_debug
(
LOG_VVERB
, "uƒe‡c⁄¿%∞ow√∏%∞‰omÖoﬁ '%.*s'", 
c⁄n
,

65 
poﬁ
,Öoﬁ->
«me
.
Àn
,Öoﬁ->«me.
d©a
);

66 
	}
}

68 
boﬁ


69 
	$˛õ¡_a˘ive
(
c⁄n
 *conn)

71 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

73 
	`ASSERT
(
	`TAILQ_EMPTY
(&
c⁄n
->
imsg_q
));

75 i‡(!
	`TAILQ_EMPTY
(&
c⁄n
->
omsg_q
)) {

76 
	`log_debug
(
LOG_VVERB
, "¯%d i†a˘ive", 
c⁄n
->
sd
);

77  
åue
;

80 i‡(
c⁄n
->
rmsg
 !
NULL
) {

81 
	`log_debug
(
LOG_VVERB
, "¯%d i†a˘ive", 
c⁄n
->
sd
);

82  
åue
;

85 i‡(
c⁄n
->
smsg
 !
NULL
) {

86 
	`log_debug
(
LOG_VVERB
, "¯%d i†a˘ive", 
c⁄n
->
sd
);

87  
åue
;

90 
	`log_debug
(
LOG_VVERB
, "¯%d i†öa˘ive", 
c⁄n
->
sd
);

92  
Ál£
;

93 
	}
}

96 
	$˛õ¡_˛o£_°©s
(
c⁄ãxt
 *
˘x
, 
£rvî_poﬁ
 *
poﬁ
, 
îr_t
 
îr
,

97 
eof
)

99 
	`°©s_poﬁ_de¸
(
˘x
, 
poﬁ
, 
˛õ¡_c⁄√˘i⁄s
);

101 i‡(
eof
) {

102 
	`°©s_poﬁ_ö¸
(
˘x
, 
poﬁ
, 
˛õ¡_eof
);

106 
îr
) {

107 
EPIPE
:

108 
ETIMEDOUT
:

109 
ECONNRESET
:

110 
ECONNABORTED
:

111 
ENOTCONN
:

112 
ENETDOWN
:

113 
ENETUNREACH
:

114 
EHOSTDOWN
:

115 
EHOSTUNREACH
:

117 
	`°©s_poﬁ_ö¸
(
˘x
, 
poﬁ
, 
˛õ¡_îr
);

120 
	}
}

123 
	$˛õ¡_˛o£
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

125 
r°©us_t
 
°©us
;

126 
msg
 *msg, *
nmsg
;

128 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

130 
	`˛õ¡_˛o£_°©s
(
˘x
, 
c⁄n
->
ow√r
, c⁄n->
îr
, c⁄n->
eof
);

132 i‡(
c⁄n
->
sd
 < 0) {

133 
c⁄n
->
	`uƒef
(conn);

134 
	`c⁄n_put
(
c⁄n
);

138 
msg
 = 
c⁄n
->
rmsg
;

139 i‡(
msg
 !
NULL
) {

140 
c⁄n
->
rmsg
 = 
NULL
;

142 
	`ASSERT
(
msg
->
≥î
 =
NULL
);

143 
	`ASSERT
(
msg
->
ªque°
 && !msg->
d⁄e
);

145 
	`log_debug
(
LOG_INFO
, "˛o£ c %d disˇrdögÖídögÑeq %"
PRIu64
"Üen "

146 "%"
PRIu32
"Åy≥ %d", 
c⁄n
->
sd
, 
msg
->
id
, msg->
mÀn
,

147 
msg
->
ty≥
);

149 
	`ªq_put
(
msg
);

152 
	`ASSERT
(
c⁄n
->
smsg
 =
NULL
);

153 
	`ASSERT
(
	`TAILQ_EMPTY
(&
c⁄n
->
imsg_q
));

155 
msg
 = 
	`TAILQ_FIRST
(&
c⁄n
->
omsg_q
); msg !
NULL
; msg = 
nmsg
) {

156 
nmsg
 = 
	`TAILQ_NEXT
(
msg
, 
c_tqe
);

159 
c⁄n
->
	`dequeue_outq
(
˘x
, c⁄n, 
msg
);

161 i‡(
msg
->
d⁄e
) {

162 
	`log_debug
(
LOG_INFO
, "˛o£ c %d disˇrdög %†ªq %"
PRIu64
"Üen "

163 "%"
PRIu32
"Åy≥ %d", 
c⁄n
->
sd
,

164 
msg
->
îr‹
 ? "îr‹": "com∂ëed", msg->
id
, msg->
mÀn
,

165 
msg
->
ty≥
);

166 
	`ªq_put
(
msg
);

168 
msg
->
swÆlow
 = 1;

170 
	`ASSERT
(
msg
->
ªque°
);

171 
	`ASSERT
(
msg
->
≥î
 =
NULL
);

173 
	`log_debug
(
LOG_INFO
, "˛o£ c %d scheduÀ swÆlow o‡ªq %"
PRIu64
" "

174 "À¿%"
PRIu32
"Åy≥ %d", 
c⁄n
->
sd
, 
msg
->
id
, msg->
mÀn
,

175 
msg
->
ty≥
);

178 
	`ASSERT
(
	`TAILQ_EMPTY
(&
c⁄n
->
omsg_q
));

180 
c⁄n
->
	`uƒef
(conn);

182 
°©us
 = 
	`˛o£
(
c⁄n
->
sd
);

183 i‡(
°©us
 < 0) {

184 
	`log_îr‹
("˛o£ c %d faûed, ign‹ed: %s", 
c⁄n
->
sd
, 
	`°ªº‹
(
î∫o
));

186 
c⁄n
->
sd
 = -1;

188 
	`c⁄n_put
(
c⁄n
);

189 
	}
}

	@src/nc_client.h

18 #i‚de‡
_NC_CLIENT_H_


19 
	#_NC_CLIENT_H_


	)

21 
	~<nc_c‹e.h
>

23 
boﬁ
 
˛õ¡_a˘ive
(
c⁄n
 *conn);

24 
˛õ¡_ªf
(
c⁄n
 *c⁄n, *
ow√r
);

25 
˛õ¡_uƒef
(
c⁄n
 *conn);

26 
˛õ¡_˛o£
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

	@src/nc_conf.c

18 
	~<nc_c‹e.h
>

19 
	~<nc_c⁄f.h
>

20 
	~<nc_£rvî.h
>

21 
	~<¥Ÿo/nc_¥Ÿo.h
>

22 
	~"∑rs⁄/∑rs⁄.h
"

23 
	~"zkutû.h
"

25 
	#DEFINE_ACTION
(
_hash
, 
_«me
Ë
	`°rög
(#_«me),

	)

26 
°rög
 
	ghash_°rögs
[] = {

27 
HASH_CODEC
–
DEFINE_ACTION
 )

28 
nuŒ_°rög


30 #unde‡
DEFINE_ACTION


32 
	#DEFINE_ACTION
(
_hash
, 
_«me
Ë
hash_
##_«me,

	)

33 
hash_t
 
	ghash_Ægos
[] = {

34 
HASH_CODEC
–
DEFINE_ACTION
 )

35 
NULL


37 #unde‡
DEFINE_ACTION


39 
	#DEFINE_ACTION
(
_di°
, 
_«me
Ë
	`°rög
(#_«me),

	)

40 
°rög
 
	gdi°_°rögs
[] = {

41 
DIST_CODEC
–
DEFINE_ACTION
 )

42 
nuŒ_°rög


44 #unde‡
DEFINE_ACTION


46 
c⁄f_£rvî_to_c⁄f_li°í
(
c⁄f_£rvî
* 
cs
,

47 
c⁄f_li°í
* 
˛
);

48 
r°©us_t
 
°rög_to_c⁄f_£rvî
(c⁄° 
uöt8_t
* 
ßddr
,

49 
c⁄f_£rvî
* 
§v
);

50 
r°©us_t
 
c⁄f_sh¨ds_to_£rvî_sh¨ds
(
¨øy
* 
cf_sh¨ds
,

51 
¨øy
* 
§v_sh¨ds
,

52 
£rvî_poﬁ
* 
•
);

53 
r°©us_t
 
∑r£_poﬁs_c⁄f_fûe
(
c⁄ãxt
 *
˘x
, 
c⁄f
 *
cf
, c⁄° *
‚ame
);

54 
r°©us_t
 
∑r£_poﬁ_c⁄f_fûe
(
c⁄f
 *
cf
, c⁄° *
poﬁ_«me
);

55 
r°©us_t
 
c⁄f_js⁄_to_c⁄f_poﬁ
(
JSON_Obje˘
 *
pobj
,

56 
c⁄f_poﬁ
 *
poﬁ
);

57 
boﬁ
 
ßnôy_check_poﬁ_c⁄f_js⁄
(
JSON_Obje˘
 *
pobj
);

58 
boﬁ
 
ßnôy_check_poﬁ_«mes_js⁄
(
JSON_Obje˘
 *
pobj
);

59 
boﬁ
 
ßnôy_check_sh¨d_c⁄f_js⁄
(
JSON_Obje˘
 *
sobj
);

60 
di•œy_£rvî_sh¨d
(
sh¨d
 *
§v_sd
);

61 
r°©us_t
 
c⁄f_sh¨d_to_£rvî_sh¨d
(
c⁄f_sh¨d
 *
c⁄f_sd
,

62 
sh¨d
 *
§v_sd
,

63 
£rvî_poﬁ
 *
•
);

64 
£rvî
* 
föd_£rvî_‰om_c⁄f_£rvî
(
c⁄f_£rvî
 *
c⁄f_§v
,

65 
¨øy
 *
§vs
);

66 
boﬁ
 
c⁄f_m©ch_£rvî
(
c⁄f_£rvî
 *
c⁄f_§v
, 
£rvî
 *
§v
);

67 
£t_£rvî_sh¨d_°©us
(
c⁄f_sh¨d
 *
c⁄f_sd
,

68 
sh¨d
 *
§v_sd
);

69 
boﬁ
 
is_vÆid_c⁄f_£rvî
(
c⁄f_£rvî
 *
c⁄f_§v
);

70 
r°©us_t
 
upd©e_£rvî_sh¨ds_‰om_c⁄f_js⁄
(
JSON_Obje˘
 *
pobj
,

71 
¨øy
 *
§v_sh¨ds
,

72 
£rvî_poﬁ
 *
•
);

74 
comm™d
 
	gc⁄f_comm™ds
[] = {

75 { 
°rög
("listen"),

76 
c⁄f_£t_li°í
,

77 
off£tof
(
c⁄f_poﬁ
, 
li°í
) },

79 { 
°rög
("hash"),

80 
c⁄f_£t_hash
,

81 
off£tof
(
c⁄f_poﬁ
, 
hash
) },

83 { 
°rög
("hash_tag"),

84 
c⁄f_£t_hashèg
,

85 
off£tof
(
c⁄f_poﬁ
, 
hash_èg
) },

87 { 
°rög
("distribution"),

88 
c⁄f_£t_di°ributi⁄
,

89 
off£tof
(
c⁄f_poﬁ
, 
di°ributi⁄
) },

91 { 
°rög
("timeout"),

92 
c⁄f_£t_num
,

93 
off£tof
(
c⁄f_poﬁ
, 
timeout
) },

95 { 
°rög
("backlog"),

96 
c⁄f_£t_num
,

97 
off£tof
(
c⁄f_poﬁ
, 
backlog
) },

99 { 
°rög
("client_connections"),

100 
c⁄f_£t_num
,

101 
off£tof
(
c⁄f_poﬁ
, 
˛õ¡_c⁄√˘i⁄s
) },

103 { 
°rög
("redis"),

104 
c⁄f_£t_boﬁ
,

105 
off£tof
(
c⁄f_poﬁ
, 
ªdis
) },

107 { 
°rög
("tcpkeepalive"),

108 
c⁄f_£t_boﬁ
,

109 
off£tof
(
c⁄f_poﬁ
, 
t˝kì∑live
) },

111 { 
°rög
("redis_auth"),

112 
c⁄f_£t_°rög
,

113 
off£tof
(
c⁄f_poﬁ
, 
ªdis_auth
) },

115 { 
°rög
("redis_db"),

116 
c⁄f_£t_num
,

117 
off£tof
(
c⁄f_poﬁ
, 
ªdis_db
) },

119 { 
°rög
("preconnect"),

120 
c⁄f_£t_boﬁ
,

121 
off£tof
(
c⁄f_poﬁ
, 
¥ec⁄√˘
) },

123 { 
°rög
("auto_eject_hosts"),

124 
c⁄f_£t_boﬁ
,

125 
off£tof
(
c⁄f_poﬁ
, 
auto_eje˘_ho°s
) },

127 { 
°rög
("server_connections"),

128 
c⁄f_£t_num
,

129 
off£tof
(
c⁄f_poﬁ
, 
£rvî_c⁄√˘i⁄s
) },

131 { 
°rög
("server_retry_timeout"),

132 
c⁄f_£t_num
,

133 
off£tof
(
c⁄f_poﬁ
, 
£rvî_ªåy_timeout
) },

135 { 
°rög
("server_failure_limit"),

136 
c⁄f_£t_num
,

137 
off£tof
(
c⁄f_poﬁ
, 
£rvî_Áûuª_limô
) },

139 { 
°rög
("servers"),

140 
c⁄f_add_£rvî
,

141 
off£tof
(
c⁄f_poﬁ
, 
£rvî
) },

143 
nuŒ_comm™d


147 
	$c⁄f_£rvî_öô
(
c⁄f_£rvî
 *
cs
)

149 
	`°rög_öô
(&
cs
->
≤ame
);

150 
	`°rög_öô
(&
cs
->
«me
);

151 
	`°rög_öô
(&
cs
->
addr°r
);

152 
cs
->
p‹t
 = 0;

153 
cs
->
weight
 = 0;

155 
	`mem£t
(&
cs
->
öfo
, 0, (cs->info));

157 
cs
->
vÆid
 = 0;

159 
	`log_debug
(
LOG_VVERB
, "öô c⁄‡£rvî %p", 
cs
);

160 
	}
}

163 
	$c⁄f_£rvî_deöô
(
c⁄f_£rvî
 *
cs
)

165 
	`°rög_deöô
(&
cs
->
≤ame
);

166 
	`°rög_deöô
(&
cs
->
«me
);

167 
	`°rög_deöô
(&
cs
->
addr°r
);

168 
cs
->
vÆid
 = 0;

169 
	`log_debug
(
LOG_VVERB
, "deöô c⁄‡£rvî %p", 
cs
);

170 
	}
}

173 
	$c⁄f_sh¨d_deöô
(
c⁄f_sh¨d
 *
cs
) {

174 
	`c⁄f_£rvî_deöô
(&
cs
->
ma°î
);

175 
	`¨øy_n
(&
cs
->
¶aves
) != 0) {

176 
	`c⁄f_£rvî_deöô
(
	`¨øy_p›
(&
cs
->
¶aves
));

178 
	`¨øy_deöô
(&
cs
->
¶aves
);

179 
	}
}

181 
r°©us_t


182 
	$c⁄f_£rvî_to_£rvî
(
c⁄f_£rvî
 *
cs
, 
£rvî
 *
s
)

185 
s
->
ow√r
 = 
NULL
;

187 
	`°rög_öô
(&
s
->
≤ame
);

188 
	`°rög_öô
(&
s
->
«me
);

189 
	`°rög_öô
(&
s
->
addr°r
);

190 
	`°rög_du∂iˇã
(&
s
->
≤ame
, &
cs
->pname);

191 
	`°rög_du∂iˇã
(&
s
->
«me
, &
cs
->name);

192 
	`°rög_du∂iˇã
(&
s
->
addr°r
, &
cs
->addrstr);

197 
s
->
p‹t
 = (
uöt16_t
)
cs
->port;

198 
s
->
weight
 = (
uöt32_t
)
cs
->weight;

200 
	`nc_mem˝y
(&
s
->
öfo
, &
cs
->info, (cs->info));

202 
s
->
ns_c⁄n_q
 = 0;

203 
	`TAILQ_INIT
(&
s
->
s_c⁄n_q
);

205 
s
->
√xt_ªåy
 = 0LL;

206 
s
->
Áûuª_cou¡
 = 0;

208 
	`log_debug
(
LOG_VERB
, "å™sf‹mÅÿ£rvî %"
PRIu32
" '%.*s'",

209 
s
->
idx
, s->
≤ame
.
Àn
, s->≤ame.
d©a
);

211  
NC_OK
;

212 
	}
}

215 
r°©us_t


216 
	$c⁄f_£rvî_óch_å™sf‹m
(*
ñem
, *
d©a
)

218 
c⁄f_£rvî
 *
cs
 = 
ñem
;

219 
¨øy
 *
£rvî
 = 
d©a
;

220 
£rvî
 *
s
;

222 
	`ASSERT
(
cs
->
vÆid
);

224 
s
 = 
	`¨øy_push
(
£rvî
);

225 
	`ASSERT
(
s
 !
NULL
);

227 
s
->
idx
 = 
	`¨øy_idx
(
£rvî
, s);

228 
s
->
ow√r
 = 
NULL
;

230 
s
->
≤ame
 = 
cs
->pname;

231 
s
->
«me
 = 
cs
->name;

232 
s
->
addr°r
 = 
cs
->addrstr;

233 
s
->
p‹t
 = (
uöt16_t
)
cs
->port;

234 
s
->
weight
 = (
uöt32_t
)
cs
->weight;

236 
	`nc_mem˝y
(&
s
->
öfo
, &
cs
->info, (cs->info));

238 
s
->
ns_c⁄n_q
 = 0;

239 
	`TAILQ_INIT
(&
s
->
s_c⁄n_q
);

241 
s
->
√xt_ªåy
 = 0LL;

242 
s
->
Áûuª_cou¡
 = 0;

244 
	`log_debug
(
LOG_VERB
, "å™sf‹mÅÿ£rvî %"
PRIu32
" '%.*s'",

245 
s
->
idx
, s->
≤ame
.
Àn
, s->≤ame.
d©a
);

247  
NC_OK
;

248 
	}
}

250 
r°©us_t


251 
	$c⁄f_poﬁ_öô
(
c⁄f_poﬁ
 *
˝
, 
°rög
 *
«me
)

253 
r°©us_t
 
°©us
;

255 
	`°rög_öô
(&
˝
->
«me
);

257 
	`°rög_öô
(&
˝
->
li°í
.
≤ame
);

258 
	`°rög_öô
(&
˝
->
li°í
.
«me
);

259 
	`°rög_öô
(&
˝
->
ªdis_auth
);

260 
˝
->
li°í
.
p‹t
 = 0;

261 
	`mem£t
(&
˝
->
li°í
.
öfo
, 0, (cp->listen.info));

262 
˝
->
li°í
.
vÆid
 = 0;

264 
˝
->
hash
 = 
CONF_UNSET_HASH
;

265 
	`°rög_öô
(&
˝
->
hash_èg
);

266 
˝
->
di°ributi⁄
 = 
CONF_UNSET_DIST
;

268 
˝
->
timeout
 = 
CONF_UNSET_NUM
;

269 
˝
->
backlog
 = 
CONF_UNSET_NUM
;

271 
˝
->
˛õ¡_c⁄√˘i⁄s
 = 
CONF_UNSET_NUM
;

273 
˝
->
ªdis
 = 
CONF_UNSET_NUM
;

274 
˝
->
t˝kì∑live
 = 
CONF_UNSET_NUM
;

275 
˝
->
ªdis_db
 = 
CONF_UNSET_NUM
;

276 
˝
->
¥ec⁄√˘
 = 
CONF_UNSET_NUM
;

277 
˝
->
auto_eje˘_ho°s
 = 
CONF_UNSET_NUM
;

278 
˝
->
£rvî_c⁄√˘i⁄s
 = 
CONF_UNSET_NUM
;

279 
˝
->
£rvî_ªåy_timeout
 = 
CONF_UNSET_NUM
;

280 
˝
->
£rvî_Áûuª_limô
 = 
CONF_UNSET_NUM
;

282 
	`¨øy_nuŒ
(&
˝
->
£rvî
);

284 
˝
->
vÆid
 = 0;

286 
°©us
 = 
	`°rög_du∂iˇã
(&
˝
->
«me
,Çame);

287 i‡(
°©us
 !
NC_OK
) {

288  
°©us
;

291 
°©us
 = 
	`¨øy_öô
(&
˝
->
£rvî
, 
CONF_DEFAULT_SERVERS
,

292 (
c⁄f_£rvî
));

293 i‡(
°©us
 !
NC_OK
) {

294 
	`°rög_deöô
(&
˝
->
«me
);

295  
°©us
;

298 
	`log_debug
(
LOG_VVERB
, "öô c⁄‡poﬁ %p, '%.*s'", 
˝
, 
«me
->
Àn
,Çame->
d©a
);

300  
NC_OK
;

301 
	}
}

304 
	$c⁄f_poﬁ_deöô
(
c⁄f_poﬁ
 *
˝
)

306 
	`°rög_deöô
(&
˝
->
«me
);

308 
	`°rög_deöô
(&
˝
->
li°í
.
≤ame
);

309 
	`°rög_deöô
(&
˝
->
li°í
.
«me
);

311 i‡(
˝
->
ªdis_auth
.
Àn
 > 0) {

312 
	`°rög_deöô
(&
˝
->
ªdis_auth
);

315 
	`¨øy_n
(&
˝
->
£rvî
) != 0) {

316 
	`c⁄f_£rvî_deöô
(
	`¨øy_p›
(&
˝
->
£rvî
));

318 
	`¨øy_deöô
(&
˝
->
£rvî
);

320 
	`¨øy_n
(&
˝
->
¥oxõs
) != 0) {

322 
	`c⁄f_£rvî_deöô
(
	`¨øy_p›
(&
˝
->
¥oxõs
));

324 
	`¨øy_deöô
(&
˝
->
¥oxõs
);

326 
	`¨øy_n
(&
˝
->
sh¨ds
) != 0) {

327 
	`c⁄f_sh¨d_deöô
(
	`¨øy_p›
(&
˝
->
sh¨ds
));

329 
	`¨øy_deöô
(&
˝
->
sh¨ds
);

331 
	`log_debug
(
LOG_VVERB
, "deöô c⁄‡poﬁ %p", 
˝
);

332 
	}
}

334 
r°©us_t


335 
	$c⁄f_poﬁ_óch_å™sf‹m
(*
ñem
, *
d©a
)

337 
r°©us_t
 
°©us
;

338 
c⁄f_poﬁ
 *
˝
 = 
ñem
;

339 
¨øy
 *
£rvî_poﬁ
 = 
d©a
;

340 
£rvî_poﬁ
 *
•
;

342 
	`ASSERT
(
˝
->
vÆid
);

344 
•
 = 
	`¨øy_push
(
£rvî_poﬁ
);

345 
	`ASSERT
(
•
 !
NULL
);

347 
•
->
idx
 = 
	`¨øy_idx
(
£rvî_poﬁ
, sp);

348 
•
->
˘x
 = 
NULL
;

350 
•
->
p_c⁄n
 = 
NULL
;

351 
•
->
nc_c⁄n_q
 = 0;

352 
	`TAILQ_INIT
(&
•
->
c_c⁄n_q
);

354 
	`¨øy_nuŒ
(&
•
->
£rvî
);

355 
•
->
nc⁄töuum
 = 0;

356 
•
->
n£rvî_c⁄töuum
 = 0;

357 
•
->
c⁄töuum
 = 
NULL
;

358 
•
->
∆ive_£rvî
 = 0;

359 
•
->
√xt_ªbuûd
 = 0LL;

361 
•
->
«me
 = 
˝
->name;

362 
•
->
addr°r
 = 
˝
->
li°í
.
≤ame
;

363 
•
->
p‹t
 = (
uöt16_t
)
˝
->
li°í
.port;

365 
	`nc_mem˝y
(&
•
->
öfo
, &
˝
->
li°í
.info, (cp->listen.info));

366 
•
->
≥rm
 = 
˝
->
li°í
.perm;

368 
•
->
key_hash_ty≥
 = 
˝
->
hash
;

369 
•
->
key_hash
 = 
hash_Ægos
[
˝
->
hash
];

370 
•
->
di°_ty≥
 = 
˝
->
di°ributi⁄
;

371 
•
->
hash_èg
 = 
˝
->hash_tag;

373 
•
->
t˝kì∑live
 = 
˝
->tcpkeepalive ? 1 : 0;

375 
•
->
ªdis
 = 
˝
->redis ? 1 : 0;

376 
•
->
timeout
 = 
˝
->timeout;

377 
•
->
backlog
 = 
˝
->backlog;

378 
•
->
ªdis_db
 = 
˝
->redis_db;

380 
•
->
ªdis_auth
 = 
˝
->redis_auth;

381 
•
->
ªquúe_auth
 = 
˝
->
ªdis_auth
.
Àn
 > 0 ? 1 : 0;

383 
•
->
˛õ¡_c⁄√˘i⁄s
 = (
uöt32_t
)
˝
->client_connections;

384 
•
->
£rvî_c⁄√˘i⁄s
 = (
uöt32_t
)
˝
->server_connections;

385 
•
->
£rvî_ªåy_timeout
 = (
öt64_t
)
˝
->server_retry_timeout * 1000LL;

386 
•
->
£rvî_Áûuª_limô
 = (
uöt32_t
)
˝
->server_failure_limit;

387 
•
->
auto_eje˘_ho°s
 = 
˝
->auto_eject_hosts ? 1 : 0;

388 
•
->
¥ec⁄√˘
 = 
˝
->preconnect ? 1 : 0;

391 
	`±hªad_muãx_öô
(&
•
->
lock
, 
NULL
);

400 
•
->
sh¨d_ønge_mö
 = 
˝
->shard_range_min;

401 
•
->
sh¨d_ønge_max
 = 
˝
->shard_range_max;

403 
	`log_debug
(
LOG_VERB
, "å™sf‹mÅÿpoﬁ %"
PRIu32
" '%.*s'", 
•
->
idx
,

404 
•
->
«me
.
Àn
, sp->«me.
d©a
);

407 
	`log_debug
(
LOG_NOTICE
, "öô sh¨d†©Öoﬁ %d (\"%s\")", 
•
->
idx
, sp->
«me
.
d©a
);

410 
	`¨øy_öô
(&
•
->
sh¨ds
, 16, (
sh¨d
));

412 
°©us
 = 
	`c⁄f_sh¨ds_to_£rvî_sh¨ds
(&
˝
->
sh¨ds
, &
•
->shards, sp);

413 i‡(
°©us
 !
NC_OK
) {

414  
°©us
;

417 
sh¨d
* 
§v_sd
 = 
NULL
;

418 
uöt32_t
 
i
 = 0; i < 
	`¨øy_n
(&
•
->
sh¨ds
); i++) {

419 
§v_sd
 = (
sh¨d
*Ë
	`¨øy_gë
(&
•
->
sh¨ds
, 
i
);

420 
	`di•œy_£rvî_sh¨d
(
§v_sd
);

422 
	`dump_£rvî_poﬁ
(
•
);

424  
NC_OK
;

425 
	}
}

428 
	$c⁄f_dump
(
c⁄f
 *
cf
)

430 
uöt32_t
 
i
, 
j
, 
≈oﬁ
, 
n£rvî
;

431 
c⁄f_poﬁ
 *
˝
;

433 
≈oﬁ
 = 
	`¨øy_n
(&
cf
->
poﬁ
);

434 i‡(
≈oﬁ
 == 0) {

438 
	`log_debug
(
LOG_VVERB
, "%"
PRIu32
"Öoﬁ†ö c⁄figuøti⁄ fûê'%s'", 
≈oﬁ
,

439 
cf
->
‚ame
);

441 
i
 = 0; i < 
≈oﬁ
; i++) {

442 
˝
 = 
	`¨øy_gë
(&
cf
->
poﬁ
, 
i
);

444 
	`log_debug
(
LOG_VVERB
, "%.*s", 
˝
->
«me
.
Àn
, cp->«me.
d©a
);

445 
	`log_debug
(
LOG_VVERB
, "Üisten: %.*s",

446 
˝
->
li°í
.
≤ame
.
Àn
, cp->li°í.≤ame.
d©a
);

447 
	`log_debug
(
LOG_VVERB
, "Åimeout: %d", 
˝
->
timeout
);

448 
	`log_debug
(
LOG_VVERB
, " backlog: %d", 
˝
->
backlog
);

449 
	`log_debug
(
LOG_VVERB
, " hash: %d", 
˝
->
hash
);

450 
	`log_debug
(
LOG_VVERB
, " hash_èg: \"%.*s\"", 
˝
->
hash_èg
.
Àn
,

451 
˝
->
hash_èg
.
d©a
);

452 
	`log_debug
(
LOG_VVERB
, " di°ributi⁄: %d", 
˝
->
di°ributi⁄
);

453 
	`log_debug
(
LOG_VVERB
, " client_connections: %d",

454 
˝
->
˛õ¡_c⁄√˘i⁄s
);

455 
	`log_debug
(
LOG_VVERB
, "Ñedis: %d", 
˝
->
ªdis
);

456 
	`log_debug
(
LOG_VVERB
, "Öªc⁄√˘: %d", 
˝
->
¥ec⁄√˘
);

457 
	`log_debug
(
LOG_VVERB
, "áuto_eje˘_ho°s: %d", 
˝
->
auto_eje˘_ho°s
);

458 
	`log_debug
(
LOG_VVERB
, " server_connections: %d",

459 
˝
->
£rvî_c⁄√˘i⁄s
);

460 
	`log_debug
(
LOG_VVERB
, " server_retry_timeout: %d",

461 
˝
->
£rvî_ªåy_timeout
);

462 
	`log_debug
(
LOG_VVERB
, " server_failure_limit: %d",

463 
˝
->
£rvî_Áûuª_limô
);

465 
n£rvî
 = 
	`¨øy_n
(&
˝
->
£rvî
);

466 
	`log_debug
(
LOG_VVERB
, " sîvîs: %"
PRIu32
"", 
n£rvî
);

468 
j
 = 0; j < 
n£rvî
; j++) {

469 
°rög
 
s
 ;

470 
c⁄f_poﬁ
 *
£rvî
 = (c⁄f_poﬁ *)
	`¨øy_gë
(&
˝
->£rvî, 
j
);

471 
s
 = 
£rvî
->
«me
;

472 
	`log_debug
(
LOG_VVERB
, " %.*s", 
s
.
Àn
, s.
d©a
);

475 
	}
}

477 
r°©us_t


478 
	$c⁄f_yaml_öô
(
c⁄f
 *
cf
)

480 
rv
;

482 
	`ASSERT
(!
cf
->
vÆid_∑r£r
);

484 
rv
 = 
	`f£ek
(
cf
->
fh
, 0L, 
SEEK_SET
);

485 i‡(
rv
 < 0) {

486 
	`log_îr‹
("conf: failedÅo seekÅoÅhe beginning of file '%s': %s",

487 
cf
->
‚ame
, 
	`°ªº‹
(
î∫o
));

488  
NC_ERROR
;

491 
rv
 = 
	`yaml_∑r£r_öôülize
(&
cf
->
∑r£r
);

492 i‡(!
rv
) {

493 
	`log_îr‹
("conf: failed (err %d)Åo initialize yamlÖarser",

494 
cf
->
∑r£r
.
îr‹
);

495  
NC_ERROR
;

498 
	`yaml_∑r£r_£t_öput_fûe
(&
cf
->
∑r£r
, cf->
fh
);

499 
cf
->
vÆid_∑r£r
 = 1;

501  
NC_OK
;

502 
	}
}

505 
	$c⁄f_yaml_deöô
(
c⁄f
 *
cf
)

507 i‡(
cf
->
vÆid_∑r£r
) {

508 
	`yaml_∑r£r_dñëe
(&
cf
->
∑r£r
);

509 
cf
->
vÆid_∑r£r
 = 0;

511 
	}
}

513 
r°©us_t


514 
	$c⁄f_tokí_√xt
(
c⁄f
 *
cf
)

516 
rv
;

518 
	`ASSERT
(
cf
->
vÆid_∑r£r
 && !cf->
vÆid_tokí
);

520 
rv
 = 
	`yaml_∑r£r_sˇn
(&
cf
->
∑r£r
, &cf->
tokí
);

521 i‡(!
rv
) {

522 
	`log_îr‹
("c⁄f: faûed (î∏%dËtÿsˇ¿√xàtokí", 
cf
->
∑r£r
.
îr‹
);

523  
NC_ERROR
;

525 
cf
->
vÆid_tokí
 = 1;

527  
NC_OK
;

528 
	}
}

531 
	$c⁄f_tokí_d⁄e
(
c⁄f
 *
cf
)

533 
	`ASSERT
(
cf
->
vÆid_∑r£r
);

535 i‡(
cf
->
vÆid_tokí
) {

536 
	`yaml_tokí_dñëe
(&
cf
->
tokí
);

537 
cf
->
vÆid_tokí
 = 0;

539 
	}
}

541 
r°©us_t


542 
	$c⁄f_evít_√xt
(
c⁄f
 *
cf
)

544 
rv
;

546 
	`ASSERT
(
cf
->
vÆid_∑r£r
 && !cf->
vÆid_evít
);

548 
rv
 = 
	`yaml_∑r£r_∑r£
(&
cf
->
∑r£r
, &cf->
evít
);

549 i‡(!
rv
) {

550 
	`log_îr‹
("c⁄f: faûed (î∏%dËtÿgëÇexàevít", 
cf
->
∑r£r
.
îr‹
);

551  
NC_ERROR
;

553 
cf
->
vÆid_evít
 = 1;

555  
NC_OK
;

556 
	}
}

559 
	$c⁄f_evít_d⁄e
(
c⁄f
 *
cf
)

561 i‡(
cf
->
vÆid_evít
) {

562 
	`yaml_evít_dñëe
(&
cf
->
evít
);

563 
cf
->
vÆid_evít
 = 0;

565 
	}
}

567 
r°©us_t


568 
	$c⁄f_push_sˇœr
(
c⁄f
 *
cf
)

570 
r°©us_t
 
°©us
;

571 
°rög
 *
vÆue
;

572 
uöt8_t
 *
sˇœr
;

573 
uöt32_t
 
sˇœr_Àn
;

575 
sˇœr
 = 
cf
->
evít
.
d©a
.sˇœr.
vÆue
;

576 
sˇœr_Àn
 = (
uöt32_t
)
cf
->
evít
.
d©a
.
sˇœr
.
Àngth
;

577 i‡(
sˇœr_Àn
 == 0) {

578  
NC_ERROR
;

581 
	`log_debug
(
LOG_VVERB
, "push '%.*s'", 
sˇœr_Àn
, 
sˇœr
);

583 
vÆue
 = 
	`¨øy_push
(&
cf
->
¨g
);

584 i‡(
vÆue
 =
NULL
) {

585  
NC_ENOMEM
;

587 
	`°rög_öô
(
vÆue
);

589 
°©us
 = 
	`°rög_c›y
(
vÆue
, 
sˇœr
, 
sˇœr_Àn
);

590 i‡(
°©us
 !
NC_OK
) {

591 
	`¨øy_p›
(&
cf
->
¨g
);

592  
°©us
;

595  
NC_OK
;

596 
	}
}

599 
	$c⁄f_p›_sˇœr
(
c⁄f
 *
cf
)

601 
°rög
 *
vÆue
;

603 
vÆue
 = 
	`¨øy_p›
(&
cf
->
¨g
);

604 
	`log_debug
(
LOG_VVERB
, "p› '%.*s'", 
vÆue
->
Àn
, vÆue->
d©a
);

605 
	`°rög_deöô
(
vÆue
);

606 
	}
}

608 
r°©us_t


609 
	$c⁄f_h™dÀr
(
c⁄f
 *
cf
, *
d©a
)

611 
comm™d
 *
cmd
;

612 
°rög
 *
key
, *
vÆue
;

613 
uöt32_t
 
«rg
;

615 i‡(
	`¨øy_n
(&
cf
->
¨g
) == 1) {

616 
vÆue
 = 
	`¨øy_t›
(&
cf
->
¨g
);

617 
	`log_debug
(
LOG_VVERB
, "c⁄‡h™dÀ∏⁄ '%.*s'", 
vÆue
->
Àn
, vÆue->
d©a
);

618  
	`c⁄f_poﬁ_öô
(
d©a
, 
vÆue
);

621 
«rg
 = 
	`¨øy_n
(&
cf
->
¨g
);

622 
vÆue
 = 
	`¨øy_gë
(&
cf
->
¨g
, 
«rg
 - 1);

623 
key
 = 
	`¨øy_gë
(&
cf
->
¨g
, 
«rg
 - 2);

625 
	`log_debug
(
LOG_VVERB
, "c⁄‡h™dÀ∏⁄ %.*s: %.*s", 
key
->
Àn
, key->
d©a
,

626 
vÆue
->
Àn
, vÆue->
d©a
);

628 
cmd
 = 
c⁄f_comm™ds
; cmd->
«me
.
Àn
 != 0; cmd++) {

629 *
rv
;

631 i‡(
	`°rög_com∑ª
(
key
, &
cmd
->
«me
) != 0) {

635 
rv
 = 
cmd
->
	`£t
(
cf
, cmd, 
d©a
);

636 i‡(
rv
 !
CONF_OK
) {

637 
	`log_îr‹
("c⁄f: dúe˘ivê\"%.*s\" %s", 
key
->
Àn
, key->
d©a
, 
rv
);

638  
NC_ERROR
;

641  
NC_OK
;

644 
	`log_îr‹
("c⁄f: dúe˘ivê\"%.*s\" i†unknown", 
key
->
Àn
, key->
d©a
);

646  
NC_ERROR
;

647 
	}
}

649 
r°©us_t


650 
	$c⁄f_begö_∑r£
(
c⁄f
 *
cf
)

652 
r°©us_t
 
°©us
;

653 
boﬁ
 
d⁄e
;

655 
	`ASSERT
(
cf
->
sound
 && !cf->
∑r£d
);

656 
	`ASSERT
(
cf
->
dïth
 == 0);

658 
°©us
 = 
	`c⁄f_yaml_öô
(
cf
);

659 i‡(
°©us
 !
NC_OK
) {

660  
°©us
;

663 
d⁄e
 = 
Ál£
;

665 
°©us
 = 
	`c⁄f_evít_√xt
(
cf
);

666 i‡(
°©us
 !
NC_OK
) {

667  
°©us
;

670 
	`log_debug
(
LOG_VVERB
, "√xàbegöÉvíà%d", 
cf
->
evít
.
ty≥
);

672 
cf
->
evít
.
ty≥
) {

673 
YAML_STREAM_START_EVENT
:

674 
YAML_DOCUMENT_START_EVENT
:

677 
YAML_MAPPING_START_EVENT
:

678 
	`ASSERT
(
cf
->
dïth
 < 
CONF_MAX_DEPTH
);

679 
cf
->
dïth
++;

680 
d⁄e
 = 
åue
;

684 
	`NOT_REACHED
();

687 
	`c⁄f_evít_d⁄e
(
cf
);

689 } !
d⁄e
);

691  
NC_OK
;

692 
	}
}

694 
r°©us_t


695 
	$c⁄f_íd_∑r£
(
c⁄f
 *
cf
)

697 
r°©us_t
 
°©us
;

698 
boﬁ
 
d⁄e
;

700 
	`ASSERT
(
cf
->
sound
 && !cf->
∑r£d
);

701 
	`ASSERT
(
cf
->
dïth
 == 0);

703 
d⁄e
 = 
Ál£
;

705 
°©us
 = 
	`c⁄f_evít_√xt
(
cf
);

706 i‡(
°©us
 !
NC_OK
) {

707  
°©us
;

710 
	`log_debug
(
LOG_VVERB
, "√xàídÉvíà%d", 
cf
->
evít
.
ty≥
);

712 
cf
->
evít
.
ty≥
) {

713 
YAML_STREAM_END_EVENT
:

714 
d⁄e
 = 
åue
;

717 
YAML_DOCUMENT_END_EVENT
:

721 
	`NOT_REACHED
();

724 
	`c⁄f_evít_d⁄e
(
cf
);

725 } !
d⁄e
);

727 
	`c⁄f_yaml_deöô
(
cf
);

729  
NC_OK
;

730 
	}
}

732 
r°©us_t


733 
	$c⁄f_∑r£_c‹e
(
c⁄f
 *
cf
, *
d©a
)

735 
r°©us_t
 
°©us
;

736 
boﬁ
 
d⁄e
, 
Àaf
, 
√w_poﬁ
;

738 
	`ASSERT
(
cf
->
sound
);

740 
°©us
 = 
	`c⁄f_evít_√xt
(
cf
);

741 i‡(
°©us
 !
NC_OK
) {

742  
°©us
;

745 
	`log_debug
(
LOG_VVERB
, "√xàevíà%d dïth %"
PRIu32
" seq %d", 
cf
->
evít
.
ty≥
,

746 
cf
->
dïth
, cf->
£q
);

748 
d⁄e
 = 
Ál£
;

749 
Àaf
 = 
Ál£
;

750 
√w_poﬁ
 = 
Ál£
;

752 
cf
->
evít
.
ty≥
) {

753 
YAML_MAPPING_END_EVENT
:

754 
cf
->
dïth
--;

755 i‡(
cf
->
dïth
 == 1) {

756 
	`c⁄f_p›_sˇœr
(
cf
);

757 } i‡(
cf
->
dïth
 == 0) {

758 
d⁄e
 = 
åue
;

762 
YAML_MAPPING_START_EVENT
:

763 
cf
->
dïth
++;

766 
YAML_SEQUENCE_START_EVENT
:

767 
cf
->
£q
 = 1;

770 
YAML_SEQUENCE_END_EVENT
:

771 
	`c⁄f_p›_sˇœr
(
cf
);

772 
cf
->
£q
 = 0;

775 
YAML_SCALAR_EVENT
:

776 
°©us
 = 
	`c⁄f_push_sˇœr
(
cf
);

777 i‡(
°©us
 !
NC_OK
) {

782 i‡(
cf
->
£q
) {

784 
	`ASSERT
(
cf
->
dïth
 =
CONF_MAX_DEPTH
);

785 
Àaf
 = 
åue
;

786 } i‡(
cf
->
dïth
 =
CONF_ROOT_DEPTH
) {

788 
d©a
 = 
	`¨øy_push
(&
cf
->
poﬁ
);

789 i‡(
d©a
 =
NULL
) {

790 
°©us
 = 
NC_ENOMEM
;

793 
√w_poﬁ
 = 
åue
;

794 } i‡(
	`¨øy_n
(&
cf
->
¨g
Ë=cf->
dïth
 + 1) {

796 
	`ASSERT
(
cf
->
dïth
 =
CONF_MAX_DEPTH
);

797 
Àaf
 = 
åue
;

802 
	`NOT_REACHED
();

806 
	`c⁄f_evít_d⁄e
(
cf
);

808 i‡(
°©us
 !
NC_OK
) {

809  
°©us
;

812 i‡(
d⁄e
) {

814  
NC_OK
;

817 i‡(
Àaf
 || 
√w_poﬁ
) {

818 
°©us
 = 
	`c⁄f_h™dÀr
(
cf
, 
d©a
);

820 i‡(
Àaf
) {

821 
	`c⁄f_p›_sˇœr
(
cf
);

822 i‡(!
cf
->
£q
) {

823 
	`c⁄f_p›_sˇœr
(
cf
);

827 i‡(
°©us
 !
NC_OK
) {

828  
°©us
;

832  
	`c⁄f_∑r£_c‹e
(
cf
, 
d©a
);

833 
	}
}

835 
r°©us_t


836 
	$c⁄f_∑r£
(
c⁄f
 *
cf
)

838 
r°©us_t
 
°©us
;

840 
	`ASSERT
(
cf
->
sound
 && !cf->
∑r£d
);

841 
	`ASSERT
(
	`¨øy_n
(&
cf
->
¨g
) == 0);

843 
°©us
 = 
	`c⁄f_begö_∑r£
(
cf
);

844 i‡(
°©us
 !
NC_OK
) {

845  
°©us
;

848 
°©us
 = 
	`c⁄f_∑r£_c‹e
(
cf
, 
NULL
);

849 i‡(
°©us
 !
NC_OK
) {

850  
°©us
;

853 
°©us
 = 
	`c⁄f_íd_∑r£
(
cf
);

854 i‡(
°©us
 !
NC_OK
) {

855  
°©us
;

858 
cf
->
∑r£d
 = 1;

860  
NC_OK
;

861 
	}
}

863 
c⁄f
 *

864 
	$c⁄f_›í
(*
fûíame
)

866 
r°©us_t
 
°©us
;

867 
c⁄f
 *
cf
;

868 
FILE
 *
fh
;

870 
fh
 = 
	`f›í
(
fûíame
, "r");

871 i‡(
fh
 =
NULL
) {

872 
	`log_îr‹
("conf: failedÅo open configuration '%s': %s",

873 
fûíame
,

874 
	`°ªº‹
(
î∫o
));

875  
NULL
;

878 
cf
 = 
	`nc_Æloc
((*cf));

879 i‡(
cf
 =
NULL
) {

880 
	`f˛o£
(
fh
);

881  
NULL
;

883 
	`mem£t
(
cf
, 0, (*cf));

885 
°©us
 = 
	`¨øy_öô
(&
cf
->
¨g
, 
CONF_DEFAULT_ARGS
, (
°rög
));

886 i‡(
°©us
 !
NC_OK
) {

887 
	`nc_‰ì
(
cf
);

888 
	`f˛o£
(
fh
);

889  
NULL
;

892 
°©us
 = 
	`¨øy_öô
(&
cf
->
poﬁ
, 
CONF_DEFAULT_POOL
, (
c⁄f_poﬁ
));

893 i‡(
°©us
 !
NC_OK
) {

894 
	`¨øy_deöô
(&
cf
->
¨g
);

895 
	`nc_‰ì
(
cf
);

896 
	`f˛o£
(
fh
);

897  
NULL
;

900 
cf
->
‚ame
 = 
fûíame
;

901 
cf
->
fh
 = fh;

902 
cf
->
dïth
 = 0;

904 
cf
->
£q
 = 0;

905 
cf
->
vÆid_∑r£r
 = 0;

906 
cf
->
vÆid_evít
 = 0;

907 
cf
->
vÆid_tokí
 = 0;

908 
cf
->
sound
 = 0;

909 
cf
->
∑r£d
 = 0;

910 
cf
->
vÆid
 = 0;

912 
	`log_debug
(
LOG_VVERB
, "›íed c⁄‡'%s'", 
fûíame
);

914  
cf
;

915 
	}
}

917 
r°©us_t


918 
	$c⁄f_vÆid©e_documít
(
c⁄f
 *
cf
)

920 
r°©us_t
 
°©us
;

921 
uöt32_t
 
cou¡
;

922 
boﬁ
 
d⁄e
;

924 
°©us
 = 
	`c⁄f_yaml_öô
(
cf
);

925 i‡(
°©us
 !
NC_OK
) {

926  
°©us
;

929 
cou¡
 = 0;

930 
d⁄e
 = 
Ál£
;

932 
yaml_documít_t
 
documít
;

933 
yaml_node_t
 *
node
;

934 
rv
;

936 
rv
 = 
	`yaml_∑r£r_lﬂd
(&
cf
->
∑r£r
, &
documít
);

937 i‡(!
rv
) {

938 
	`log_îr‹
("conf: failed (err %d)Åo getÅheÇext yaml document",

939 
cf
->
∑r£r
.
îr‹
);

940 
	`c⁄f_yaml_deöô
(
cf
);

941  
NC_ERROR
;

944 
node
 = 
	`yaml_documít_gë_roŸ_node
(&
documít
);

945 i‡(
node
 =
NULL
) {

946 
d⁄e
 = 
åue
;

948 
cou¡
++;

951 
	`yaml_documít_dñëe
(&
documít
);

952 } !
d⁄e
);

954 
	`c⁄f_yaml_deöô
(
cf
);

956 i‡(
cou¡
 != 1) {

957 
	`log_îr‹
("c⁄f: '%s' mu° c⁄èö o∆y 1 documít; found %"
PRIu32
" "

958 "documíts", 
cf
->
‚ame
, 
cou¡
);

959  
NC_ERROR
;

962  
NC_OK
;

963 
	}
}

965 
r°©us_t


966 
	$c⁄f_vÆid©e_tokís
(
c⁄f
 *
cf
)

968 
r°©us_t
 
°©us
;

969 
boﬁ
 
d⁄e
, 
îr‹
;

970 
ty≥
;

972 
°©us
 = 
	`c⁄f_yaml_öô
(
cf
);

973 i‡(
°©us
 !
NC_OK
) {

974  
°©us
;

977 
d⁄e
 = 
Ál£
;

978 
îr‹
 = 
Ál£
;

980 
°©us
 = 
	`c⁄f_tokí_√xt
(
cf
);

981 i‡(
°©us
 !
NC_OK
) {

982  
°©us
;

984 
ty≥
 = 
cf
->
tokí
.type;

986 
ty≥
) {

987 
YAML_NO_TOKEN
:

988 
îr‹
 = 
åue
;

989 
	`log_îr‹
("c⁄f:Çÿtokí (%dËi†dißŒowed", 
ty≥
);

992 
YAML_VERSION_DIRECTIVE_TOKEN
:

993 
îr‹
 = 
åue
;

994 
	`log_îr‹
("c⁄f: vîsi⁄ dúe˘ivêtokí (%dËi†dißŒowed", 
ty≥
);

997 
YAML_TAG_DIRECTIVE_TOKEN
:

998 
îr‹
 = 
åue
;

999 
	`log_îr‹
("c⁄f:Åag dúe˘ivêtokí (%dËi†dißŒowed", 
ty≥
);

1002 
YAML_DOCUMENT_START_TOKEN
:

1003 
îr‹
 = 
åue
;

1004 
	`log_îr‹
("c⁄f: documíà°¨àtokí (%dËi†dißŒowed", 
ty≥
);

1007 
YAML_DOCUMENT_END_TOKEN
:

1008 
îr‹
 = 
åue
;

1009 
	`log_îr‹
("c⁄f: documíàídÅokí (%dËi†dißŒowed", 
ty≥
);

1012 
YAML_FLOW_SEQUENCE_START_TOKEN
:

1013 
îr‹
 = 
åue
;

1014 
	`log_îr‹
("c⁄f: flow sequí˚ sèπÅokí (%dËi†dißŒowed", 
ty≥
);

1017 
YAML_FLOW_SEQUENCE_END_TOKEN
:

1018 
îr‹
 = 
åue
;

1019 
	`log_îr‹
("c⁄f: flow sequí˚ÉndÅokí (%dËi†dißŒowed", 
ty≥
);

1022 
YAML_FLOW_MAPPING_START_TOKEN
:

1023 
îr‹
 = 
åue
;

1024 
	`log_îr‹
("c⁄f: flow m≠pög sèπÅokí (%dËi†dißŒowed", 
ty≥
);

1027 
YAML_FLOW_MAPPING_END_TOKEN
:

1028 
îr‹
 = 
åue
;

1029 
	`log_îr‹
("c⁄f: flow m≠pögÉndÅokí (%dËi†dißŒowed", 
ty≥
);

1032 
YAML_FLOW_ENTRY_TOKEN
:

1033 
îr‹
 = 
åue
;

1034 
	`log_îr‹
("c⁄f: flowÉ¡ryÅokí (%dËi†dißŒowed", 
ty≥
);

1037 
YAML_ALIAS_TOKEN
:

1038 
îr‹
 = 
åue
;

1039 
	`log_îr‹
("c⁄f:álü†tokí (%dËi†dißŒowed", 
ty≥
);

1042 
YAML_ANCHOR_TOKEN
:

1043 
îr‹
 = 
åue
;

1044 
	`log_îr‹
("c⁄f:ánch‹Åokí (%dËi†dißŒowed", 
ty≥
);

1047 
YAML_TAG_TOKEN
:

1048 
îr‹
 = 
åue
;

1049 
	`log_îr‹
("c⁄f:ÅagÅokí (%dËi†dißŒowed", 
ty≥
);

1052 
YAML_BLOCK_SEQUENCE_START_TOKEN
:

1053 
YAML_BLOCK_MAPPING_START_TOKEN
:

1054 
YAML_BLOCK_END_TOKEN
:

1055 
YAML_BLOCK_ENTRY_TOKEN
:

1058 
YAML_KEY_TOKEN
:

1059 
YAML_VALUE_TOKEN
:

1060 
YAML_SCALAR_TOKEN
:

1063 
YAML_STREAM_START_TOKEN
:

1066 
YAML_STREAM_END_TOKEN
:

1067 
d⁄e
 = 
åue
;

1068 
	`log_debug
(
LOG_VVERB
, "c⁄‡'%s' ha†vÆidÅokís", 
cf
->
‚ame
);

1072 
îr‹
 = 
åue
;

1073 
	`log_îr‹
("c⁄f: unknow¿tokí (%dËi†dißŒowed", 
ty≥
);

1077 
	`c⁄f_tokí_d⁄e
(
cf
);

1078 } !
d⁄e
 && !
îr‹
);

1080 
	`c⁄f_yaml_deöô
(
cf
);

1082  !
îr‹
 ? 
NC_OK
 : 
NC_ERROR
;

1083 
	}
}

1085 
r°©us_t


1086 
	$c⁄f_vÆid©e_°ru˘uª
(
c⁄f
 *
cf
)

1088 
r°©us_t
 
°©us
;

1089 
ty≥
, 
dïth
;

1090 
uöt32_t
 
i
, 
cou¡
[
CONF_MAX_DEPTH
 + 1];

1091 
boﬁ
 
d⁄e
, 
îr‹
, 
£q
;

1093 
°©us
 = 
	`c⁄f_yaml_öô
(
cf
);

1094 i‡(
°©us
 !
NC_OK
) {

1095  
°©us
;

1098 
d⁄e
 = 
Ál£
;

1099 
îr‹
 = 
Ál£
;

1100 
£q
 = 
Ál£
;

1101 
dïth
 = 0;

1102 
i
 = 0; i < 
CONF_MAX_DEPTH
 + 1; i++) {

1103 
cou¡
[
i
] = 0;

1129 
°©us
 = 
	`c⁄f_evít_√xt
(
cf
);

1130 i‡(
°©us
 !
NC_OK
) {

1131  
°©us
;

1134 
ty≥
 = 
cf
->
evít
.type;

1136 
	`log_debug
(
LOG_VVERB
, "√xàevíà%d dïth %d seq %d", 
ty≥
, 
dïth
, 
£q
);

1138 
ty≥
) {

1139 
YAML_STREAM_START_EVENT
:

1140 
YAML_DOCUMENT_START_EVENT
:

1143 
YAML_DOCUMENT_END_EVENT
:

1146 
YAML_STREAM_END_EVENT
:

1147 
d⁄e
 = 
åue
;

1150 
YAML_MAPPING_START_EVENT
:

1151 i‡(
dïth
 =
CONF_ROOT_DEPTH
 && 
cou¡
[depth] != 1) {

1152 
îr‹
 = 
åue
;

1153 
	`log_îr‹
("conf: '%s' has moreÅhan one \"key:value\"át depth"

1154 " %d", 
cf
->
‚ame
, 
dïth
);

1155 } i‡(
dïth
 >
CONF_MAX_DEPTH
) {

1156 
îr‹
 = 
åue
;

1157 
	`log_îr‹
("c⁄f: '%s' ha†®dïth gª©îÅh™ %d", 
cf
->
‚ame
,

1158 
CONF_MAX_DEPTH
);

1160 
dïth
++;

1163 
YAML_MAPPING_END_EVENT
:

1164 i‡(
dïth
 =
CONF_MAX_DEPTH
) {

1165 i‡(
£q
) {

1166 
£q
 = 
Ál£
;

1168 
îr‹
 = 
åue
;

1169 
	`log_îr‹
("conf: '%s' missing sequence directiveát depth "

1170 "%d", 
cf
->
‚ame
, 
dïth
);

1173 
dïth
--;

1174 
cou¡
[
dïth
] = 0;

1177 
YAML_SEQUENCE_START_EVENT
:

1178 i‡(
£q
) {

1179 
îr‹
 = 
åue
;

1180 
	`log_îr‹
("conf: '%s' has moreÅhan one sequence directive",

1181 
cf
->
‚ame
);

1182 } i‡(
dïth
 !
CONF_MAX_DEPTH
) {

1183 
îr‹
 = 
åue
;

1184 
	`log_îr‹
("conf: '%s' has sequenceát depth %d instead of %d",

1185 
cf
->
‚ame
, 
dïth
, 
CONF_MAX_DEPTH
);

1186 } i‡(
cou¡
[
dïth
] != 1) {

1187 
îr‹
 = 
åue
;

1188 
	`log_îr‹
("conf: '%s' has invalid \"key:value\"át depth %d",

1189 
cf
->
‚ame
, 
dïth
);

1191 
£q
 = 
åue
;

1194 
YAML_SEQUENCE_END_EVENT
:

1195 
	`ASSERT
(
dïth
 =
CONF_MAX_DEPTH
);

1196 
cou¡
[
dïth
] = 0;

1199 
YAML_SCALAR_EVENT
:

1200 i‡(
dïth
 == 0) {

1201 
îr‹
 = 
åue
;

1202 
	`log_îr‹
("conf: '%s' has invalidÉmpty \"key:\"át depth %d",

1203 
cf
->
‚ame
, 
dïth
);

1204 } i‡(
dïth
 =
CONF_ROOT_DEPTH
 && 
cou¡
[depth] != 0) {

1205 
îr‹
 = 
åue
;

1206 
	`log_îr‹
("conf: '%s' has invalid mapping \"key:\"át depth %d",

1207 
cf
->
‚ame
, 
dïth
);

1208 } i‡(
dïth
 =
CONF_MAX_DEPTH
 && 
cou¡
[depth] == 2) {

1210 
cou¡
[
dïth
] = 0;

1212 
cou¡
[
dïth
]++;

1216 
	`NOT_REACHED
();

1219 
	`c⁄f_evít_d⁄e
(
cf
);

1220 } !
d⁄e
 && !
îr‹
);

1222 
	`c⁄f_yaml_deöô
(
cf
);

1224  !
îr‹
 ? 
NC_OK
 : 
NC_ERROR
;

1225 
	}
}

1227 
r°©us_t


1228 
	$c⁄f_¥e_vÆid©e
(
c⁄f
 *
cf
)

1230 
r°©us_t
 
°©us
;

1232 
°©us
 = 
	`c⁄f_vÆid©e_documít
(
cf
);

1233 i‡(
°©us
 !
NC_OK
) {

1234  
°©us
;

1237 
°©us
 = 
	`c⁄f_vÆid©e_tokís
(
cf
);

1238 i‡(
°©us
 !
NC_OK
) {

1239  
°©us
;

1242 
°©us
 = 
	`c⁄f_vÆid©e_°ru˘uª
(
cf
);

1243 i‡(
°©us
 !
NC_OK
) {

1244  
°©us
;

1247 
cf
->
sound
 = 1;

1249  
NC_OK
;

1250 
	}
}

1253 
	$c⁄f_£rvî_«me_cmp
(c⁄° *
t1
, c⁄° *
t2
)

1255 c⁄° 
c⁄f_£rvî
 *
s1
 = 
t1
, *
s2
 = 
t2
;

1257  
	`°rög_com∑ª
(&
s1
->
«me
, &
s2
->name);

1258 
	}
}

1261 
	$c⁄f_poﬁ_«me_cmp
(c⁄° *
t1
, c⁄° *
t2
)

1263 c⁄° 
c⁄f_poﬁ
 *
p1
 = 
t1
, *
p2
 = 
t2
;

1265  
	`°rög_com∑ª
(&
p1
->
«me
, &
p2
->name);

1266 
	}
}

1269 
	$c⁄f_poﬁ_li°í_cmp
(c⁄° *
t1
, c⁄° *
t2
)

1271 c⁄° 
c⁄f_poﬁ
 *
p1
 = 
t1
, *
p2
 = 
t2
;

1273  
	`°rög_com∑ª
(&
p1
->
li°í
.
≤ame
, &
p2
->listen.pname);

1274 
	}
}

1276 
r°©us_t


1277 
	$c⁄f_vÆid©e_£rvî
(
c⁄f
 *
cf
, 
c⁄f_poﬁ
 *
˝
)

1279 
uöt32_t
 
i
, 
n£rvî
;

1280 
boﬁ
 
vÆid
;

1282 
n£rvî
 = 
	`¨øy_n
(&
˝
->
£rvî
);

1283 i‡(
n£rvî
 == 0) {

1284 
	`log_îr‹
("c⁄f:Öoﬁ '%.*s' ha†nÿ£rvîs", 
˝
->
«me
.
Àn
,

1285 
˝
->
«me
.
d©a
);

1286  
NC_ERROR
;

1295 
	`¨øy_s‹t
(&
˝
->
£rvî
, 
c⁄f_£rvî_«me_cmp
);

1296 
vÆid
 = 
åue
, 
i
 = 0; i < 
n£rvî
 - 1; i++) {

1297 
c⁄f_£rvî
 *
cs1
, *
cs2
;

1299 
cs1
 = 
	`¨øy_gë
(&
˝
->
£rvî
, 
i
);

1300 
cs2
 = 
	`¨øy_gë
(&
˝
->
£rvî
, 
i
 + 1);

1302 i‡(
	`°rög_com∑ª
(&
cs1
->
«me
, &
cs2
->name) == 0) {

1303 
	`log_îr‹
("conf:Öool '%.*s' has servers with sameÇame '%.*s'",

1304 
˝
->
«me
.
Àn
, cp->«me.
d©a
, 
cs1
->name.len,

1305 
cs1
->
«me
.
d©a
);

1306 
vÆid
 = 
Ál£
;

1310 i‡(!
vÆid
) {

1311  
NC_ERROR
;

1314  
NC_OK
;

1315 
	}
}

1317 
r°©us_t


1318 
	$c⁄f_vÆid©e_poﬁ
(
c⁄f
 *
cf
, 
c⁄f_poﬁ
 *
˝
)

1320 
r°©us_t
 
°©us
;

1322 
	`ASSERT
(!
˝
->
vÆid
);

1323 
	`ASSERT
(!
	`°rög_em±y
(&
˝
->
«me
));

1325 i‡(!
˝
->
li°í
.
vÆid
) {

1326 
	`log_îr‹
("conf: directive \"listen:\" is missing");

1327  
NC_ERROR
;

1332 i‡(
˝
->
di°ributi⁄
 =
CONF_UNSET_DIST
) {

1333 
˝
->
di°ributi⁄
 = 
CONF_DEFAULT_DIST
;

1336 i‡(
˝
->
hash
 =
CONF_UNSET_HASH
) {

1337 
˝
->
hash
 = 
CONF_DEFAULT_HASH
;

1340 i‡(
˝
->
timeout
 =
CONF_UNSET_NUM
) {

1341 
˝
->
timeout
 = 
CONF_DEFAULT_TIMEOUT
;

1344 i‡(
˝
->
backlog
 =
CONF_UNSET_NUM
) {

1345 
˝
->
backlog
 = 
CONF_DEFAULT_LISTEN_BACKLOG
;

1348 
˝
->
˛õ¡_c⁄√˘i⁄s
 = 
CONF_DEFAULT_CLIENT_CONNECTIONS
;

1350 i‡(
˝
->
ªdis
 =
CONF_UNSET_NUM
) {

1351 
˝
->
ªdis
 = 
CONF_DEFAULT_REDIS
;

1354 i‡(
˝
->
t˝kì∑live
 =
CONF_UNSET_NUM
) {

1355 
˝
->
t˝kì∑live
 = 
CONF_DEFAULT_TCPKEEPALIVE
;

1358 i‡(
˝
->
ªdis_db
 =
CONF_UNSET_NUM
) {

1359 
˝
->
ªdis_db
 = 
CONF_DEFAULT_REDIS_DB
;

1362 i‡(
˝
->
¥ec⁄√˘
 =
CONF_UNSET_NUM
) {

1363 
˝
->
¥ec⁄√˘
 = 
CONF_DEFAULT_PRECONNECT
;

1366 i‡(
˝
->
auto_eje˘_ho°s
 =
CONF_UNSET_NUM
) {

1367 
˝
->
auto_eje˘_ho°s
 = 
CONF_DEFAULT_AUTO_EJECT_HOSTS
;

1370 i‡(
˝
->
£rvî_c⁄√˘i⁄s
 =
CONF_UNSET_NUM
) {

1371 
˝
->
£rvî_c⁄√˘i⁄s
 = 
CONF_DEFAULT_SERVER_CONNECTIONS
;

1372 } i‡(
˝
->
£rvî_c⁄√˘i⁄s
 == 0) {

1373 
	`log_îr‹
("conf: directive \"server_connections:\" cannot be 0");

1374  
NC_ERROR
;

1377 i‡(
˝
->
£rvî_ªåy_timeout
 =
CONF_UNSET_NUM
) {

1378 
˝
->
£rvî_ªåy_timeout
 = 
CONF_DEFAULT_SERVER_RETRY_TIMEOUT
;

1381 i‡(
˝
->
£rvî_Áûuª_limô
 =
CONF_UNSET_NUM
) {

1382 
˝
->
£rvî_Áûuª_limô
 = 
CONF_DEFAULT_SERVER_FAILURE_LIMIT
;

1385 i‡(!
˝
->
ªdis
 && cp->
ªdis_auth
.
Àn
 > 0) {

1386 
	`log_îr‹
("conf: directive \"redis_auth:\" is only valid foráÑedisÖool");

1387  
NC_ERROR
;

1390 
°©us
 = 
	`c⁄f_vÆid©e_£rvî
(
cf
, 
˝
);

1391 i‡(
°©us
 !
NC_OK
) {

1392  
°©us
;

1395 
˝
->
vÆid
 = 1;

1397  
NC_OK
;

1398 
	}
}

1400 
r°©us_t


1401 
	$c⁄f_po°_vÆid©e
(
c⁄f
 *
cf
)

1403 
r°©us_t
 
°©us
;

1404 
uöt32_t
 
i
, 
≈oﬁ
;

1405 
boﬁ
 
vÆid
;

1407 
	`ASSERT
(
cf
->
sound
 && cf->
∑r£d
);

1408 
	`ASSERT
(!
cf
->
vÆid
);

1410 
≈oﬁ
 = 
	`¨øy_n
(&
cf
->
poﬁ
);

1411 i‡(
≈oﬁ
 == 0) {

1412 
	`log_îr‹
("c⁄f: '%.*s' ha†nÿpoﬁs", 
cf
->
‚ame
);

1413  
NC_ERROR
;

1417 
i
 = 0; i < 
≈oﬁ
; i++) {

1418 
c⁄f_poﬁ
 *
˝
 = 
	`¨øy_gë
(&
cf
->
poﬁ
, 
i
);

1420 
°©us
 = 
	`c⁄f_vÆid©e_poﬁ
(
cf
, 
˝
);

1421 i‡(
°©us
 !
NC_OK
) {

1422  
°©us
;

1427 
	`¨øy_s‹t
(&
cf
->
poﬁ
, 
c⁄f_poﬁ_li°í_cmp
);

1428 
vÆid
 = 
åue
, 
i
 = 0; i < 
≈oﬁ
 - 1; i++) {

1429 
c⁄f_poﬁ
 *
p1
, *
p2
;

1431 
p1
 = 
	`¨øy_gë
(&
cf
->
poﬁ
, 
i
);

1432 
p2
 = 
	`¨øy_gë
(&
cf
->
poﬁ
, 
i
 + 1);

1434 i‡(
	`°rög_com∑ª
(&
p1
->
li°í
.
≤ame
, &
p2
->listen.pname) == 0) {

1435 
	`log_îr‹
("conf:Öools '%.*s'ánd '%.*s' haveÅhe sameÜisten "

1436 "addªs†'%.*s'", 
p1
->
«me
.
Àn
,Ö1->«me.
d©a
,

1437 
p2
->
«me
.
Àn
,Ö2->«me.
d©a
, 
p1
->
li°í
.
≤ame
.len,

1438 
p1
->
li°í
.
≤ame
.
d©a
);

1439 
vÆid
 = 
Ál£
;

1443 i‡(!
vÆid
) {

1444  
NC_ERROR
;

1448 
	`¨øy_s‹t
(&
cf
->
poﬁ
, 
c⁄f_poﬁ_«me_cmp
);

1449 
vÆid
 = 
åue
, 
i
 = 0; i < 
≈oﬁ
 - 1; i++) {

1450 
c⁄f_poﬁ
 *
p1
, *
p2
;

1452 
p1
 = 
	`¨øy_gë
(&
cf
->
poﬁ
, 
i
);

1453 
p2
 = 
	`¨øy_gë
(&
cf
->
poﬁ
, 
i
 + 1);

1455 i‡(
	`°rög_com∑ª
(&
p1
->
«me
, &
p2
->name) == 0) {

1456 
	`log_îr‹
("c⁄f: '%s' ha†poﬁ†wôh samê«mê%.*s'", 
cf
->
‚ame
,

1457 
p1
->
«me
.
Àn
,Ö1->«me.
d©a
);

1458 
vÆid
 = 
Ál£
;

1462 i‡(!
vÆid
) {

1463  
NC_ERROR
;

1466  
NC_OK
;

1467 
	}
}

1469 
c⁄f
 *

1470 
	$c⁄f_¸óã
(*
fûíame
)

1472 
r°©us_t
 
°©us
;

1473 
c⁄f
 *
cf
;

1475 
cf
 = 
	`c⁄f_›í
(
fûíame
);

1476 i‡(
cf
 =
NULL
) {

1477  
NULL
;

1481 
°©us
 = 
	`c⁄f_¥e_vÆid©e
(
cf
);

1482 i‡(
°©us
 !
NC_OK
) {

1483 
îr‹
;

1487 
°©us
 = 
	`c⁄f_∑r£
(
cf
);

1488 i‡(
°©us
 !
NC_OK
) {

1489 
îr‹
;

1493 
°©us
 = 
	`c⁄f_po°_vÆid©e
(
cf
);

1494 i‡(
°©us
 !
NC_OK
) {

1495 
îr‹
;

1498 
	`c⁄f_dump
(
cf
);

1500 
	`f˛o£
(
cf
->
fh
);

1501 
cf
->
fh
 = 
NULL
;

1503  
cf
;

1505 
îr‹
:

1506 
	`log_°dîr
("nutcracker: configuration file '%s' syntax is invalid",

1507 
fûíame
);

1508 
	`f˛o£
(
cf
->
fh
);

1509 
cf
->
fh
 = 
NULL
;

1510 
	`c⁄f_de°roy
(
cf
);

1511  
NULL
;

1512 
	}
}

1515 
	$c⁄f_de°roy
(
c⁄f
 *
cf
)

1517 i‡(!
cf
) ;

1519 
	`¨øy_n
(&
cf
->
¨g
) != 0) {

1520 
	`c⁄f_p›_sˇœr
(
cf
);

1522 
	`¨øy_deöô
(&
cf
->
¨g
);

1524 
i
 = 0;

1525 
	`¨øy_n
(&
cf
->
poﬁ
) != 0) {

1526 
	`log_debug
(
LOG_NOTICE
, "deöô c⁄‡poﬁ %d", 
i
++);

1527 
	`c⁄f_poﬁ_deöô
(
	`¨øy_p›
(&
cf
->
poﬁ
));

1529 
	`¨øy_deöô
(&
cf
->
poﬁ
);

1531 
	`nc_‰ì
(
cf
);

1532 
	}
}

1535 
	$c⁄f_£t_°rög
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf)

1537 
r°©us_t
 
°©us
;

1538 
uöt8_t
 *
p
;

1539 
°rög
 *
fõld
, *
vÆue
;

1541 
p
 = 
c⁄f
;

1542 
fõld
 = (
°rög
 *)(
p
 + 
cmd
->
off£t
);

1544 i‡(
fõld
->
d©a
 !
CONF_UNSET_PTR
) {

1548 
vÆue
 = 
	`¨øy_t›
(&
cf
->
¨g
);

1550 
°©us
 = 
	`°rög_du∂iˇã
(
fõld
, 
vÆue
);

1551 i‡(
°©us
 !
NC_OK
) {

1552  
CONF_ERROR
;

1555  
CONF_OK
;

1556 
	}
}

1559 
	$c⁄f_£t_li°í
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf)

1561 
r°©us_t
 
°©us
;

1562 
°rög
 *
vÆue
;

1563 
c⁄f_li°í
 *
fõld
;

1564 
uöt8_t
 *
p
, *
«me
;

1565 
uöt32_t
 
«mñí
;

1567 
p
 = 
c⁄f
;

1568 
fõld
 = (
c⁄f_li°í
 *)(
p
 + 
cmd
->
off£t
);

1570 i‡(
fõld
->
vÆid
 == 1) {

1574 
vÆue
 = 
	`¨øy_t›
(&
cf
->
¨g
);

1576 
°©us
 = 
	`°rög_du∂iˇã
(&
fõld
->
≤ame
, 
vÆue
);

1577 i‡(
°©us
 !
NC_OK
) {

1578  
CONF_ERROR
;

1581 i‡(
vÆue
->
d©a
[0] == '/') {

1582 
uöt8_t
 *
q
, *
°¨t
, *
≥rm
;

1587 
p
 = 
vÆue
->
d©a
 + vÆue->
Àn
 -1;

1588 
°¨t
 = 
vÆue
->
d©a
;

1589 
q
 = 
	`nc_°ºchr
(
p
, 
°¨t
, ' ');

1590 i‡(
q
 =
NULL
) {

1592 
«me
 = 
vÆue
->
d©a
;

1593 
«mñí
 = 
vÆue
->
Àn
;

1595 
≥rm
 = 
q
 + 1;

1598 
p
 = 
q
 - 1;

1599 
«me
 = 
°¨t
;

1600 
«mñí
 = (
uöt32_t
)(
p
 - 
°¨t
 + 1);

1602 
î∫o
 = 0;

1603 
fõld
->
≥rm
 = (
mode_t
)
	`°πﬁ
((*Ìîm, 
NULL
, 8);

1604 i‡(
î∫o
 || 
fõld
->
≥rm
 > 0777) {

1609 
uöt8_t
 *
q
, *
°¨t
, *
p‹t
;

1610 
uöt32_t
 
p‹éí
;

1613 
p
 = 
vÆue
->
d©a
 + vÆue->
Àn
 - 1;

1614 
°¨t
 = 
vÆue
->
d©a
;

1615 
q
 = 
	`nc_°ºchr
(
p
, 
°¨t
, ':');

1616 i‡(
q
 =
NULL
) {

1620 
p‹t
 = 
q
 + 1;

1621 
p‹éí
 = (
uöt32_t
)(
p
 - 
p‹t
 + 1);

1623 
p
 = 
q
 - 1;

1625 
«me
 = 
°¨t
;

1626 
«mñí
 = (
uöt32_t
)(
p
 - 
°¨t
 + 1);

1628 
fõld
->
p‹t
 = 
	`nc_©oi
’‹t, 
p‹éí
);

1629 i‡(
fõld
->
p‹t
 < 0 || !
	`nc_vÆid_p‹t
(field->port)) {

1634 
°©us
 = 
	`°rög_c›y
(&
fõld
->
«me
,Çame, 
«mñí
);

1635 i‡(
°©us
 !
NC_OK
) {

1636  
CONF_ERROR
;

1639 
°©us
 = 
	`nc_ªsﬁve
(&
fõld
->
«me
, fõld->
p‹t
, &fõld->
öfo
);

1640 i‡(
°©us
 !
NC_OK
) {

1641  
CONF_ERROR
;

1644 
fõld
->
vÆid
 = 1;

1646  
CONF_OK
;

1647 
	}
}

1650 
	$c⁄f_add_£rvî
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf)

1652 
r°©us_t
 
°©us
;

1653 
¨øy
 *
a
;

1654 
°rög
 *
vÆue
;

1655 
c⁄f_£rvî
 *
fõld
;

1656 
uöt8_t
 *
p
, *
q
, *
°¨t
;

1657 
uöt8_t
 *
≤ame
, *
addr
, *
p‹t
, *
weight
, *
«me
;

1658 
uöt32_t
 
k
, 
dñimÀn
, 
≤amñí
, 
addæí
, 
p‹éí
, 
weighéí
, 
«mñí
;

1659 
dñim
[] = " ::";

1661 
p
 = 
c⁄f
;

1662 
a
 = (
¨øy
 *)(
p
 + 
cmd
->
off£t
);

1664 
fõld
 = 
	`¨øy_push
(
a
);

1665 i‡(
fõld
 =
NULL
) {

1666  
CONF_ERROR
;

1669 
	`c⁄f_£rvî_öô
(
fõld
);

1671 
vÆue
 = 
	`¨øy_t›
(&
cf
->
¨g
);

1674 
p
 = 
vÆue
->
d©a
 + vÆue->
Àn
 - 1;

1675 
°¨t
 = 
vÆue
->
d©a
;

1676 
addr
 = 
NULL
;

1677 
addæí
 = 0;

1678 
weight
 = 
NULL
;

1679 
weighéí
 = 0;

1680 
p‹t
 = 
NULL
;

1681 
p‹éí
 = 0;

1682 
«me
 = 
NULL
;

1683 
«mñí
 = 0;

1685 
dñimÀn
 = 
vÆue
->
d©a
[0] == '/' ? 2 : 3;

1687 
k
 = 0; k < (
dñim
); k++) {

1688 
q
 = 
	`nc_°ºchr
(
p
, 
°¨t
, 
dñim
[
k
]);

1689 i‡(
q
 =
NULL
) {

1690 i‡(
k
 == 0) {

1700 
k
) {

1702 
«me
 = 
q
 + 1;

1703 
«mñí
 = (
uöt32_t
)(
p
 - 
«me
 + 1);

1707 
weight
 = 
q
 + 1;

1708 
weighéí
 = (
uöt32_t
)(
p
 - 
weight
 + 1);

1712 
p‹t
 = 
q
 + 1;

1713 
p‹éí
 = (
uöt32_t
)(
p
 - 
p‹t
 + 1);

1717 
	`NOT_REACHED
();

1720 
p
 = 
q
 - 1;

1723 i‡(
k
 !
dñimÀn
) {

1727 
≤ame
 = 
vÆue
->
d©a
;

1728 
≤amñí
 = 
«mñí
 > 0 ? 
vÆue
->
Àn
 - (namelen + 1) : value->len;

1729 
°©us
 = 
	`°rög_c›y
(&
fõld
->
≤ame
,Ö«me, 
≤amñí
);

1730 i‡(
°©us
 !
NC_OK
) {

1731 
	`¨øy_p›
(
a
);

1732  
CONF_ERROR
;

1735 
addr
 = 
°¨t
;

1736 
addæí
 = (
uöt32_t
)(
p
 - 
°¨t
 + 1);

1738 
fõld
->
weight
 = 
	`nc_©oi
(weight, 
weighéí
);

1739 i‡(
fõld
->
weight
 < 0) {

1741 } i‡(
fõld
->
weight
 == 0) {

1745 i‡(
vÆue
->
d©a
[0] != '/') {

1746 
fõld
->
p‹t
 = 
	`nc_©oi
’‹t, 
p‹éí
);

1747 i‡(
fõld
->
p‹t
 < 0 || !
	`nc_vÆid_p‹t
(field->port)) {

1752 i‡(
«me
 =
NULL
) {

1758 i‡(
fõld
->
p‹t
 =
CONF_DEFAULT_KETAMA_PORT
) {

1759 
«me
 = 
addr
;

1760 
«mñí
 = 
addæí
;

1762 
«me
 = 
addr
;

1763 
«mñí
 = 
addæí
 + 1 + 
p‹éí
;

1767 
°©us
 = 
	`°rög_c›y
(&
fõld
->
«me
,Çame, 
«mñí
);

1768 i‡(
°©us
 !
NC_OK
) {

1769  
CONF_ERROR
;

1772 
°©us
 = 
	`°rög_c›y
(&
fõld
->
addr°r
, 
addr
, 
addæí
);

1773 i‡(
°©us
 !
NC_OK
) {

1774  
CONF_ERROR
;

1784 
fõld
->
vÆid
 = 1;

1786  
CONF_OK
;

1787 
	}
}

1790 
	$c⁄f_£t_num
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf)

1792 
uöt8_t
 *
p
;

1793 
num
, *
≈
;

1794 
°rög
 *
vÆue
;

1796 
p
 = 
c⁄f
;

1797 
≈
 = (*)(
p
 + 
cmd
->
off£t
);

1799 i‡(*
≈
 !
CONF_UNSET_NUM
) {

1803 
vÆue
 = 
	`¨øy_t›
(&
cf
->
¨g
);

1805 
num
 = 
	`nc_©oi
(
vÆue
->
d©a
, vÆue->
Àn
);

1806 i‡(
num
 < 0) {

1810 *
≈
 = 
num
;

1812  
CONF_OK
;

1813 
	}
}

1816 
	$c⁄f_£t_boﬁ
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf)

1818 
uöt8_t
 *
p
;

1819 *
bp
;

1820 
°rög
 *
vÆue
, 
åue_°r
, 
Ál£_°r
;

1822 
p
 = 
c⁄f
;

1823 
bp
 = (*)(
p
 + 
cmd
->
off£t
);

1825 i‡(*
bp
 !
CONF_UNSET_NUM
) {

1829 
vÆue
 = 
	`¨øy_t›
(&
cf
->
¨g
);

1830 
	`°rög_£t_ãxt
(&
åue_°r
, "true");

1831 
	`°rög_£t_ãxt
(&
Ál£_°r
, "false");

1833 i‡(
	`°rög_com∑ª
(
vÆue
, &
åue_°r
) == 0) {

1834 *
bp
 = 1;

1835 } i‡(
	`°rög_com∑ª
(
vÆue
, &
Ál£_°r
) == 0) {

1836 *
bp
 = 0;

1841  
CONF_OK
;

1842 
	}
}

1845 
	$c⁄f_£t_hash
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf)

1847 
uöt8_t
 *
p
;

1848 
hash_ty≥_t
 *
hp
;

1849 
°rög
 *
vÆue
, *
hash
;

1851 
p
 = 
c⁄f
;

1852 
hp
 = (
hash_ty≥_t
 *)(
p
 + 
cmd
->
off£t
);

1854 i‡(*
hp
 !
CONF_UNSET_HASH
) {

1858 
vÆue
 = 
	`¨øy_t›
(&
cf
->
¨g
);

1860 
hash
 = 
hash_°rögs
; hash->
Àn
 != 0; hash++) {

1861 i‡(
	`°rög_com∑ª
(
vÆue
, 
hash
) != 0) {

1865 *
hp
 = 
hash
 - 
hash_°rögs
;

1867  
CONF_OK
;

1871 
	}
}

1874 
	$c⁄f_£t_di°ributi⁄
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf)

1876 
uöt8_t
 *
p
;

1877 
di°_ty≥_t
 *
dp
;

1878 
°rög
 *
vÆue
, *
di°
;

1880 
p
 = 
c⁄f
;

1881 
dp
 = (
di°_ty≥_t
 *)(
p
 + 
cmd
->
off£t
);

1883 i‡(*
dp
 !
CONF_UNSET_DIST
) {

1887 
vÆue
 = 
	`¨øy_t›
(&
cf
->
¨g
);

1889 
di°
 = 
di°_°rögs
; di°->
Àn
 != 0; dist++) {

1890 i‡(
	`°rög_com∑ª
(
vÆue
, 
di°
) != 0) {

1894 *
dp
 = 
di°
 - 
di°_°rögs
;

1896  
CONF_OK
;

1900 
	}
}

1903 
	$c⁄f_£t_hashèg
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf)

1905 
r°©us_t
 
°©us
;

1906 
uöt8_t
 *
p
;

1907 
°rög
 *
fõld
, *
vÆue
;

1909 
p
 = 
c⁄f
;

1910 
fõld
 = (
°rög
 *)(
p
 + 
cmd
->
off£t
);

1912 i‡(
fõld
->
d©a
 !
CONF_UNSET_PTR
) {

1916 
vÆue
 = 
	`¨øy_t›
(&
cf
->
¨g
);

1918 i‡(
vÆue
->
Àn
 != 2) {

1922 
°©us
 = 
	`°rög_du∂iˇã
(
fõld
, 
vÆue
);

1923 i‡(
°©us
 !
NC_OK
) {

1924  
CONF_ERROR
;

1927  
CONF_OK
;

1928 
	}
}

1931 
r°©us_t


1932 
	$c⁄f_js⁄_¥e_vÆid©e
(
c⁄f
 *
cf
)

1936 
JSON_VÆue
 *
roŸ_vÆue
 = 
	`js⁄_∑r£_fûe_wôh_commíts
(
cf
->
‚ame
);

1937 i‡(!
roŸ_vÆue
) {

1938 
	`log_°dîr
("configuration file '%s' invalid JSON syntax\n",

1939 
cf
->
‚ame
);

1940  
NC_ERROR
;

1942 
	`js⁄_vÆue_‰ì
(
roŸ_vÆue
);

1944  
NC_OK
;

1945 
	}
}

1948 
r°©us_t


1949 
	$c⁄f_js⁄_po°_vÆid©e
(
c⁄f
 *
cf
)

1951 
uöt32_t
 
≈oﬁs
 = 
	`¨øy_n
(&
cf
->
poﬁ
);

1953 
uöt32_t
 
i
 = 0; i < 
≈oﬁs
; i++) {

1954 
c⁄f_poﬁ
* 
poﬁ
 = 
	`¨øy_gë
(&
cf
->poﬁ, 
i
);

1957 
poﬁ
->
hash
 = 
HASH_MURMUR
;

1958 
poﬁ
->
ªdis
 = 1;

1959 
poﬁ
->
ªdis_db
 = 0;

1960 
poﬁ
->
t˝kì∑live
 = 1;

1961 
poﬁ
->
¥ec⁄√˘
 =1;

1963 
poﬁ
->
auto_eje˘_ho°s
 = 0;

1965 
poﬁ
->
£rvî_ªåy_timeout
 = 200000;

1966 
poﬁ
->
£rvî_Áûuª_limô
 = 2;

1968 i‡(
poﬁ
->
˛õ¡_c⁄√˘i⁄s
 < 1) {

1969 
poﬁ
->
˛õ¡_c⁄√˘i⁄s
 = 1;

1971 i‡(
poﬁ
->
backlog
 < 1) {

1972 
poﬁ
->
backlog
 = 
CONF_DEFAULT_LISTEN_BACKLOG
;

1974 i‡(
poﬁ
->
£rvî_c⁄√˘i⁄s
 < 1) {

1975 
poﬁ
->
£rvî_c⁄√˘i⁄s
 = 
CONF_DEFAULT_SERVER_CONNECTIONS
;

1977 i‡(
poﬁ
->
timeout
 < 1) {

1978 
poﬁ
->
timeout
 = 100;

1981  
NC_OK
;

1982 
	}
}

1990 
r°©us_t


1991 
	$c⁄f_js⁄_öô_poﬁ
(
JSON_Obje˘
* 
obj
,

1992 
c⁄f_poﬁ
* 
poﬁ
,

1993 
ö°™˚
 *
ö°
)

1995 
r°©us_t
 
°©us
;

1996 
°rög
 
∂«me
;

2001 
	`°rög_öô
(&
∂«me
);

2002 c⁄° * 
«me
 = 
	`js⁄_obje˘_gë_°rög
(
obj
, "name");

2003 
°©us
 = 
	`°rög_c›y
(&
∂«me
, (
uöt8_t
*)
«me
, (
uöt32_t
)
	`°æí
(name));

2004 i‡(
°©us
 !
NC_OK
) {

2005  
°©us
;

2009 
	`c⁄f_poﬁ_öô
(
poﬁ
, &
∂«me
);

2010 
	`°rög_deöô
(&
∂«me
);

2013 
°©us
 = 
	`¨øy_öô
(&
poﬁ
->
¥oxõs
, 
CONF_DEFAULT_PROXIES
,

2014 (
c⁄f_£rvî
));

2016 
JSON_Aºay
* 
j¥oxõs
 = 
	`js⁄_obje˘_gë_¨øy
(
obj
, "proxy");

2017 
	`ASSERT
(
j¥oxõs
 !
NULL
);

2018 
size_t
 
≈roxõs
 = 
	`js⁄_¨øy_gë_cou¡
(
j¥oxõs
);

2019 
	`ASSERT
(
≈roxõs
 > 0);

2020 
size_t
 
i
 = 0; i < 
≈roxõs
; i++) {

2021 
°r_Àn
 = 200;

2022 
¥oxy_addr
[
°r_Àn
];

2023 
¥oxy_°r
[
°r_Àn
];

2024 c⁄° * 
p
 = 
	`js⁄_¨øy_gë_°rög
(
j¥oxõs
, 
i
);

2025 
	`¢¥ötf
(
¥oxy_addr
, (
size_t
)
°r_Àn
, "%s:%d", 
ö°
->
¥oxy_ù
,

2026 
ö°
->
¥oxy_p‹t
);

2027 i‡((
	`°æí
(
¥oxy_addr
Ë!°æí(
p
)) ||

2028 (
	`°∫cmp
(
¥oxy_addr
, 
p
, 
	`°æí
(proxy_addr)) != 0)) {

2031 
c⁄f_£rvî
* 
˝
 = (c⁄f_£rvî*Ë
	`¨øy_push
(&
poﬁ
->
¥oxõs
);

2032 i‡(
ö°
->
unix_∑th
 =
NULL
){

2033 
	`¢¥ötf
(
¥oxy_°r
, (
size_t
)
°r_Àn
, "%s", 
¥oxy_addr
);

2035 
	`¢¥ötf
(
¥oxy_°r
, (
size_t
)
°r_Àn
, "%s/%s_%d_%s", 
ö°
->
unix_∑th
,

2036 
ö°
->
¥oxy_ù
, in°->
¥oxy_p‹t
, 
«me
);

2038 
	`°rög_to_c⁄f_£rvî
((c⁄° 
uöt8_t
*Ë
¥oxy_°r
, 
˝
);

2043 i‡(
	`¨øy_n
(&
poﬁ
->
¥oxõs
) == 0) {

2044 
	`log_debug
(
LOG_NOTICE
, "skùÖoﬁ \"%s\"", 
«me
);

2047 
	`¨øy_deöô
(&
poﬁ
->
¥oxõs
);

2048 
	`°rög_deöô
(&
poﬁ
->
«me
);

2049  
NC_ERROR
;

2052 
	`c⁄f_£rvî_to_c⁄f_li°í
(
	`¨øy_gë
(&
poﬁ
->
¥oxõs
, 0),

2053 &
poﬁ
->
li°í
);

2057 
JSON_Aºay
 * 
hv_ønge
 = 
	`js⁄_obje˘_gë_¨øy
(
obj
, "shard_range");

2058 
	`ASSERT
(
hv_ønge
 !
NULL
);

2059 
	`ASSERT
(
	`js⁄_¨øy_gë_cou¡
(
hv_ønge
) == 2);

2060 
poﬁ
->
sh¨d_ønge_mö
 = (
uöt32_t
)
	`js⁄_¨øy_gë_numbî
(
hv_ønge
, 0);

2061 
poﬁ
->
sh¨d_ønge_max
 = (
uöt32_t
)
	`js⁄_¨øy_gë_numbî
(
hv_ønge
, 1);

2062 
	`ASSERT
(
poﬁ
->
sh¨d_ønge_mö
 <Öoﬁ->
sh¨d_ønge_max
);

2065 
°©us
 = 
	`¨øy_öô
(&
poﬁ
->
sh¨ds
, 
CONF_DEFAULT_SHARDS
,

2066 (
c⁄f_sh¨d
));

2067 
JSON_Aºay
* 
jsh¨ds
 = 
	`js⁄_obje˘_gë_¨øy
(
obj
, "shards");

2068 
size_t
 
nsh¨ds
 = 
	`js⁄_¨øy_gë_cou¡
(
jsh¨ds
);

2069 
	`ASSERT
(
nsh¨ds
 > 0);

2071 
size_t
 
i
 = 0; i < 
nsh¨ds
; i++) {

2073 
c⁄f_sh¨d
* 
cfsh¨d
 = (c⁄f_sh¨d*Ë
	`¨øy_push
(&
poﬁ
->
sh¨ds
);

2074 i‡(
cfsh¨d
 =
NULL
) {

2075 
°©us
 = 
NC_ENOMEM
;

2078 
	`mem£t
(
cfsh¨d
, 0, (
c⁄f_sh¨d
));

2080 
JSON_Obje˘
* 
js
 = 
	`js⁄_¨øy_gë_obje˘
(
jsh¨ds
, 
i
);

2081 
cfsh¨d
->
ønge_begö
 = (
uöt32_t
)
	`js⁄_obje˘_gë_numbî
(
js
, "range_start");

2082 
cfsh¨d
->
ønge_íd
 = (
uöt32_t
)
	`js⁄_obje˘_gë_numbî
(
js
, "range_end");

2085 c⁄° * 
jsma°î
 = 
	`js⁄_obje˘_gë_°rög
(
js
, "master");

2086 
	`°rög_to_c⁄f_£rvî
((c⁄° 
uöt8_t
*)
jsma°î
, &
cfsh¨d
->
ma°î
);

2088 
JSON_Aºay
* 
js¶aves
 = 
	`js⁄_obje˘_gë_¨øy
(
js
, "slave");

2089 
size_t
 
n¶aves
 = 
	`js⁄_¨øy_gë_cou¡
(
js¶aves
);

2090 
	`ASSERT
(
n¶aves
 > 0);

2091 
°©us
 = 
	`¨øy_öô
(&
cfsh¨d
->
¶aves
, 
CONF_DEFAULT_SLAVES
,

2092 (
c⁄f_£rvî
));

2094 
size_t
 
s
 = 0; s < 
n¶aves
; s++) {

2095 c⁄° * 
¶v°r
 = 
	`js⁄_¨øy_gë_°rög
(
js¶aves
, 
s
);

2096 
c⁄f_£rvî
* 
¶v
 = 
	`¨øy_push
(&
cfsh¨d
->
¶aves
);

2097 
	`°rög_to_c⁄f_£rvî
((c⁄° 
uöt8_t
*)
¶v°r
, 
¶v
);

2104  
NC_OK
;

2105 
	}
}

2107 
r°©us_t


2108 
	$c⁄f_js⁄_∑r£
(
c⁄f
 *
cf
, 
ö°™˚
 *
nci
)

2110 
r°©us_t
 
°©us
 = 
NC_OK
;

2112 
JSON_VÆue
 *
roŸ_vÆue
 = 
	`js⁄_∑r£_fûe_wôh_commíts
(
cf
->
‚ame
);

2113 
	`ASSERT
(
roŸ_vÆue
 !
NULL
);

2118 
JSON_Obje˘
* 
roŸ_obj
 = 
	`js⁄_vÆue_gë_obje˘
(
roŸ_vÆue
);

2119 
JSON_Aºay
* 
poﬁs
 = 
	`js⁄_obje˘_gë_¨øy
(
roŸ_obj
, "pools");

2120 
size_t
 
num_poﬁs
 = 
	`js⁄_¨øy_gë_cou¡
(
poﬁs
);

2122 
	`log_debug
(
LOG_INFO
, "c⁄‡%†c⁄èö†%dÖoﬁs\n", 
cf
->
‚ame
, 
num_poﬁs
);

2124 
size_t
 
i
 = 0; i < 
num_poﬁs
; i++) {

2125 
c⁄f_poﬁ
* 
poﬁ
 = (c⁄f_poﬁ*Ë
	`¨øy_push
(&
cf
->pool);

2126 i‡(
poﬁ
 =
NULL
) {

2127 
°©us
 = 
NC_ENOMEM
;

2131 
JSON_Obje˘
* 
poﬁ_obj
 = 
	`js⁄_¨øy_gë_obje˘
(
poﬁs
, 
i
);

2133 
°©us
 = 
	`c⁄f_js⁄_öô_poﬁ
(
poﬁ_obj
, 
poﬁ
, 
nci
);

2134 i‡(
°©us
 !
NC_OK
) {

2135 
	`¨øy_p›
(&
cf
->
poﬁ
);

2138 
poﬁ
->
vÆid
 = 1;

2140 
	`js⁄_vÆue_‰ì
(
roŸ_vÆue
);

2142  
°©us
;

2143 
	}
}

2148 
	$c⁄f_js⁄_dump
(
c⁄f
 *
cf
)

2150 
uöt32_t
 
≈oﬁ
 = 
	`¨øy_n
(&
cf
->
poﬁ
);

2151 
	`log_debug
(
LOG_NOTICE
, "conf %s: have %dÖools, valid = %d\n",

2152 
cf
->
‚ame
, 
≈oﬁ
, cf->
vÆid
);

2153 
uöt32_t
 
i
 = 0; i < 
≈oﬁ
; i++) {

2154 
	`log_debug
(
LOG_NOTICE
, "poﬁ %d ::", 
i
);

2156 
c⁄f_poﬁ
* 
poﬁ
 = (c⁄f_poﬁ*Ë
	`¨øy_gë
(&
cf
->poﬁ, 
i
);

2158 
uöt32_t
 
≈roxõs
 = 
	`¨øy_n
(&
poﬁ
->
¥oxõs
);

2159 
uöt32_t
 
nsh¨ds
 = 
	`¨øy_n
(&
poﬁ
->
sh¨ds
);

2161 
	`log_debug
(
LOG_NOTICE
, "\çoﬁÇamê: \"%s\"", 
poﬁ
->
«me
.
d©a
);

2162 
	`log_debug
(
LOG_NOTICE
, "\t%dÖroxies,Üisten: %s",

2163 
≈roxõs
, 
poﬁ
->
li°í
.
«me
.
d©a
);

2164 
	`log_debug
(
LOG_NOTICE
, "\t%d sh¨ds", 
nsh¨ds
);

2165 
	`log_debug
(
LOG_NOTICE
, "\tshardÑange : [%d, %d]",

2166 
poﬁ
->
sh¨d_ønge_mö
,Öoﬁ->
sh¨d_ønge_max
);

2168 
uöt32_t
 
j
 = 0; j < 
≈roxõs
; j++) {

2169 
c⁄f_£rvî
* 
p
 = (c⁄f_£rvî*Ë
	`¨øy_gë
(&
poﬁ
->
¥oxõs
, 
j
);

2170 
	`log_debug
(
LOG_NOTICE
, "\çroxy %d : %s", 
j
, 
p
->
≤ame
.
d©a
);

2173 
uöt32_t
 
j
 = 0; j < 
nsh¨ds
; j++) {

2174 
c⁄f_sh¨d
* 
sh
 = (c⁄f_sh¨d*Ë
	`¨øy_gë
(&
poﬁ
->
sh¨ds
, 
j
);

2175 
uöt32_t
 
n¶aves
 = 
	`¨øy_n
(&
sh
->
¶aves
);

2177 
	`log_debug
(
LOG_NOTICE
, "\tshard %d :Ñange [%d, %d], 1 master, %d slaves",

2178 
j
, 
sh
->
ønge_begö
, sh->
ønge_íd
, 
n¶aves
);

2180 
	`log_debug
(
LOG_NOTICE
, "\t\tma°î : %s", 
sh
->
ma°î
.
≤ame
.
d©a
);

2183 
uöt32_t
 
k
 = 0; k < 
n¶aves
; k++) {

2184 
c⁄f_£rvî
* 
s
 = (c⁄f_£rvî*Ë
	`¨øy_gë
(&
sh
->
¶aves
, 
k
);

2185 
	`log_debug
(
LOG_NOTICE
, "\t\t¶avê%d : %s", 
k
, 
s
->
≤ame
.
d©a
);

2189 
	`log_debug
(
LOG_NOTICE
, "\n");

2191 
	}
}

2193 
c⁄f
 *

2194 
	$c⁄f_js⁄_¸óã_‰om_zk
(*
zk£rvîs
, 
ö°™˚
* 
nci
, 
c⁄ãxt
 *
˘x
)

2196 
size_t
 
max_∑th
 = 200;

2197 
zk∑th
[
max_∑th
];

2199 
˘x
->
zkh
 = 
	`ZKC⁄√˘
(
zk£rvîs
);

2200 i‡(!
˘x
->
zkh
) {

2201 
	`log_îr‹
("ˇ¬Ÿ c⁄√˘Åÿzk %s", 
zk£rvîs
);

2202  
NULL
;

2207 
buÊí
 = 64000;

2208 
buf
[
buÊí
];

2209 
sync
 = 1;

2210 
w©ch
 = 0;

2211 
	`¢¥ötf
(
zk∑th
, 
max_∑th
, "%s/¥oxy/%s", 
ZK_BASE
, 
nci
->
poﬁ_«me
);

2212 
c⁄f_Àn
 = 
	`ZKGë
(
˘x
->
zkh
, 
zk∑th
, 
buf
, 
buÊí
, 
w©ch
, 
sync
);

2213 i‡(
c⁄f_Àn
 <= 0) {

2214 
	`log_îr‹
("ªad c⁄‡‰om zk: %s,Ñë %d", 
zk∑th
, 
c⁄f_Àn
);

2215 
	`ZKClo£
(
˘x
->
zkh
);

2216 
˘x
->
zkh
 = 
NULL
;

2217  
NULL
;

2220 
‚ame
[500];

2221 
	`•rötf
(
‚ame
, "%s-proxy-%s-%d",

2222 
CONF_DEFAULT_FILE_SAVE_PATH
, 
nci
->
¥oxy_ù
,Çci->
¥oxy_p‹t
);

2223 
	`nc_wrôe_fûe
(
‚ame
, 
buf
, 
c⁄f_Àn
);

2225 
c⁄f
 *
cf
;

2226 
cf
 = 
	`c⁄f_js⁄_¸óã
(
‚ame
, 
nci
);

2227 i‡(
cf
 =
NULL
) {

2228  
NULL
;

2231 
cf
->
zk_£rvîs
 = 
zk£rvîs
;

2233 
cf
->
‚ame
 = 
NULL
;

2235  
cf
;

2236 
	}
}

2238 
c⁄f
 *

2239 
	$c⁄f_js⁄_¸óã
(*
fûíame
, 
ö°™˚
* 
nci
)

2241 
r°©us_t
 
°©us
 = 
NC_OK
;

2242 
c⁄f
 *
cf
;

2244 
cf
 = 
	`c⁄f_›í
(
fûíame
);

2245 i‡(
cf
 =
NULL
) {

2246  
NULL
;

2249 
	`f˛o£
(
cf
->
fh
);

2250 
cf
->
fh
 = 
NULL
;

2251 
	`¨øy_nuŒ
(&
cf
->
¨g
);

2254 
°©us
 = 
	`c⁄f_js⁄_¥e_vÆid©e
(
cf
);

2255 i‡(
°©us
 !
NC_OK
) {

2256 
îr‹
;

2261 
°©us
 = 
	`c⁄f_js⁄_∑r£
(
cf
, 
nci
);

2262 i‡(
°©us
 !
NC_OK
) {

2263 
îr‹
;

2267 
°©us
 = 
	`c⁄f_js⁄_po°_vÆid©e
(
cf
);

2268 i‡(
°©us
 !
NC_OK
) {

2269 
îr‹
;

2272 
cf
->
vÆid
 = 1;

2273 
	`c⁄f_js⁄_dump
(
cf
);

2275  
cf
;

2277 
îr‹
:

2278 
	`log_°dîr
("nutcracker: configuration file '%s' JSON syntax invalid",

2279 
fûíame
);

2280 
	`c⁄f_de°roy
(
cf
);

2281  
NULL
;

2282 
	}
}

2347 
r°©us_t


2348 
	$°rög_to_c⁄f_£rvî
(c⁄° 
uöt8_t
* 
ßddr
, 
c⁄f_£rvî
* 
§v
)

2350 
	`c⁄f_£rvî_öô
(
§v
);

2351 
uöt32_t
 
Àn
 = (uöt32_t)
	`°æí
((c⁄° *)
ßddr
);

2352 c⁄° 
uöt8_t
 *
s_«me
, *
s_p‹t
;

2354 
uöt8_t
 *
dñim
 = 
	`nc_°rchr
((uöt8_t*)
ßddr
,

2355 (
uöt8_t
*Ë(
ßddr
 + 
Àn
),

2357 
	`ASSERT
(
dñim
 !
NULL
);

2358 
s_«me
 = 
ßddr
;

2359 
s_p‹t
 = 
dñim
 + 1;

2361 
	`°rög_c›y
(&
§v
->
≤ame
, 
ßddr
, 
Àn
);

2362 
	`°rög_c›y
(&
§v
->
«me
, 
ßddr
, 
Àn
);

2364 i‡(
dñim
) {

2365 
	`°rög_c›y
(&
§v
->
addr°r
, 
ßddr
, (
uöt32_t
)(
dñim
 - 
s_«me
));

2366 
§v
->
p‹t
 = 
	`nc_©oi
(
s_p‹t
, (
uöt32_t
)(
Àn
 - (
dñim
 + 1 - 
s_«me
)));

2368 
	`°rög_c›y
(&
§v
->
addr°r
, 
ßddr
, 
Àn
);

2369 
§v
->
p‹t
 = 0;

2372 
r°©us_t
 
°©us
 = 
	`nc_ªsﬁve
(&
§v
->
addr°r
, srv->
p‹t
, &§v->
öfo
);

2373 i‡(
°©us
 !
NC_OK
) {

2374  
NC_ERROR
;

2377 
§v
->
vÆid
 = 1;

2379  
NC_OK
;

2380 
	}
}

2383 
	$c⁄f_£rvî_to_c⁄f_li°í
(
c⁄f_£rvî
* 
cs
, 
c⁄f_li°í
* 
˛
)

2385 
	`°rög_öô
(&
˛
->
«me
);

2386 
	`°rög_öô
(&
˛
->
≤ame
);

2387 
	`°rög_du∂iˇã
(&
˛
->
«me
, &
cs
->name);

2388 
	`°rög_du∂iˇã
(&
˛
->
≤ame
, &
cs
->
«me
);

2390 
˛
->
p‹t
 = 
cs
->port;

2391 
	`nc_mem˝y
(&
˛
->
öfo
, &
cs
->info, (cl->info));

2393 
˛
->
vÆid
 = 1;

2394 
	}
}

2399 
r°©us_t


2400 
	$c⁄f_sh¨ds_to_£rvî_sh¨ds
(
¨øy
* 
cf_sh¨ds
,

2401 
¨øy
* 
§v_sh¨ds
,

2402 
£rvî_poﬁ
* 
•
)

2404 
c⁄f_sh¨d
* 
c⁄f_sd
 = 
NULL
;

2405 
sh¨d
* 
§v_sd
 = 
NULL
;

2406 
r°©us_t
 
rv
 = 
NC_OK
;

2408 
	`¨øy_öô
(&
•
->
£rvî
, 16, (server));

2410 
uöt32_t
 
i
 = 0; i < 
	`¨øy_n
(
cf_sh¨ds
); i++) {

2411 
c⁄f_sd
 = 
	`¨øy_gë
(
cf_sh¨ds
, 
i
);

2412 
§v_sd
 = 
	`¨øy_push
(
§v_sh¨ds
);

2413 
	`mem£t
(
§v_sd
, 0, (
sh¨d
));

2414 
§v_sd
->
idx
 = 
	`¨øy_idx
(
§v_sh¨ds
, srv_sd);

2416 
rv
 = 
	`c⁄f_sh¨d_to_£rvî_sh¨d
(
c⁄f_sd
, 
§v_sd
, 
•
);

2419  
rv
;

2420 
	}
}

2428 
c⁄f
*

2429 
	$gë_c⁄f_‰om_zk
(* 
zk£rvîs
, 
c⁄ãxt
 *
˘x
)

2431 
ö°™˚
 *
ö°
 = 
˘x
->
ow√r_ö°
;

2433 i‡(
˘x
->
zkh
 =
NULL
) {

2434 
˘x
->
zkh
 = 
	`ZKC⁄√˘
(
zk£rvîs
);

2435 i‡(!
˘x
->
zkh
) {

2436 
	`log_îr‹
("ˇ¬Ÿ c⁄√˘Åÿzk %s", 
zk£rvîs
);

2437  
NULL
;

2441 
size_t
 
max_∑th
 = 500;

2442 
∑th
[
max_∑th
];

2443 
	`¢¥ötf
(
∑th
, 
max_∑th
, "%s/%s/%s:%d", 
ö°
->
zk_c⁄fig_roŸ
, "¥oxy", in°->
¥oxy_ù
,

2444 
ö°
->
¥oxy_p‹t
);

2447 
buÊí
 = 10000;

2448 
buf
[
buÊí
];

2449 
sync
 = 1;

2450 
w©ch
 = 0;

2451 
c⁄f_Àn
 = 
	`ZKGë
(
˘x
->
zkh
, 
∑th
, 
buf
, 
buÊí
, 
w©ch
, 
sync
);

2452 i‡(
c⁄f_Àn
 <0 || c⁄f_À¿>
buÊí
) {

2453 
	`log_îr‹
("proxy \"%s:%d \"conf incorrect: %s,Ñet %d",

2454 
ö°
->
¥oxy_ù
, in°->
¥oxy_p‹t
, 
∑th
, 
c⁄f_Àn
);

2455 
	`ZKClo£
(
˘x
->
zkh
);

2456 
˘x
->
zkh
 = 
NULL
;

2457  
NULL
;

2459 
	`mem£t
(
∑th
, 0, 
max_∑th
);

2461 
	`•rötf
(
∑th
, "%s/%s_%d/%s", 
CONF_DEFAULT_FILE_SAVE_PATH
, 
ö°
->
¥oxy_ù
,

2462 
ö°
->
¥oxy_p‹t
, "pools");

2463 
	`nc_wrôe_fûe
(
∑th
, 
buf
, 
c⁄f_Àn
);

2465 
r°©us_t
 
°©us
 = 
NC_OK
;

2466 
c⁄f
 *
cf
 = 
	`c⁄f_›í
(
∑th
);

2467 i‡(
cf
 =
NULL
) {

2468  
NULL
;

2470 
	`¨øy_nuŒ
(&
cf
->
¨g
);

2471 i‡(
	`∑r£_poﬁs_c⁄f_fûe
(
˘x
, 
cf
, 
∑th
Ë!
NC_OK
){

2472 
	`c⁄f_de°roy
(
cf
);

2473  
NULL
;

2476 
°©us
 = 
	`c⁄f_js⁄_po°_vÆid©e
(
cf
);

2477 i‡(
°©us
 !
NC_OK
) {

2478 
	`c⁄f_de°roy
(
cf
);

2479  
NULL
;

2484 
uöt32_t
 
num_poﬁs
 = 
	`¨øy_n
(&
cf
->
poﬁ
);

2485 
uöt32_t
 
i
 = 0; i < 
num_poﬁs
; i++) {

2486 
c⁄f_poﬁ
* 
poﬁ
 = (c⁄f_poﬁ*Ë
	`¨øy_gë
(&
cf
->poﬁ, 
i
);

2487 
°r_Àn
 = 200;

2488 
¥oxy_°r
[
°r_Àn
];

2489 
c⁄f_£rvî
* 
˝
 = (c⁄f_£rvî*)
	`¨øy_push
(&
poﬁ
->
¥oxõs
);

2490 i‡(
ö°
->
unix_∑th
 =
NULL
){

2491 
	`¢¥ötf
(
¥oxy_°r
, (
size_t
)
°r_Àn
, "%s:%d",

2492 
ö°
->
¥oxy_ù
, in°->
¥oxy_p‹t
);

2494 
	`¢¥ötf
(
¥oxy_°r
, (
size_t
)
°r_Àn
, "%s/%s_%d_%s", 
ö°
->
unix_∑th
,

2495 
ö°
->
¥oxy_ù
, in°->
¥oxy_p‹t
, 
poﬁ
->
«me
.
d©a
);

2497 
	`°rög_to_c⁄f_£rvî
((c⁄° 
uöt8_t
*)
¥oxy_°r
, 
˝
);

2498 
	`c⁄f_£rvî_to_c⁄f_li°í
(
˝
, &
poﬁ
->
li°í
);

2501 
cf
->
zk_£rvîs
 = 
zk£rvîs
;

2502 
cf
->
vÆid
 = 1;

2503 
	`c⁄f_js⁄_dump
(
cf
);

2504 
	`c⁄f_dump
(
cf
);

2506 
cf
->
‚ame
 = 
NULL
;

2508  
cf
;

2509 
	}
}

2512 
r°©us_t


2513 
	$∑r£_poﬁs_c⁄f_fûe
(
c⁄ãxt
 *
˘x
, 
c⁄f
 *
cf
, c⁄° *
‚ame
)

2515 
r°©us_t
 
°©us
 = 
NC_OK
;

2516 
ö°™˚
 *
ö°
 = 
˘x
->
ow√r_ö°
;

2518 
JSON_VÆue
 *
roŸ_vÆue
 = 
	`js⁄_∑r£_fûe_wôh_commíts
(
‚ame
);

2519 
	`ASSERT
(
roŸ_vÆue
 !
NULL
);

2520 i‡(
JSONObje˘
 !
	`js⁄_ty≥
(
roŸ_vÆue
)) {

2521 
	`log_îr‹
("c⁄fig fûêîr‹ f‹m© : %s", 
‚ame
);

2522  
NC_ERROR
;

2525 
JSON_Obje˘
* 
poﬁs_obj
 = 
	`js⁄_vÆue_gë_obje˘
(
roŸ_vÆue
);

2526 i‡(!
	`ßnôy_check_poﬁ_«mes_js⁄
(
poﬁs_obj
)) {

2527 
	`log_îr‹
("wgu c⁄fig fûêövÆid c⁄ã¡ : %s", 
cf
->
‚ame
);

2528 
	`js⁄_vÆue_‰ì
(
roŸ_vÆue
);

2529  
NC_ERROR
;

2531 
JSON_Aºay
* 
≤ames
 = 
	`js⁄_obje˘_gë_¨øy
(
poﬁs_obj
, "pool_names");

2532 
size_t
 
≈oﬁs
 = 
	`js⁄_¨øy_gë_cou¡
(
≤ames
);

2534 
size_t
 
i
 = 0; i < 
≈oﬁs
; i++) {

2536 
size_t
 
max_∑th
 = 500;

2537 
∑th
[
max_∑th
];

2539 c⁄° * 
poﬁ«me
 = 
	`js⁄_¨øy_gë_°rög
(
≤ames
, 
i
);

2540 
buÊí
 = 10000;

2541 
buf
[
buÊí
];

2542 
sync
 = 1;

2543 
w©ch
 = 0;

2544 
	`¢¥ötf
(
∑th
, 
max_∑th
, "%s/%s/%s", 
ö°
->
zk_c⁄fig_roŸ
, "poﬁs", 
poﬁ«me
);

2545 
c⁄f_Àn
 = 
	`ZKGë
(
˘x
->
zkh
, 
∑th
, 
buf
, 
buÊí
, 
w©ch
, 
sync
);

2546 i‡(
c⁄f_Àn
 <0 || c⁄f_À¿>
buÊí
) {

2547 
	`log_îr‹
("pool \"%s \"conf incorrect: %s,Ñet %d",

2548 
poﬁ«me
, 
∑th
, 
c⁄f_Àn
);

2549 
	`ZKClo£
(
˘x
->
zkh
);

2550 
˘x
->
zkh
 = 
NULL
;

2551 
	`js⁄_vÆue_‰ì
(
roŸ_vÆue
);

2552  
NC_ERROR
;

2556 
	`•rötf
(
∑th
, "%s/%s_%d/%s", 
CONF_DEFAULT_FILE_SAVE_PATH
,

2557 
ö°
->
¥oxy_ù
, in°->
¥oxy_p‹t
, 
poﬁ«me
);

2558 
	`nc_wrôe_fûe
(
∑th
, 
buf
, 
c⁄f_Àn
);

2559 
cf
->
‚ame
 = 
∑th
;

2561 
°©us
 = 
	`∑r£_poﬁ_c⁄f_fûe
(
cf
, 
poﬁ«me
);

2562 i‡(
°©us
 !
NC_OK
) {

2563 
	`js⁄_vÆue_‰ì
(
roŸ_vÆue
);

2564  
NC_ERROR
;

2568 
	`js⁄_vÆue_‰ì
(
roŸ_vÆue
);

2569  
NC_OK
;

2570 
	}
}

2572 
r°©us_t


2573 
	$∑r£_poﬁ_c⁄f_fûe
(
c⁄f
 *
cf
, c⁄° *
poﬁ_«me
)

2575 
r°©us_t
 
°©us
 = 
NC_OK
;

2578 
JSON_VÆue
 *
roŸ_vÆue
 = 
	`js⁄_∑r£_fûe_wôh_commíts
(
cf
->
‚ame
);

2579 
	`ASSERT
(
roŸ_vÆue
 !
NULL
);

2580 i‡(
JSONObje˘
 !
	`js⁄_ty≥
(
roŸ_vÆue
)) {

2581 
	`log_îr‹
("c⁄fig fûêîr‹ f‹m© : %s", 
cf
->
‚ame
);

2582  
NC_ERROR
;

2585 
JSON_Obje˘
* 
poﬁ_obj
 = 
	`js⁄_vÆue_gë_obje˘
(
roŸ_vÆue
);

2586 i‡(!
	`ßnôy_check_poﬁ_c⁄f_js⁄
(
poﬁ_obj
)) {

2587 
	`log_îr‹
("c⁄fig fûêövÆid c⁄ã¡ : %s", 
cf
->
‚ame
);

2588 
	`js⁄_vÆue_‰ì
(
roŸ_vÆue
);

2589  
NC_ERROR
;

2593 
c⁄f_poﬁ
* 
poﬁ
 = (c⁄f_poﬁ*Ë
	`¨øy_push
(&
cf
->pool);

2594 i‡(
poﬁ
 =
NULL
) {

2595 
	`js⁄_vÆue_‰ì
(
roŸ_vÆue
);

2596  
NC_ENOMEM
;

2598 
	`mem£t
(
poﬁ
, 0, (
c⁄f_poﬁ
));

2601 
°©us
 = 
	`c⁄f_js⁄_to_c⁄f_poﬁ
(
poﬁ_obj
, 
poﬁ
);

2602 i‡(
°©us
 !
NC_OK
) {

2603 
	`¨øy_p›
(&
cf
->
poﬁ
);

2605 
poﬁ
->
vÆid
 = 1;

2608 
	`js⁄_vÆue_‰ì
(
roŸ_vÆue
);

2609  
°©us
;

2610 
	}
}

2613 
r°©us_t


2614 
	$c⁄f_js⁄_to_c⁄f_poﬁ
(
JSON_Obje˘
 *
pobj
, 
c⁄f_poﬁ
 *
poﬁ
)

2616 
r°©us_t
 
°©us
;

2617 
°rög
 
∂«me
;

2619 c⁄° * 
«me
 = 
	`js⁄_obje˘_gë_°rög
(
pobj
, "name");

2620 c⁄° * 
id
 = 
	`js⁄_obje˘_gë_°rög
(
pobj
, "id");

2622 
	`°rög_öô
(&
∂«me
);

2623 
°©us
 = 
	`°rög_c›y
(&
∂«me
,

2624 (
uöt8_t
*)
«me
,

2625 (
uöt32_t
)
	`°æí
(
«me
));

2628 
	`c⁄f_poﬁ_öô
(
poﬁ
, &
∂«me
);

2629 
	`°rög_deöô
(&
∂«me
);

2632 
poﬁ
->
ªdis
 = 1;

2633 
poﬁ
->
ªdis_db
 = 0;

2634 
poﬁ
->
hash
 = 
HASH_MURMUR
;

2638 
poﬁ
->
sh¨d_ønge_mö
 = (
uöt32_t
)
	`©oi
(
	`js⁄_obje˘_gë_°rög
(
pobj
, "pool_begin"));

2639 
poﬁ
->
sh¨d_ønge_max
 = (
uöt32_t
)
	`©oi
(
	`js⁄_obje˘_gë_°rög
(
pobj
, "pool_end"));

2642 c⁄° *
§v_c⁄ns
 = 
	`js⁄_obje˘_gë_°rög
(
pobj
, "server_connections");

2643 i‡(
§v_c⁄ns
) {

2644 
poﬁ
->
£rvî_c⁄√˘i⁄s
 = (
uöt32_t
)
	`©oi
(
§v_c⁄ns
);

2648 
°©us
 = 
	`¨øy_öô
(&
poﬁ
->
¥oxõs
, 
CONF_DEFAULT_PROXIES
,

2649 (
c⁄f_£rvî
));

2652 
°©us
 = 
	`¨øy_öô
(&
poﬁ
->
sh¨ds
, 
CONF_DEFAULT_SHARDS
,

2653 (
c⁄f_sh¨d
));

2654 
JSON_Aºay
* 
jsh¨ds
 = 
	`js⁄_obje˘_gë_¨øy
(
pobj
, "shards");

2655 
size_t
 
nsh¨ds
 = 
	`js⁄_¨øy_gë_cou¡
(
jsh¨ds
);

2658 
size_t
 
i
 = 0; i < 
nsh¨ds
; i++) {

2660 
c⁄f_sh¨d
* 
cfsh¨d
 = (c⁄f_sh¨d*Ë
	`¨øy_push
(&
poﬁ
->
sh¨ds
);

2661 i‡(
cfsh¨d
 =
NULL
) {

2662 
°©us
 = 
NC_ENOMEM
;

2665 
	`mem£t
(
cfsh¨d
, 0, (
c⁄f_sh¨d
));

2667 
°©us
 = 
	`¨øy_öô
(&
cfsh¨d
->
¶aves
, 
CONF_DEFAULT_SLAVES
,

2668 (
c⁄f_£rvî
));

2669 i‡(
°©us
 !
NC_OK
) {

2670  
NC_ENOMEM
;

2673 
JSON_Obje˘
* 
js
 = 
	`js⁄_¨øy_gë_obje˘
(
jsh¨ds
, 
i
);

2674 
cfsh¨d
->
ønge_begö
 = (
uöt32_t
)
	`©oi
(
	`js⁄_obje˘_gë_°rög
(
js
, "shard_begin"));

2675 
cfsh¨d
->
ønge_íd
 = (
uöt32_t
)
	`©oi
(
	`js⁄_obje˘_gë_°rög
(
js
, "shard_end"));

2677 c⁄° *
°r_°©us
 = 
	`js⁄_obje˘_gë_°rög
(
js
, "status");

2678 i‡(
°r_°©us
) {

2679 
	`°∫˝y
(
cfsh¨d
->
°©us
, 
°r_°©us
, 31);

2680 
cfsh¨d
->
°©us
[31] = 0;

2682 
	`°∫˝y
(
cfsh¨d
->
°©us
, "unknown", 8);

2686 c⁄° * 
jsma°î
 = 
	`js⁄_obje˘_gë_°rög
(
js
, "master_target");

2687 i‡(
jsma°î
 && 
	`°æí
(jsmaster) > 2) {

2688 
	`°rög_to_c⁄f_£rvî
((c⁄° 
uöt8_t
*)
jsma°î
, &
cfsh¨d
->
ma°î
);

2690 
	`log_îr‹
("poﬁ %†sh¨d %d: invÆid ma°î: %s\n", 
«me
, 
i
, 
jsma°î
);

2694 
JSON_Aºay
* 
js¶aves
 = 
	`js⁄_obje˘_gë_¨øy
(
js
, "slave_target");

2695 
size_t
 
n¶aves
 = 
	`js⁄_¨øy_gë_cou¡
(
js¶aves
);

2696 i‡(
n¶aves
 == 0) ;

2698 
size_t
 
s
 = 0; s < 
n¶aves
; s++) {

2699 c⁄° * 
¶v°r
 = 
	`js⁄_¨øy_gë_°rög
(
js¶aves
, 
s
);

2700 
c⁄f_£rvî
* 
¶v
 = 
	`¨øy_push
(&
cfsh¨d
->
¶aves
);

2701 i‡(
¶v°r
 && 
	`°æí
(slvstr) > 2) {

2702 
	`°rög_to_c⁄f_£rvî
((c⁄° 
uöt8_t
*)
¶v°r
, 
¶v
);

2704 
	`log_îr‹
("poﬁ %†sh¨d %d: invÆid sœvê: %s\n", 
«me
, 
i
, 
jsma°î
);

2709  
°©us
;

2711 
	}
}

2731 
boﬁ


2732 
	$ßnôy_check_poﬁ_c⁄f_js⁄
(
JSON_Obje˘
 *
pobj
)

2734 i‡(!
pobj
Ë 
Ál£
;

2736 
uöt32_t
 
poﬁ_begö
 = 0, 
poﬁ_íd
 = 0;

2738 i‡(
	`js⁄_obje˘_gë_°rög
(
pobj
, "«me"Ë=
NULL
) {

2739 
	`¥ötf
("===wgu==Çame\n");

2740  
Ál£
;

2742 i‡(
	`js⁄_obje˘_gë_°rög
(
pobj
, "id"Ë=
NULL
) {

2743 
	`¥ötf
("===wgu== id\n");

2744  
Ál£
;

2747 i‡(
	`js⁄_obje˘_gë_°rög
(
pobj
, "poﬁ_begö"Ë=
NULL
) {

2748 
	`¥ötf
("===wgu== begin\n");

2749  
Ál£
;

2751 
poﬁ_begö
 = 
	`©oi
(
	`js⁄_obje˘_gë_°rög
(
pobj
, "pool_begin"));

2754 i‡(
	`js⁄_obje˘_gë_°rög
(
pobj
, "poﬁ_íd"Ë=
NULL
) {

2755 
	`¥ötf
("===wgu==ÖoolÉnd\n");

2756  
Ál£
;

2758 
poﬁ_íd
 = 
	`©oi
(
	`js⁄_obje˘_gë_°rög
(
pobj
, "pool_end"));

2761 
	`¥ötf
("===wgu== final\n");

2763 
JSON_Aºay
* 
jsh¨ds
 = 
	`js⁄_obje˘_gë_¨øy
(
pobj
, "shards");

2764 
size_t
 
nsh¨ds
 = 
	`js⁄_¨øy_gë_cou¡
(
jsh¨ds
);

2765 i‡(
nsh¨ds
 == 0) {

2767  
åue
;

2770 
uöt32_t
 
sh¨d_ønge_mö
 = 0xFFFFFFFF, 
sh¨d_ønge_max
 = 0;

2772 
size_t
 
i
 = 0; i < 
nsh¨ds
; i++) {

2773 
JSON_Obje˘
* 
js
 = 
	`js⁄_¨øy_gë_obje˘
(
jsh¨ds
, 
i
);

2774 i‡(!
	`ßnôy_check_sh¨d_c⁄f_js⁄
(
js
)) {

2775  
Ál£
;

2779 
uöt32_t
 
begö
 = 
	`©oi
(
	`js⁄_obje˘_gë_°rög
(
js
, "shard_begin"));

2780 
uöt32_t
 
íd
 = 
	`©oi
(
	`js⁄_obje˘_gë_°rög
(
js
, "shard_end"));

2781 i‡(
begö
 =
sh¨d_ønge_mö
) {

2782 
	`log_îr‹
("du∂iˇãd sh¨dÑ™gêbegö: %d", 
begö
);

2783  
Ál£
;

2785 i‡(
íd
 =
sh¨d_ønge_max
) {

2786 
	`log_îr‹
("du∂iˇãd sh¨dÑ™gêíd: %d", 
íd
);

2787  
Ál£
;

2790 i‡(
sh¨d_ønge_mö
 > 
begö
) {

2791 
sh¨d_ønge_mö
 = 
begö
;

2793 i‡(
sh¨d_ønge_max
 < 
íd
) {

2794 
sh¨d_ønge_max
 = 
íd
;

2798 i‡(
sh¨d_ønge_mö
 !
poﬁ_begö
) {

2799 
	`log_îr‹
("poolÑange min %d != shardÑange min %d",

2800 
poﬁ_begö
, 
sh¨d_ønge_mö
);

2801  
Ál£
;

2803 i‡(
sh¨d_ønge_max
 !
poﬁ_íd
) {

2804 
	`log_îr‹
("poolÑange max %d != shardÑange max %d",

2805 
poﬁ_íd
, 
sh¨d_ønge_max
);

2806  
Ál£
;

2809  
åue
;

2810 
	}
}

2812 
boﬁ


2813 
	$ßnôy_check_poﬁ_«mes_js⁄
(
JSON_Obje˘
 *
pobj
)

2815 i‡(!
pobj
Ë 
Ál£
;

2816 
	`¥ötf
("========wgu==sanity check 1\n");

2818 
JSON_Aºay
* 
poﬁ«mes
 = 
	`js⁄_obje˘_gë_¨øy
(
pobj
, "pool_names");

2819 
	`¥ötf
("========wgu==ßnôy check 2: %s\n", 
poﬁ«mes
);

2820 
size_t
 
≈oﬁs
 = 
	`js⁄_¨øy_gë_cou¡
(
poﬁ«mes
);

2821 
	`¥ötf
("========wgu==ßnôy check 3:Çpoﬁs:%d\n", 
≈oﬁs
);

2822 i‡(
≈oﬁs
 == 0) {

2824  
Ál£
;

2826  
åue
;

2827 
	}
}

2830 
boﬁ


2831 
	$ßnôy_check_sh¨d_c⁄f_js⁄
(
JSON_Obje˘
 *
sobj
)

2833 i‡(!
sobj
Ë 
Ál£
;

2835 i‡(
	`js⁄_obje˘_gë_°rög
(
sobj
, "sh¨d_begö"Ë=
NULL
) {

2836  
Ál£
;

2838 i‡(
	`js⁄_obje˘_gë_°rög
(
sobj
, "sh¨d_íd"Ë=
NULL
) {

2839  
Ál£
;

2841 i‡(
	`js⁄_obje˘_gë_°rög
(
sobj
, "ma°î_èrgë"Ë=
NULL
) {

2842  
Ál£
;

2844 i‡(
	`js⁄_obje˘_gë_¨øy
(
sobj
, "¶ave_èrgë"Ë=
NULL
) {

2845  
Ál£
;

2848  
åue
;

2849 
	}
}

2853 
	$di•œy_£rvî_sh¨d
(
sh¨d
 *
§v_sd
)

2855 
£rvî
 *
§v
 = 
§v_sd
->
ma°î
;

2857 
	`log_debug
(
LOG_NOTICE
, "shard %d [%d ~ %d], master %p, %d slaves",

2858 
§v_sd
->
idx
, srv_sd->
ønge_begö
, srv_sd->
ønge_íd
,

2859 
§v
, 
	`¨øy_n
(&
§v_sd
->
¶aves
));

2861 i‡(
§v
) {

2862 
	`log_debug
(
LOG_NOTICE
, "\tma°î srv (idx %d): %s", 
§v
->
idx
, srv->
≤ame
.
d©a
);

2863 i‡(
§v
->
ow√r_sh¨d
 !
§v_sd
) {

2864 
	`log_îr‹
("ma°î sîvî %†ow√∏mism©ch\n", 
§v
->
≤ame
.
d©a
);

2868 
uöt32_t
 
j
 = 0; j < 
	`¨øy_n
(&
§v_sd
->
¶aves
); j++) {

2869 
£rvî
** 
µ§v
 = (£rvî**)(
	`¨øy_gë
(&
§v_sd
->
¶aves
, 
j
));

2870 
§v
 = *
µ§v
;

2871 
	`log_debug
(
LOG_NOTICE
, "\t¶avê§v (idx %d): %s", 
§v
->
idx
, srv->
≤ame
.
d©a
);

2872 i‡(
§v
->
ow√r_sh¨d
 !
§v_sd
) {

2873 
	`log_îr‹
("ma°î sîvî %†ow√∏mism©ch\n", 
§v
->
≤ame
.
d©a
);

2876 
	}
}

2882 
r°©us_t


2883 
	$c⁄f_sh¨d_to_£rvî_sh¨d
(
c⁄f_sh¨d
 *
c⁄f_sd
,

2884 
sh¨d
 *
§v_sd
,

2885 
£rvî_poﬁ
 *
•
)

2887 
r°©us_t
 
rv
 = 
NC_OK
;

2889 
§v_sd
->
ow√r
 = 
•
;

2890 
§v_sd
->
ønge_begö
 = 
c⁄f_sd
->range_begin;

2891 
§v_sd
->
ønge_íd
 = 
c⁄f_sd
->range_end;

2893 
£rvî
 *
§v
;

2896 
c⁄f_£rvî
 *
c⁄f_§v
 = &
c⁄f_sd
->
ma°î
;

2897 i‡(
	`is_vÆid_c⁄f_£rvî
(
c⁄f_§v
)) {

2898 
§v
 = 
	`¨øy_push
(&
•
->
£rvî
);

2899 
§v
->
idx
 = 
	`¨øy_idx
(&
•
->
£rvî
, srv);

2900 
rv
 = 
	`c⁄f_£rvî_to_£rvî
(
c⁄f_§v
, 
§v
);

2901 i‡(
rv
 !
NC_OK
) {

2902 
	`log_îr‹
("failedÅo init master server\n");

2903 
îr‹_ma°î
;

2905 
§v
->
ow√r
 = 
•
;

2906 
§v
->
ow√r_sh¨d
 = 
§v_sd
;

2907 
§v_sd
->
ma°î
 = 
§v
;

2910 
§v_sd
->
ma°î
 = 
NULL
;

2915 
	`¨øy_öô
(&
§v_sd
->
¶aves
, 4, (
£rvî
*));

2917 
uöt32_t
 
¶aves_added
 = 0;

2919 
uöt32_t
 
i
 = 0; i < 
	`¨øy_n
(&
c⁄f_sd
->
¶aves
); i++) {

2920 
c⁄f_§v
 = 
	`¨øy_gë
(&
c⁄f_sd
->
¶aves
, 
i
);

2921 i‡(!
	`is_vÆid_c⁄f_£rvî
(
c⁄f_§v
)) {

2924 
§v
 = 
	`¨øy_push
(&
•
->
£rvî
);

2925 
¶aves_added
++;

2927 
§v
->
idx
 = 
	`¨øy_idx
(&
•
->
£rvî
, srv);

2930 
rv
 = 
	`c⁄f_£rvî_to_£rvî
(
c⁄f_§v
, 
§v
);

2931 i‡(
rv
 !
NC_OK
) {

2932 
	`log_îr‹
("failedÅo init slave server\n");

2933 
îr‹_¶ave
;

2937 
§v
->
ow√r
 = 
•
;

2938 
§v
->
ow√r_sh¨d
 = 
§v_sd
;

2940 
£rvî
** 
µ§v
 = 
	`¨øy_push
(&
§v_sd
->
¶aves
);

2941 *
µ§v
 = 
§v
;

2945 
	`£t_£rvî_sh¨d_°©us
(
c⁄f_sd
, 
§v_sd
);

2947  
rv
;

2949 
îr‹_¶ave
:

2951 
uöt32_t
 
i
 = 0; i < 
¶aves_added
; i++) {

2952 
	`¨øy_p›
(&
•
->
£rvî
);

2955 
îr‹_ma°î
:

2956 
	`¨øy_p›
(&
•
->
£rvî
);

2958  
rv
;

2959 
	}
}

2967 
sh¨d
*

2968 
	$föd_£rvî_sh¨d
(
c⁄f_sh¨d
 *
c⁄f_sd
, 
¨øy
 *
§v_sh¨ds
)

2970 
uöt32_t
 
begö
 = 
c⁄f_sd
->
ønge_begö
;

2972 
uöt32_t
 
i
 = 0; i < 
	`¨øy_n
(
§v_sh¨ds
); i++) {

2973 
sh¨d
 *
§v_sd
 = 
	`¨øy_gë
(
§v_sh¨ds
, 
i
);

2974 i‡(
§v_sd
->
ønge_begö
 =
begö
) {

2975  
§v_sd
;

2979  
NULL
;

2980 
	}
}

2987 
£rvî
*

2988 
	$föd_£rvî_‰om_c⁄f_£rvî
(
c⁄f_£rvî
 *
c⁄f_§v
, 
¨øy
 *
§vs
)

2990 
uöt32_t
 
i
 = 0; i < 
	`¨øy_n
(
§vs
); i++) {

2991 
£rvî
* 
§v
 = *(£rvî **)
	`¨øy_gë
(
§vs
, 
i
);

2992 i‡(
	`c⁄f_m©ch_£rvî
(
c⁄f_§v
, 
§v
)) {

2993  
§v
;

2996  
NULL
;

2997 
	}
}

3001 
boﬁ


3002 
	$c⁄f_m©ch_£rvî
(
c⁄f_£rvî
 *
c⁄f_§v
, 
£rvî
 *
§v
)

3004 i‡(!
§v
Ë 
Ál£
;

3006 i‡(
§v
->
«me
.
Àn
 !
c⁄f_§v
->name.len ||

3007 
	`°∫cmp
((c⁄° *)
§v
->
«me
.
d©a
,

3008 (c⁄° *)
c⁄f_§v
->
«me
.
d©a
,

3009 
§v
->
«me
.
Àn
)) {

3010  
Ál£
;

3012  
åue
;

3013 
	}
}

3025 
r°©us_t


3026 
	$upd©e_£rvî_sh¨ds_‰om_c⁄f_js⁄
(
JSON_Obje˘
 *
pobj
,

3027 
¨øy
 *
§v_sh¨ds
,

3028 
£rvî_poﬁ
 *
•
)

3030 
r°©us_t
 
rv
 = 
NC_OK
;

3032 i‡(!
	`ßnôy_check_poﬁ_c⁄f_js⁄
(
pobj
)) {

3033 
	`log_îr‹
("invalid json conf object\n");

3034  
NC_ERROR
;

3038 c⁄° *
poﬁ_«me
 = 
	`js⁄_obje˘_gë_°rög
(
pobj
, "name");

3039 i‡(
	`°æí
(
poﬁ_«me
Ë!°æí((c⁄° *)
•
->
«me
.
d©a
) ||

3040 
	`°∫cmp
(
poﬁ_«me
, (c⁄° *)
•
->
«me
.
d©a
, 
	`°æí
(pool_name))) {

3041 
	`log_îr‹
("pool conf znodeÇame %s !=ÖoolÇame %s\n",

3042 
poﬁ_«me
, 
•
->
«me
.
d©a
);

3043  
NC_ERROR
;

3047 
c⁄f_poﬁ
 
cÂoﬁ
;

3048 
	`mem£t
(&
cÂoﬁ
, 0, (
c⁄f_poﬁ
));

3049 
rv
 = 
	`c⁄f_js⁄_to_c⁄f_poﬁ
(
pobj
, &
cÂoﬁ
);

3052 
c⁄f_sh¨d
 *
c⁄f_sd
 = 
NULL
;

3053 
c⁄f_£rvî
 *
c⁄f_§v
 = 
NULL
;

3055 
sh¨d
* 
§v_sd
 = 
NULL
;

3056 
£rvî
* 
§v
 = 
NULL
;

3058 
uöt32_t
 
nsh¨ds
 = 
	`¨øy_n
(&
cÂoﬁ
.
sh¨ds
);

3060 
uöt32_t
 
i
 = 0; i < 
nsh¨ds
; i++) {

3063 
c⁄f_sd
 = 
	`¨øy_gë
(&
cÂoﬁ
.
sh¨ds
, 
i
);

3065 
§v_sd
 = 
	`föd_£rvî_sh¨d
(
c⁄f_sd
, 
§v_sh¨ds
);

3069 i‡(
§v_sd
 =
NULL
) {

3070 
	`log_w¨n
("foundáÇew conf_shard: [%d : %d]\n",

3071 
c⁄f_sd
->
ønge_begö
, c⁄f_sd->
ønge_íd
);

3072 i‡(
	`°∫cmp
(
c⁄f_sd
->
°©us
, "running", 7) != 0) {

3073 
	`log_w¨n
("new shard [%d : %d] isádded but status %s, skip it",

3074 
c⁄f_sd
->
ønge_begö
, c⁄f_sd->
ønge_íd
, c⁄f_sd->
°©us
);

3078 
§v_sd
 = 
	`¨øy_push
(
§v_sh¨ds
);

3079 
	`mem£t
(
§v_sd
, 0, (
sh¨d
));

3081 
§v_sd
->
idx
 = 
	`¨øy_idx
(
§v_sh¨ds
, srv_sd);

3082 
rv
 = 
	`c⁄f_sh¨d_to_£rvî_sh¨d
(
c⁄f_sd
, 
§v_sd
, 
•
);

3085 
§v
 = 
§v_sd
->
ma°î
;

3086 i‡(
§v
) {

3087 
	`add_£rvî_to_°©s
(
§v
, 
•
);

3090 
uöt32_t
 
j
 = 0; j < 
	`¨øy_n
(&
§v_sd
->
¶aves
); j++) {

3091 
§v
 = *(
£rvî
**)
	`¨øy_gë
(&
§v_sd
->
¶aves
, 
j
);

3092 
	`add_£rvî_to_°©s
(
§v
, 
•
);

3100 i‡(
c⁄f_sd
->
ønge_íd
 !
§v_sd
->range_end ||

3101 
c⁄f_sd
->
ønge_begö
 !
§v_sd
->range_begin) {

3102 
	`log_w¨n
("conf-shardÑange shrinked. We might have seená split: "

3104 
§v_sd
->
ønge_begö
, srv_sd->
ønge_íd
,

3105 
c⁄f_sd
->
ønge_begö
, c⁄f_sd->
ønge_íd
);

3106 
§v_sd
->
ønge_begö
 = 
c⁄f_sd
->range_begin;

3107 
§v_sd
->
ønge_íd
 = 
c⁄f_sd
->range_end;

3112 
§v
 = 
§v_sd
->
ma°î
;

3113 
c⁄f_§v
 = &
c⁄f_sd
->
ma°î
;

3114 i‡(!
	`is_vÆid_c⁄f_£rvî
(
c⁄f_§v
)) {

3116 
	`log_îr‹
("conf_shard has invalid master conf_server");

3118 } i‡(!
	`c⁄f_m©ch_£rvî
(
c⁄f_§v
, 
§v
)) {

3119 
	`log_w¨n
("shard master changed. UseÇew master: %s\n",

3120 
c⁄f_§v
->
«me
.
d©a
);

3123 
£rvî
 *
√w_§v
 =

3124 
	`AddSîvîFromAddªssSåög
(
§v_sd
, (*)
c⁄f_§v
->
«me
.
d©a
);

3126 
	`add_£rvî_to_°©s
(
√w_§v
, 
•
);

3128 
§v_sd
->
ma°î
 = 
√w_§v
;

3135 
uöt32_t
 
j
 = 0; j < 
	`¨øy_n
(&
c⁄f_sd
->
¶aves
); j++) {

3136 
c⁄f_§v
 = 
	`¨øy_gë
(&
c⁄f_sd
->
¶aves
, 
j
);

3137 
§v
 = 
	`föd_£rvî_‰om_c⁄f_£rvî
(
c⁄f_§v
, &
§v_sd
->
¶aves
);

3138 i‡(
§v
 =
NULL
) {

3139 
	`log_w¨n
("AddáÇew slave server %sÅo shard [%d : %d]\n",

3140 
c⁄f_§v
->
«me
.
d©a
,

3141 
§v_sd
->
ønge_begö
,

3142 
§v_sd
->
ønge_íd
);

3143 
£rvî
 *
√w_§v
 =

3144 
	`AddSîvîFromAddªssSåög
(
§v_sd
, (*)
c⁄f_§v
->
«me
.
d©a
);

3145 
£rvî
 **
µ§v
 = (£rvî**)
	`¨øy_push
(&
§v_sd
->
¶aves
);

3146 *
µ§v
 = 
√w_§v
;

3149 
	`add_£rvî_to_°©s
(
√w_§v
, 
•
);

3154 
	`£t_£rvî_sh¨d_°©us
(
c⁄f_sd
, 
§v_sd
);

3157 
	`c⁄f_poﬁ_deöô
(&
cÂoﬁ
);

3159  
rv
;

3160 
	}
}

3163 
	$£t_£rvî_sh¨d_°©us
(
c⁄f_sh¨d
 *
c⁄f_sd
, 
sh¨d
 *
§v_sd
)

3165 
	`log_w¨n
("before: shard [%d : %d] status: can-read %d, can-write %d",

3166 
§v_sd
->
ønge_begö
, srv_sd->
ønge_íd
,

3167 
§v_sd
->
ˇn_ªad
, srv_sd->
ˇn_wrôe
);

3168 i‡(
	`°∫cmp
(
c⁄f_sd
->
°©us
, "init", 4) == 0) {

3169 
§v_sd
->
ˇn_ªad
 = 0;

3170 
§v_sd
->
ˇn_wrôe
 = 0;

3171 } i‡(
	`°∫cmp
(
c⁄f_sd
->
°©us
, "running", 7) == 0) {

3172 
§v_sd
->
ˇn_ªad
 = 1;

3173 
§v_sd
->
ˇn_wrôe
 = 1;

3174 } i‡(
	`°∫cmp
(
c⁄f_sd
->
°©us
, "draining", 8) == 0) {

3175 
§v_sd
->
ˇn_ªad
 = 1;

3176 
§v_sd
->
ˇn_wrôe
 = 0;

3178 
	`log_îr‹
("unknow¿sh¨d sètu†%s\n", 
c⁄f_sd
->
°©us
);

3179 
§v_sd
->
ˇn_ªad
 = 0;

3180 
§v_sd
->
ˇn_wrôe
 = 0;

3182 
	`log_w¨n
("after: shard [%d : %d] status: can-read %d, can-write %d",

3183 
§v_sd
->
ønge_begö
, srv_sd->
ønge_íd
,

3184 
§v_sd
->
ˇn_ªad
, srv_sd->
ˇn_wrôe
);

3185 
	}
}

3187 
boﬁ


3188 
	$is_vÆid_c⁄f_£rvî
(
c⁄f_£rvî
 *
c⁄f_§v
)

3190  (
c⁄f_§v
->
«me
.
d©a
 !
NULL
 &&

3191 
c⁄f_§v
->
p‹t
 != 0 &&

3192 
c⁄f_§v
->
vÆid
);

3193 
	}
}

3196 
	$c⁄f_poﬁ_w©chî
(
zh™dÀ_t
 *
zkh
, 
ty≥
, 
°©e
,

3197 c⁄° *
∑th
, *
˘x
)

3199 
£rvî_poﬁ
 *
•
 = (£rvî_poﬁ*)
˘x
;

3200 
	`ASSERT
(
•
 !
NULL
);

3202 
	`log_îr‹
("conf_pool_watcher gotÉvent %s, state %sátÖath %s",

3203 
	`Ty≥2Såög
(
ty≥
), 
	`Sèã2Såög
(
°©e
), 
∑th
);

3205 i‡(
ty≥
 =
ZOO_CREATED_EVENT
 ||Åy≥ =
ZOO_CHANGED_EVENT
) {

3206 
buÊí
 = 10000;

3207 
buf
[
buÊí
];

3208 
	`mem£t
(
buf
, 0, (
size_t
)
buÊí
);

3210 
rc
 = 
	`ZKGë
(
zkh
, 
∑th
, 
buf
, 
buÊí
, 0, 1);

3211 i‡(
rc
 < 0 ||Ñ¯>
buÊí
) {

3212 
	`log_îr‹
("ªad %†Áûed,Ñë %d", 
∑th
, 
rc
);

3216 
JSON_VÆue
 *
jroŸ
 = 
	`js⁄_∑r£_°rög_wôh_commíts
(
buf
);

3217 i‡(!
jroŸ
 || (
JSONObje˘
 !
	`js⁄_ty≥
(jroot))) {

3218 
	`log_îr‹
("poﬁ c⁄fig znodêîr‹ f‹m© : %s", 
buf
);

3219 
exô
;

3222 
JSON_Obje˘
* 
poﬁ_obj
 = 
	`js⁄_vÆue_gë_obje˘
(
jroŸ
);

3223 i‡(!
	`ßnôy_check_poﬁ_c⁄f_js⁄
(
poﬁ_obj
)) {

3224 
	`log_îr‹
("poﬁ c⁄fig invÆid f‹m©: %s", 
buf
);

3225 
exô
;

3229 
	`±hªad_muãx_lock
(&
•
->
lock
);

3230 
	`upd©e_£rvî_sh¨ds_‰om_c⁄f_js⁄
(
poﬁ_obj
, &
•
->
sh¨ds
, sp);

3231 
	`±hªad_muãx_u∆ock
(&
•
->
lock
);

3234 } i‡(
ty≥
 =
ZOO_DELETED_EVENT
) {

3238 
exô
:

3239 
	`ZKSëExi°sW©ch
(
zkh
, (*)
∑th
, 
c⁄f_poﬁ_w©chî
, 
˘x
);

3240 
	}
}

3244 
r°©us_t


3245 
	$add_w©chî_⁄_c⁄f_poﬁ
(
c⁄ãxt
 *
˘x
)

3247 i‡(
˘x
->
zkh
 =
NULL
) {

3248 
	`log_îr‹
("NO connectionÅo ZK isÉstablished.\n");

3249  
NC_ERROR
;

3252 
size_t
 
∑thÀn
 = 500;

3253 
zk∑th
[
∑thÀn
];

3254 
¨øy
 *
poﬁs
 = &
˘x
->
poﬁ
;

3255 
ö°™˚
 *
ö°
 = 
˘x
->
ow√r_ö°
;

3256 
r°©us_t
 
rv
 = 
NC_OK
;

3259 
uöt32_t
 
i
 = 0; i < 
	`¨øy_n
(
poﬁs
); i++ ) {

3260 
£rvî_poﬁ
 *
•
 = (£rvî_poﬁ *)
	`¨øy_gë
(
poﬁs
, 
i
);

3263 
	`¢¥ötf
(
zk∑th
, 
∑thÀn
, "%s/%s/%s", 
ö°
->
zk_c⁄fig_roŸ
, "pools",

3264 
•
->
«me
.
d©a
);

3265 
rc
 = 
	`ZKSëExi°sW©ch
(
˘x
->
zkh
, 
zk∑th
, 
c⁄f_poﬁ_w©chî
, 
•
);

3266 i‡(
rc
 !
ZOK
) {

3267 
	`log_îr‹
("ÁûedÅÿ£àw©chî o¿znodê%s", 
zk∑th
);

3268 
rv
 = 
NC_ERROR
;

3270 
	`log_w¨n
("havêpuàw©chî o¿znodê%s", 
zk∑th
);

3271 
rv
 = 
NC_OK
;

3275  
rv
;

3276 
	}
}

3278 
boﬁ
 
	$hcd£tbuf
(*
buf
, 
Àn
, 
£rvî_poﬁ
 *
•
) {

3279 
	`ASSERT
(
buf
 !
NULL
);

3281 
JSON_VÆue
 *
jroŸ
 = 
	`js⁄_∑r£_°rög_wôh_commíts
(
buf
);

3282 i‡(!
jroŸ
 || (
JSONObje˘
 !
	`js⁄_ty≥
(jroot))) {

3283 
	`log_îr‹
("poﬁ c⁄figÉº‹ f‹m© : %s,Üí: %d", 
buf
, 
Àn
);

3284  
Ál£
;

3287 
JSON_Obje˘
* 
poﬁ_obj
 = 
	`js⁄_vÆue_gë_obje˘
(
jroŸ
);

3288 i‡(!
	`ßnôy_check_poﬁ_c⁄f_js⁄
(
poﬁ_obj
)) {

3289 
	`log_îr‹
("poﬁ c⁄fig invÆid f‹m©: %s", 
buf
);

3290  
Ál£
;

3294 
	`±hªad_muãx_lock
(&
•
->
lock
);

3295 
	`upd©e_£rvî_sh¨ds_‰om_c⁄f_js⁄
(
poﬁ_obj
, &
•
->
sh¨ds
, sp);

3296 
	`±hªad_muãx_u∆ock
(&
•
->
lock
);

3297  
åue
;

3298 
	}
}

	@src/nc_conf.h

18 #i‚de‡
_NC_CONF_H_


19 
	#_NC_CONF_H_


	)

21 
	~<uni°d.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<sys/un.h
>

24 
	~<yaml.h
>

26 
	~<nc_c‹e.h
>

27 
	~<hashkô/nc_hashkô.h
>

28 
	~<∑rs⁄/∑rs⁄.h
>

30 
	#CONF_OK
 (*Ë
NULL


	)

31 
	#CONF_ERROR
 (*Ë"ha†™ invÆid vÆue"

	)

33 
	#CONF_ROOT_DEPTH
 1

	)

34 
	#CONF_MAX_DEPTH
 
CONF_ROOT_DEPTH
 + 1

	)

36 
	#CONF_DEFAULT_ARGS
 3

	)

37 
	#CONF_DEFAULT_POOL
 8

	)

38 
	#CONF_DEFAULT_SERVERS
 8

	)

39 
	#CONF_DEFAULT_PROXIES
 8

40 
	#CONF_DEFAULT_SHARDS
 8

41 
	#CONF_DEFAULT_SLAVES
 2

42 

	)

43 
	#CONF_UNSET_NUM
 -1

	)

44 
	#CONF_UNSET_PTR
 
NULL


	)

45 
	#CONF_UNSET_HASH
 (
hash_ty≥_t
Ë-1

	)

46 
	#CONF_UNSET_DIST
 (
di°_ty≥_t
Ë-1

	)

48 
	#CONF_DEFAULT_HASH
 
HASH_FNV1A_64


	)

49 
	#CONF_DEFAULT_DIST
 
DIST_KETAMA


	)

50 
	#CONF_DEFAULT_TIMEOUT
 -1

	)

51 
	#CONF_DEFAULT_LISTEN_BACKLOG
 512

	)

52 
	#CONF_DEFAULT_CLIENT_CONNECTIONS
 0

	)

53 
	#CONF_DEFAULT_REDIS
 
Ál£


	)

54 
	#CONF_DEFAULT_REDIS_DB
 0

	)

55 
	#CONF_DEFAULT_PRECONNECT
 
Ál£


	)

56 
	#CONF_DEFAULT_AUTO_EJECT_HOSTS
 
Ál£


	)

57 
	#CONF_DEFAULT_SERVER_RETRY_TIMEOUT
 30 * 1000

	)

58 
	#CONF_DEFAULT_SERVER_FAILURE_LIMIT
 2

	)

59 
	#CONF_DEFAULT_SERVER_CONNECTIONS
 2

	)

60 
	#CONF_DEFAULT_KETAMA_PORT
 11211

	)

61 
	#CONF_DEFAULT_TCPKEEPALIVE
 
Ál£


	)

64 
	#ZK_BASE
 "/di°kv"

	)

67 
	#CONF_DEFAULT_CONF_ZNODE
 "/di°kv/¥oxy"

	)

70 
	#CONF_DEFAULT_FILE_SAVE_PATH
 "/tmp/nc-c⁄f"

	)

72 
	sc⁄f_li°í
 {

73 
°rög
 
	m≤ame
;

74 
°rög
 
	m«me
;

75 
	mp‹t
;

76 
mode_t
 
	m≥rm
;

77 
socköfo
 
	möfo
;

78 
	mvÆid
:1;

81 
	sc⁄f_£rvî
 {

82 
°rög
 
	m≤ame
;

83 
°rög
 
	m«me
;

84 
°rög
 
	maddr°r
;

85 
	mp‹t
;

86 
	mweight
;

87 
socköfo
 
	möfo
;

88 
	mvÆid
:1;

92 
	sc⁄f_sh¨d
 {

93 
uöt32_t
 
	mønge_begö
;

94 
uöt32_t
 
	mønge_íd
;

96 
c⁄f_£rvî
 
	mma°î
;

97 
¨øy
 
	m¶aves
;

99 
	m°©us
[32];

102 
	sc⁄f_poﬁ
 {

103 
°rög
 
	m«me
;

104 
c⁄f_li°í
 
	mli°í
;

105 
hash_ty≥_t
 
	mhash
;

106 
°rög
 
	mhash_èg
;

107 
di°_ty≥_t
 
	mdi°ributi⁄
;

108 
	mtimeout
;

109 
	mbacklog
;

110 
	m˛õ¡_c⁄√˘i⁄s
;

111 
	mt˝kì∑live
;

112 
	mªdis
;

113 
°rög
 
	mªdis_auth
;

114 
	mªdis_db
;

115 
	m¥ec⁄√˘
;

116 
	mauto_eje˘_ho°s
;

117 
	m£rvî_c⁄√˘i⁄s
;

118 
öt32_t
 
	m£rvî_ªåy_timeout
;

119 
öt32_t
 
	m£rvî_Áûuª_limô
;

120 
¨øy
 
	m£rvî
;

121 
	mvÆid
:1;

123 
uöt32_t
 
	msh¨d_ønge_mö
;

124 
uöt32_t
 
	msh¨d_ønge_max
;

125 
¨øy
 
	m¥oxõs
;

126 
¨øy
 
	msh¨ds
;

129 
	sc⁄f
 {

130 *
	m‚ame
;

131 *
	mzk_£rvîs
;

132 
FILE
 *
	mfh
;

133 
¨øy
 
	m¨g
;

134 
¨øy
 
	mpoﬁ
;

135 
uöt32_t
 
	mdïth
;

136 
yaml_∑r£r_t
 
	m∑r£r
;

137 
yaml_evít_t
 
	mevít
;

138 
yaml_tokí_t
 
	mtokí
;

139 
	m£q
:1;

140 
	mvÆid_∑r£r
:1;

141 
	mvÆid_evít
:1;

142 
	mvÆid_tokí
:1;

143 
	msound
:1;

144 
	m∑r£d
:1;

145 
	mvÆid
:1;

148 
	scomm™d
 {

149 
°rög
 
	m«me
;

150 *(*
	m£t
)(
c⁄f
 *
	mcf
, 
comm™d
 *
	mcmd
, *
	md©a
);

151 
	moff£t
;

154 
	#nuŒ_comm™d
 { 
nuŒ_°rög
, 
NULL
, 0 }

	)

156 *
c⁄f_£t_°rög
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf);

157 *
c⁄f_£t_li°í
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf);

158 *
c⁄f_add_£rvî
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf);

159 *
c⁄f_£t_num
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf);

160 *
c⁄f_£t_boﬁ
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf);

161 *
c⁄f_£t_hash
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf);

162 *
c⁄f_£t_di°ributi⁄
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf);

163 *
c⁄f_£t_hashèg
(
c⁄f
 *
cf
, 
comm™d
 *
cmd
, *conf);

165 
r°©us_t
 
c⁄f_£rvî_óch_å™sf‹m
(*
ñem
, *
d©a
);

166 
r°©us_t
 
c⁄f_poﬁ_óch_å™sf‹m
(*
ñem
, *
d©a
);

168 
c⁄f
 *
c⁄f_¸óã
(*
fûíame
);

170 
c⁄f
 *
c⁄f_js⁄_¸óã
(*
fûíame
, 
ö°™˚
 *
nci
);

172 
c⁄f
 *
c⁄f_js⁄_¸óã_‰om_zk
(*
zk£rvîs
, 
ö°™˚
 *
nci
,

173 
c⁄ãxt
 *
˘x
);

174 
c⁄f_de°roy
(
c⁄f
 *
cf
);

175 
c⁄f
 *
¸óã_poﬁ_c⁄f_‰om_fûe
(*
fûï©h
, 
c⁄ãxt
 *
˘x
);

177 
c⁄f
 *
gë_c⁄f_‰om_zk
(* 
zk£rvîs
, 
c⁄ãxt
 *
˘x
);

178 
r°©us_t
 
add_w©chî_⁄_c⁄f_poﬁ
(
c⁄ãxt
 *
˘x
);

180 
boﬁ
 
hcd£tbuf
(*
buf„r
, 
Àn
, 
£rvî_poﬁ
 *
poﬁ
);

	@src/nc_connection.c

18 
	~<sys/uio.h
>

20 
	~<nc_c‹e.h
>

21 
	~<nc_£rvî.h
>

22 
	~<nc_˛õ¡.h
>

23 
	~<nc_¥oxy.h
>

24 
	~<¥Ÿo/nc_¥Ÿo.h
>

84 
uöt32_t
 
	gn‰ì_c⁄nq
;

85 
c⁄n_tqh
 
	g‰ì_c⁄nq
;

86 
uöt64_t
 
	g¡ŸÆ_c⁄n
;

87 
uöt32_t
 
	gncuº_c⁄n
;

88 
uöt32_t
 
	gncuº_cc⁄n
;

93 
c⁄ãxt
 *

94 
	$c⁄n_to_˘x
(
c⁄n
 *conn)

96 
£rvî_poﬁ
 *
poﬁ
;

98 i‡(
c⁄n
->
¥oxy
 || c⁄n->
˛õ¡
) {

99 
poﬁ
 = 
c⁄n
->
ow√r
;

101 
£rvî
 *£rvî = 
c⁄n
->
ow√r
;

102 
poﬁ
 = 
£rvî
->
ow√r
;

105  
poﬁ
->
˘x
;

106 
	}
}

108 
c⁄n
 *

109 
	$_c⁄n_gë
()

111 
c⁄n
 *conn;

113 i‡(!
	`TAILQ_EMPTY
(&
‰ì_c⁄nq
)) {

114 
	`ASSERT
(
n‰ì_c⁄nq
 > 0);

116 
c⁄n
 = 
	`TAILQ_FIRST
(&
‰ì_c⁄nq
);

117 
n‰ì_c⁄nq
--;

118 
	`TAILQ_REMOVE
(&
‰ì_c⁄nq
, 
c⁄n
, 
c⁄n_tqe
);

120 
c⁄n
 = 
	`nc_Æloc
((*conn));

121 i‡(
c⁄n
 =
NULL
) {

122  
NULL
;

126 
c⁄n
->
ow√r
 = 
NULL
;

128 
c⁄n
->
sd
 = -1;

131 
	`TAILQ_INIT
(&
c⁄n
->
imsg_q
);

132 
	`TAILQ_INIT
(&
c⁄n
->
omsg_q
);

133 
c⁄n
->
rmsg
 = 
NULL
;

134 
c⁄n
->
smsg
 = 
NULL
;

142 
c⁄n
->
£nd_byãs
 = 0;

143 
c⁄n
->
ªcv_byãs
 = 0;

145 
c⁄n
->
evíts
 = 0;

146 
c⁄n
->
îr
 = 0;

147 
c⁄n
->
ªcv_a˘ive
 = 0;

148 
c⁄n
->
ªcv_ªady
 = 0;

149 
c⁄n
->
£nd_a˘ive
 = 0;

150 
c⁄n
->
£nd_ªady
 = 0;

152 
c⁄n
->
˛õ¡
 = 0;

153 
c⁄n
->
¥oxy
 = 0;

154 
c⁄n
->
c⁄√˘ög
 = 0;

155 
c⁄n
->
c⁄√˘ed
 = 0;

156 
c⁄n
->
eof
 = 0;

157 
c⁄n
->
d⁄e
 = 0;

158 
c⁄n
->
ªdis
 = 0;

159 
c⁄n
->
authítiˇãd
 = 0;

161 
¡ŸÆ_c⁄n
++;

162 
ncuº_c⁄n
++;

164  
c⁄n
;

165 
	}
}

167 
c⁄n
 *

168 
	$c⁄n_gë
(*
ow√r
, 
boﬁ
 
˛õ¡
, boﬁ 
ªdis
)

170 
c⁄n
 *conn;

172 
c⁄n
 = 
	`_c⁄n_gë
();

173 i‡(
c⁄n
 =
NULL
) {

174  
NULL
;

178 
c⁄n
->
ªdis
 =Ñedis ? 1 : 0;

180 
c⁄n
->
˛õ¡
 = client ? 1 : 0;

182 i‡(
c⁄n
->
˛õ¡
) {

187 
c⁄n
->
ªcv
 = 
msg_ªcv
;

188 
c⁄n
->
ªcv_√xt
 = 
ªq_ªcv_√xt
;

189 
c⁄n
->
ªcv_d⁄e
 = 
ªq_ªcv_d⁄e
;

191 
c⁄n
->
£nd
 = 
msg_£nd
;

192 
c⁄n
->
£nd_√xt
 = 
r•_£nd_√xt
;

193 
c⁄n
->
£nd_d⁄e
 = 
r•_£nd_d⁄e
;

195 
c⁄n
->
˛o£
 = 
˛õ¡_˛o£
;

196 
c⁄n
->
a˘ive
 = 
˛õ¡_a˘ive
;

198 
c⁄n
->
ªf
 = 
˛õ¡_ªf
;

199 
c⁄n
->
uƒef
 = 
˛õ¡_uƒef
;

201 
c⁄n
->
íqueue_öq
 = 
NULL
;

202 
c⁄n
->
dequeue_öq
 = 
NULL
;

203 
c⁄n
->
íqueue_outq
 = 
ªq_˛õ¡_íqueue_omsgq
;

204 
c⁄n
->
dequeue_outq
 = 
ªq_˛õ¡_dequeue_omsgq
;

205 
c⁄n
->
po°_c⁄√˘
 = 
NULL
;

206 
c⁄n
->
swÆlow_msg
 = 
NULL
;

208 
ncuº_cc⁄n
++;

214 
c⁄n
->
ªcv
 = 
msg_ªcv
;

215 
c⁄n
->
ªcv_√xt
 = 
r•_ªcv_√xt
;

216 
c⁄n
->
ªcv_d⁄e
 = 
r•_ªcv_d⁄e
;

218 
c⁄n
->
£nd
 = 
msg_£nd
;

219 
c⁄n
->
£nd_√xt
 = 
ªq_£nd_√xt
;

220 
c⁄n
->
£nd_d⁄e
 = 
ªq_£nd_d⁄e
;

222 
c⁄n
->
˛o£
 = 
£rvî_˛o£
;

223 
c⁄n
->
a˘ive
 = 
£rvî_a˘ive
;

225 
c⁄n
->
ªf
 = 
£rvî_ªf
;

226 
c⁄n
->
uƒef
 = 
£rvî_uƒef
;

228 
c⁄n
->
íqueue_öq
 = 
ªq_£rvî_íqueue_imsgq
;

229 
c⁄n
->
dequeue_öq
 = 
ªq_£rvî_dequeue_imsgq
;

230 
c⁄n
->
íqueue_outq
 = 
ªq_£rvî_íqueue_omsgq
;

231 
c⁄n
->
dequeue_outq
 = 
ªq_£rvî_dequeue_omsgq
;

232 i‡(
ªdis
) {

233 
c⁄n
->
po°_c⁄√˘
 = 
ªdis_po°_c⁄√˘
;

234 
c⁄n
->
swÆlow_msg
 = 
ªdis_swÆlow_msg
;

236 
c⁄n
->
po°_c⁄√˘
 = 
memˇche_po°_c⁄√˘
;

237 
c⁄n
->
swÆlow_msg
 = 
memˇche_swÆlow_msg
;

241 
c⁄n
->
	`ªf
(c⁄n, 
ow√r
);

242 
	`log_debug
(
LOG_VVERB
, "gë c⁄¿%∞˛õ¡ %d", 
c⁄n
, c⁄n->
˛õ¡
);

244  
c⁄n
;

245 
	}
}

247 
c⁄n
 *

248 
	$c⁄n_gë_¥oxy
(*
ow√r
)

250 
£rvî_poﬁ
 *
poﬁ
 = 
ow√r
;

251 
c⁄n
 *conn;

253 
c⁄n
 = 
	`_c⁄n_gë
();

254 i‡(
c⁄n
 =
NULL
) {

255  
NULL
;

257 
c⁄n
->
ªdis
 = 
poﬁ
->redis;

259 
c⁄n
->
¥oxy
 = 1;

261 
c⁄n
->
ªcv
 = 
¥oxy_ªcv
;

262 
c⁄n
->
ªcv_√xt
 = 
NULL
;

263 
c⁄n
->
ªcv_d⁄e
 = 
NULL
;

265 
c⁄n
->
£nd
 = 
NULL
;

266 
c⁄n
->
£nd_√xt
 = 
NULL
;

267 
c⁄n
->
£nd_d⁄e
 = 
NULL
;

269 
c⁄n
->
˛o£
 = 
¥oxy_˛o£
;

270 
c⁄n
->
a˘ive
 = 
NULL
;

272 
c⁄n
->
ªf
 = 
¥oxy_ªf
;

273 
c⁄n
->
uƒef
 = 
¥oxy_uƒef
;

275 
c⁄n
->
íqueue_öq
 = 
NULL
;

276 
c⁄n
->
dequeue_öq
 = 
NULL
;

277 
c⁄n
->
íqueue_outq
 = 
NULL
;

278 
c⁄n
->
dequeue_outq
 = 
NULL
;

280 
c⁄n
->
	`ªf
(c⁄n, 
ow√r
);

282 
	`log_debug
(
LOG_VVERB
, "gë c⁄¿%∞¥oxy %d", 
c⁄n
, c⁄n->
¥oxy
);

284  
c⁄n
;

285 
	}
}

288 
	$c⁄n_‰ì
(
c⁄n
 *conn)

290 
	`log_debug
(
LOG_VVERB
, "‰ì c⁄¿%p", 
c⁄n
);

291 
	`nc_‰ì
(
c⁄n
);

292 
	}
}

295 
	$c⁄n_put
(
c⁄n
 *conn)

297 
	`ASSERT
(
c⁄n
->
sd
 < 0);

298 
	`ASSERT
(
c⁄n
->
ow√r
 =
NULL
);

300 
	`log_debug
(
LOG_VVERB
, "puàc⁄¿%p", 
c⁄n
);

302 
n‰ì_c⁄nq
++;

303 
	`TAILQ_INSERT_HEAD
(&
‰ì_c⁄nq
, 
c⁄n
, 
c⁄n_tqe
);

305 i‡(
c⁄n
->
˛õ¡
) {

306 
ncuº_cc⁄n
--;

308 
ncuº_c⁄n
--;

309 
	}
}

312 
	$c⁄n_öô
()

314 
	`log_debug
(
LOG_DEBUG
, "c⁄¿sizê%d", (
c⁄n
));

315 
n‰ì_c⁄nq
 = 0;

316 
	`TAILQ_INIT
(&
‰ì_c⁄nq
);

317 
	}
}

320 
	$c⁄n_deöô
()

322 
c⁄n
 *c⁄n, *
nc⁄n
;

324 
c⁄n
 = 
	`TAILQ_FIRST
(&
‰ì_c⁄nq
); c⁄¿!
NULL
;

325 
c⁄n
 = 
nc⁄n
, 
n‰ì_c⁄nq
--) {

326 
	`ASSERT
(
n‰ì_c⁄nq
 > 0);

327 
nc⁄n
 = 
	`TAILQ_NEXT
(
c⁄n
, 
c⁄n_tqe
);

328 
	`c⁄n_‰ì
(
c⁄n
);

330 
	`ASSERT
(
n‰ì_c⁄nq
 == 0);

331 
	}
}

333 
ssize_t


334 
	$c⁄n_ªcv
(
c⁄n
 *c⁄n, *
buf
, 
size_t
 
size
)

336 
ssize_t
 
n
;

338 
	`ASSERT
(
buf
 !
NULL
);

339 
	`ASSERT
(
size
 > 0);

340 
	`ASSERT
(
c⁄n
->
ªcv_ªady
);

343 
n
 = 
	`nc_ªad
(
c⁄n
->
sd
, 
buf
, 
size
);

345 
	`log_debug
(
LOG_VERB
, "ªcv o¿sd %d %zd o‡%zu", 
c⁄n
->
sd
, 
n
, 
size
);

347 i‡(
n
 > 0) {

348 i‡(
n
 < (
ssize_t
Ë
size
) {

349 
c⁄n
->
ªcv_ªady
 = 0;

351 
c⁄n
->
ªcv_byãs
 +(
size_t
)
n
;

352  
n
;

355 i‡(
n
 == 0) {

356 
c⁄n
->
ªcv_ªady
 = 0;

357 
c⁄n
->
eof
 = 1;

358 
	`log_debug
(
LOG_INFO
, "ªcv o¿sd %dÉo‡rb %zu sb %zu", 
c⁄n
->
sd
,

359 
c⁄n
->
ªcv_byãs
, c⁄n->
£nd_byãs
);

360  
n
;

363 i‡(
î∫o
 =
EINTR
) {

364 
	`log_debug
(
LOG_VERB
, "ªcv o¿sd %dÇŸÑódy -Éöå", 
c⁄n
->
sd
);

366 } i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EWOULDBLOCK
) {

367 
c⁄n
->
ªcv_ªady
 = 0;

368 
	`log_debug
(
LOG_VERB
, "ªcv o¿sd %dÇŸÑódy -Éagaö", 
c⁄n
->
sd
);

369  
NC_EAGAIN
;

371 
c⁄n
->
ªcv_ªady
 = 0;

372 
c⁄n
->
îr
 = 
î∫o
;

373 
	`log_îr‹
("ªcv o¿sd %d faûed: %s", 
c⁄n
->
sd
, 
	`°ªº‹
(
î∫o
));

374  
NC_ERROR
;

378 
	`NOT_REACHED
();

380  
NC_ERROR
;

381 
	}
}

383 
ssize_t


384 
	$c⁄n_£ndv
(
c⁄n
 *c⁄n, 
¨øy
 *
£ndv
, 
size_t
 
n£nd
)

386 
ssize_t
 
n
;

388 
	`ASSERT
(
	`¨øy_n
(
£ndv
) > 0);

389 
	`ASSERT
(
n£nd
 != 0);

390 
	`ASSERT
(
c⁄n
->
£nd_ªady
);

393 
n
 = 
	`nc_wrôev
(
c⁄n
->
sd
, 
£ndv
->
ñem
, sídv->
√Àm
);

395 
	`log_debug
(
LOG_VERB
, "£ndv o¿sd %d %zd o‡%zu i¿%"
PRIu32
" buffers",

396 
c⁄n
->
sd
, 
n
, 
n£nd
, 
£ndv
->
√Àm
);

398 i‡(
n
 > 0) {

399 i‡(
n
 < (
ssize_t
Ë
n£nd
) {

400 
c⁄n
->
£nd_ªady
 = 0;

402 
c⁄n
->
£nd_byãs
 +(
size_t
)
n
;

403  
n
;

406 i‡(
n
 == 0) {

407 
	`log_w¨n
("£ndv o¿sd %dÑëu∫ed zîo", 
c⁄n
->
sd
);

408 
c⁄n
->
£nd_ªady
 = 0;

412 i‡(
î∫o
 =
EINTR
) {

413 
	`log_debug
(
LOG_VERB
, "£ndv o¿sd %dÇŸÑódy -Éöå", 
c⁄n
->
sd
);

415 } i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EWOULDBLOCK
) {

416 
c⁄n
->
£nd_ªady
 = 0;

417 
	`log_debug
(
LOG_VERB
, "£ndv o¿sd %dÇŸÑódy -Éagaö", 
c⁄n
->
sd
);

418  
NC_EAGAIN
;

420 
c⁄n
->
£nd_ªady
 = 0;

421 
c⁄n
->
îr
 = 
î∫o
;

422 
	`log_îr‹
("£ndv o¿sd %d faûed: %s", 
c⁄n
->
sd
, 
	`°ªº‹
(
î∫o
));

423  
NC_ERROR
;

427 
	`NOT_REACHED
();

429  
NC_ERROR
;

430 
	}
}

432 
uöt32_t


433 
	$c⁄n_ncuº_c⁄n
()

435  
ncuº_c⁄n
;

436 
	}
}

438 
uöt64_t


439 
	$c⁄n_¡ŸÆ_c⁄n
()

441  
¡ŸÆ_c⁄n
;

442 
	}
}

444 
uöt32_t


445 
	$c⁄n_ncuº_cc⁄n
()

447  
ncuº_cc⁄n
;

448 
	}
}

454 
boﬁ


455 
	$c⁄n_authítiˇãd
(
c⁄n
 *conn)

457 
£rvî_poﬁ
 *
poﬁ
;

459 
	`ASSERT
(!
c⁄n
->
¥oxy
);

461 
poﬁ
 = 
c⁄n
->
˛õ¡
 ? c⁄n->
ow√r
 : ((
£rvî
 *)conn->owner)->owner;

463 i‡(!
poﬁ
->
ªquúe_auth
) {

464  
åue
;

467 i‡(!
c⁄n
->
authítiˇãd
) {

468  
Ál£
;

471  
åue
;

472 
	}
}

	@src/nc_connection.h

18 #i‚de‡
_NC_CONNECTION_H_


19 
	#_NC_CONNECTION_H_


	)

21 
	~<nc_c‹e.h
>

23 
	$r°©us_t
 (*
	tc⁄n_ªcv_t
)(
	tc⁄ãxt
 *, 
	tc⁄n
*);

24 
msg
* (*
	tc⁄n_ªcv_√xt_t
)(
	tc⁄ãxt
 *, 
	tc⁄n
 *, 
	tboﬁ
);

25 (*
	tc⁄n_ªcv_d⁄e_t
)(
	tc⁄ãxt
 *, 
	tc⁄n
 *, 
	tmsg
 *, msg *);

27 
	$r°©us_t
 (*
	tc⁄n_£nd_t
)(
	tc⁄ãxt
 *, 
	tc⁄n
*);

28 
msg
* (*
	tc⁄n_£nd_√xt_t
)(
	tc⁄ãxt
 *, 
	tc⁄n
 *);

29 (*
	tc⁄n_£nd_d⁄e_t
)(
	tc⁄ãxt
 *, 
	tc⁄n
 *, 
	tmsg
 *);

31 (*
	tc⁄n_˛o£_t
)(
	tc⁄ãxt
 *, 
	tc⁄n
 *);

32 
	$boﬁ
 (*
	tc⁄n_a˘ive_t
)(
	tc⁄n
 *);

34 (*
	tc⁄n_ªf_t
)(
	tc⁄n
 *, *);

35 (*
	tc⁄n_uƒef_t
)(
	tc⁄n
 *);

37 (*
	tc⁄n_msgq_t
)(
	tc⁄ãxt
 *, 
	tc⁄n
 *, 
	tmsg
 *);

38 (*
	tc⁄n_po°_c⁄√˘_t
)(
	tc⁄ãxt
 *
	t˘x
, 
	tc⁄n
 *, 
	t£rvî
 *server);

39 (*
	tc⁄n_swÆlow_msg_t
)(
	tc⁄n
 *, 
	tmsg
 *, msg *);

41 
	sc⁄n
 {

42 
	`TAILQ_ENTRY
(
c⁄n
Ë
c⁄n_tqe
;

43 *
ow√r
;

45 
sd
;

46 
Ámûy
;

47 
sockÀn_t
 
addæí
;

48 
sockaddr
 *
addr
;

50 
msg_tqh
 
imsg_q
;

51 
msg_tqh
 
omsg_q
;

52 
msg
 *
rmsg
;

53 
msg
 *
smsg
;

55 
c⁄n_ªcv_t
 
ªcv
;

56 
c⁄n_ªcv_√xt_t
 
ªcv_√xt
;

57 
c⁄n_ªcv_d⁄e_t
 
ªcv_d⁄e
;

58 
c⁄n_£nd_t
 
£nd
;

59 
c⁄n_£nd_√xt_t
 
£nd_√xt
;

60 
c⁄n_£nd_d⁄e_t
 
£nd_d⁄e
;

61 
c⁄n_˛o£_t
 
˛o£
;

62 
c⁄n_a˘ive_t
 
a˘ive
;

63 
c⁄n_po°_c⁄√˘_t
 
po°_c⁄√˘
;

64 
c⁄n_swÆlow_msg_t
 
swÆlow_msg
;

66 
c⁄n_ªf_t
 
ªf
;

67 
c⁄n_uƒef_t
 
uƒef
;

69 
c⁄n_msgq_t
 
íqueue_öq
;

70 
c⁄n_msgq_t
 
dequeue_öq
;

71 
c⁄n_msgq_t
 
íqueue_outq
;

72 
c⁄n_msgq_t
 
dequeue_outq
;

74 
size_t
 
ªcv_byãs
;

75 
size_t
 
£nd_byãs
;

77 
uöt32_t
 
evíts
;

78 
îr_t
 
îr
;

79 
ªcv_a˘ive
:1;

80 
ªcv_ªady
:1;

81 
£nd_a˘ive
:1;

82 
£nd_ªady
:1;

84 
˛õ¡
:1;

85 
¥oxy
:1;

86 
c⁄√˘ög
:1;

87 
c⁄√˘ed
:1;

88 
eof
:1;

89 
d⁄e
:1;

90 
ªdis
:1;

91 
authítiˇãd
:1;

94 
	`TAILQ_HEAD
(
c⁄n_tqh
, 
c⁄n
);

96 
c⁄ãxt
 *
	`c⁄n_to_˘x
(
c⁄n
 *conn);

97 
c⁄n
 *
	`c⁄n_gë
(*
ow√r
, 
boﬁ
 
˛õ¡
, boﬁ 
ªdis
);

98 
c⁄n
 *
	`c⁄n_gë_¥oxy
(*
ow√r
);

99 
	`c⁄n_put
(
c⁄n
 *conn);

100 
ssize_t
 
	`c⁄n_ªcv
(
c⁄n
 *c⁄n, *
buf
, 
size_t
 
size
);

101 
ssize_t
 
	`c⁄n_£ndv
(
c⁄n
 *c⁄n, 
¨øy
 *
£ndv
, 
size_t
 
n£nd
);

102 
	`c⁄n_öô
();

103 
	`c⁄n_deöô
();

104 
uöt32_t
 
	`c⁄n_ncuº_c⁄n
();

105 
uöt64_t
 
	`c⁄n_¡ŸÆ_c⁄n
();

106 
uöt32_t
 
	`c⁄n_ncuº_cc⁄n
();

107 
boﬁ
 
	`c⁄n_authítiˇãd
(
c⁄n
 *conn);

	@src/nc_core.c

18 
	~<°dlib.h
>

19 
	~<uni°d.h
>

20 
	~<nc_c‹e.h
>

21 
	~<nc_c⁄f.h
>

22 
	~<nc_£rvî.h
>

23 
	~<nc_¥oxy.h
>

25 
uöt32_t
 
	g˘x_id
;

27 
r°©us_t


28 
	$c‹e_ˇlc_c⁄√˘i⁄s
(
c⁄ãxt
 *
˘x
)

30 
°©us
;

31 
æimô
 
limô
;

33 
°©us
 = 
	`gëæimô
(
RLIMIT_NOFILE
, &
limô
);

34 i‡(
°©us
 < 0) {

35 
	`log_îr‹
("gëæimô faûed: %s", 
	`°ªº‹
(
î∫o
));

36  
NC_ERROR
;

39 
˘x
->
max_nfd
 = (
uöt32_t
)
limô
.
æim_cur
;

40 
˘x
->
max_ncc⁄n
 = ctx->
max_nfd
 - ctx->
max_nsc⁄n
 - 
RESERVED_FDS
;

41 
	`log_debug
(
LOG_NOTICE
, "max fd†%"
PRIu32
" max client conns %"PRIu32" "

42 "max sîvî c⁄n†%"
PRIu32
"", 
˘x
->
max_nfd
, ctx->
max_ncc⁄n
,

43 
˘x
->
max_nsc⁄n
);

45  
NC_OK
;

46 
	}
}

48 
c⁄ãxt
 *

49 
	$c‹e_˘x_¸óã
(
ö°™˚
 *
nci
)

51 
r°©us_t
 
°©us
;

52 
c⁄ãxt
 *
˘x
;

54 
˘x
 = 
	`nc_Æloc
((*ctx));

55 i‡(
˘x
 =
NULL
) {

56  
NULL
;

58 
˘x
->
id
 = ++
˘x_id
;

59 
˘x
->
cf
 = 
NULL
;

60 
˘x
->
°©s
 = 
NULL
;

61 
˘x
->
evb
 = 
NULL
;

62 
	`¨øy_nuŒ
(&
˘x
->
poﬁ
);

63 
˘x
->
max_timeout
 = 
nci
->
°©s_öãrvÆ
;

64 
˘x
->
timeout
 = ctx->
max_timeout
;

65 
˘x
->
max_nfd
 = 0;

66 
˘x
->
max_ncc⁄n
 = 0;

67 
˘x
->
max_nsc⁄n
 = 0;

77 
˘x
->
ow√r_ö°
 = 
nci
;

78 
˘x
->
js⁄_cf
 = 
NULL
;

79 i‡(
nci
->
zk_£rvîs
) {

81 
˘x
->
js⁄_cf
 = 
	`gë_c⁄f_‰om_zk
(
nci
->
zk_£rvîs
, ctx);

82 } i‡(
nci
->
c⁄f_fûíame
) {

83 
˘x
->
js⁄_cf
 = 
	`c⁄f_js⁄_¸óã
(
nci
->
c⁄f_fûíame
,Çci);

85 i‡(!
˘x
->
js⁄_cf
) {

86 
	`log_debug
(
LOG_NOTICE
, "no confávailable");

87 
	`nc_‰ì
(
˘x
);

88  
NULL
;

90 
˘x
->
cf
 = ctx->
js⁄_cf
;

93 
öt64_t
 
lowe°
 = 1;

94 
öt64_t
 
highe°
 = 1000000000;

95 
sig_digôs
 = 3;

96 
	`hdr_öô
(
lowe°
, 
highe°
, 
sig_digôs
, &
˘x
->
hi°ogøm
);

97 
	`±hªad_muãx_öô
(&
˘x
->
hi°o_lock
, 
NULL
);

100 
°©us
 = 
	`£rvî_poﬁ_öô
(&
˘x
->
poﬁ
, &˘x->
js⁄_cf
->pool, ctx);

101 i‡(
°©us
 !
NC_OK
) {

102 
	`c⁄f_de°roy
(
˘x
->
cf
);

103 
	`nc_‰ì
(
˘x
);

104  
NULL
;

111 
°©us
 = 
	`c‹e_ˇlc_c⁄√˘i⁄s
(
˘x
);

112 i‡(
°©us
 !
NC_OK
) {

113 
	`£rvî_poﬁ_deöô
(&
˘x
->
poﬁ
);

114 
	`c⁄f_de°roy
(
˘x
->
cf
);

115 
	`nc_‰ì
(
˘x
);

116  
NULL
;

120 
˘x
->
°©s
 = 
	`°©s_¸óã
(
nci
->
°©s_p‹t
,Çci->
°©s_addr
,Çci->
°©s_öãrvÆ
,

121 
nci
->
ho°«me
, &
˘x
->
poﬁ
);

122 i‡(
˘x
->
°©s
 =
NULL
) {

123 
	`£rvî_poﬁ_deöô
(&
˘x
->
poﬁ
);

124 
	`c⁄f_de°roy
(
˘x
->
cf
);

125 
	`nc_‰ì
(
˘x
);

126  
NULL
;

128 
˘x
->
°©s
->
c⁄ãxt
 = ctx;

131 
˘x
->
evb
 = 
	`evít_ba£_¸óã
(
EVENT_SIZE
, &
c‹e_c‹e
);

132 i‡(
˘x
->
evb
 =
NULL
) {

133 
	`°©s_de°roy
(
˘x
->
°©s
);

134 
	`£rvî_poﬁ_deöô
(&
˘x
->
poﬁ
);

135 
	`c⁄f_de°roy
(
˘x
->
cf
);

136 
	`nc_‰ì
(
˘x
);

137  
NULL
;

141 
°©us
 = 
	`£rvî_poﬁ_¥ec⁄√˘
(
˘x
);

142 i‡(
°©us
 !
NC_OK
) {

143 
	`£rvî_poﬁ_disc⁄√˘
(
˘x
);

144 
	`evít_ba£_de°roy
(
˘x
->
evb
);

145 
	`°©s_de°roy
(
˘x
->
°©s
);

146 
	`£rvî_poﬁ_deöô
(&
˘x
->
poﬁ
);

147 
	`c⁄f_de°roy
(
˘x
->
cf
);

148 
	`nc_‰ì
(
˘x
);

149  
NULL
;

153 
°©us
 = 
	`¥oxy_öô
(
˘x
);

154 i‡(
°©us
 !
NC_OK
) {

155 
	`£rvî_poﬁ_disc⁄√˘
(
˘x
);

156 
	`evít_ba£_de°roy
(
˘x
->
evb
);

157 
	`°©s_de°roy
(
˘x
->
°©s
);

158 
	`£rvî_poﬁ_deöô
(&
˘x
->
poﬁ
);

159 
	`c⁄f_de°roy
(
˘x
->
cf
);

160 
	`nc_‰ì
(
˘x
);

161  
NULL
;

164 
	`log_debug
(
LOG_VVERB
, "¸óãd ctx %∞id %"
PRIu32
"", 
˘x
, ctx->
id
);

166  
˘x
;

167 
	}
}

170 
	$c‹e_˘x_de°roy
(
c⁄ãxt
 *
˘x
)

172 
	`log_debug
(
LOG_VVERB
, "de°roy ctx %∞id %"
PRIu32
"", 
˘x
, ctx->
id
);

173 
	`¥oxy_deöô
(
˘x
);

174 
	`£rvî_poﬁ_disc⁄√˘
(
˘x
);

175 
	`evít_ba£_de°roy
(
˘x
->
evb
);

176 
	`°©s_de°roy
(
˘x
->
°©s
);

177 
	`£rvî_poﬁ_deöô
(&
˘x
->
poﬁ
);

178 
	`c⁄f_de°roy
(
˘x
->
cf
);

179 
	`c⁄f_de°roy
(
˘x
->
js⁄_cf
);

180 
	`nc_‰ì
(
˘x
);

181 
	}
}

183 
c⁄ãxt
 *

184 
	$c‹e_°¨t
(
ö°™˚
 *
nci
)

186 
c⁄ãxt
 *
˘x
;

188 
	`mbuf_öô
(
nci
);

189 
	`msg_öô
();

190 
	`c⁄n_öô
();

192 
˘x
 = 
	`c‹e_˘x_¸óã
(
nci
);

193 i‡(
˘x
 !
NULL
) {

194 
nci
->
˘x
 = ctx;

195  
˘x
;

198 
	`c⁄n_deöô
();

199 
	`msg_deöô
();

200 
	`mbuf_deöô
();

202  
NULL
;

203 
	}
}

206 
	$c‹e_°›
(
c⁄ãxt
 *
˘x
)

208 
	`c⁄n_deöô
();

209 
	`msg_deöô
();

210 
	`mbuf_deöô
();

211 
	`c‹e_˘x_de°roy
(
˘x
);

212 
	}
}

214 
r°©us_t


215 
	$c‹e_ªcv
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

217 
r°©us_t
 
°©us
;

219 
°©us
 = 
c⁄n
->
	`ªcv
(
˘x
, conn);

220 i‡(
°©us
 !
NC_OK
) {

221 
	`log_debug
(
LOG_INFO
, "recv on %c %d failed: %s",

222 
c⁄n
->
˛õ¡
 ? 'c' : (c⁄n->
¥oxy
 ? 'p' : 's'), c⁄n->
sd
,

223 
	`°ªº‹
(
î∫o
));

226  
°©us
;

227 
	}
}

229 
r°©us_t


230 
	$c‹e_£nd
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

232 
r°©us_t
 
°©us
;

234 
°©us
 = 
c⁄n
->
	`£nd
(
˘x
, conn);

235 i‡(
°©us
 !
NC_OK
) {

236 
	`log_debug
(
LOG_INFO
, "send on %c %d failed: status: %dÉrrno: %d %s",

237 
c⁄n
->
˛õ¡
 ? 'c' : (c⁄n->
¥oxy
 ? 'p' : 's'), c⁄n->
sd
,

238 
°©us
, 
î∫o
, 
	`°ªº‹
(errno));

241  
°©us
;

242 
	}
}

245 
	$c‹e_˛o£
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

247 
r°©us_t
 
°©us
;

248 
ty≥
, *
addr°r
;

250 
	`ASSERT
(
c⁄n
->
sd
 > 0);

252 i‡(
c⁄n
->
˛õ¡
) {

253 
ty≥
 = 'c';

254 
addr°r
 = 
	`nc_uƒesﬁve_≥î_desc
(
c⁄n
->
sd
);

256 
ty≥
 = 
c⁄n
->
¥oxy
 ? 'p' : 's';

257 
addr°r
 = 
	`nc_uƒesﬁve_addr
(
c⁄n
->
addr
, c⁄n->
addæí
);

259 
	`log_debug
(
LOG_NOTICE
, "˛o£ %¯%d '%s' o¿evíà%04"
PRIX32
"Éof %d done "

260 "%dÑb %zu sb %zu%¯%s", 
ty≥
, 
c⁄n
->
sd
, 
addr°r
, c⁄n->
evíts
,

261 
c⁄n
->
eof
, c⁄n->
d⁄e
, c⁄n->
ªcv_byãs
, c⁄n->
£nd_byãs
,

262 
c⁄n
->
îr
 ? ':' : ' ', c⁄n->î∏? 
	`°ªº‹
(conn->err) : "");

264 
°©us
 = 
	`evít_dñ_c⁄n
(
˘x
->
evb
, 
c⁄n
);

265 i‡(
°©us
 < 0) {

266 
	`log_w¨n
("event del conn %c %d failed, ignored: %s",

267 
ty≥
, 
c⁄n
->
sd
, 
	`°ªº‹
(
î∫o
));

270 
c⁄n
->
	`˛o£
(
˘x
, conn);

271 
	}
}

274 
	$c‹e_îr‹
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

276 
r°©us_t
 
°©us
;

277 
ty≥
 = 
c⁄n
->
˛õ¡
 ? 'c' : (c⁄n->
¥oxy
 ? 'p' : 's');

279 
°©us
 = 
	`nc_gë_s€º‹
(
c⁄n
->
sd
);

280 i‡(
°©us
 < 0) {

281 
	`log_w¨n
("gë s€º o¿%¯%d faûed, ign‹ed: %s", 
ty≥
, 
c⁄n
->
sd
,

282 
	`°ªº‹
(
î∫o
));

284 
c⁄n
->
îr
 = 
î∫o
;

286 
	`c‹e_˛o£
(
˘x
, 
c⁄n
);

287 
	}
}

290 
	$c‹e_timeout
(
c⁄ãxt
 *
˘x
)

293 
msg
 *msg;

294 
c⁄n
 *conn;

295 
öt64_t
 
now
, 
thí
;

297 
msg
 = 
	`msg_tmo_mö
();

298 i‡(
msg
 =
NULL
) {

299 
˘x
->
timeout
 = ctx->
max_timeout
;

305 i‡(
msg
->
îr‹
 || msg->
d⁄e
) {

306 
	`msg_tmo_dñëe
(
msg
);

315 
c⁄n
 = 
msg
->
tmo_rbe
.
d©a
;

316 
thí
 = 
msg
->
tmo_rbe
.
key
;

318 
now
 = 
	`nc_m£c_now
();

319 i‡(
now
 < 
thí
) {

320 
dñè
 = ()(
thí
 - 
now
);

321 
˘x
->
timeout
 = 
	`MIN
(
dñè
, ctx->
max_timeout
);

325 
	`log_debug
(
LOG_INFO
, "ªq %"
PRIu64
" o¿†%dÅimedout", 
msg
->
id
, 
c⁄n
->
sd
);

327 
	`msg_tmo_dñëe
(
msg
);

328 
c⁄n
->
îr
 = 
ETIMEDOUT
;

330 
	`c‹e_˛o£
(
˘x
, 
c⁄n
);

332 
	}
}

334 
r°©us_t


335 
	$c‹e_c‹e
(*
¨g
, 
uöt32_t
 
evíts
)

337 
r°©us_t
 
°©us
;

338 
c⁄n
 *c⁄¿
¨g
;

339 
c⁄ãxt
 *
˘x
;

341 i‡(
c⁄n
->
ow√r
 =
NULL
) {

342 
	`log_w¨n
("conn isálready unrefed!");

343  
NC_OK
;

346 
˘x
 = 
	`c⁄n_to_˘x
(
c⁄n
);

348 
	`log_debug
(
LOG_VVERB
, "evíà%04"
PRIX32
" o¿%¯%d", 
evíts
,

349 
c⁄n
->
˛õ¡
 ? 'c' : (c⁄n->
¥oxy
 ? 'p' : 's'), c⁄n->
sd
);

351 
c⁄n
->
evíts
 =Évents;

354 i‡(
evíts
 & 
EVENT_ERR
) {

355 
	`c‹e_îr‹
(
˘x
, 
c⁄n
);

356  
NC_ERROR
;

360 i‡(
evíts
 & 
EVENT_READ
) {

361 
°©us
 = 
	`c‹e_ªcv
(
˘x
, 
c⁄n
);

362 i‡(
°©us
 !
NC_OK
 || 
c⁄n
->
d⁄e
 || c⁄n->
îr
) {

363 
	`c‹e_˛o£
(
˘x
, 
c⁄n
);

364  
NC_ERROR
;

368 i‡(
evíts
 & 
EVENT_WRITE
) {

369 
°©us
 = 
	`c‹e_£nd
(
˘x
, 
c⁄n
);

370 i‡(
°©us
 !
NC_OK
 || 
c⁄n
->
d⁄e
 || c⁄n->
îr
) {

371 
	`c‹e_˛o£
(
˘x
, 
c⁄n
);

372  
NC_ERROR
;

376  
NC_OK
;

377 
	}
}

379 
r°©us_t


380 
	$c‹e_lo›
(
c⁄ãxt
 *
˘x
)

382 
nsd
;

384 
nsd
 = 
	`evít_waô
(
˘x
->
evb
, ctx->
timeout
);

385 i‡(
nsd
 < 0) {

386  
nsd
;

389 
	`c‹e_timeout
(
˘x
);

391 
	`°©s_sw≠
(
˘x
->
°©s
);

393  
NC_OK
;

394 
	}
}

	@src/nc_core.h

18 #i‚de‡
_NC_CORE_H_


19 
	#_NC_CORE_H_


	)

21 #ifde‡
HAVE_CONFIG_H


22 
	~<c⁄fig.h
>

25 #ifde‡
HAVE_DEBUG_LOG


26 
	#NC_DEBUG_LOG
 1

	)

29 #ifde‡
HAVE_ASSERT_PANIC


30 
	#NC_ASSERT_PANIC
 1

	)

33 #ifde‡
HAVE_ASSERT_LOG


34 
	#NC_ASSERT_LOG
 1

	)

37 #ifde‡
HAVE_STATS


38 
	#NC_STATS
 1

	)

40 
	#NC_STATS
 0

	)

43 #ifde‡
HAVE_EPOLL


44 
	#NC_HAVE_EPOLL
 1

	)

45 #ñi‡
HAVE_KQUEUE


46 
	#NC_HAVE_KQUEUE
 1

	)

47 #ñi‡
HAVE_EVENT_PORTS


48 
	#NC_HAVE_EVENT_PORTS
 1

	)

50 #îr‹ 
missög
 
sˇœbÀ
 
I
/
O
 
evít
 
nŸifiˇti⁄
 
mech™ism


53 #ifde‡
HAVE_LITTLE_ENDIAN


54 
	#NC_LITTLE_ENDIAN
 1

	)

57 #ifde‡
HAVE_BACKTRACE


58 
	#NC_HAVE_BACKTRACE
 1

	)

61 
	#NC_OK
 0

	)

62 
	#NC_ERROR
 -1

	)

63 
	#NC_EAGAIN
 -2

	)

64 
	#NC_ENOMEM
 -3

	)

67 
	#RESERVED_FDS
 32

	)

69 
	tr°©us_t
;

70 
	tîr_t
;

72 
	g¨øy
;

73 
	g°rög
;

74 
	gc⁄ãxt
;

75 
	gc⁄n
;

76 
	gc⁄n_tqh
;

77 
	gmsg
;

78 
	gmsg_tqh
;

79 
	g£rvî
;

80 
	g£rvî_poﬁ
;

81 
	gmbuf
;

82 
	gmhdr
;

83 
	gc⁄f
;

84 
	g°©s
;

85 
	gö°™˚
;

86 
	gevít_ba£
;

88 
	~<°ddef.h
>

89 
	~<°döt.h
>

90 
	~<°dboﬁ.h
>

91 
	~<öây≥s.h
>

92 
	~<°rög.h
>

93 
	~<°dio.h
>

94 
	~<˘y≥.h
>

95 
	~<î∫o.h
>

96 
	~<limôs.h
>

97 
	~<time.h
>

98 
	~<uni°d.h
>

99 
	~<±hªad.h
>

101 
	~<sys/ty≥s.h
>

102 
	~<sys/sockë.h
>

103 
	~<sys/un.h
>

104 
	~<sys/time.h
>

105 
	~<sys/ªsour˚.h
>

106 
	~<√töë/ö.h
>

108 
	~<nc_¨øy.h
>

109 
	~<nc_°rög.h
>

110 
	~<nc_queue.h
>

111 
	~<nc_rbåì.h
>

112 
	~<nc_log.h
>

113 
	~<nc_utû.h
>

114 
	~<evít/nc_evít.h
>

115 
	~<nc_°©s.h
>

116 
	~<nc_mbuf.h
>

117 
	~<nc_mesßge.h
>

118 
	~<nc_c⁄√˘i⁄.h
>

119 
	~<nc_£rvî.h
>

120 
	~<zkutû.h
>

121 
	~<hdr_hi°ogøm.h
>

123 
	gö°™˚
;

125 
	sc⁄ãxt
 {

126 
uöt32_t
 
	mid
;

127 
c⁄f
 *
	mcf
;

128 
°©s
 *
	m°©s
;

130 
evít_ba£
 *
	mevb
;

131 
	mmax_timeout
;

132 
	mtimeout
;

134 
uöt32_t
 
	mmax_nfd
;

135 
uöt32_t
 
	mmax_ncc⁄n
;

136 
uöt32_t
 
	mmax_nsc⁄n
;

138 
c⁄f
 *
	mjs⁄_cf
;

139 
¨øy
 
	mpoﬁ
;

141 
zh™dÀ_t
 *
	mzkh
;

143 
±hªad_muãx_t
 
	mhi°o_lock
;

144 
hdr_hi°ogøm
 *
	mhi°ogøm
;

146 
ö°™˚
 *
	mow√r_ö°
;

150 
	sö°™˚
 {

151 
c⁄ãxt
 *
	m˘x
;

152 
	mlog_Àvñ
;

153 *
	mlog_fûíame
;

154 *
	mc⁄f_fûíame
;

155 *
	mzk_£rvîs
;

156 *
	mzk_c⁄fig_roŸ
;

157 
uöt16_t
 
	m°©s_p‹t
;

158 
	m°©s_öãrvÆ
;

159 *
	m°©s_addr
;

160 
	mho°«me
[
NC_MAXHOSTNAMELEN
];

161 
size_t
 
	mmbuf_chunk_size
;

162 
pid_t
 
	mpid
;

163 *
	mpid_fûíame
;

164 
	mpidfûe
:1;

166 *
	m¥oxy_ù
;

167 
uöt16_t
 
	m¥oxy_p‹t
;

169 *
	munix_∑th
;

172 *
	mpoﬁ_«me
;

175 
c⁄ãxt
 *
c‹e_°¨t
(
ö°™˚
 *
nci
);

176 
c‹e_°›
(
c⁄ãxt
 *
˘x
);

177 
r°©us_t
 
c‹e_c‹e
(*
¨g
, 
uöt32_t
 
evíts
);

178 
r°©us_t
 
c‹e_lo›
(
c⁄ãxt
 *
˘x
);

	@src/nc_hcdapi.c

5 
	~<nc_hcd≠i.h
>

6 
	~<°dboﬁ.h
>

7 
	~<°rög.h
>

8 
	~<nc_c‹e.h
>

9 
	~<nc_c⁄f.h
>

10 
	~<∑rs⁄/∑rs⁄.h
>

17 
boﬁ
 
	$£ç¨£r
(*
buf„r
, **
key
, **
vÆue
) {

18 *
keybuf
;

20 *
w‹ds
[18], *
aPå
;

21 
cou¡
 = 0;

22 i‡(!
buf„r
)

23  
Ál£
;

24 
aPå
 = 
	`°r£p
(&
buf„r
, "\x0d\x0a")) {

25 i‡(
cou¡
==8) {

26 
keybuf
 = 
aPå
;

29 i‡(
cou¡
>14)

31 
w‹ds
[
cou¡
++] = 
aPå
;

34 i‡(
cou¡
<12) {

35 *(++
keybuf
Ë!
NULL
);

36 
keybuf
++;

37 
aPå
 = 
	`°r£p
(&
keybuf
, "\x0d\x0a")) {

38 i‡(
cou¡
>14)

40 
w‹ds
[
cou¡
++] = 
aPå
;

44 i‡(
cou¡
<12)

45  
Ál£
;

46 *
key
 = 
w‹ds
[8];

47 *
vÆue
 = 
w‹ds
[12];

49  
åue
;

50 
	}
}

52 
boﬁ
 
	$hcd£t
(*
buf„r
, 
Àn
, 
£rvî_poﬁ
 *
poﬁ
) {

53 *
keybuf
, *
vÆuebuf
;

55 
	`ASSERT
(
åue
==
	`£ç¨£r
(
buf„r
, &
keybuf
, &
vÆuebuf
));

56 
	`log_debug
(
LOG_NOTICE
, "Key = %s\nVÆuê%s\n", 
keybuf
, 
vÆuebuf
);

58  
	`hcd£tbuf
(
vÆuebuf
, 
Àn
, 
poﬁ
);

59 
	}
}

61 
boﬁ
 
	$hcdgë
(*
buf„r
, 
Àn
) {

62 
	`¥ötf
("inside hcdget\n");

63  
åue
;

64 
	}
}

	@src/nc_hcdapi.h

5 #i‚de‡
_NC_HCDAPI_H_


6 
	#_NC_HCDAPI_H_


	)

8 
	~<°dboﬁ.h
>

	@src/nc_log.c

18 
	~<°dlib.h
>

19 
	~<°d¨g.h
>

20 
	~<˘y≥.h
>

21 
	~<time.h
>

22 
	~<sys/°©.h
>

23 
	~<f˙é.h
>

25 
	~<nc_c‹e.h
>

27 
loggî
 
	gloggî
;

30 
	$log_öô
(
Àvñ
, *
«me
)

32 
loggî
 *
l
 = &logger;

34 
l
->
Àvñ
 = 
	`MAX
(
LOG_EMERG
, 
	`MIN
÷evñ, 
LOG_PVERB
));

35 
l
->
«me
 =Çame;

36 i‡(
«me
 =
NULL
 || !
	`°æí
(name)) {

37 
l
->
fd
 = 
STDERR_FILENO
;

39 
l
->
fd
 = 
	`›í
(
«me
, 
O_WRONLY
 | 
O_APPEND
 | 
O_CREAT
, 0644);

40 i‡(
l
->
fd
 < 0) {

41 
	`log_°dîr
("›íögÜog fûê'%s' faûed: %s", 
«me
,

42 
	`°ªº‹
(
î∫o
));

48 
	}
}

51 
	$log_deöô
()

53 
loggî
 *
l
 = &logger;

55 i‡(
l
->
fd
 < 0 ||Ü->fd =
STDERR_FILENO
) {

59 
	`˛o£
(
l
->
fd
);

60 
	}
}

63 
	$log_ª›í
()

65 
loggî
 *
l
 = &logger;

67 i‡(
l
->
fd
 !
STDERR_FILENO
) {

68 
	`˛o£
(
l
->
fd
);

69 
l
->
fd
 = 
	`›í
÷->
«me
, 
O_WRONLY
 | 
O_APPEND
 | 
O_CREAT
, 0644);

70 i‡(
l
->
fd
 < 0) {

71 
	`log_°dîr_ß„
("ª›íögÜog fûê'%s' faûed, ign‹ed: %s", 
l
->
«me
,

72 
	`°ªº‹
(
î∫o
));

75 
	}
}

78 
	$log_Àvñ_up
()

80 
loggî
 *
l
 = &logger;

82 i‡(
l
->
Àvñ
 < 
LOG_PVERB
) {

83 
l
->
Àvñ
++;

84 
	`log_ß„
("u∞logÜevñÅÿ%d", 
l
->
Àvñ
);

86 
	}
}

89 
	$log_Àvñ_down
()

91 
loggî
 *
l
 = &logger;

93 i‡(
l
->
Àvñ
 > 
LOG_EMERG
) {

94 
l
->
Àvñ
--;

95 
	`log_ß„
("dow¿logÜevñÅÿ%d", 
l
->
Àvñ
);

97 
	}
}

100 
	$log_Àvñ_£t
(
Àvñ
)

102 
loggî
 *
l
 = &logger;

104 
l
->
Àvñ
 = 
	`MAX
(
LOG_EMERG
, 
	`MIN
÷evñ, 
LOG_PVERB
));

105 
	`loga
("£àlogÜevñÅÿ%d", 
l
->
Àvñ
);

106 
	}
}

109 
	$log_°ackåa˚
()

111 
loggî
 *
l
 = &logger;

113 i‡(
l
->
fd
 < 0) {

116 
	`nc_°ackåa˚_fd
(
l
->
fd
);

117 
	}
}

120 
	$log_loggabÀ
(
Àvñ
)

122 
loggî
 *
l
 = &logger;

124 i‡(
Àvñ
 > 
l
->level) {

129 
	}
}

132 
	$_log
(c⁄° *
fûe
, 
löe
, 
∑nic
, c⁄° *
fmt
, ...)

134 
loggî
 *
l
 = &logger;

135 
Àn
, 
size
, 
î∫o_ßve
;

136 
buf
[
LOG_MAX_LEN
];

137 
va_li°
 
¨gs
;

138 
ssize_t
 
n
;

139 
timevÆ
 
tv
;

141 i‡(
l
->
fd
 < 0) {

145 
î∫o_ßve
 = 
î∫o
;

146 
Àn
 = 0;

147 
size
 = 
LOG_MAX_LEN
;

149 
	`gëtimeofday
(&
tv
, 
NULL
);

150 
buf
[
Àn
++] = '[';

151 
Àn
 +
	`nc_°r·ime
(
buf
 +Üí, 
size
 -Üí, "%Y-%m-%d %H:%M:%S.", 
	`loˇ…ime
(&
tv
.
tv_£c
));

152 
Àn
 +
	`nc_s˙¥ötf
(
buf
 +Üí, 
size
 -Üí, "%03ld", 
tv
.
tv_u£c
/1000);

153 
Àn
 +
	`nc_s˙¥ötf
(
buf
 +Üí, 
size
 -Üí, "] %s:%d ", 
fûe
, 
löe
);

155 
	`va_°¨t
(
¨gs
, 
fmt
);

156 
Àn
 +
	`nc_vs˙¥ötf
(
buf
 +Üí, 
size
 -Üí, 
fmt
, 
¨gs
);

157 
	`va_íd
(
¨gs
);

159 
buf
[
Àn
++] = '\n';

161 
n
 = 
	`nc_wrôe
(
l
->
fd
, 
buf
, 
Àn
);

162 i‡(
n
 < 0) {

163 
l
->
√º‹
++;

166 
î∫o
 = 
î∫o_ßve
;

168 i‡(
∑nic
) {

169 
	`ab‹t
();

171 
	}
}

174 
	$_log_°dîr
(c⁄° *
fmt
, ...)

176 
loggî
 *
l
 = &logger;

177 
Àn
, 
size
, 
î∫o_ßve
;

178 
buf
[4 * 
LOG_MAX_LEN
];

179 
va_li°
 
¨gs
;

180 
ssize_t
 
n
;

182 
î∫o_ßve
 = 
î∫o
;

183 
Àn
 = 0;

184 
size
 = 4 * 
LOG_MAX_LEN
;

186 
	`va_°¨t
(
¨gs
, 
fmt
);

187 
Àn
 +
	`nc_vs˙¥ötf
(
buf
, 
size
, 
fmt
, 
¨gs
);

188 
	`va_íd
(
¨gs
);

190 
buf
[
Àn
++] = '\n';

192 
n
 = 
	`nc_wrôe
(
STDERR_FILENO
, 
buf
, 
Àn
);

193 i‡(
n
 < 0) {

194 
l
->
√º‹
++;

197 
î∫o
 = 
î∫o_ßve
;

198 
	}
}

205 
	$_log_hexdump
(c⁄° *
fûe
, 
löe
, *
d©a
, 
d©Æí
,

206 c⁄° *
fmt
, ...)

208 
loggî
 *
l
 = &logger;

209 
buf
[8 * 
LOG_MAX_LEN
];

210 
i
, 
off
, 
Àn
, 
size
, 
î∫o_ßve
;

211 
ssize_t
 
n
;

213 i‡(
l
->
fd
 < 0) {

218 
î∫o_ßve
 = 
î∫o
;

219 
off
 = 0;

220 
Àn
 = 0;

221 
size
 = 8 * 
LOG_MAX_LEN
;

223 
d©Æí
 !0 && (
Àn
 < 
size
 - 1)) {

224 *
ßve
, *
°r
;

225 
c
;

226 
ßvñí
;

228 
Àn
 +
	`nc_s˙¥ötf
(
buf
 +Üí, 
size
 -Üí, "%08x ", 
off
);

230 
ßve
 = 
d©a
;

231 
ßvñí
 = 
d©Æí
;

233 
i
 = 0; 
d©Æí
 !0 && i < 16; 
d©a
++, datalen--, i++) {

234 
c
 = ()(*
d©a
);

235 
°r
 = (
i
 == 7) ? " " : " ";

236 
Àn
 +
	`nc_s˙¥ötf
(
buf
 +Üí, 
size
 -Üí, "%02x%s", 
c
, 
°r
);

238  ; 
i
 < 16; i++) {

239 
°r
 = (
i
 == 7) ? " " : " ";

240 
Àn
 +
	`nc_s˙¥ötf
(
buf
 +Üí, 
size
 -Üí, " %s", 
°r
);

243 
d©a
 = 
ßve
;

244 
d©Æí
 = 
ßvñí
;

246 
Àn
 +
	`nc_s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, " |");

248 
i
 = 0; 
d©Æí
 !0 && i < 16; 
d©a
++, datalen--, i++) {

249 
c
 = ()(
	`i•röt
(*
d©a
) ? *data : '.');

250 
Àn
 +
	`nc_s˙¥ötf
(
buf
 +Üí, 
size
 -Üí, "%c", 
c
);

252 
Àn
 +
	`nc_s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "|\n");

254 
off
 += 16;

257 
n
 = 
	`nc_wrôe
(
l
->
fd
, 
buf
, 
Àn
);

258 i‡(
n
 < 0) {

259 
l
->
√º‹
++;

262 i‡(
Àn
 >
size
 - 1) {

263 
n
 = 
	`nc_wrôe
(
l
->
fd
, "\n", 1);

264 i‡(
n
 < 0) {

265 
l
->
√º‹
++;

269 
î∫o
 = 
î∫o_ßve
;

270 
	}
}

273 
	$_log_ß„
(c⁄° *
fmt
, ...)

275 
loggî
 *
l
 = &logger;

276 
Àn
, 
size
, 
î∫o_ßve
;

277 
buf
[
LOG_MAX_LEN
];

278 
va_li°
 
¨gs
;

279 
ssize_t
 
n
;

281 i‡(
l
->
fd
 < 0) {

285 
î∫o_ßve
 = 
î∫o
;

286 
Àn
 = 0;

287 
size
 = 
LOG_MAX_LEN
;

289 
Àn
 +
	`nc_ß„_¢¥ötf
(
buf
 +Üí, 
size
 -Üen, "[.......................] ");

291 
	`va_°¨t
(
¨gs
, 
fmt
);

292 
Àn
 +
	`nc_ß„_v¢¥ötf
(
buf
 +Üí, 
size
 -Üí, 
fmt
, 
¨gs
);

293 
	`va_íd
(
¨gs
);

295 
buf
[
Àn
++] = '\n';

297 
n
 = 
	`nc_wrôe
(
l
->
fd
, 
buf
, 
Àn
);

298 i‡(
n
 < 0) {

299 
l
->
√º‹
++;

302 
î∫o
 = 
î∫o_ßve
;

303 
	}
}

306 
	$_log_°dîr_ß„
(c⁄° *
fmt
, ...)

308 
loggî
 *
l
 = &logger;

309 
Àn
, 
size
, 
î∫o_ßve
;

310 
buf
[
LOG_MAX_LEN
];

311 
va_li°
 
¨gs
;

312 
ssize_t
 
n
;

314 
î∫o_ßve
 = 
î∫o
;

315 
Àn
 = 0;

316 
size
 = 
LOG_MAX_LEN
;

318 
Àn
 +
	`nc_ß„_¢¥ötf
(
buf
 +Üí, 
size
 -Üen, "[.......................] ");

320 
	`va_°¨t
(
¨gs
, 
fmt
);

321 
Àn
 +
	`nc_ß„_v¢¥ötf
(
buf
 +Üí, 
size
 -Üí, 
fmt
, 
¨gs
);

322 
	`va_íd
(
¨gs
);

324 
buf
[
Àn
++] = '\n';

326 
n
 = 
	`nc_wrôe
(
STDERR_FILENO
, 
buf
, 
Àn
);

327 i‡(
n
 < 0) {

328 
l
->
√º‹
++;

331 
î∫o
 = 
î∫o_ßve
;

332 
	}
}

	@src/nc_log.h

18 #i‚de‡
_NC_LOG_H_


19 
	#_NC_LOG_H_


	)

21 
	sloggî
 {

22 *
	m«me
;

23 
	mÀvñ
;

24 
	mfd
;

25 
	m√º‹
;

28 
	#LOG_EMERG
 0

	)

29 
	#LOG_ALERT
 1

	)

30 
	#LOG_CRIT
 2

	)

31 
	#LOG_ERR
 3

	)

32 
	#LOG_WARN
 4

	)

33 
	#LOG_NOTICE
 5

	)

34 
	#LOG_INFO
 6

	)

35 
	#LOG_DEBUG
 7

	)

36 
	#LOG_VERB
 8

	)

37 
	#LOG_VVERB
 9

	)

38 
	#LOG_VVVERB
 10

	)

39 
	#LOG_PVERB
 11

	)

41 
	#LOG_MAX_LEN
 256

	)

54 #ifde‡
NC_DEBUG_LOG


56 
	#log_debug
(
_Àvñ
, ...) do { \

57 i‡(
	`log_loggabÀ
(
_Àvñ
) != 0) { \

58 
	`_log
(
__FILE__
, 
__LINE__
, 0, 
__VA_ARGS__
); \

60 } 0)

	)

62 
	#log_hexdump
(
_Àvñ
, 
_d©a
, 
_d©Æí
, ...) do { \

63 i‡(
	`log_loggabÀ
(
_Àvñ
) != 0) { \

64 
	`_log
(
__FILE__
, 
__LINE__
, 0, 
__VA_ARGS__
); \

65 
	`_log_hexdump
(
__FILE__
, 
__LINE__
, (*)(
_d©a
), ()(
_d©Æí
), \

66 
__VA_ARGS__
); \

68 } 0)

	)

72 
	#log_debug
(
_Àvñ
, ...)

	)

73 
	#log_hexdump
(
_Àvñ
, 
_d©a
, 
_d©Æí
, ...)

	)

77 
	#log_°dîr
(...) do { \

78 
	`_log_°dîr
(
__VA_ARGS__
); \

79 } 0)

	)

81 
	#log_ß„
(...) do { \

82 
	`_log_ß„
(
__VA_ARGS__
); \

83 } 0)

	)

85 
	#log_°dîr_ß„
(...) do { \

86 
	`_log_°dîr_ß„
(
__VA_ARGS__
); \

87 } 0)

	)

89 
	#loga
(...) do { \

90 
	`_log
(
__FILE__
, 
__LINE__
, 0, 
__VA_ARGS__
); \

91 } 0)

	)

93 
	#loga_hexdump
(
_d©a
, 
_d©Æí
, ...) do { \

94 
	`_log
(
__FILE__
, 
__LINE__
, 0, 
__VA_ARGS__
); \

95 
	`_log_hexdump
(
__FILE__
, 
__LINE__
, (*)(
_d©a
), ()(
_d©Æí
), \

96 
__VA_ARGS__
); \

98 

	)

99 
	#log_îr‹
(...) do { \

100 i‡(
	`log_loggabÀ
(
LOG_ALERT
) != 0) { \

101 
	`_log
(
__FILE__
, 
__LINE__
, 0, 
__VA_ARGS__
); \

103 } 0)

	)

105 
	#log_w¨n
(...) do { \

106 i‡(
	`log_loggabÀ
(
LOG_WARN
) != 0) { \

107 
	`_log
(
__FILE__
, 
__LINE__
, 0, 
__VA_ARGS__
); \

109 } 0)

	)

111 
	#log_∑nic
(...) do { \

112 i‡(
	`log_loggabÀ
(
LOG_EMERG
) != 0) { \

113 
	`_log
(
__FILE__
, 
__LINE__
, 1, 
__VA_ARGS__
); \

115 } 0)

	)

117 
log_öô
(
Àvñ
, *
fûíame
);

118 
log_deöô
();

119 
log_Àvñ_up
();

120 
log_Àvñ_down
();

121 
log_Àvñ_£t
(
Àvñ
);

122 
log_°ackåa˚
();

123 
log_ª›í
();

124 
log_loggabÀ
(
Àvñ
);

125 
_log
(c⁄° *
fûe
, 
löe
, 
∑nic
, c⁄° *
fmt
, ...);

126 
_log_°dîr
(c⁄° *
fmt
, ...);

127 
_log_ß„
(c⁄° *
fmt
, ...);

128 
_log_°dîr_ß„
(c⁄° *
fmt
, ...);

129 
_log_hexdump
(c⁄° *
fûe
, 
löe
, *
d©a
, 
d©Æí
, c⁄° *
fmt
, ...);

	@src/nc_mbuf.c

18 
	~<°dlib.h
>

19 
	~<°rög.h
>

21 
	~<nc_c‹e.h
>

23 
uöt32_t
 
	gn‰ì_mbufq
;

24 
mhdr
 
	g‰ì_mbufq
;

26 
size_t
 
	gmbuf_chunk_size
;

27 
size_t
 
	gmbuf_off£t
;

29 
mbuf
 *

30 
	$_mbuf_gë
()

32 
mbuf
 *mbuf;

33 
uöt8_t
 *
buf
;

35 i‡(!
	`STAILQ_EMPTY
(&
‰ì_mbufq
)) {

36 
	`ASSERT
(
n‰ì_mbufq
 > 0);

38 
mbuf
 = 
	`STAILQ_FIRST
(&
‰ì_mbufq
);

39 
n‰ì_mbufq
--;

40 
	`STAILQ_REMOVE_HEAD
(&
‰ì_mbufq
, 
√xt
);

42 
	`ASSERT
(
mbuf
->
magic
 =
MBUF_MAGIC
);

43 
d⁄e
;

46 
buf
 = 
	`nc_Æloc
(
mbuf_chunk_size
);

47 i‡(
buf
 =
NULL
) {

48  
NULL
;

70 
mbuf
 = (mbu‡*)(
buf
 + 
mbuf_off£t
);

71 
mbuf
->
magic
 = 
MBUF_MAGIC
;

73 
d⁄e
:

74 
	`STAILQ_NEXT
(
mbuf
, 
√xt
Ë
NULL
;

75  
mbuf
;

76 
	}
}

78 
mbuf
 *

79 
	$mbuf_gë
()

81 
mbuf
 *mbuf;

82 
uöt8_t
 *
buf
;

84 
mbuf
 = 
	`_mbuf_gë
();

85 i‡(
mbuf
 =
NULL
) {

86  
NULL
;

89 
buf
 = (
uöt8_t
 *)
mbuf
 - 
mbuf_off£t
;

90 
mbuf
->
°¨t
 = 
buf
;

91 
mbuf
->
íd
 = 
buf
 + 
mbuf_off£t
;

93 
	`ASSERT
(
mbuf
->
íd
 - mbuf->
°¨t
 =()
mbuf_off£t
);

94 
	`ASSERT
(
mbuf
->
°¨t
 < mbuf->
íd
);

96 
mbuf
->
pos
 = mbuf->
°¨t
;

97 
mbuf
->
œ°
 = mbuf->
°¨t
;

99 
	`log_debug
(
LOG_VVERB
, "gë mbu‡%p", 
mbuf
);

101  
mbuf
;

102 
	}
}

105 
	$mbuf_‰ì
(
mbuf
 *mbuf)

107 
uöt8_t
 *
buf
;

109 
	`log_debug
(
LOG_VVERB
, "puàmbu‡%∞À¿%d", 
mbuf
, mbuf->
œ°
 - mbuf->
pos
);

111 
	`ASSERT
(
	`STAILQ_NEXT
(
mbuf
, 
√xt
Ë=
NULL
);

112 
	`ASSERT
(
mbuf
->
magic
 =
MBUF_MAGIC
);

114 
buf
 = (
uöt8_t
 *)
mbuf
 - 
mbuf_off£t
;

115 
	`nc_‰ì
(
buf
);

116 
	}
}

119 
	$mbuf_put
(
mbuf
 *mbuf)

121 
	`log_debug
(
LOG_VVERB
, "puàmbu‡%∞À¿%d", 
mbuf
, mbuf->
œ°
 - mbuf->
pos
);

123 
	`ASSERT
(
	`STAILQ_NEXT
(
mbuf
, 
√xt
Ë=
NULL
);

124 
	`ASSERT
(
mbuf
->
magic
 =
MBUF_MAGIC
);

126 
n‰ì_mbufq
++;

127 
	`STAILQ_INSERT_HEAD
(&
‰ì_mbufq
, 
mbuf
, 
√xt
);

128 
	}
}

135 
	$mbuf_ªwöd
(
mbuf
 *mbuf)

137 
mbuf
->
pos
 = mbuf->
°¨t
;

138 
mbuf
->
œ°
 = mbuf->
°¨t
;

139 
	}
}

145 
uöt32_t


146 
	$mbuf_Àngth
(
mbuf
 *mbuf)

148 
	`ASSERT
(
mbuf
->
œ°
 >mbuf->
pos
);

150  (
uöt32_t
)(
mbuf
->
œ°
 - mbuf->
pos
);

151 
	}
}

157 
uöt32_t


158 
	$mbuf_size
(
mbuf
 *mbuf)

160 
	`ASSERT
(
mbuf
->
íd
 >mbuf->
œ°
);

162  (
uöt32_t
)(
mbuf
->
íd
 - mbuf->
œ°
);

163 
	}
}

169 
size_t


170 
	$mbuf_d©a_size
()

172  
mbuf_off£t
;

173 
	}
}

179 
	$mbuf_ö£π
(
mhdr
 *mhdr, 
mbuf
 *mbuf)

181 
	`STAILQ_INSERT_TAIL
(
mhdr
, 
mbuf
, 
√xt
);

182 
	`log_debug
(
LOG_VVERB
, "ö£π mbu‡%∞À¿%d", 
mbuf
, mbuf->
œ°
 - mbuf->
pos
);

183 
	}
}

189 
	$mbuf_ªmove
(
mhdr
 *mhdr, 
mbuf
 *mbuf)

191 
	`log_debug
(
LOG_VVERB
, "ªmovêmbu‡%∞À¿%d", 
mbuf
, mbuf->
œ°
 - mbuf->
pos
);

193 
	`STAILQ_REMOVE
(
mhdr
, 
mbuf
, mbuf, 
√xt
);

194 
	`STAILQ_NEXT
(
mbuf
, 
√xt
Ë
NULL
;

195 
	}
}

204 
	$mbuf_c›y
(
mbuf
 *mbuf, 
uöt8_t
 *
pos
, 
size_t
 
n
)

206 i‡(
n
 == 0) {

211 
	`ASSERT
(!
	`mbuf_fuŒ
(
mbuf
Ë&& 
n
 <
	`mbuf_size
(mbuf));

214 
	`ASSERT
(
pos
 < 
mbuf
->
°¨t
 ||Öo†>mbuf->
íd
);

216 
	`nc_mem˝y
(
mbuf
->
œ°
, 
pos
, 
n
);

217 
mbuf
->
œ°
 +
n
;

218 
	}
}

227 
mbuf
 *

228 
	$mbuf_•lô
(
mhdr
 *
h
, 
uöt8_t
 *
pos
, 
mbuf_c›y_t
 
cb
, *
cb¨g
)

230 
mbuf
 *mbuf, *
nbuf
;

231 
size_t
 
size
;

233 
	`ASSERT
(!
	`STAILQ_EMPTY
(
h
));

235 
mbuf
 = 
	`STAILQ_LAST
(
h
, mbuf, 
√xt
);

236 
	`ASSERT
(
pos
 >
mbuf
->po†&&Öo†<mbuf->
œ°
);

238 
nbuf
 = 
	`mbuf_gë
();

239 i‡(
nbuf
 =
NULL
) {

240  
NULL
;

243 i‡(
cb
 !
NULL
) {

245 
	`cb
(
nbuf
, 
cb¨g
);

249 
size
 = (
size_t
)(
mbuf
->
œ°
 - 
pos
);

250 
	`mbuf_c›y
(
nbuf
, 
pos
, 
size
);

253 
mbuf
->
œ°
 = 
pos
;

255 
	`log_debug
(
LOG_VVERB
, "•lô i¡ÿmbu‡%∞À¿%"
PRIu32
"ándÇbuf %pÜen "

256 "%"
PRIu32
" c›õd %zu byãs", 
mbuf
, 
	`mbuf_Àngth
(mbuf), 
nbuf
,

257 
	`mbuf_Àngth
(
nbuf
), 
size
);

259  
nbuf
;

260 
	}
}

263 
	$mbuf_öô
(
ö°™˚
 *
nci
)

265 
n‰ì_mbufq
 = 0;

266 
	`STAILQ_INIT
(&
‰ì_mbufq
);

268 
mbuf_chunk_size
 = 
nci
->mbuf_chunk_size;

269 
mbuf_off£t
 = 
mbuf_chunk_size
 - 
MBUF_HSIZE
;

271 
	`log_debug
(
LOG_DEBUG
, "mbuf hsize %d chunk size %zu offset %zuÜength %zu",

272 
MBUF_HSIZE
, 
mbuf_chunk_size
, 
mbuf_off£t
, mbuf_offset);

273 
	}
}

276 
	$mbuf_deöô
()

278 !
	`STAILQ_EMPTY
(&
‰ì_mbufq
)) {

279 
mbuf
 *mbu‡
	`STAILQ_FIRST
(&
‰ì_mbufq
);

280 
	`mbuf_ªmove
(&
‰ì_mbufq
, 
mbuf
);

281 
	`mbuf_‰ì
(
mbuf
);

282 
n‰ì_mbufq
--;

284 
	`ASSERT
(
n‰ì_mbufq
 == 0);

285 
	}
}

	@src/nc_mbuf.h

18 #i‚de‡
_NC_MBUF_H_


19 
	#_NC_MBUF_H_


	)

21 
	~<nc_c‹e.h
>

23 (*
	tmbuf_c›y_t
)(
	tmbuf
 *, *);

25 
	smbuf
 {

26 
uöt32_t
 
magic
;

27 
	`STAILQ_ENTRY
(
mbuf
Ë
√xt
;

28 
uöt8_t
 *
pos
;

29 
uöt8_t
 *
œ°
;

30 
uöt8_t
 *
°¨t
;

31 
uöt8_t
 *
íd
;

34 
	`STAILQ_HEAD
(
mhdr
, 
mbuf
);

36 
	#MBUF_MAGIC
 0xdódbìf

	)

37 
	#MBUF_MIN_SIZE
 512

	)

38 
	#MBUF_MAX_SIZE
 16777216

	)

39 
	#MBUF_SIZE
 16384

	)

40 
	#MBUF_HSIZE
 (
mbuf
)

	)

42 
ölöe
 
boﬁ


43 
	$mbuf_em±y
(
mbuf
 *mbuf)

45  
mbuf
->
pos
 =mbuf->
œ°
 ? 
åue
 : 
Ál£
;

46 
	}
}

48 
ölöe
 
boﬁ


49 
	$mbuf_fuŒ
(
mbuf
 *mbuf)

51  
mbuf
->
œ°
 =mbuf->
íd
 ? 
åue
 : 
Ál£
;

52 
	}
}

54 
mbuf_öô
(
ö°™˚
 *
nci
);

55 
mbuf_deöô
();

56 
mbuf
 *
mbuf_gë
();

57 
mbuf_put
(
mbuf
 *mbuf);

58 
mbuf_ªwöd
(
mbuf
 *mbuf);

59 
uöt32_t
 
mbuf_Àngth
(
mbuf
 *mbuf);

60 
uöt32_t
 
mbuf_size
(
mbuf
 *mbuf);

61 
size_t
 
mbuf_d©a_size
();

62 
mbuf_ö£π
(
mhdr
 *mhdr, 
mbuf
 *mbuf);

63 
mbuf_ªmove
(
mhdr
 *mhdr, 
mbuf
 *mbuf);

64 
mbuf_c›y
(
mbuf
 *mbuf, 
uöt8_t
 *
pos
, 
size_t
 
n
);

65 
mbuf
 *
mbuf_•lô
(
mhdr
 *
h
, 
uöt8_t
 *
pos
, 
mbuf_c›y_t
 
cb
, *
cb¨g
);

	@src/nc_message.c

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

21 
	~<sys/uio.h
>

23 
	~<nc_c‹e.h
>

24 
	~<nc_£rvî.h
>

25 
	~<¥Ÿo/nc_¥Ÿo.h
>

27 #i‡(
IOV_MAX
 > 128)

28 
	#NC_IOV_MAX
 128

	)

30 
	#NC_IOV_MAX
 
IOV_MAX


	)

112 
uöt64_t
 
	gmsg_id
;

113 
uöt64_t
 
	g‰ag_id
;

114 
uöt32_t
 
	gn‰ì_msgq
;

115 
msg_tqh
 
	g‰ì_msgq
;

116 
rbåì
 
	gtmo_rbt
;

117 
rbnode
 
	gtmo_rbs
;

119 
	#DEFINE_ACTION
(
_«me
Ë
	`°rög
(#_«me),

	)

120 
°rög
 
	gmsg_ty≥_°rögs
[] = {

121 
MSG_TYPE_CODEC
–
DEFINE_ACTION
 )

122 
nuŒ_°rög


124 #unde‡
DEFINE_ACTION


126 
msg
 *

127 
	$msg_‰om_rbe
(
rbnode
 *
node
)

129 
msg
 *msg;

130 
off£t
;

132 
off£t
 = 
	`off£tof
(
msg
, 
tmo_rbe
);

133 
msg
 = (msg *)((*)
node
 - 
off£t
);

135  
msg
;

136 
	}
}

138 
msg
 *

139 
	$msg_tmo_mö
()

141 
rbnode
 *
node
;

143 
node
 = 
	`rbåì_mö
(&
tmo_rbt
);

144 i‡(
node
 =
NULL
) {

145  
NULL
;

148  
	`msg_‰om_rbe
(
node
);

149 
	}
}

152 
	$msg_tmo_ö£π
(
msg
 *msg, 
c⁄n
 *conn)

154 
rbnode
 *
node
;

155 
timeout
;

157 
	`ASSERT
(
msg
->
ªque°
);

158 
	`ASSERT
(!
msg
->
quô
 && !msg->
n‹ïly
);

160 
timeout
 = 
	`£rvî_timeout
(
c⁄n
);

161 i‡(
timeout
 <= 0) {

165 
node
 = &
msg
->
tmo_rbe
;

166 
node
->
key
 = 
	`nc_m£c_now
(Ë+ 
timeout
;

167 
node
->
d©a
 = 
c⁄n
;

169 
	`rbåì_ö£π
(&
tmo_rbt
, 
node
);

171 
	`log_debug
(
LOG_VERB
, "ö£π msg %"
PRIu64
" intoÅmoÑbt withÉxpiry of "

172 "%d m£c", 
msg
->
id
, 
timeout
);

173 
	}
}

176 
	$msg_tmo_dñëe
(
msg
 *msg)

178 
rbnode
 *
node
;

180 
node
 = &
msg
->
tmo_rbe
;

184 i‡(
node
->
d©a
 =
NULL
) {

188 
	`rbåì_dñëe
(&
tmo_rbt
, 
node
);

190 
	`log_debug
(
LOG_VERB
, "dñëêmsg %"
PRIu64
" fromÅmÿrbt", 
msg
->
id
);

191 
	}
}

193 
msg
 *

194 
	$_msg_gë
()

196 
msg
 *msg;

198 i‡(!
	`TAILQ_EMPTY
(&
‰ì_msgq
)) {

199 
	`ASSERT
(
n‰ì_msgq
 > 0);

201 
msg
 = 
	`TAILQ_FIRST
(&
‰ì_msgq
);

202 
n‰ì_msgq
--;

203 
	`TAILQ_REMOVE
(&
‰ì_msgq
, 
msg
, 
m_tqe
);

204 
d⁄e
;

207 
msg
 = 
	`nc_Æloc
((*msg));

208 i‡(
msg
 =
NULL
) {

209  
NULL
;

212 
d⁄e
:

214 
msg
->
id
 = ++
msg_id
;

215 
msg
->
≥î
 = 
NULL
;

216 
msg
->
ow√r
 = 
NULL
;

218 
	`rbåì_node_öô
(&
msg
->
tmo_rbe
);

220 
	`STAILQ_INIT
(&
msg
->
mhdr
);

221 
msg
->
mÀn
 = 0;

222 
msg
->
°¨t_ts
 = 0;

224 
msg
->
°©e
 = 0;

225 
msg
->
pos
 = 
NULL
;

226 
msg
->
tokí
 = 
NULL
;

228 
msg
->
∑r£r
 = 
NULL
;

229 
msg
->
add_auth
 = 
NULL
;

230 
msg
->
ªsu…
 = 
MSG_PARSE_OK
;

232 
msg
->
‰agmít
 = 
NULL
;

233 
msg
->
ª∂y
 = 
NULL
;

234 
msg
->
¥e_cﬂÀs˚
 = 
NULL
;

235 
msg
->
po°_cﬂÀs˚
 = 
NULL
;

237 
msg
->
ty≥
 = 
MSG_UNKNOWN
;

239 
msg
->
keys
 = 
	`¨øy_¸óã
(1, (
keypos
));

240 i‡(
msg
->
keys
 =
NULL
) {

241 
	`nc_‰ì
(
msg
);

242  
NULL
;

245 
msg
->
vÀn
 = 0;

246 
msg
->
íd
 = 
NULL
;

248 
msg
->
‰ag_ow√r
 = 
NULL
;

249 
msg
->
‰ag_£q
 = 
NULL
;

250 
msg
->
n‰ag
 = 0;

251 
msg
->
n‰ag_d⁄e
 = 0;

252 
msg
->
‰ag_id
 = 0;

254 
msg
->
«rg_°¨t
 = 
NULL
;

255 
msg
->
«rg_íd
 = 
NULL
;

256 
msg
->
«rg
 = 0;

257 
msg
->
∫¨g
 = 0;

258 
msg
->
æí
 = 0;

259 
msg
->
öãgî
 = 0;

261 
msg
->
îr
 = 0;

262 
msg
->
îr‹
 = 0;

263 
msg
->
„º‹
 = 0;

264 
msg
->
ªque°
 = 0;

265 
msg
->
quô
 = 0;

266 
msg
->
n‹ïly
 = 0;

267 
msg
->
nof‹w¨d
 = 0;

268 
msg
->
d⁄e
 = 0;

269 
msg
->
fd⁄e
 = 0;

270 
msg
->
swÆlow
 = 0;

271 
msg
->
ªdis
 = 0;

273 
msg
->
is_wrôe
 = 0;

274  
msg
;

275 
	}
}

277 
msg
 *

278 
	$msg_gë
(
c⁄n
 *c⁄n, 
boﬁ
 
ªque°
, boﬁ 
ªdis
)

280 
msg
 *msg;

282 
msg
 = 
	`_msg_gë
();

283 i‡(
msg
 =
NULL
) {

284  
NULL
;

287 
msg
->
ow√r
 = 
c⁄n
;

288 
msg
->
ªque°
 =Ñequest ? 1 : 0;

289 
msg
->
ªdis
 =Ñedis ? 1 : 0;

291 i‡(
ªdis
) {

292 i‡(
ªque°
) {

293 
msg
->
∑r£r
 = 
ªdis_∑r£_ªq
;

295 
msg
->
∑r£r
 = 
ªdis_∑r£_r•
;

297 
msg
->
add_auth
 = 
ªdis_add_auth
;

298 
msg
->
‰agmít
 = 
ªdis_‰agmít
;

299 
msg
->
ª∂y
 = 
ªdis_ª∂y
;

300 
msg
->
Áûuª
 = 
ªdis_Áûuª
;

301 
msg
->
¥e_cﬂÀs˚
 = 
ªdis_¥e_cﬂÀs˚
;

302 
msg
->
po°_cﬂÀs˚
 = 
ªdis_po°_cﬂÀs˚
;

304 i‡(
ªque°
) {

305 
msg
->
∑r£r
 = 
memˇche_∑r£_ªq
;

307 
msg
->
∑r£r
 = 
memˇche_∑r£_r•
;

309 
msg
->
add_auth
 = 
memˇche_add_auth
;

310 
msg
->
‰agmít
 = 
memˇche_‰agmít
;

311 
msg
->
Áûuª
 = 
memˇche_Áûuª
;

312 
msg
->
¥e_cﬂÀs˚
 = 
memˇche_¥e_cﬂÀs˚
;

313 
msg
->
po°_cﬂÀs˚
 = 
memˇche_po°_cﬂÀs˚
;

316 i‡(
	`log_loggabÀ
(
LOG_NOTICE
) != 0) {

317 
msg
->
°¨t_ts
 = 
	`nc_u£c_now
();

320 
	`log_debug
(
LOG_VVERB
, "gë msg %∞id %"
PRIu64
"Ñequest %d owner sd %d",

321 
msg
, msg->
id
, msg->
ªque°
, 
c⁄n
->
sd
);

323  
msg
;

324 
	}
}

326 
msg
 *

327 
	$msg_gë_îr‹
(
boﬁ
 
ªdis
, 
îr_t
 
îr
)

329 
msg
 *msg;

330 
mbuf
 *mbuf;

331 
n
;

332 *
îr°r
 = 
îr
 ? 
	`°ªº‹
(err) : "unknown";

333 *
¥Ÿ°r
 = 
ªdis
 ? "-ERR" : "SERVER_ERROR";

335 
msg
 = 
	`_msg_gë
();

336 i‡(
msg
 =
NULL
) {

337  
NULL
;

340 
msg
->
°©e
 = 0;

341 
msg
->
ty≥
 = 
MSG_RSP_MC_SERVER_ERROR
;

343 
mbuf
 = 
	`mbuf_gë
();

344 i‡(
mbuf
 =
NULL
) {

345 
	`msg_put
(
msg
);

346  
NULL
;

348 
	`mbuf_ö£π
(&
msg
->
mhdr
, 
mbuf
);

350 
n
 = 
	`nc_s˙¥ötf
(
mbuf
->
œ°
, 
	`mbuf_size
(mbuf), "%†%s"
CRLF
, 
¥Ÿ°r
, 
îr°r
);

351 
mbuf
->
œ°
 +
n
;

352 
msg
->
mÀn
 = (
uöt32_t
)
n
;

354 
	`log_debug
(
LOG_VVERB
, "gë msg %∞id %"
PRIu64
"Üí %"
PRIu32
"Érror '%s'",

355 
msg
, msg->
id
, msg->
mÀn
, 
îr°r
);

357  
msg
;

358 
	}
}

361 
	$msg_‰ì
(
msg
 *msg)

363 
	`ASSERT
(
	`STAILQ_EMPTY
(&
msg
->
mhdr
));

365 
	`log_debug
(
LOG_VVERB
, "‰ì msg %∞id %"
PRIu64
"", 
msg
, msg->
id
);

366 
	`nc_‰ì
(
msg
);

367 
	}
}

370 
	$msg_put
(
msg
 *msg)

372 
	`log_debug
(
LOG_VVERB
, "puàmsg %∞id %"
PRIu64
"", 
msg
, msg->
id
);

374 !
	`STAILQ_EMPTY
(&
msg
->
mhdr
)) {

375 
mbuf
 *mbu‡
	`STAILQ_FIRST
(&
msg
->
mhdr
);

376 
	`mbuf_ªmove
(&
msg
->
mhdr
, 
mbuf
);

377 
	`mbuf_put
(
mbuf
);

380 i‡(
msg
->
‰ag_£q
) {

381 
	`nc_‰ì
(
msg
->
‰ag_£q
);

382 
msg
->
‰ag_£q
 = 
NULL
;

385 i‡(
msg
->
keys
) {

386 
msg
->
keys
->
√Àm
 = 0;

387 
	`¨øy_de°roy
(
msg
->
keys
);

388 
msg
->
keys
 = 
NULL
;

391 
n‰ì_msgq
++;

392 
	`TAILQ_INSERT_HEAD
(&
‰ì_msgq
, 
msg
, 
m_tqe
);

393 
	}
}

396 
	$msg_dump
(
msg
 *msg, 
Àvñ
)

398 
mbuf
 *mbuf;

400 i‡(
	`log_loggabÀ
(
Àvñ
) == 0) {

404 
	`loga
("msg dum∞id %"
PRIu64
"Ñeque° %dÜí %"
PRIu32
"Åype %d done %d "

405 "îr‹ %d (î∏%d)", 
msg
->
id
, msg->
ªque°
, msg->
mÀn
, msg->
ty≥
,

406 
msg
->
d⁄e
, msg->
îr‹
, msg->
îr
);

408 
	`STAILQ_FOREACH
(
mbuf
, &
msg
->
mhdr
, 
√xt
) {

409 
uöt8_t
 *
p
, *
q
;

410 
Àn
;

412 
p
 = 
mbuf
->
°¨t
;

413 
q
 = 
mbuf
->
œ°
;

414 
Àn
 = 
q
 - 
p
;

416 
	`loga_hexdump
(
p
, 
Àn
, "mbuf [%p] with %ld bytes of data",Ö,Üen);

418 
	}
}

421 
	$msg_öô
()

423 
	`log_debug
(
LOG_DEBUG
, "msg sizê%d", (
msg
));

424 
msg_id
 = 0;

425 
‰ag_id
 = 0;

426 
n‰ì_msgq
 = 0;

427 
	`TAILQ_INIT
(&
‰ì_msgq
);

428 
	`rbåì_öô
(&
tmo_rbt
, &
tmo_rbs
);

429 
	}
}

432 
	$msg_deöô
()

434 
msg
 *msg, *
nmsg
;

436 
msg
 = 
	`TAILQ_FIRST
(&
‰ì_msgq
); msg !
NULL
;

437 
msg
 = 
nmsg
, 
n‰ì_msgq
--) {

438 
	`ASSERT
(
n‰ì_msgq
 > 0);

439 
nmsg
 = 
	`TAILQ_NEXT
(
msg
, 
m_tqe
);

440 
	`msg_‰ì
(
msg
);

442 
	`ASSERT
(
n‰ì_msgq
 == 0);

443 
	}
}

445 
°rög
 *

446 
	$msg_ty≥_°rög
(
msg_ty≥_t
 
ty≥
)

448  &
msg_ty≥_°rögs
[
ty≥
];

449 
	}
}

451 
boﬁ


452 
	$msg_em±y
(
msg
 *msg)

454  
msg
->
mÀn
 =0 ? 
åue
 : 
Ál£
;

455 
	}
}

457 
uöt32_t


458 
	$msg_backíd_idx
(
msg
 *msg, 
uöt8_t
 *
key
, 
uöt32_t
 
keyÀn
)

460 
c⁄n
 *c⁄¿
msg
->
ow√r
;

461 
£rvî_poﬁ
 *
poﬁ
 = 
c⁄n
->
ow√r
;

463  
	`£rvî_poﬁ_idx
(
poﬁ
, 
key
, 
keyÀn
);

464 
	}
}

466 
mbuf
 *

467 
	$msg_ísuª_mbuf
(
msg
 *msg, 
size_t
 
Àn
)

469 
mbuf
 *mbuf;

471 i‡(
	`STAILQ_EMPTY
(&
msg
->
mhdr
) ||

472 
	`mbuf_size
(
	`STAILQ_LAST
(&
msg
->
mhdr
, 
mbuf
, 
√xt
)Ë< 
Àn
) {

473 
mbuf
 = 
	`mbuf_gë
();

474 i‡(
mbuf
 =
NULL
) {

475  
NULL
;

477 
	`mbuf_ö£π
(&
msg
->
mhdr
, 
mbuf
);

479 
mbuf
 = 
	`STAILQ_LAST
(&
msg
->
mhdr
, mbuf, 
√xt
);

482  
mbuf
;

483 
	}
}

489 
r°©us_t


490 
	$msg_≠≥nd
(
msg
 *msg, 
uöt8_t
 *
pos
, 
size_t
 
n
)

492 
mbuf
 *mbuf;

494 
	`ASSERT
(
n
 <
	`mbuf_d©a_size
());

496 
mbuf
 = 
	`msg_ísuª_mbuf
(
msg
, 
n
);

497 i‡(
mbuf
 =
NULL
) {

498  
NC_ENOMEM
;

501 
	`ASSERT
(
n
 <
	`mbuf_size
(
mbuf
));

503 
	`mbuf_c›y
(
mbuf
, 
pos
, 
n
);

504 
msg
->
mÀn
 +(
uöt32_t
)
n
;

506  
NC_OK
;

507 
	}
}

513 
r°©us_t


514 
	$msg_¥ïíd
(
msg
 *msg, 
uöt8_t
 *
pos
, 
size_t
 
n
)

516 
mbuf
 *mbuf;

518 
mbuf
 = 
	`mbuf_gë
();

519 i‡(
mbuf
 =
NULL
) {

520  
NC_ENOMEM
;

523 
	`ASSERT
(
n
 <
	`mbuf_size
(
mbuf
));

525 
	`mbuf_c›y
(
mbuf
, 
pos
, 
n
);

526 
msg
->
mÀn
 +(
uöt32_t
)
n
;

528 
	`STAILQ_INSERT_HEAD
(&
msg
->
mhdr
, 
mbuf
, 
√xt
);

530  
NC_OK
;

531 
	}
}

537 
r°©us_t


538 
	$msg_¥ïíd_f‹m©
(
msg
 *msg, c⁄° *
fmt
, ...)

540 
mbuf
 *mbuf;

541 
n
;

542 
uöt32_t
 
size
;

543 
va_li°
 
¨gs
;

545 
mbuf
 = 
	`mbuf_gë
();

546 i‡(
mbuf
 =
NULL
) {

547  
NC_ENOMEM
;

550 
size
 = 
	`mbuf_size
(
mbuf
);

552 
	`va_°¨t
(
¨gs
, 
fmt
);

553 
n
 = 
	`nc_v¢¥ötf
(
mbuf
->
œ°
, 
size
, 
fmt
, 
¨gs
);

554 
	`va_íd
(
¨gs
);

555 i‡(
n
 <0 ||Ç >()
size
) {

556  
NC_ERROR
;

559 
mbuf
->
œ°
 +
n
;

560 
msg
->
mÀn
 +(
uöt32_t
)
n
;

561 
	`STAILQ_INSERT_HEAD
(&
msg
->
mhdr
, 
mbuf
, 
√xt
);

563  
NC_OK
;

564 
	}
}

566 
ölöe
 
uöt64_t


567 
	$msg_gí_‰ag_id
()

569  ++
‰ag_id
;

570 
	}
}

572 
r°©us_t


573 
	$msg_∑r£d
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

575 
msg
 *
nmsg
;

576 
mbuf
 *mbuf, *
nbuf
;

578 
mbuf
 = 
	`STAILQ_LAST
(&
msg
->
mhdr
, mbuf, 
√xt
);

579 i‡(
msg
->
pos
 =
mbuf
->
œ°
) {

581 
c⁄n
->
	`ªcv_d⁄e
(
˘x
, c⁄n, 
msg
, 
NULL
);

582  
NC_OK
;

591 
nbuf
 = 
	`mbuf_•lô
(&
msg
->
mhdr
, msg->
pos
, 
NULL
, NULL);

592 i‡(
nbuf
 =
NULL
) {

593  
NC_ENOMEM
;

596 
nmsg
 = 
	`msg_gë
(
msg
->
ow√r
, msg->
ªque°
, 
c⁄n
->
ªdis
);

597 i‡(
nmsg
 =
NULL
) {

598 
	`mbuf_put
(
nbuf
);

599  
NC_ENOMEM
;

601 
	`mbuf_ö£π
(&
nmsg
->
mhdr
, 
nbuf
);

602 
nmsg
->
pos
 = 
nbuf
->pos;

605 
nmsg
->
mÀn
 = 
	`mbuf_Àngth
(
nbuf
);

606 
msg
->
mÀn
 -
nmsg
->mlen;

608 
c⁄n
->
	`ªcv_d⁄e
(
˘x
, c⁄n, 
msg
, 
nmsg
);

610  
NC_OK
;

611 
	}
}

613 
r°©us_t


614 
	$msg_ª∑ú
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

616 
mbuf
 *
nbuf
;

618 
nbuf
 = 
	`mbuf_•lô
(&
msg
->
mhdr
, msg->
pos
, 
NULL
, NULL);

619 i‡(
nbuf
 =
NULL
) {

620  
NC_ENOMEM
;

622 
	`mbuf_ö£π
(&
msg
->
mhdr
, 
nbuf
);

623 
msg
->
pos
 = 
nbuf
->pos;

625  
NC_OK
;

626 
	}
}

628 
r°©us_t


629 
	$msg_∑r£
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

631 
r°©us_t
 
°©us
;

633 i‡(
	`msg_em±y
(
msg
)) {

635 
c⁄n
->
	`ªcv_d⁄e
(
˘x
, c⁄n, 
msg
, 
NULL
);

636  
NC_OK
;

639 
msg
->
	`∑r£r
(msg);

641 
msg
->
ªsu…
) {

642 
MSG_PARSE_OK
:

643 
°©us
 = 
	`msg_∑r£d
(
˘x
, 
c⁄n
, 
msg
);

646 
MSG_PARSE_REPAIR
:

647 
°©us
 = 
	`msg_ª∑ú
(
˘x
, 
c⁄n
, 
msg
);

650 
MSG_PARSE_AGAIN
:

651 
°©us
 = 
NC_OK
;

655 
°©us
 = 
NC_ERROR
;

656 
c⁄n
->
îr
 = 
î∫o
;

660  
c⁄n
->
îr
 !0 ? 
NC_ERROR
 : 
°©us
;

661 
	}
}

663 
r°©us_t


664 
	$msg_ªcv_chaö
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

666 
r°©us_t
 
°©us
;

667 
msg
 *
nmsg
;

668 
mbuf
 *mbuf;

669 
size_t
 
msize
;

670 
ssize_t
 
n
;

672 
mbuf
 = 
	`STAILQ_LAST
(&
msg
->
mhdr
, mbuf, 
√xt
);

673 i‡(
mbuf
 =
NULL
 || 
	`mbuf_fuŒ
(mbuf)) {

674 
mbuf
 = 
	`mbuf_gë
();

675 i‡(
mbuf
 =
NULL
) {

676  
NC_ENOMEM
;

678 
	`mbuf_ö£π
(&
msg
->
mhdr
, 
mbuf
);

679 
msg
->
pos
 = 
mbuf
->pos;

681 
	`ASSERT
(
mbuf
->
íd
 - mbuf->
œ°
 > 0);

683 
msize
 = 
	`mbuf_size
(
mbuf
);

685 
n
 = 
	`c⁄n_ªcv
(
c⁄n
, 
mbuf
->
œ°
, 
msize
);

686 i‡(
n
 < 0) {

687 i‡(
n
 =
NC_EAGAIN
) {

688  
NC_OK
;

690  
NC_ERROR
;

693 
	`ASSERT
((
mbuf
->
œ°
 + 
n
Ë<mbuf->
íd
);

694 
mbuf
->
œ°
 +
n
;

695 
msg
->
mÀn
 +(
uöt32_t
)
n
;

698 
°©us
 = 
	`msg_∑r£
(
˘x
, 
c⁄n
, 
msg
);

699 i‡(
°©us
 !
NC_OK
) {

700  
°©us
;

704 
nmsg
 = 
c⁄n
->
	`ªcv_√xt
(
˘x
, c⁄n, 
Ál£
);

705 i‡(
nmsg
 =
NULL
 ||Çmsg =
msg
) {

710 
msg
 = 
nmsg
;

713  
NC_OK
;

714 
	}
}

716 
r°©us_t


717 
	$msg_ªcv
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

719 
r°©us_t
 
°©us
;

720 
msg
 *msg;

722 
	`ASSERT
(
c⁄n
->
ªcv_a˘ive
);

724 
c⁄n
->
ªcv_ªady
 = 1;

726 
msg
 = 
c⁄n
->
	`ªcv_√xt
(
˘x
, c⁄n, 
åue
);

727 i‡(
msg
 =
NULL
) {

728  
NC_OK
;

731 
°©us
 = 
	`msg_ªcv_chaö
(
˘x
, 
c⁄n
, 
msg
);

732 i‡(
°©us
 !
NC_OK
) {

733  
°©us
;

735 } 
c⁄n
->
ªcv_ªady
);

737  
NC_OK
;

738 
	}
}

740 
r°©us_t


741 
	$msg_£nd_chaö
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

743 
msg_tqh
 
£nd_msgq
;

744 
msg
 *
nmsg
;

745 
mbuf
 *mbuf, *
nbuf
;

746 
size_t
 
mÀn
;

747 
iovec
 *
ciov
, 
iov
[
NC_IOV_MAX
];

748 
¨øy
 
£ndv
;

749 
size_t
 
n£nd
, 
n£¡
;

750 
size_t
 
limô
;

751 
ssize_t
 
n
;

753 
	`TAILQ_INIT
(&
£nd_msgq
);

755 
	`¨øy_£t
(&
£ndv
, 
iov
, (iov[0]), 
NC_IOV_MAX
);

759 
n£nd
 = 0;

765 
limô
 = 
SSIZE_MAX
;

768 
	`ASSERT
(
c⁄n
->
smsg
 =
msg
);

770 
	`TAILQ_INSERT_TAIL
(&
£nd_msgq
, 
msg
, 
m_tqe
);

772 
mbuf
 = 
	`STAILQ_FIRST
(&
msg
->
mhdr
);

773 
mbuf
 !
NULL
 && 
	`¨øy_n
(&
£ndv
Ë< 
NC_IOV_MAX
 && 
n£nd
 < 
limô
;

774 
mbuf
 = 
nbuf
) {

775 
nbuf
 = 
	`STAILQ_NEXT
(
mbuf
, 
√xt
);

777 i‡(
	`mbuf_em±y
(
mbuf
)) {

781 
mÀn
 = 
	`mbuf_Àngth
(
mbuf
);

782 i‡((
n£nd
 + 
mÀn
Ë> 
limô
) {

783 
mÀn
 = 
limô
 - 
n£nd
;

786 
ciov
 = 
	`¨øy_push
(&
£ndv
);

787 
ciov
->
iov_ba£
 = 
mbuf
->
pos
;

788 
ciov
->
iov_Àn
 = 
mÀn
;

790 
n£nd
 +
mÀn
;

793 i‡(
	`¨øy_n
(&
£ndv
Ë>
NC_IOV_MAX
 || 
n£nd
 >
limô
) {

797 
msg
 = 
c⁄n
->
	`£nd_√xt
(
˘x
, conn);

798 i‡(
msg
 =
NULL
) {

807 
c⁄n
->
smsg
 = 
NULL
;

808 i‡(!
	`TAILQ_EMPTY
(&
£nd_msgq
Ë&& 
n£nd
 != 0) {

809 
n
 = 
	`c⁄n_£ndv
(
c⁄n
, &
£ndv
, 
n£nd
);

811 
n
 = 0;

814 
n£¡
 = 
n
 > 0 ? (
size_t
)n : 0;

818 
msg
 = 
	`TAILQ_FIRST
(&
£nd_msgq
); msg !
NULL
; msg = 
nmsg
) {

819 
nmsg
 = 
	`TAILQ_NEXT
(
msg
, 
m_tqe
);

821 
	`TAILQ_REMOVE
(&
£nd_msgq
, 
msg
, 
m_tqe
);

823 i‡(
n£¡
 == 0) {

824 i‡(
msg
->
mÀn
 == 0) {

825 
c⁄n
->
	`£nd_d⁄e
(
˘x
, c⁄n, 
msg
);

831 
mbuf
 = 
	`STAILQ_FIRST
(&
msg
->
mhdr
); mbu‡!
NULL
; mbu‡
nbuf
) {

832 
nbuf
 = 
	`STAILQ_NEXT
(
mbuf
, 
√xt
);

834 i‡(
	`mbuf_em±y
(
mbuf
)) {

838 
mÀn
 = 
	`mbuf_Àngth
(
mbuf
);

839 i‡(
n£¡
 < 
mÀn
) {

841 
mbuf
->
pos
 +
n£¡
;

842 
	`ASSERT
(
mbuf
->
pos
 < mbuf->
œ°
);

843 
n£¡
 = 0;

848 
mbuf
->
pos
 = mbuf->
œ°
;

849 
n£¡
 -
mÀn
;

853 i‡(
mbuf
 =
NULL
) {

854 
c⁄n
->
	`£nd_d⁄e
(
˘x
, c⁄n, 
msg
);

858 
	`ASSERT
(
	`TAILQ_EMPTY
(&
£nd_msgq
));

860 i‡(
n
 >= 0) {

861  
NC_OK
;

864  (
n
 =
NC_EAGAIN
Ë? 
NC_OK
 : 
NC_ERROR
;

865 
	}
}

867 
r°©us_t


868 
	$msg_£nd
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

870 
r°©us_t
 
°©us
;

871 
msg
 *msg;

873 
	`ASSERT
(
c⁄n
->
£nd_a˘ive
);

875 
c⁄n
->
£nd_ªady
 = 1;

877 
msg
 = 
c⁄n
->
	`£nd_√xt
(
˘x
, conn);

878 i‡(
msg
 =
NULL
) {

880  
NC_OK
;

883 
°©us
 = 
	`msg_£nd_chaö
(
˘x
, 
c⁄n
, 
msg
);

884 i‡(
°©us
 !
NC_OK
) {

885  
°©us
;

888 } 
c⁄n
->
£nd_ªady
);

890  
NC_OK
;

891 
	}
}

	@src/nc_message.h

18 #i‚de‡
_NC_MESSAGE_H_


19 
	#_NC_MESSAGE_H_


	)

21 
	~<nc_c‹e.h
>

23 (*
	tmsg_∑r£_t
)(
	tmsg
 *);

24 
	$r°©us_t
 (*
	tmsg_add_auth_t
)(
	tc⁄ãxt
 *
	t˘x
, 
	tc⁄n
 *
	tc_c⁄n
, c⁄¿*
	ts_c⁄n
);

25 
	$r°©us_t
 (*
	tmsg_‰agmít_t
)(
	tmsg
 *, 
	tuöt32_t
, 
	tmsg_tqh
 *);

26 (*
	tmsg_cﬂÀs˚_t
)(
	tmsg
 *
	tr
);

27 
	$r°©us_t
 (*
	tmsg_ª∂y_t
)(
	tmsg
 *
	tr
);

28 
	$boﬁ
 (*
	tmsg_Áûuª_t
)(
	tmsg
 *
	tr
);

30 
	emsg_∑r£_ªsu…
 {

31 
MSG_PARSE_OK
,

32 
MSG_PARSE_ERROR
,

33 
MSG_PARSE_REPAIR
,

34 
MSG_PARSE_AGAIN
,

35 } 
	tmsg_∑r£_ªsu…_t
;

37 
	#MSG_TYPE_CODEC
(
ACTION
) \

38 
	`ACTION
–
UNKNOWN
 ) \

39 
	`ACTION
–
REQ_MC_GET
 ) \

40 
	`ACTION
–
REQ_MC_GETS
 ) \

41 
	`ACTION
–
REQ_MC_DELETE
 ) \

42 
	`ACTION
–
REQ_MC_CAS
 ) \

43 
	`ACTION
–
REQ_MC_SET
 ) \

44 
	`ACTION
–
REQ_MC_ADD
 ) \

45 
	`ACTION
–
REQ_MC_REPLACE
 ) \

46 
	`ACTION
–
REQ_MC_APPEND
 ) \

47 
	`ACTION
–
REQ_MC_PREPEND
 ) \

48 
	`ACTION
–
REQ_MC_INCR
 ) \

49 
	`ACTION
–
REQ_MC_DECR
 ) \

50 
	`ACTION
–
REQ_MC_TOUCH
 ) \

51 
	`ACTION
–
REQ_MC_QUIT
 ) \

52 
	`ACTION
–
RSP_MC_NUM
 ) \

53 
	`ACTION
–
RSP_MC_STORED
 ) \

54 
	`ACTION
–
RSP_MC_NOT_STORED
 ) \

55 
	`ACTION
–
RSP_MC_EXISTS
 ) \

56 
	`ACTION
–
RSP_MC_NOT_FOUND
 ) \

57 
	`ACTION
–
RSP_MC_END
 ) \

58 
	`ACTION
–
RSP_MC_VALUE
 ) \

59 
	`ACTION
–
RSP_MC_DELETED
 ) \

60 
	`ACTION
–
RSP_MC_TOUCHED
 ) \

61 
	`ACTION
–
RSP_MC_ERROR
 ) \

62 
	`ACTION
–
RSP_MC_CLIENT_ERROR
 ) \

63 
	`ACTION
–
RSP_MC_SERVER_ERROR
 ) \

64 
	`ACTION
–
REQ_REDIS_DEL
 ) \

65 
	`ACTION
–
REQ_REDIS_EXISTS
 ) \

66 
	`ACTION
–
REQ_REDIS_EXPIRE
 ) \

67 
	`ACTION
–
REQ_REDIS_EXPIREAT
 ) \

68 
	`ACTION
–
REQ_REDIS_PEXPIRE
 ) \

69 
	`ACTION
–
REQ_REDIS_PEXPIREAT
 ) \

70 
	`ACTION
–
REQ_REDIS_PERSIST
 ) \

71 
	`ACTION
–
REQ_REDIS_PTTL
 ) \

72 
	`ACTION
–
REQ_REDIS_SORT
 ) \

73 
	`ACTION
–
REQ_REDIS_TTL
 ) \

74 
	`ACTION
–
REQ_REDIS_TYPE
 ) \

75 
	`ACTION
–
REQ_REDIS_APPEND
 ) \

76 
	`ACTION
–
REQ_REDIS_BITCOUNT
 ) \

77 
	`ACTION
–
REQ_REDIS_BITPOS
 ) \

78 
	`ACTION
–
REQ_REDIS_DECR
 ) \

79 
	`ACTION
–
REQ_REDIS_DECRBY
 ) \

80 
	`ACTION
–
REQ_REDIS_DUMP
 ) \

81 
	`ACTION
–
REQ_REDIS_GET
 ) \

82 
	`ACTION
–
REQ_REDIS_GETBIT
 ) \

83 
	`ACTION
–
REQ_REDIS_GETRANGE
 ) \

84 
	`ACTION
–
REQ_REDIS_GETSET
 ) \

85 
	`ACTION
–
REQ_REDIS_INCR
 ) \

86 
	`ACTION
–
REQ_REDIS_INCRBY
 ) \

87 
	`ACTION
–
REQ_REDIS_INCRBYFLOAT
 ) \

88 
	`ACTION
–
REQ_REDIS_MGET
 ) \

89 
	`ACTION
–
REQ_REDIS_MSET
 ) \

90 
	`ACTION
–
REQ_REDIS_PSETEX
 ) \

91 
	`ACTION
–
REQ_REDIS_RESTORE
 ) \

92 
	`ACTION
–
REQ_REDIS_SET
 ) \

93 
	`ACTION
–
REQ_REDIS_SETBIT
 ) \

94 
	`ACTION
–
REQ_REDIS_SETEX
 ) \

95 
	`ACTION
–
REQ_REDIS_SETNX
 ) \

96 
	`ACTION
–
REQ_REDIS_SETRANGE
 ) \

97 
	`ACTION
–
REQ_REDIS_STRLEN
 ) \

98 
	`ACTION
–
REQ_REDIS_HDEL
 ) \

99 
	`ACTION
–
REQ_REDIS_HEXISTS
 ) \

100 
	`ACTION
–
REQ_REDIS_HGET
 ) \

101 
	`ACTION
–
REQ_REDIS_HGETALL
 ) \

102 
	`ACTION
–
REQ_REDIS_HINCRBY
 ) \

103 
	`ACTION
–
REQ_REDIS_HINCRBYFLOAT
 ) \

104 
	`ACTION
–
REQ_REDIS_HKEYS
 ) \

105 
	`ACTION
–
REQ_REDIS_HLEN
 ) \

106 
	`ACTION
–
REQ_REDIS_HMGET
 ) \

107 
	`ACTION
–
REQ_REDIS_HMSET
 ) \

108 
	`ACTION
–
REQ_REDIS_HSET
 ) \

109 
	`ACTION
–
REQ_REDIS_HSETNX
 ) \

110 
	`ACTION
–
REQ_REDIS_HSCAN
) \

111 
	`ACTION
–
REQ_REDIS_HVALS
 ) \

112 
	`ACTION
–
REQ_REDIS_LINDEX
 ) \

113 
	`ACTION
–
REQ_REDIS_LINSERT
 ) \

114 
	`ACTION
–
REQ_REDIS_LLEN
 ) \

115 
	`ACTION
–
REQ_REDIS_LPOP
 ) \

116 
	`ACTION
–
REQ_REDIS_LPUSH
 ) \

117 
	`ACTION
–
REQ_REDIS_LPUSHX
 ) \

118 
	`ACTION
–
REQ_REDIS_LRANGE
 ) \

119 
	`ACTION
–
REQ_REDIS_LREM
 ) \

120 
	`ACTION
–
REQ_REDIS_LSET
 ) \

121 
	`ACTION
–
REQ_REDIS_LTRIM
 ) \

122 
	`ACTION
–
REQ_REDIS_PFADD
 ) \

123 
	`ACTION
–
REQ_REDIS_PFCOUNT
 ) \

124 
	`ACTION
–
REQ_REDIS_PFMERGE
 ) \

125 
	`ACTION
–
REQ_REDIS_RPOP
 ) \

126 
	`ACTION
–
REQ_REDIS_RPOPLPUSH
 ) \

127 
	`ACTION
–
REQ_REDIS_RPUSH
 ) \

128 
	`ACTION
–
REQ_REDIS_RPUSHX
 ) \

129 
	`ACTION
–
REQ_REDIS_SADD
 ) \

130 
	`ACTION
–
REQ_REDIS_SCARD
 ) \

131 
	`ACTION
–
REQ_REDIS_SDIFF
 ) \

132 
	`ACTION
–
REQ_REDIS_SDIFFSTORE
 ) \

133 
	`ACTION
–
REQ_REDIS_SINTER
 ) \

134 
	`ACTION
–
REQ_REDIS_SINTERSTORE
 ) \

135 
	`ACTION
–
REQ_REDIS_SISMEMBER
 ) \

136 
	`ACTION
–
REQ_REDIS_SMEMBERS
 ) \

137 
	`ACTION
–
REQ_REDIS_SMOVE
 ) \

138 
	`ACTION
–
REQ_REDIS_SPOP
 ) \

139 
	`ACTION
–
REQ_REDIS_SRANDMEMBER
 ) \

140 
	`ACTION
–
REQ_REDIS_SREM
 ) \

141 
	`ACTION
–
REQ_REDIS_SUNION
 ) \

142 
	`ACTION
–
REQ_REDIS_SUNIONSTORE
 ) \

143 
	`ACTION
–
REQ_REDIS_SSCAN
) \

144 
	`ACTION
–
REQ_REDIS_ZADD
 ) \

145 
	`ACTION
–
REQ_REDIS_ZCARD
 ) \

146 
	`ACTION
–
REQ_REDIS_ZCOUNT
 ) \

147 
	`ACTION
–
REQ_REDIS_ZINCRBY
 ) \

148 
	`ACTION
–
REQ_REDIS_ZINTERSTORE
 ) \

149 
	`ACTION
–
REQ_REDIS_ZLEXCOUNT
 ) \

150 
	`ACTION
–
REQ_REDIS_ZRANGE
 ) \

151 
	`ACTION
–
REQ_REDIS_ZRANGEBYLEX
 ) \

152 
	`ACTION
–
REQ_REDIS_ZRANGEBYSCORE
 ) \

153 
	`ACTION
–
REQ_REDIS_ZRANK
 ) \

154 
	`ACTION
–
REQ_REDIS_ZREM
 ) \

155 
	`ACTION
–
REQ_REDIS_ZREMRANGEBYRANK
 ) \

156 
	`ACTION
–
REQ_REDIS_ZREMRANGEBYLEX
 ) \

157 
	`ACTION
–
REQ_REDIS_ZREMRANGEBYSCORE
 ) \

158 
	`ACTION
–
REQ_REDIS_ZREVRANGE
 ) \

159 
	`ACTION
–
REQ_REDIS_ZREVRANGEBYSCORE
 ) \

160 
	`ACTION
–
REQ_REDIS_ZREVRANK
 ) \

161 
	`ACTION
–
REQ_REDIS_ZSCORE
 ) \

162 
	`ACTION
–
REQ_REDIS_ZUNIONSTORE
 ) \

163 
	`ACTION
–
REQ_REDIS_ZSCAN
) \

164 
	`ACTION
–
REQ_REDIS_EVAL
 ) \

165 
	`ACTION
–
REQ_REDIS_EVALSHA
 ) \

166 
	`ACTION
–
REQ_REDIS_PING
 ) \

167 
	`ACTION
–
REQ_REDIS_HCDGETPROXY
 ) \

168 
	`ACTION
–
REQ_REDIS_HCDSETPROXY
 ) \

169 
	`ACTION
–
REQ_REDIS_QUIT
) \

170 
	`ACTION
–
REQ_REDIS_AUTH
) \

171 
	`ACTION
–
REQ_REDIS_SELECT
) \

172 
	`ACTION
–
RSP_REDIS_STATUS
 ) \

173 
	`ACTION
–
RSP_REDIS_ERROR
 ) \

174 
	`ACTION
–
RSP_REDIS_ERROR_ERR
 ) \

175 
	`ACTION
–
RSP_REDIS_ERROR_OOM
 ) \

176 
	`ACTION
–
RSP_REDIS_ERROR_BUSY
 ) \

177 
	`ACTION
–
RSP_REDIS_ERROR_NOAUTH
 ) \

178 
	`ACTION
–
RSP_REDIS_ERROR_LOADING
 ) \

179 
	`ACTION
–
RSP_REDIS_ERROR_BUSYKEY
 ) \

180 
	`ACTION
–
RSP_REDIS_ERROR_MISCONF
 ) \

181 
	`ACTION
–
RSP_REDIS_ERROR_NOSCRIPT
 ) \

182 
	`ACTION
–
RSP_REDIS_ERROR_READONLY
 ) \

183 
	`ACTION
–
RSP_REDIS_ERROR_WRONGTYPE
 ) \

184 
	`ACTION
–
RSP_REDIS_ERROR_EXECABORT
 ) \

185 
	`ACTION
–
RSP_REDIS_ERROR_MASTERDOWN
 ) \

186 
	`ACTION
–
RSP_REDIS_ERROR_NOREPLICAS
 ) \

187 
	`ACTION
–
RSP_REDIS_INTEGER
 ) \

188 
	`ACTION
–
RSP_REDIS_BULK
 ) \

189 
	`ACTION
–
RSP_REDIS_MULTIBULK
 ) \

190 
	`ACTION
–
SENTINEL
 ) \

191 

	)

193 
	#DEFINE_ACTION
(
_«me
Ë
MSG_
##_«me,

	)

194 
	emsg_ty≥
 {

195 
	`MSG_TYPE_CODEC
(
DEFINE_ACTION
)

196 } 
	tmsg_ty≥_t
;

197 #unde‡
DEFINE_ACTION


199 
	skeypos
 {

200 
uöt8_t
 *
°¨t
;

201 
uöt8_t
 *
íd
;

204 
	smsg
 {

205 
	`TAILQ_ENTRY
(
msg
Ë
c_tqe
;

206 
	`TAILQ_ENTRY
(
msg
Ë
s_tqe
;

207 
	`TAILQ_ENTRY
(
msg
Ë
m_tqe
;

209 
uöt64_t
 
id
;

210 
msg
 *
≥î
;

211 
c⁄n
 *
ow√r
;

213 
rbnode
 
tmo_rbe
;

215 
mhdr
 mhdr;

216 
uöt32_t
 
mÀn
;

217 
öt64_t
 
°¨t_ts
;

219 
°©e
;

220 
uöt8_t
 *
pos
;

221 
uöt8_t
 *
tokí
;

223 
msg_∑r£_t
 
∑r£r
;

224 
msg_∑r£_ªsu…_t
 
ªsu…
;

226 
msg_‰agmít_t
 
‰agmít
;

227 
msg_ª∂y_t
 
ª∂y
;

228 
msg_add_auth_t
 
add_auth
;

229 
msg_Áûuª_t
 
Áûuª
;

231 
msg_cﬂÀs˚_t
 
¥e_cﬂÀs˚
;

232 
msg_cﬂÀs˚_t
 
po°_cﬂÀs˚
;

234 
msg_ty≥_t
 
ty≥
;

236 
¨øy
 *
keys
;

238 
uöt32_t
 
vÀn
;

239 
uöt8_t
 *
íd
;

241 
uöt8_t
 *
«rg_°¨t
;

242 
uöt8_t
 *
«rg_íd
;

243 
uöt32_t
 
«rg
;

244 
uöt32_t
 
∫¨g
;

245 
uöt32_t
 
æí
;

246 
uöt32_t
 
öãgî
;

248 
msg
 *
‰ag_ow√r
;

249 
uöt32_t
 
n‰ag
;

250 
uöt32_t
 
n‰ag_d⁄e
;

251 
uöt64_t
 
‰ag_id
;

252 
msg
 **
‰ag_£q
;

254 
uöt64_t
 
time°amp
;

256 
îr_t
 
îr
;

257 
îr‹
:1;

258 
„º‹
:1;

259 
ªque°
:1;

260 
quô
:1;

261 
n‹ïly
:1;

262 
nof‹w¨d
:1;

263 
d⁄e
:1;

264 
fd⁄e
:1;

265 
swÆlow
:1;

266 
ªdis
:1;

267 
is_wrôe
:1;

270 
	`TAILQ_HEAD
(
msg_tqh
, 
msg
);

272 
msg
 *
	`msg_tmo_mö
();

273 
	`msg_tmo_ö£π
(
msg
 *msg, 
c⁄n
 *conn);

274 
	`msg_tmo_dñëe
(
msg
 *msg);

276 
	`msg_öô
();

277 
	`msg_deöô
();

278 
°rög
 *
	`msg_ty≥_°rög
(
msg_ty≥_t
 
ty≥
);

279 
msg
 *
	`msg_gë
(
c⁄n
 *c⁄n, 
boﬁ
 
ªque°
, boﬁ 
ªdis
);

280 
	`msg_put
(
msg
 *msg);

281 
msg
 *
	`msg_gë_îr‹
(
boﬁ
 
ªdis
, 
îr_t
 
îr
);

282 
	`msg_dump
(
msg
 *msg, 
Àvñ
);

283 
boﬁ
 
	`msg_em±y
(
msg
 *msg);

284 
r°©us_t
 
	`msg_ªcv
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

285 
r°©us_t
 
	`msg_£nd
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

286 
uöt64_t
 
	`msg_gí_‰ag_id
();

287 
uöt32_t
 
	`msg_backíd_idx
(
msg
 *msg, 
uöt8_t
 *
key
, uöt32_à
keyÀn
);

288 
mbuf
 *
	`msg_ísuª_mbuf
(
msg
 *msg, 
size_t
 
Àn
);

289 
r°©us_t
 
	`msg_≠≥nd
(
msg
 *msg, 
uöt8_t
 *
pos
, 
size_t
 
n
);

290 
r°©us_t
 
	`msg_¥ïíd
(
msg
 *msg, 
uöt8_t
 *
pos
, 
size_t
 
n
);

291 
r°©us_t
 
	`msg_¥ïíd_f‹m©
(
msg
 *msg, c⁄° *
fmt
, ...);

293 
msg
 *
	`ªq_gë
(
c⁄n
 *conn);

294 
	`ªq_put
(
msg
 *msg);

295 
boﬁ
 
	`ªq_d⁄e
(
c⁄n
 *c⁄n, 
msg
 *msg);

296 
boﬁ
 
	`ªq_îr‹
(
c⁄n
 *c⁄n, 
msg
 *msg);

297 
	`ªq_£rvî_íqueue_imsgq
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg);

298 
	`ªq_£rvî_íqueue_imsgq_hód
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg);

299 
	`ªq_£rvî_dequeue_imsgq
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg);

300 
	`ªq_˛õ¡_íqueue_omsgq
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg);

301 
	`ªq_£rvî_íqueue_omsgq
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg);

302 
	`ªq_˛õ¡_dequeue_omsgq
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg);

303 
	`ªq_£rvî_dequeue_omsgq
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg);

304 
msg
 *
	`ªq_ªcv_√xt
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
boﬁ
 
Æloc
);

305 
	`ªq_ªcv_d⁄e
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg, msg *
nmsg
);

306 
msg
 *
	`ªq_£nd_√xt
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

307 
	`ªq_£nd_d⁄e
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg);

309 
msg
 *
	`r•_gë
(
c⁄n
 *conn);

310 
	`r•_put
(
msg
 *msg);

311 
msg
 *
	`r•_ªcv_√xt
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
boﬁ
 
Æloc
);

312 
	`r•_ªcv_d⁄e
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg, msg *
nmsg
);

313 
msg
 *
	`r•_£nd_√xt
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

314 
	`r•_£nd_d⁄e
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg);

	@src/nc_proxy.c

18 
	~<sys/°©.h
>

19 
	~<sys/un.h
>

21 
	~<nc_c‹e.h
>

22 
	~<nc_£rvî.h
>

23 
	~<nc_¥oxy.h
>

26 
	$¥oxy_ªf
(
c⁄n
 *c⁄n, *
ow√r
)

28 
£rvî_poﬁ
 *
poﬁ
 = 
ow√r
;

30 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && c⁄n->
¥oxy
);

31 
	`ASSERT
(
c⁄n
->
ow√r
 =
NULL
);

33 
c⁄n
->
Ámûy
 = 
poﬁ
->
öfo
.family;

34 
c⁄n
->
addæí
 = 
poﬁ
->
öfo
.addrlen;

35 
c⁄n
->
addr
 = (
sockaddr
 *)&
poﬁ
->
öfo
.addr;

37 
poﬁ
->
p_c⁄n
 = 
c⁄n
;

40 
c⁄n
->
ow√r
 = owner;

42 
	`log_debug
(
LOG_VVERB
, "ª‡c⁄¿%∞ow√∏%∞ötÿpoﬁ %"
PRIu32
"", 
c⁄n
,

43 
poﬁ
,Öoﬁ->
idx
);

44 
	}
}

47 
	$¥oxy_uƒef
(
c⁄n
 *conn)

49 
£rvî_poﬁ
 *
poﬁ
;

51 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && c⁄n->
¥oxy
);

52 
	`ASSERT
(
c⁄n
->
ow√r
 !
NULL
);

54 
poﬁ
 = 
c⁄n
->
ow√r
;

55 
c⁄n
->
ow√r
 = 
NULL
;

57 
poﬁ
->
p_c⁄n
 = 
NULL
;

59 
	`log_debug
(
LOG_VVERB
, "uƒe‡c⁄¿%∞ow√∏%∞‰omÖoﬁ %"
PRIu32
"", 
c⁄n
,

60 
poﬁ
,Öoﬁ->
idx
);

61 
	}
}

64 
	$¥oxy_˛o£
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

66 
r°©us_t
 
°©us
;

68 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && c⁄n->
¥oxy
);

70 i‡(
c⁄n
->
sd
 < 0) {

71 
c⁄n
->
	`uƒef
(conn);

72 
	`c⁄n_put
(
c⁄n
);

76 
	`ASSERT
(
c⁄n
->
rmsg
 =
NULL
);

77 
	`ASSERT
(
c⁄n
->
smsg
 =
NULL
);

78 
	`ASSERT
(
	`TAILQ_EMPTY
(&
c⁄n
->
imsg_q
));

79 
	`ASSERT
(
	`TAILQ_EMPTY
(&
c⁄n
->
omsg_q
));

81 
c⁄n
->
	`uƒef
(conn);

83 
°©us
 = 
	`˛o£
(
c⁄n
->
sd
);

84 i‡(
°©us
 < 0) {

85 
	`log_îr‹
("˛o£Ö %d faûed, ign‹ed: %s", 
c⁄n
->
sd
, 
	`°ªº‹
(
î∫o
));

87 
c⁄n
->
sd
 = -1;

89 
	`c⁄n_put
(
c⁄n
);

90 
	}
}

92 
r°©us_t


93 
	$¥oxy_ªu£
(
c⁄n
 *
p
)

95 
r°©us_t
 
°©us
;

96 
sockaddr_un
 *
un
;

98 
p
->
Ámûy
) {

99 
AF_INET
:

100 
AF_INET6
:

101 
°©us
 = 
	`nc_£t_ªu£addr
(
p
->
sd
);

104 
AF_UNIX
:

110 
un
 = (
sockaddr_un
 *Ë
p
->
addr
;

111 
	`u∆ök
(
un
->
sun_∑th
);

112 
°©us
 = 
NC_OK
;

116 
	`NOT_REACHED
();

117 
°©us
 = 
NC_ERROR
;

120  
°©us
;

121 
	}
}

123 
r°©us_t


124 
	$¥oxy_li°í
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *
p
)

126 
r°©us_t
 
°©us
;

127 
£rvî_poﬁ
 *
poﬁ
 = 
p
->
ow√r
;

129 
	`ASSERT
(
p
->
¥oxy
);

131 
p
->
sd
 = 
	`sockë
’->
Ámûy
, 
SOCK_STREAM
, 0);

132 i‡(
p
->
sd
 < 0) {

133 
	`log_îr‹
("sockë faûed: %s", 
	`°ªº‹
(
î∫o
));

134  
NC_ERROR
;

136 
	`¥ötf
("¥oxy_li°í '%.*s' o¿ %d\n", 
poﬁ
->
addr°r
.
Àn
,

137 
poﬁ
->
addr°r
.
d©a
, 
p
->
sd
);

139 
°©us
 = 
	`¥oxy_ªu£
(
p
);

140 i‡(
°©us
 < 0) {

141 
	`log_îr‹
("reuse ofáddr '%.*s' forÜistening onÖ %d failed: %s",

142 
poﬁ
->
addr°r
.
Àn
,Öoﬁ->addr°r.
d©a
, 
p
->
sd
,

143 
	`°ªº‹
(
î∫o
));

144  
NC_ERROR
;

147 
°©us
 = 
	`böd
(
p
->
sd
,Ö->
addr
,Ö->
addæí
);

148 i‡(
°©us
 < 0) {

149 
	`log_îr‹
("böd o¿∞%dÅÿadd∏'%.*s' faûed: %s", 
p
->
sd
,

150 
poﬁ
->
addr°r
.
Àn
,Öoﬁ->addr°r.
d©a
, 
	`°ªº‹
(
î∫o
));

151  
NC_ERROR
;

154 i‡((
p
->
Ámûy
 =
AF_UNIX
Ë&& 
poﬁ
->
≥rm
) {

155 
sockaddr_un
 *
un
 = (sockaddr_u¿*)
p
->
addr
;

156 
°©us
 = 
	`chmod
(
un
->
sun_∑th
, 
poﬁ
->
≥rm
);

157 i‡(
°©us
 < 0) {

158 
	`log_îr‹
("chmod o¿∞%d o¿add∏'%.*s' faûed: %s", 
p
->
sd
,

159 
poﬁ
->
addr°r
.
Àn
,Öoﬁ->addr°r.
d©a
, 
	`°ªº‹
(
î∫o
));

160  
NC_ERROR
;

164 
°©us
 = 
	`li°í
(
p
->
sd
, 
poﬁ
->
backlog
);

165 i‡(
°©us
 < 0) {

166 
	`log_îr‹
("li°í o¿∞%d o¿add∏'%.*s' faûed: %s", 
p
->
sd
,

167 
poﬁ
->
addr°r
.
Àn
,Öoﬁ->addr°r.
d©a
, 
	`°ªº‹
(
î∫o
));

168  
NC_ERROR
;

171 
°©us
 = 
	`nc_£t_n⁄blockög
(
p
->
sd
);

172 i‡(
°©us
 < 0) {

173 
	`log_îr‹
("£àn⁄block o¿∞%d o¿add∏'%.*s' faûed: %s", 
p
->
sd
,

174 
poﬁ
->
addr°r
.
Àn
,Öoﬁ->addr°r.
d©a
, 
	`°ªº‹
(
î∫o
));

175  
NC_ERROR
;

178 
°©us
 = 
	`evít_add_c⁄n
(
˘x
->
evb
, 
p
);

179 i‡(
°©us
 < 0) {

180 
	`log_îr‹
("eventádd connÖ %d onáddr '%.*s' failed: %s",

181 
p
->
sd
, 
poﬁ
->
addr°r
.
Àn
,Öoﬁ->addr°r.
d©a
,

182 
	`°ªº‹
(
î∫o
));

183  
NC_ERROR
;

186 
°©us
 = 
	`evít_dñ_out
(
˘x
->
evb
, 
p
);

187 i‡(
°©us
 < 0) {

188 
	`log_îr‹
("event del outÖ %d onáddr '%.*s' failed: %s",

189 
p
->
sd
, 
poﬁ
->
addr°r
.
Àn
,Öoﬁ->addr°r.
d©a
,

190 
	`°ªº‹
(
î∫o
));

191  
NC_ERROR
;

194  
NC_OK
;

195 
	}
}

197 
r°©us_t


198 
	$¥oxy_óch_öô
(*
ñem
, *
d©a
)

200 
r°©us_t
 
°©us
;

201 
£rvî_poﬁ
 *
poﬁ
 = 
ñem
;

202 
c⁄n
 *
p
;

204 
p
 = 
	`c⁄n_gë_¥oxy
(
poﬁ
);

205 i‡(
p
 =
NULL
) {

206  
NC_ENOMEM
;

209 
°©us
 = 
	`¥oxy_li°í
(
poﬁ
->
˘x
, 
p
);

210 i‡(
°©us
 !
NC_OK
) {

211 
p
->
	`˛o£
(
poﬁ
->
˘x
,Ö);

212  
°©us
;

215 
	`log_debug
(
LOG_NOTICE
, "∞%dÜi°íög o¿'%.*s' i¿%†poﬁ %"
PRIu32
" '%.*s'"

216 " wôh %"
PRIu32
" sîvîs", 
p
->
sd
, 
poﬁ
->
addr°r
.
Àn
,

217 
poﬁ
->
addr°r
.
d©a
,Öoﬁ->
ªdis
 ? "redis" : "memcache",

218 
poﬁ
->
idx
,Öoﬁ->
«me
.
Àn
,Öoﬁ->«me.
d©a
,

219 
	`¨øy_n
(&
poﬁ
->
£rvî
));

221  
NC_OK
;

222 
	}
}

224 
r°©us_t


225 
	$¥oxy_öô
(
c⁄ãxt
 *
˘x
)

227 
r°©us_t
 
°©us
;

229 
	`ASSERT
(
	`¨øy_n
(&
˘x
->
poﬁ
) != 0);

231 
°©us
 = 
	`¨øy_óch
(&
˘x
->
poﬁ
, 
¥oxy_óch_öô
, 
NULL
);

232 i‡(
°©us
 !
NC_OK
) {

233 
	`¥oxy_deöô
(
˘x
);

234  
°©us
;

237 
	`log_debug
(
LOG_VVERB
, "öôÖroxy wôh %"
PRIu32
"Öools",

238 
	`¨øy_n
(&
˘x
->
poﬁ
));

240  
NC_OK
;

241 
	}
}

243 
r°©us_t


244 
	$¥oxy_óch_deöô
(*
ñem
, *
d©a
)

246 
£rvî_poﬁ
 *
poﬁ
 = 
ñem
;

247 
c⁄n
 *
p
;

249 
p
 = 
poﬁ
->
p_c⁄n
;

250 i‡(
p
 !
NULL
) {

251 
p
->
	`˛o£
(
poﬁ
->
˘x
,Ö);

254  
NC_OK
;

255 
	}
}

258 
	$¥oxy_deöô
(
c⁄ãxt
 *
˘x
)

260 
r°©us_t
 
°©us
;

262 
	`ASSERT
(
	`¨øy_n
(&
˘x
->
poﬁ
) != 0);

264 
°©us
 = 
	`¨øy_óch
(&
˘x
->
poﬁ
, 
¥oxy_óch_deöô
, 
NULL
);

265 i‡(
°©us
 !
NC_OK
) {

269 
	`log_debug
(
LOG_VVERB
, "deöôÖroxy wôh %"
PRIu32
"Öools",

270 
	`¨øy_n
(&
˘x
->
poﬁ
));

271 
	}
}

273 
r°©us_t


274 
	$¥oxy_ac˚±
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *
p
)

276 
r°©us_t
 
°©us
;

277 
c⁄n
 *
c
;

278 
sd
;

279 
£rvî_poﬁ
 *
poﬁ
 = 
p
->
ow√r
;

281 
	`ASSERT
(
p
->
¥oxy
 && !p->
˛õ¡
);

282 
	`ASSERT
(
p
->
sd
 > 0);

283 
	`ASSERT
(
p
->
ªcv_a˘ive
 &&Ö->
ªcv_ªady
);

286 
sd
 = 
	`ac˚±
(
p
->sd, 
NULL
, NULL);

287 i‡(
sd
 < 0) {

288 i‡(
î∫o
 =
EINTR
) {

289 
	`log_debug
(
LOG_VERB
, "ac˚± o¿∞%dÇŸÑódy -Éöå", 
p
->
sd
);

293 i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EWOULDBLOCK
 ||Éºnÿ=
ECONNABORTED
) {

294 
	`log_debug
(
LOG_VERB
, "ac˚± o¿∞%dÇŸÑódy -Éagaö", 
p
->
sd
);

295 
p
->
ªcv_ªady
 = 0;

296  
NC_OK
;

311 i‡(
î∫o
 =
EMFILE
 ||Éºnÿ=
ENFILE
) {

312 
	`log_debug
(
LOG_CRIT
, "ac˚± o¿∞%d wôh max fd†%"
PRIu32
" "

313 "u£d c⁄√˘i⁄†%"
PRIu32
" max client connections %"PRIu32" "

314 "cuº clõ¡ c⁄√˘i⁄†%"
PRIu32
" failed: %s",

315 
p
->
sd
, 
˘x
->
max_nfd
, 
	`c⁄n_ncuº_c⁄n
(),

316 
˘x
->
max_ncc⁄n
, 
	`c⁄n_ncuº_cc⁄n
(), 
	`°ªº‹
(
î∫o
));

318 
p
->
ªcv_ªady
 = 0;

320  
NC_OK
;

323 
	`log_îr‹
("ac˚± o¿∞%d faûed: %s", 
p
->
sd
, 
	`°ªº‹
(
î∫o
));

325  
NC_ERROR
;

331 i‡(
	`c⁄n_ncuº_cc⁄n
(Ë>
˘x
->
max_ncc⁄n
) {

332 
	`log_debug
(
LOG_CRIT
, "˛õ¡ c⁄√˘i⁄†%"
PRIu32
"ÉxceedÜimit %"PRIu32,

333 
	`c⁄n_ncuº_cc⁄n
(), 
˘x
->
max_ncc⁄n
);

334 
°©us
 = 
	`˛o£
(
sd
);

335 i‡(
°©us
 < 0) {

336 
	`log_îr‹
("˛o£ c %d faûed, ign‹ed: %s", 
sd
, 
	`°ªº‹
(
î∫o
));

338  
NC_OK
;

341 
c
 = 
	`c⁄n_gë
(
p
->
ow√r
, 
åue
,Ö->
ªdis
);

342 i‡(
c
 =
NULL
) {

343 
	`log_îr‹
("gë c⁄¿f‹ c %d fromÖ %d faûed: %s", 
sd
, 
p
->sd,

344 
	`°ªº‹
(
î∫o
));

345 
°©us
 = 
	`˛o£
(
sd
);

346 i‡(
°©us
 < 0) {

347 
	`log_îr‹
("˛o£ c %d faûed, ign‹ed: %s", 
sd
, 
	`°ªº‹
(
î∫o
));

349  
NC_ENOMEM
;

351 
c
->
sd
 = sd;

353 
	`°©s_poﬁ_ö¸
(
˘x
, 
c
->
ow√r
, 
˛õ¡_c⁄√˘i⁄s
);

355 
°©us
 = 
	`nc_£t_n⁄blockög
(
c
->
sd
);

356 i‡(
°©us
 < 0) {

357 
	`log_îr‹
("£àn⁄block o¿¯%d fromÖ %d faûed: %s", 
c
->
sd
, 
p
->sd,

358 
	`°ªº‹
(
î∫o
));

359 
c
->
	`˛o£
(
˘x
, c);

360  
°©us
;

363 i‡(
poﬁ
->
t˝kì∑live
) {

364 
°©us
 = 
	`nc_£t_t˝kì∑live
(
c
->
sd
);

365 i‡(
°©us
 < 0) {

366 
	`log_w¨n
("setÅcpkeepalive on c %d fromÖ %d failed, ignored: %s",

367 
c
->
sd
, 
p
->sd, 
	`°ªº‹
(
î∫o
));

371 i‡(
p
->
Ámûy
 =
AF_INET
 ||Ö->Ámûy =
AF_INET6
) {

372 
°©us
 = 
	`nc_£t_t˝nodñay
(
c
->
sd
);

373 i‡(
°©us
 < 0) {

374 
	`log_w¨n
("setÅcpnodelay on c %d fromÖ %d failed, ignored: %s",

375 
c
->
sd
, 
p
->sd, 
	`°ªº‹
(
î∫o
));

379 
°©us
 = 
	`evít_add_c⁄n
(
˘x
->
evb
, 
c
);

380 i‡(
°©us
 < 0) {

381 
	`log_îr‹
("evíàadd c⁄¿‰omÖ %d faûed: %s", 
p
->
sd
,

382 
	`°ªº‹
(
î∫o
));

383 
c
->
	`˛o£
(
˘x
, c);

384  
°©us
;

387 
	`log_debug
(
LOG_NOTICE
, "ac˚±ed c %d o¿∞%d from '%s'", 
c
->
sd
, 
p
->sd,

388 
	`nc_uƒesﬁve_≥î_desc
(
c
->
sd
));

390  
NC_OK
;

391 
	}
}

393 
r°©us_t


394 
	$¥oxy_ªcv
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

396 
r°©us_t
 
°©us
;

398 
	`ASSERT
(
c⁄n
->
¥oxy
 && !c⁄n->
˛õ¡
);

399 
	`ASSERT
(
c⁄n
->
ªcv_a˘ive
);

401 
c⁄n
->
ªcv_ªady
 = 1;

403 
°©us
 = 
	`¥oxy_ac˚±
(
˘x
, 
c⁄n
);

404 i‡(
°©us
 !
NC_OK
) {

405  
°©us
;

407 } 
c⁄n
->
ªcv_ªady
);

409  
NC_OK
;

410 
	}
}

	@src/nc_proxy.h

18 #i‚de‡
_NC_PROXY_H_


19 
	#_NC_PROXY_H_


	)

21 
	~<nc_c‹e.h
>

23 
¥oxy_ªf
(
c⁄n
 *c⁄n, *
ow√r
);

24 
¥oxy_uƒef
(
c⁄n
 *conn);

25 
¥oxy_˛o£
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

27 
r°©us_t
 
¥oxy_óch_öô
(*
ñem
, *
d©a
);

28 
r°©us_t
 
¥oxy_óch_deöô
(*
ñem
, *
d©a
);

30 
r°©us_t
 
¥oxy_öô
(
c⁄ãxt
 *
˘x
);

31 
¥oxy_deöô
(
c⁄ãxt
 *
˘x
);

32 
r°©us_t
 
¥oxy_ªcv
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

	@src/nc_queue.h

50 #i‚de‡
_NC_QUEUE_H_


51 
	#_NC_QUEUE_H_


	)

53 
	~<nc_log.h
>

55 #i‚de‡
__off£tof


56 
	#__off£tof
(
ty≥
, 
fõld
Ë((
size_t
)(&(—y≥ *)
NULL
)->fõld))

	)

130 
	#QUEUE_MACRO_SCRUB
 1

	)

132 #ifde‡
NC_ASSERT_PANIC


133 
	#QUEUE_MACRO_TRACE
 1

	)

134 
	#QUEUE_MACRO_ASSERT
 1

	)

137 #ifde‡
QUEUE_MACRO_SCRUB


139 
	#QMD_SAVELINK
(
«me
, 
lök
Ë**«mê(*)&÷ök)

	)

141 
	#TRASHIT
(
x
) do { \

142 (
x
Ë(*Ë
NULL
; \

143 } 0)

	)

147 
	#QMD_SAVELINK
(
«me
, 
lök
)

	)

148 
	#TRASHIT
(
x
)

	)

152 #ifde‡
QUEUE_MACRO_TRACE


155 
	sqm_åa˚
 {

156 *
	mœ°fûe
;

157 
	mœ°löe
;

158 *
	m¥evfûe
;

159 
	m¥evlöe
;

162 
	#TRACEBUF
 
qm_åa˚
 
åa˚
;

	)

164 
	#QMD_TRACE_HEAD
(
hód
) do { \

165 (
hód
)->
åa˚
.
¥evlöe
 = (hód)->åa˚.
œ°löe
; \

166 (
hód
)->
åa˚
.
¥evfûe
 = (hód)->åa˚.
œ°fûe
; \

167 (
hód
)->
åa˚
.
œ°löe
 = 
__LINE__
; \

168 (
hód
)->
åa˚
.
œ°fûe
 = 
__FILE__
; \

169 } 0)

	)

171 
	#QMD_TRACE_ELEM
(
ñem
) do { \

172 (
ñem
)->
åa˚
.
¥evlöe
 = (ñem)->åa˚.
œ°löe
; \

173 (
ñem
)->
åa˚
.
¥evfûe
 = (ñem)->åa˚.
œ°fûe
; \

174 (
ñem
)->
åa˚
.
œ°löe
 = 
__LINE__
; \

175 (
ñem
)->
åa˚
.
œ°fûe
 = 
__FILE__
; \

176 } 0)

	)

180 
	#QMD_TRACE_ELEM
(
ñem
)

	)

181 
	#QMD_TRACE_HEAD
(
hód
)

	)

182 
	#TRACEBUF


	)

189 
	#SLIST_HEAD
(
«me
, 
ty≥
) \

190 
	s«me
 { \

191 
ty≥
 *
¶h_fú°
; \

192 }

	)

194 
	#SLIST_HEAD_INITIALIZER
(
hód
) \

195 { 
NULL
 }

	)

197 
	#SLIST_ENTRY
(
ty≥
) \

199 
ty≥
 *
¶e_√xt
; \

200 }

	)

205 
	#SLIST_EMPTY
(
hód
Ë((hód)->
¶h_fú°
 =
NULL
)

	)

207 
	#SLIST_FIRST
(
hód
Ë((hód)->
¶h_fú°
)

	)

209 
	#SLIST_FOREACH
(
v¨
, 
hód
, 
fõld
) \

210 (
v¨
Ë
	`SLIST_FIRST
((
hód
)); \

211 (
v¨
); \

212 (
v¨
Ë
	`SLIST_NEXT
((v¨), 
fõld
))

	)

214 
	#SLIST_FOREACH_SAFE
(
v¨
, 
hód
, 
fõld
, 
tv¨
) \

215 (
v¨
Ë
	`SLIST_FIRST
((
hód
)); \

216 (
v¨
Ë&& ((
tv¨
Ë
	`SLIST_NEXT
((v¨), 
fõld
), 1); \

217 (
v¨
Ë(
tv¨
))

	)

219 
	#SLIST_FOREACH_PREVPTR
(
v¨
, 
v¨p
, 
hód
, 
fõld
) \

220 (
v¨p
Ë&
	`SLIST_FIRST
((
hód
)); \

221 ((
v¨
Ë*(
v¨p
)Ë!
NULL
; \

222 (
v¨p
Ë&
	`SLIST_NEXT
((
v¨
), 
fõld
))

	)

224 
	#SLIST_INIT
(
hód
) do { \

225 
	`SLIST_FIRST
((
hód
)Ë
NULL
; \

226 } 0)

	)

228 
	#SLIST_INSERT_AFTER
(
¶i°ñm
, 
ñm
, 
fõld
) do { \

229 
	`SLIST_NEXT
((
ñm
), 
fõld
ËSLIST_NEXT((
¶i°ñm
), field); \

230 
	`SLIST_NEXT
((
¶i°ñm
), 
fõld
Ë(
ñm
); \

231 } 0)

	)

233 
	#SLIST_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

234 
	`SLIST_NEXT
((
ñm
), 
fõld
Ë
	`SLIST_FIRST
((
hód
)); \

235 
	`SLIST_FIRST
((
hód
)Ë(
ñm
); \

236 } 0)

	)

238 
	#SLIST_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
¶e_√xt
)

	)

240 
	#SLIST_REMOVE
(
hód
, 
ñm
, 
ty≥
, 
fõld
) do { \

241 i‡(
	`SLIST_FIRST
((
hód
)Ë=(
ñm
)) { \

242 
	`SLIST_REMOVE_HEAD
((
hód
), 
fõld
); \

244 
ty≥
 *
cuªlm
 = 
	`SLIST_FIRST
((
hód
)); \

245 
	`SLIST_NEXT
(
cuªlm
, 
fõld
Ë!(
ñm
)) { \

246 
cuªlm
 = 
	`SLIST_NEXT
(cuªlm, 
fõld
); \

248 
	`SLIST_REMOVE_AFTER
(
cuªlm
, 
fõld
); \

250 } 0)

	)

252 
	#SLIST_REMOVE_AFTER
(
ñm
, 
fõld
) do { \

253 
	`QMD_SAVELINK
(
ﬁd√xt
, 
	`SLIST_NEXT
(SLIST_NEXT(
ñm
, 
fõld
), field)); \

254 
	`SLIST_NEXT
(
ñm
, 
fõld
) = SLIST_NEXT(SLIST_NEXT(elm, field), field); \

255 
	`TRASHIT
(*
ﬁd√xt
); \

256 } 0)

	)

258 
	#SLIST_REMOVE_HEAD
(
hód
, 
fõld
) do { \

259 
	`QMD_SAVELINK
(
ﬁd√xt
, 
	`SLIST_NEXT
(
	`SLIST_FIRST
((
hód
)), 
fõld
)); \

260 
	`SLIST_FIRST
((
hód
)Ë
	`SLIST_NEXT
(SLIST_FIRST((hód)), 
fõld
); \

261 
	`TRASHIT
(*
ﬁd√xt
); \

262 } 0)

	)

267 
	#STAILQ_HEAD
(
«me
, 
ty≥
) \

268 
	s«me
 { \

269 
ty≥
 *
°qh_fú°
; \

270 
ty≥
 **
°qh_œ°
; \

271 }

	)

273 
	#STAILQ_HEAD_INITIALIZER
(
hód
) \

274 { 
NULL
, &(
hód
).
°qh_fú°
 }

	)

276 
	#STAILQ_ENTRY
(
ty≥
) \

278 
ty≥
 *
°qe_√xt
; \

279 }

	)

284 
	#STAILQ_CONCAT
(
hód1
, 
hód2
) do { \

285 i‡(!
	`STAILQ_EMPTY
((
hód2
))) { \

286 *(
hód1
)->
°qh_œ°
 = (
hód2
)->
°qh_fú°
; \

287 (
hód1
)->
°qh_œ°
 = (
hód2
)->stqh_last; \

288 
	`STAILQ_INIT
((
hód2
)); \

290 } 0)

	)

292 
	#STAILQ_EMPTY
(
hód
Ë((hód)->
°qh_fú°
 =
NULL
)

	)

294 
	#STAILQ_FIRST
(
hód
Ë((hód)->
°qh_fú°
)

	)

296 
	#STAILQ_FOREACH
(
v¨
, 
hód
, 
fõld
) \

297 (
v¨
Ë
	`STAILQ_FIRST
((
hód
)); \

298 (
v¨
); \

299 (
v¨
Ë
	`STAILQ_NEXT
((v¨), 
fõld
))

	)

301 
	#STAILQ_FOREACH_SAFE
(
v¨
, 
hód
, 
fõld
, 
tv¨
) \

302 (
v¨
Ë
	`STAILQ_FIRST
((
hód
)); \

303 (
v¨
Ë&& ((
tv¨
Ë
	`STAILQ_NEXT
((v¨), 
fõld
), 1); \

304 (
v¨
Ë(
tv¨
))

	)

306 
	#STAILQ_INIT
(
hód
) do { \

307 
	`STAILQ_FIRST
((
hód
)Ë
NULL
; \

308 (
hód
)->
°qh_œ°
 = &
	`STAILQ_FIRST
((head)); \

309 } 0)

	)

311 
	#STAILQ_INSERT_AFTER
(
hód
, 
tqñm
, 
ñm
, 
fõld
) do { \

312 i‡((
	`STAILQ_NEXT
((
ñm
), 
fõld
ËSTAILQ_NEXT((
tqñm
), fõld)Ë=
NULL
)\

313 (
hód
)->
°qh_œ°
 = &
	`STAILQ_NEXT
((
ñm
), 
fõld
); \

314 
	`STAILQ_NEXT
((
tqñm
), 
fõld
Ë(
ñm
); \

315 } 0)

	)

317 
	#STAILQ_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

318 i‡((
	`STAILQ_NEXT
((
ñm
), 
fõld
Ë
	`STAILQ_FIRST
((
hód
))Ë=
NULL
) \

319 (
hód
)->
°qh_œ°
 = &
	`STAILQ_NEXT
((
ñm
), 
fõld
); \

320 
	`STAILQ_FIRST
((
hód
)Ë(
ñm
); \

321 } 0)

	)

323 
	#STAILQ_INSERT_TAIL
(
hód
, 
ñm
, 
fõld
) do { \

324 
	`STAILQ_NEXT
((
ñm
), 
fõld
Ë
NULL
; \

325 *(
hód
)->
°qh_œ°
 = (
ñm
); \

326 (
hód
)->
°qh_œ°
 = &
	`STAILQ_NEXT
((
ñm
), 
fõld
); \

327 } 0)

	)

329 
	#STAILQ_LAST
(
hód
, 
ty≥
, 
fõld
) \

330 (
	`STAILQ_EMPTY
((
hód
)) ? \

331 
NULL
 : \

332 ((
ty≥
 *)(*) \

333 ((*)((
hód
)->
°qh_œ°
Ë- 
	`__off£tof
(
ty≥
, 
fõld
))))

	)

335 
	#STAILQ_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
°qe_√xt
)

	)

337 
	#STAILQ_REMOVE
(
hód
, 
ñm
, 
ty≥
, 
fõld
) do { \

338 i‡(
	`STAILQ_FIRST
((
hód
)Ë=(
ñm
)) { \

339 
	`STAILQ_REMOVE_HEAD
((
hód
), 
fõld
); \

342 
ty≥
 *
cuªlm
 = 
	`STAILQ_FIRST
((
hód
)); \

343 
	`STAILQ_NEXT
(
cuªlm
, 
fõld
Ë!(
ñm
)) \

344 
cuªlm
 = 
	`STAILQ_NEXT
(cuªlm, 
fõld
); \

345 
	`STAILQ_REMOVE_AFTER
(
hód
, 
cuªlm
, 
fõld
); \

347 } 0)

	)

349 
	#STAILQ_REMOVE_HEAD
(
hód
, 
fõld
) do { \

350 
	`QMD_SAVELINK
(
ﬁd√xt
, 
	`STAILQ_NEXT
(
	`STAILQ_FIRST
((
hód
)), 
fõld
)); \

351 i‡((
	`STAILQ_FIRST
((
hód
)) = \

352 
	`STAILQ_NEXT
(
	`STAILQ_FIRST
((
hód
)), 
fõld
)Ë=
NULL
) { \

353 (
hód
)->
°qh_œ°
 = &
	`STAILQ_FIRST
((head)); \

355 
	`TRASHIT
(*
ﬁd√xt
); \

356 } 0)

	)

358 
	#STAILQ_REMOVE_AFTER
(
hód
, 
ñm
, 
fõld
) do { \

359 
	`QMD_SAVELINK
(
ﬁd√xt
, 
	`STAILQ_NEXT
(STAILQ_NEXT(
ñm
, 
fõld
), field)); \

360 i‡((
	`STAILQ_NEXT
(
ñm
, 
fõld
) = \

361 
	`STAILQ_NEXT
(STAILQ_NEXT(
ñm
, 
fõld
), fõld)Ë=
NULL
) { \

362 (
hód
)->
°qh_œ°
 = &
	`STAILQ_NEXT
((
ñm
), 
fõld
); \

364 
	`TRASHIT
(*
ﬁd√xt
); \

365 } 0)

	)

367 
	#STAILQ_SWAP
(
hód1
, 
hód2
, 
ty≥
) do { \

368 
ty≥
 *
sw≠_fú°
 = 
	`STAILQ_FIRST
(
hód1
); \

369 
ty≥
 **
sw≠_œ°
 = (
hód1
)->
°qh_œ°
; \

370 
	`STAILQ_FIRST
(
hód1
ËSTAILQ_FIRST(
hód2
); \

371 (
hód1
)->
°qh_œ°
 = (
hód2
)->stqh_last; \

372 
	`STAILQ_FIRST
(
hód2
Ë
sw≠_fú°
; \

373 (
hód2
)->
°qh_œ°
 = 
sw≠_œ°
; \

374 i‡(
	`STAILQ_EMPTY
(
hód1
)) \

375 (
hód1
)->
°qh_œ°
 = &
	`STAILQ_FIRST
(head1); \

376 i‡(
	`STAILQ_EMPTY
(
hód2
)) \

377 (
hód2
)->
°qh_œ°
 = &
	`STAILQ_FIRST
(head2); \

378 } 0)

	)

384 
	#LIST_HEAD
(
«me
, 
ty≥
) \

385 
	s«me
 { \

386 
ty≥
 *
lh_fú°
; \

387 }

	)

389 
	#LIST_HEAD_INITIALIZER
(
hód
) \

390 { 
NULL
 }

	)

392 
	#LIST_ENTRY
(
ty≥
) \

394 
ty≥
 *
À_√xt
; \

395 
ty≥
 **
À_¥ev
; \

396 }

	)

402 #ifde‡
QUEUE_MACRO_ASSERT


404 
	#QMD_LIST_CHECK_HEAD
(
hód
, 
fõld
) do { \

405 i‡(
	`LIST_FIRST
((
hód
)Ë!
NULL
 && \

406 
	`LIST_FIRST
((
hód
))->
fõld
.
À_¥ev
 != &LIST_FIRST((head))) { \

407 
	`log_∑nic
("BadÜi° hód %∞fú°->¥ev !hód", (*)(
hód
)); \

409 } 0)

	)

411 
	#QMD_LIST_CHECK_NEXT
(
ñm
, 
fõld
) do { \

412 i‡(
	`LIST_NEXT
((
ñm
), 
fõld
Ë!
NULL
 && \

413 
	`LIST_NEXT
((
ñm
), 
fõld
)->fõld.
À_¥ev
 !&(”lm)->fõld.
À_√xt
)) {\

414 
	`log_∑nic
("BadÜökÉlm %∞√xt->¥ev !ñm",(*)(
ñm
)); \

416 } 0)

	)

418 
	#QMD_LIST_CHECK_PREV
(
ñm
, 
fõld
) do { \

419 i‡(*(
ñm
)->
fõld
.
À_¥ev
 != (elm)) { \

420 
	`log_∑nic
("BadÜökÉlm %∞¥ev->√xà!ñm",(*)(
ñm
)); \

422 } 0)

	)

426 
	#QMD_LIST_CHECK_HEAD
(
hód
, 
fõld
)

	)

427 
	#QMD_LIST_CHECK_NEXT
(
ñm
, 
fõld
)

	)

428 
	#QMD_LIST_CHECK_PREV
(
ñm
, 
fõld
)

	)

432 
	#LIST_EMPTY
(
hód
Ë((hód)->
lh_fú°
 =
NULL
)

	)

434 
	#LIST_FIRST
(
hód
Ë((hód)->
lh_fú°
)

	)

436 
	#LIST_FOREACH
(
v¨
, 
hód
, 
fõld
) \

437 (
v¨
Ë
	`LIST_FIRST
((
hód
)); \

438 (
v¨
); \

439 (
v¨
Ë
	`LIST_NEXT
((v¨), 
fõld
))

	)

441 
	#LIST_FOREACH_SAFE
(
v¨
, 
hód
, 
fõld
, 
tv¨
) \

442 (
v¨
Ë
	`LIST_FIRST
((
hód
)); \

443 (
v¨
Ë&& ((
tv¨
Ë
	`LIST_NEXT
((v¨), 
fõld
), 1); \

444 (
v¨
Ë(
tv¨
))

	)

446 
	#LIST_INIT
(
hód
) do { \

447 
	`LIST_FIRST
((
hód
)Ë
NULL
; \

448 } 0)

	)

450 
	#LIST_INSERT_AFTER
(
li°ñm
, 
ñm
, 
fõld
) do { \

451 
	`QMD_LIST_CHECK_NEXT
(
li°ñm
, 
fõld
); \

452 i‡((
	`LIST_NEXT
((
ñm
), 
fõld
ËLIST_NEXT((
li°ñm
), fõld)Ë!
NULL
)\

453 
	`LIST_NEXT
((
li°ñm
), 
fõld
)->fõld.
À_¥ev
 = \

454 &
	`LIST_NEXT
((
ñm
), 
fõld
); \

455 
	`LIST_NEXT
((
li°ñm
), 
fõld
Ë(
ñm
); \

456 (
ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
li°ñm
), field); \

457 } 0)

	)

459 
	#LIST_INSERT_BEFORE
(
li°ñm
, 
ñm
, 
fõld
) do { \

460 
	`QMD_LIST_CHECK_PREV
(
li°ñm
, 
fõld
); \

461 (
ñm
)->
fõld
.
À_¥ev
 = (
li°ñm
)->field.le_prev; \

462 
	`LIST_NEXT
((
ñm
), 
fõld
Ë(
li°ñm
); \

463 *(
li°ñm
)->
fõld
.
À_¥ev
 = (
ñm
); \

464 (
li°ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
ñm
), field); \

465 } 0)

	)

467 
	#LIST_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

468 
	`QMD_LIST_CHECK_HEAD
((
hód
), 
fõld
); \

469 i‡((
	`LIST_NEXT
((
ñm
), 
fõld
Ë
	`LIST_FIRST
((
hód
))Ë!
NULL
) \

470 
	`LIST_FIRST
((
hód
))->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
ñm
), field); \

471 
	`LIST_FIRST
((
hód
)Ë(
ñm
); \

472 (
ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_FIRST
((
hód
)); \

473 } 0)

	)

475 
	#LIST_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
À_√xt
)

	)

477 
	#LIST_REMOVE
(
ñm
, 
fõld
) do { \

478 
	`QMD_SAVELINK
(
ﬁd√xt
, (
ñm
)->
fõld
.
À_√xt
); \

479 
	`QMD_SAVELINK
(
ﬁd¥ev
, (
ñm
)->
fõld
.
À_¥ev
); \

480 
	`QMD_LIST_CHECK_NEXT
(
ñm
, 
fõld
); \

481 
	`QMD_LIST_CHECK_PREV
(
ñm
, 
fõld
); \

482 i‡(
	`LIST_NEXT
((
ñm
), 
fõld
Ë!
NULL
) \

483 
	`LIST_NEXT
((
ñm
), 
fõld
)->fõld.
À_¥ev
 = \

484 (
ñm
)->
fõld
.
À_¥ev
; \

485 *(
ñm
)->
fõld
.
À_¥ev
 = 
	`LIST_NEXT
((elm), field); \

486 
	`TRASHIT
(*
ﬁd√xt
); \

487 
	`TRASHIT
(*
ﬁd¥ev
); \

488 } 0)

	)

490 
	#LIST_SWAP
(
hód1
, 
hód2
, 
ty≥
, 
fõld
) do { \

491 
ty≥
 *
sw≠_tmp
 = 
	`LIST_FIRST
((
hód1
)); \

492 
	`LIST_FIRST
((
hód1
)ËLIST_FIRST((
hód2
)); \

493 
	`LIST_FIRST
((
hód2
)Ë
sw≠_tmp
; \

494 i‡((
sw≠_tmp
 = 
	`LIST_FIRST
((
hód1
))Ë!
NULL
) \

495 
sw≠_tmp
->
fõld
.
À_¥ev
 = &
	`LIST_FIRST
((
hód1
)); \

496 i‡((
sw≠_tmp
 = 
	`LIST_FIRST
((
hód2
))Ë!
NULL
) \

497 
sw≠_tmp
->
fõld
.
À_¥ev
 = &
	`LIST_FIRST
((
hód2
)); \

498 } 0)

	)

503 
	#TAILQ_HEAD
(
«me
, 
ty≥
) \

504 
	s«me
 { \

505 
ty≥
 *
tqh_fú°
; \

506 
ty≥
 **
tqh_œ°
; \

507 
TRACEBUF
 \

508 }

	)

510 
	#TAILQ_HEAD_INITIALIZER
(
hód
) \

511 { 
NULL
, &(
hód
).
tqh_fú°
 }

	)

513 
	#TAILQ_ENTRY
(
ty≥
) \

515 
ty≥
 *
tqe_√xt
; \

516 
ty≥
 **
tqe_¥ev
; \

517 
TRACEBUF
 \

518 }

	)

523 #ifde‡
QUEUE_MACRO_ASSERT


525 
	#QMD_TAILQ_CHECK_HEAD
(
hód
, 
fõld
) do { \

526 i‡(!
	`TAILQ_EMPTY
(
hód
) && \

527 
	`TAILQ_FIRST
((
hód
))->
fõld
.
tqe_¥ev
 != &TAILQ_FIRST((head))) { \

528 
	`log_∑nic
("BadÅaûq hód %∞fú°->¥ev !hód", (*)(
hód
)); \

530 } 0)

	)

532 
	#QMD_TAILQ_CHECK_TAIL
(
hód
, 
fõld
) do { \

533 i‡(*(
hód
)->
tqh_œ°
 !
NULL
) { \

534 
	`log_∑nic
("BadÅaûq NEXT(%p->tqh_œ°Ë!NULL",(*)(
hód
)); \

536 } 0)

	)

538 
	#QMD_TAILQ_CHECK_NEXT
(
ñm
, 
fõld
) do { \

539 i‡(
	`TAILQ_NEXT
((
ñm
), 
fõld
Ë!
NULL
 && \

540 
	`TAILQ_NEXT
((
ñm
), 
fõld
)->fõld.
tqe_¥ev
 !&(”lm)->fõld.
tqe_√xt
)) {\

541 
	`log_∑nic
("BadÜökÉlm %∞√xt->¥ev !ñm",(*)(
ñm
)); \

543 } 0)

	)

545 
	#QMD_TAILQ_CHECK_PREV
(
ñm
, 
fõld
) do { \

546 i‡(*(
ñm
)->
fõld
.
tqe_¥ev
 != (elm)) { \

547 
	`log_∑nic
("BadÜökÉlm %∞¥ev->√xà!ñm",(*)(
ñm
)); \

549 } 0)

	)

553 
	#QMD_TAILQ_CHECK_HEAD
(
hód
, 
fõld
)

	)

554 
	#QMD_TAILQ_CHECK_TAIL
(
hód
, 
hód«me
)

	)

555 
	#QMD_TAILQ_CHECK_NEXT
(
ñm
, 
fõld
)

	)

556 
	#QMD_TAILQ_CHECK_PREV
(
ñm
, 
fõld
)

	)

560 
	#TAILQ_CONCAT
(
hód1
, 
hód2
, 
fõld
) do { \

561 i‡(!
	`TAILQ_EMPTY
(
hód2
)) { \

562 *(
hód1
)->
tqh_œ°
 = (
hód2
)->
tqh_fú°
; \

563 (
hód2
)->
tqh_fú°
->
fõld
.
tqe_¥ev
 = (
hód1
)->
tqh_œ°
; \

564 (
hód1
)->
tqh_œ°
 = (
hód2
)->tqh_last; \

565 
	`TAILQ_INIT
((
hód2
)); \

566 
	`QMD_TRACE_HEAD
(
hód1
); \

567 
	`QMD_TRACE_HEAD
(
hód2
); \

569 } 0)

	)

571 
	#TAILQ_EMPTY
(
hód
Ë((hód)->
tqh_fú°
 =
NULL
)

	)

573 
	#TAILQ_FIRST
(
hód
Ë((hód)->
tqh_fú°
)

	)

575 
	#TAILQ_FOREACH
(
v¨
, 
hód
, 
fõld
) \

576 (
v¨
Ë
	`TAILQ_FIRST
((
hód
)); \

577 (
v¨
); \

578 (
v¨
Ë
	`TAILQ_NEXT
((v¨), 
fõld
))

	)

580 
	#TAILQ_FOREACH_SAFE
(
v¨
, 
hód
, 
fõld
, 
tv¨
) \

581 (
v¨
Ë
	`TAILQ_FIRST
((
hód
)); \

582 (
v¨
Ë&& ((
tv¨
Ë
	`TAILQ_NEXT
((v¨), 
fõld
), 1); \

583 (
v¨
Ë(
tv¨
))

	)

585 
	#TAILQ_FOREACH_REVERSE
(
v¨
, 
hód
, 
hód«me
, 
fõld
) \

586 (
v¨
Ë
	`TAILQ_LAST
((
hód
), 
hód«me
); \

587 (
v¨
); \

588 (
v¨
Ë
	`TAILQ_PREV
((v¨), 
hód«me
, 
fõld
))

	)

590 
	#TAILQ_FOREACH_REVERSE_SAFE
(
v¨
, 
hód
, 
hód«me
, 
fõld
, 
tv¨
) \

591 (
v¨
Ë
	`TAILQ_LAST
((
hód
), 
hód«me
); \

592 (
v¨
Ë&& ((
tv¨
Ë
	`TAILQ_PREV
((v¨), 
hód«me
, 
fõld
), 1); \

593 (
v¨
Ë(
tv¨
))

	)

595 
	#TAILQ_INIT
(
hód
) do { \

596 
	`TAILQ_FIRST
((
hód
)Ë
NULL
; \

597 (
hód
)->
tqh_œ°
 = &
	`TAILQ_FIRST
((head)); \

598 
	`QMD_TRACE_HEAD
(
hód
); \

599 } 0)

	)

601 
	#TAILQ_INSERT_AFTER
(
hód
, 
li°ñm
, 
ñm
, 
fõld
) do { \

602 
	`QMD_TAILQ_CHECK_NEXT
(
li°ñm
, 
fõld
); \

603 i‡((
	`TAILQ_NEXT
((
ñm
), 
fõld
ËTAILQ_NEXT((
li°ñm
), fõld)Ë!
NULL
) { \

604 
	`TAILQ_NEXT
((
ñm
), 
fõld
)->fõld.
tqe_¥ev
 = &TAILQ_NEXT((elm), field);\

606 (
hód
)->
tqh_œ°
 = &
	`TAILQ_NEXT
((
ñm
), 
fõld
); \

607 
	`QMD_TRACE_HEAD
(
hód
); \

609 
	`TAILQ_NEXT
((
li°ñm
), 
fõld
Ë(
ñm
); \

610 (
ñm
)->
fõld
.
tqe_¥ev
 = &
	`TAILQ_NEXT
((
li°ñm
), field); \

611 
	`QMD_TRACE_ELEM
(&(
ñm
)->
fõld
); \

612 
	`QMD_TRACE_ELEM
(&
li°ñm
->
fõld
); \

613 } 0)

	)

615 
	#TAILQ_INSERT_BEFORE
(
li°ñm
, 
ñm
, 
fõld
) do { \

616 
	`QMD_TAILQ_CHECK_PREV
(
li°ñm
, 
fõld
); \

617 (
ñm
)->
fõld
.
tqe_¥ev
 = (
li°ñm
)->field.tqe_prev; \

618 
	`TAILQ_NEXT
((
ñm
), 
fõld
Ë(
li°ñm
); \

619 *(
li°ñm
)->
fõld
.
tqe_¥ev
 = (
ñm
); \

620 (
li°ñm
)->
fõld
.
tqe_¥ev
 = &
	`TAILQ_NEXT
((
ñm
), field); \

621 
	`QMD_TRACE_ELEM
(&(
ñm
)->
fõld
); \

622 
	`QMD_TRACE_ELEM
(&
li°ñm
->
fõld
); \

623 } 0)

	)

625 
	#TAILQ_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

626 
	`QMD_TAILQ_CHECK_HEAD
(
hód
, 
fõld
); \

627 i‡((
	`TAILQ_NEXT
((
ñm
), 
fõld
Ë
	`TAILQ_FIRST
((
hód
))Ë!
NULL
) \

628 
	`TAILQ_FIRST
((
hód
))->
fõld
.
tqe_¥ev
 = \

629 &
	`TAILQ_NEXT
((
ñm
), 
fõld
); \

631 (
hód
)->
tqh_œ°
 = &
	`TAILQ_NEXT
((
ñm
), 
fõld
); \

632 
	`TAILQ_FIRST
((
hód
)Ë(
ñm
); \

633 (
ñm
)->
fõld
.
tqe_¥ev
 = &
	`TAILQ_FIRST
((
hód
)); \

634 
	`QMD_TRACE_HEAD
(
hód
); \

635 
	`QMD_TRACE_ELEM
(&(
ñm
)->
fõld
); \

636 } 0)

	)

638 
	#TAILQ_INSERT_TAIL
(
hód
, 
ñm
, 
fõld
) do { \

639 
	`QMD_TAILQ_CHECK_TAIL
(
hód
, 
fõld
); \

640 
	`TAILQ_NEXT
((
ñm
), 
fõld
Ë
NULL
; \

641 (
ñm
)->
fõld
.
tqe_¥ev
 = (
hód
)->
tqh_œ°
; \

642 *(
hód
)->
tqh_œ°
 = (
ñm
); \

643 (
hód
)->
tqh_œ°
 = &
	`TAILQ_NEXT
((
ñm
), 
fõld
); \

644 
	`QMD_TRACE_HEAD
(
hód
); \

645 
	`QMD_TRACE_ELEM
(&(
ñm
)->
fõld
); \

646 } 0)

	)

648 
	#TAILQ_LAST
(
hód
, 
hód«me
) \

649 (*(((
hód«me
 *)((
hód
)->
tqh_œ°
))->tqh_œ°))

	)

651 
	#TAILQ_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
tqe_√xt
)

	)

653 
	#TAILQ_PREV
(
ñm
, 
hód«me
, 
fõld
) \

654 (*(((
hód«me
 *)((
ñm
)->
fõld
.
tqe_¥ev
))->
tqh_œ°
))

	)

656 
	#TAILQ_REMOVE
(
hód
, 
ñm
, 
fõld
) do { \

657 
	`QMD_SAVELINK
(
ﬁd√xt
, (
ñm
)->
fõld
.
tqe_√xt
); \

658 
	`QMD_SAVELINK
(
ﬁd¥ev
, (
ñm
)->
fõld
.
tqe_¥ev
); \

659 
	`QMD_TAILQ_CHECK_NEXT
(
ñm
, 
fõld
); \

660 
	`QMD_TAILQ_CHECK_PREV
(
ñm
, 
fõld
); \

661 i‡((
	`TAILQ_NEXT
((
ñm
), 
fõld
)Ë!
NULL
) { \

662 
	`TAILQ_NEXT
((
ñm
), 
fõld
)->fõld.
tqe_¥ev
 = \

663 (
ñm
)->
fõld
.
tqe_¥ev
; \

665 (
hód
)->
tqh_œ°
 = (
ñm
)->
fõld
.
tqe_¥ev
; \

666 
	`QMD_TRACE_HEAD
(
hód
); \

668 *(
ñm
)->
fõld
.
tqe_¥ev
 = 
	`TAILQ_NEXT
((elm), field); \

669 
	`TRASHIT
(*
ﬁd√xt
); \

670 
	`TRASHIT
(*
ﬁd¥ev
); \

671 
	`QMD_TRACE_ELEM
(&(
ñm
)->
fõld
); \

672 } 0)

	)

674 
	#TAILQ_SWAP
(
hód1
, 
hód2
, 
ty≥
, 
fõld
) do { \

675 
ty≥
 *
sw≠_fú°
 = (
hód1
)->
tqh_fú°
; \

676 
ty≥
 **
sw≠_œ°
 = (
hód1
)->
tqh_œ°
; \

677 (
hód1
)->
tqh_fú°
 = (
hód2
)->tqh_first; \

678 (
hód1
)->
tqh_œ°
 = (
hód2
)->tqh_last; \

679 (
hód2
)->
tqh_fú°
 = 
sw≠_fú°
; \

680 (
hód2
)->
tqh_œ°
 = 
sw≠_œ°
; \

681 i‡((
sw≠_fú°
 = (
hód1
)->
tqh_fú°
Ë!
NULL
) \

682 
sw≠_fú°
->
fõld
.
tqe_¥ev
 = &(
hód1
)->
tqh_fú°
; \

684 (
hód1
)->
tqh_œ°
 = &(hód1)->
tqh_fú°
; \

685 i‡((
sw≠_fú°
 = (
hód2
)->
tqh_fú°
Ë!
NULL
) \

686 
sw≠_fú°
->
fõld
.
tqe_¥ev
 = &(
hód2
)->
tqh_fú°
; \

688 (
hód2
)->
tqh_œ°
 = &(hód2)->
tqh_fú°
; \

689 } 0)

	)

694 
	#CIRCLEQ_HEAD
(
«me
, 
ty≥
) \

695 
	s«me
 { \

696 
ty≥
 *
cqh_fú°
; \

697 
ty≥
 *
cqh_œ°
; \

698 }

	)

700 
	#CIRCLEQ_HEAD_INITIALIZER
(
hód
) \

701 { (*)&(
hód
), (*)&(hódË}

	)

703 
	#CIRCLEQ_ENTRY
(
ty≥
) \

705 
ty≥
 *
cqe_√xt
; \

706 
ty≥
 *
cqe_¥ev
; \

707 }

	)

712 
	#CIRCLEQ_EMPTY
(
hód
Ë((hód)->
cqh_fú°
 =(*)(hód))

	)

714 
	#CIRCLEQ_FIRST
(
hód
Ë((hód)->
cqh_fú°
)

	)

716 
	#CIRCLEQ_FOREACH
(
v¨
, 
hód
, 
fõld
) \

717 (
v¨
Ë
	`CIRCLEQ_FIRST
((
hód
)); \

718 (
v¨
Ë!(*)(
hód
Ë|| ((v¨Ë
NULL
); \

719 (
v¨
Ë
	`CIRCLEQ_NEXT
((v¨), 
fõld
))

	)

721 
	#CIRCLEQ_FOREACH_REVERSE
(
v¨
, 
hód
, 
fõld
) \

722 (
v¨
Ë
	`CIRCLEQ_LAST
((
hód
)); \

723 (
v¨
Ë!(*)(
hód
Ë|| ((v¨Ë
NULL
); \

724 (
v¨
Ë
	`CIRCLEQ_PREV
((v¨), 
fõld
))

	)

726 
	#CIRCLEQ_INIT
(
hód
) do { \

727 
	`CIRCLEQ_FIRST
((
hód
)) = (*)(head); \

728 
	`CIRCLEQ_LAST
((
hód
)) = (*)(head); \

729 } 0)

	)

731 
	#CIRCLEQ_INSERT_AFTER
(
hód
, 
li°ñm
, 
ñm
, 
fõld
) do { \

732 
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
ËCIRCLEQ_NEXT((
li°ñm
), field); \

733 
	`CIRCLEQ_PREV
((
ñm
), 
fõld
Ë(
li°ñm
); \

734 i‡(
	`CIRCLEQ_NEXT
((
li°ñm
), 
fõld
Ë=(*)(
hód
)) \

735 
	`CIRCLEQ_LAST
((
hód
)Ë(
ñm
); \

737 
	`CIRCLEQ_PREV
(
	`CIRCLEQ_NEXT
((
li°ñm
), 
fõld
), fõldË(
ñm
); \

738 
	`CIRCLEQ_NEXT
((
li°ñm
), 
fõld
Ë(
ñm
); \

739 } 0)

	)

741 
	#CIRCLEQ_INSERT_BEFORE
(
hód
, 
li°ñm
, 
ñm
, 
fõld
) do { \

742 
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
Ë(
li°ñm
); \

743 
	`CIRCLEQ_PREV
((
ñm
), 
fõld
ËCIRCLEQ_PREV((
li°ñm
), field); \

744 i‡(
	`CIRCLEQ_PREV
((
li°ñm
), 
fõld
Ë=(*)(
hód
)) \

745 
	`CIRCLEQ_FIRST
((
hód
)Ë(
ñm
); \

747 
	`CIRCLEQ_NEXT
(
	`CIRCLEQ_PREV
((
li°ñm
), 
fõld
), fõldË(
ñm
); \

748 
	`CIRCLEQ_PREV
((
li°ñm
), 
fõld
Ë(
ñm
); \

749 } 0)

	)

751 
	#CIRCLEQ_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

752 
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
Ë
	`CIRCLEQ_FIRST
((
hód
)); \

753 
	`CIRCLEQ_PREV
((
ñm
), 
fõld
Ë(*)(
hód
); \

754 i‡(
	`CIRCLEQ_LAST
((
hód
)) == (*)(head)) \

755 
	`CIRCLEQ_LAST
((
hód
)Ë(
ñm
); \

757 
	`CIRCLEQ_PREV
(
	`CIRCLEQ_FIRST
((
hód
)), 
fõld
Ë(
ñm
); \

758 
	`CIRCLEQ_FIRST
((
hód
)Ë(
ñm
); \

759 } 0)

	)

761 
	#CIRCLEQ_INSERT_TAIL
(
hód
, 
ñm
, 
fõld
) do { \

762 
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
Ë(*)(
hód
); \

763 
	`CIRCLEQ_PREV
((
ñm
), 
fõld
Ë
	`CIRCLEQ_LAST
((
hód
)); \

764 i‡(
	`CIRCLEQ_FIRST
((
hód
)) == (*)(head)) \

765 
	`CIRCLEQ_FIRST
((
hód
)Ë(
ñm
); \

767 
	`CIRCLEQ_NEXT
(
	`CIRCLEQ_LAST
((
hód
)), 
fõld
Ë(
ñm
); \

768 
	`CIRCLEQ_LAST
((
hód
)Ë(
ñm
); \

769 } 0)

	)

771 
	#CIRCLEQ_LAST
(
hód
Ë((hód)->
cqh_œ°
)

	)

773 
	#CIRCLEQ_NEXT
(
ñm
,
fõld
Ë(”lm)->fõld.
cqe_√xt
)

	)

775 
	#CIRCLEQ_PREV
(
ñm
,
fõld
Ë(”lm)->fõld.
cqe_¥ev
)

	)

777 
	#CIRCLEQ_REMOVE
(
hód
, 
ñm
, 
fõld
) do { \

778 i‡(
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
Ë=(*)(
hód
)) \

779 
	`CIRCLEQ_LAST
((
hód
)Ë
	`CIRCLEQ_PREV
((
ñm
), 
fõld
); \

781 
	`CIRCLEQ_PREV
(
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
), field) = \

782 
	`CIRCLEQ_PREV
((
ñm
), 
fõld
); \

783 i‡(
	`CIRCLEQ_PREV
((
ñm
), 
fõld
Ë=(*)(
hód
)) \

784 
	`CIRCLEQ_FIRST
((
hód
)Ë
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
); \

786 
	`CIRCLEQ_NEXT
(
	`CIRCLEQ_PREV
((
ñm
), 
fõld
), field) = \

787 
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
); \

788 } 0)

	)

	@src/nc_rbtree.c

18 
	~<nc_c‹e.h
>

21 
	$rbåì_node_öô
(
rbnode
 *
node
)

23 
node
->
À·
 = 
NULL
;

24 
node
->
right
 = 
NULL
;

25 
node
->
∑ª¡
 = 
NULL
;

26 
node
->
key
 = 0ULL;

27 
node
->
d©a
 = 
NULL
;

29 
	}
}

32 
	$rbåì_öô
(
rbåì
 *
åì
, 
rbnode
 *
node
)

34 
	`rbåì_node_öô
(
node
);

35 
	`rbåì_bœck
(
node
);

36 
åì
->
roŸ
 = 
node
;

37 
åì
->
£¡öñ
 = 
node
;

38 
	}
}

40 
rbnode
 *

41 
	$rbåì_node_mö
(
rbnode
 *
node
, rbnodê*
£¡öñ
)

45 
node
->
À·
 !
£¡öñ
) {

46 
node
 =Çode->
À·
;

49  
node
;

50 
	}
}

52 
rbnode
 *

53 
	$rbåì_mö
(
rbåì
 *
åì
)

55 
rbnode
 *
node
 = 
åì
->
roŸ
;

56 
rbnode
 *
£¡öñ
 = 
åì
->sentinel;

60 i‡(
node
 =
£¡öñ
) {

61  
NULL
;

64  
	`rbåì_node_mö
(
node
, 
£¡öñ
);

65 
	}
}

68 
	$rbåì_À·_rŸ©e
(
rbnode
 **
roŸ
, rbnodê*
£¡öñ
,

69 
rbnode
 *
node
)

71 
rbnode
 *
ãmp
;

73 
ãmp
 = 
node
->
right
;

74 
node
->
right
 = 
ãmp
->
À·
;

76 i‡(
ãmp
->
À·
 !
£¡öñ
) {

77 
ãmp
->
À·
->
∑ª¡
 = 
node
;

80 
ãmp
->
∑ª¡
 = 
node
->parent;

82 i‡(
node
 =*
roŸ
) {

83 *
roŸ
 = 
ãmp
;

84 } i‡(
node
 =node->
∑ª¡
->
À·
) {

85 
node
->
∑ª¡
->
À·
 = 
ãmp
;

87 
node
->
∑ª¡
->
right
 = 
ãmp
;

90 
ãmp
->
À·
 = 
node
;

91 
node
->
∑ª¡
 = 
ãmp
;

92 
	}
}

95 
	$rbåì_right_rŸ©e
(
rbnode
 **
roŸ
, rbnodê*
£¡öñ
,

96 
rbnode
 *
node
)

98 
rbnode
 *
ãmp
;

100 
ãmp
 = 
node
->
À·
;

101 
node
->
À·
 = 
ãmp
->
right
;

103 i‡(
ãmp
->
right
 !
£¡öñ
) {

104 
ãmp
->
right
->
∑ª¡
 = 
node
;

107 
ãmp
->
∑ª¡
 = 
node
->parent;

109 i‡(
node
 =*
roŸ
) {

110 *
roŸ
 = 
ãmp
;

111 } i‡(
node
 =node->
∑ª¡
->
right
) {

112 
node
->
∑ª¡
->
right
 = 
ãmp
;

114 
node
->
∑ª¡
->
À·
 = 
ãmp
;

117 
ãmp
->
right
 = 
node
;

118 
node
->
∑ª¡
 = 
ãmp
;

119 
	}
}

122 
	$rbåì_ö£π
(
rbåì
 *
åì
, 
rbnode
 *
node
)

124 
rbnode
 **
roŸ
 = &
åì
->root;

125 
rbnode
 *
£¡öñ
 = 
åì
->sentinel;

126 
rbnode
 *
ãmp
, **
p
;

130 i‡(*
roŸ
 =
£¡öñ
) {

131 
node
->
∑ª¡
 = 
NULL
;

132 
node
->
À·
 = 
£¡öñ
;

133 
node
->
right
 = 
£¡öñ
;

134 
	`rbåì_bœck
(
node
);

135 *
roŸ
 = 
node
;

141 
ãmp
 = *
roŸ
;

144 
p
 = (
node
->
key
 < 
ãmp
->keyË? &ãmp->
À·
 : &ãmp->
right
;

145 i‡(*
p
 =
£¡öñ
) {

148 
ãmp
 = *
p
;

151 *
p
 = 
node
;

152 
node
->
∑ª¡
 = 
ãmp
;

153 
node
->
À·
 = 
£¡öñ
;

154 
node
->
right
 = 
£¡öñ
;

155 
	`rbåì_ªd
(
node
);

159 
node
 !*
roŸ
 && 
	`rbåì_is_ªd
“ode->
∑ª¡
)) {

161 i‡(
node
->
∑ª¡
 =node->∑ª¡->∑ª¡->
À·
) {

162 
ãmp
 = 
node
->
∑ª¡
->∑ª¡->
right
;

164 i‡(
	`rbåì_is_ªd
(
ãmp
)) {

165 
	`rbåì_bœck
(
node
->
∑ª¡
);

166 
	`rbåì_bœck
(
ãmp
);

167 
	`rbåì_ªd
(
node
->
∑ª¡
->parent);

168 
node
 =Çode->
∑ª¡
->parent;

170 i‡(
node
 =node->
∑ª¡
->
right
) {

171 
node
 =Çode->
∑ª¡
;

172 
	`rbåì_À·_rŸ©e
(
roŸ
, 
£¡öñ
, 
node
);

175 
	`rbåì_bœck
(
node
->
∑ª¡
);

176 
	`rbåì_ªd
(
node
->
∑ª¡
->parent);

177 
	`rbåì_right_rŸ©e
(
roŸ
, 
£¡öñ
, 
node
->
∑ª¡
->parent);

180 
ãmp
 = 
node
->
∑ª¡
->∑ª¡->
À·
;

182 i‡(
	`rbåì_is_ªd
(
ãmp
)) {

183 
	`rbåì_bœck
(
node
->
∑ª¡
);

184 
	`rbåì_bœck
(
ãmp
);

185 
	`rbåì_ªd
(
node
->
∑ª¡
->parent);

186 
node
 =Çode->
∑ª¡
->parent;

188 i‡(
node
 =node->
∑ª¡
->
À·
) {

189 
node
 =Çode->
∑ª¡
;

190 
	`rbåì_right_rŸ©e
(
roŸ
, 
£¡öñ
, 
node
);

193 
	`rbåì_bœck
(
node
->
∑ª¡
);

194 
	`rbåì_ªd
(
node
->
∑ª¡
->parent);

195 
	`rbåì_À·_rŸ©e
(
roŸ
, 
£¡öñ
, 
node
->
∑ª¡
->parent);

200 
	`rbåì_bœck
(*
roŸ
);

201 
	}
}

204 
	$rbåì_dñëe
(
rbåì
 *
åì
, 
rbnode
 *
node
)

206 
rbnode
 **
roŸ
 = &
åì
->root;

207 
rbnode
 *
£¡öñ
 = 
åì
->sentinel;

208 
rbnode
 *
sub°
, *
ãmp
, *
w
;

209 
uöt8_t
 
ªd
;

213 i‡(
node
->
À·
 =
£¡öñ
) {

214 
ãmp
 = 
node
->
right
;

215 
sub°
 = 
node
;

216 } i‡(
node
->
right
 =
£¡öñ
) {

217 
ãmp
 = 
node
->
À·
;

218 
sub°
 = 
node
;

220 
sub°
 = 
	`rbåì_node_mö
(
node
->
right
, 
£¡öñ
);

221 
ãmp
 = 
sub°
->
right
;

224 i‡(
sub°
 =*
roŸ
) {

225 *
roŸ
 = 
ãmp
;

226 
	`rbåì_bœck
(
ãmp
);

228 
	`rbåì_node_öô
(
node
);

233 
ªd
 = 
	`rbåì_is_ªd
(
sub°
);

235 i‡(
sub°
 =sub°->
∑ª¡
->
À·
) {

236 
sub°
->
∑ª¡
->
À·
 = 
ãmp
;

238 
sub°
->
∑ª¡
->
right
 = 
ãmp
;

241 i‡(
sub°
 =
node
) {

242 
ãmp
->
∑ª¡
 = 
sub°
->parent;

245 i‡(
sub°
->
∑ª¡
 =
node
) {

246 
ãmp
->
∑ª¡
 = 
sub°
;

248 
ãmp
->
∑ª¡
 = 
sub°
->parent;

251 
sub°
->
À·
 = 
node
->left;

252 
sub°
->
right
 = 
node
->right;

253 
sub°
->
∑ª¡
 = 
node
->parent;

254 
	`rbåì_c›y_cﬁ‹
(
sub°
, 
node
);

256 i‡(
node
 =*
roŸ
) {

257 *
roŸ
 = 
sub°
;

259 i‡(
node
 =node->
∑ª¡
->
À·
) {

260 
node
->
∑ª¡
->
À·
 = 
sub°
;

262 
node
->
∑ª¡
->
right
 = 
sub°
;

266 i‡(
sub°
->
À·
 !
£¡öñ
) {

267 
sub°
->
À·
->
∑ª¡
 = subst;

270 i‡(
sub°
->
right
 !
£¡öñ
) {

271 
sub°
->
right
->
∑ª¡
 = subst;

275 
	`rbåì_node_öô
(
node
);

277 i‡(
ªd
) {

283 
ãmp
 !*
roŸ
 && 
	`rbåì_is_bœck
(temp)) {

285 i‡(
ãmp
 =ãmp->
∑ª¡
->
À·
) {

286 
w
 = 
ãmp
->
∑ª¡
->
right
;

288 i‡(
	`rbåì_is_ªd
(
w
)) {

289 
	`rbåì_bœck
(
w
);

290 
	`rbåì_ªd
(
ãmp
->
∑ª¡
);

291 
	`rbåì_À·_rŸ©e
(
roŸ
, 
£¡öñ
, 
ãmp
->
∑ª¡
);

292 
w
 = 
ãmp
->
∑ª¡
->
right
;

295 i‡(
	`rbåì_is_bœck
(
w
->
À·
Ë&&Ñbåì_is_bœck(w->
right
)) {

296 
	`rbåì_ªd
(
w
);

297 
ãmp
 =Åemp->
∑ª¡
;

299 i‡(
	`rbåì_is_bœck
(
w
->
right
)) {

300 
	`rbåì_bœck
(
w
->
À·
);

301 
	`rbåì_ªd
(
w
);

302 
	`rbåì_right_rŸ©e
(
roŸ
, 
£¡öñ
, 
w
);

303 
w
 = 
ãmp
->
∑ª¡
->
right
;

306 
	`rbåì_c›y_cﬁ‹
(
w
, 
ãmp
->
∑ª¡
);

307 
	`rbåì_bœck
(
ãmp
->
∑ª¡
);

308 
	`rbåì_bœck
(
w
->
right
);

309 
	`rbåì_À·_rŸ©e
(
roŸ
, 
£¡öñ
, 
ãmp
->
∑ª¡
);

310 
ãmp
 = *
roŸ
;

314 
w
 = 
ãmp
->
∑ª¡
->
À·
;

316 i‡(
	`rbåì_is_ªd
(
w
)) {

317 
	`rbåì_bœck
(
w
);

318 
	`rbåì_ªd
(
ãmp
->
∑ª¡
);

319 
	`rbåì_right_rŸ©e
(
roŸ
, 
£¡öñ
, 
ãmp
->
∑ª¡
);

320 
w
 = 
ãmp
->
∑ª¡
->
À·
;

323 i‡(
	`rbåì_is_bœck
(
w
->
À·
Ë&&Ñbåì_is_bœck(w->
right
)) {

324 
	`rbåì_ªd
(
w
);

325 
ãmp
 =Åemp->
∑ª¡
;

327 i‡(
	`rbåì_is_bœck
(
w
->
À·
)) {

328 
	`rbåì_bœck
(
w
->
right
);

329 
	`rbåì_ªd
(
w
);

330 
	`rbåì_À·_rŸ©e
(
roŸ
, 
£¡öñ
, 
w
);

331 
w
 = 
ãmp
->
∑ª¡
->
À·
;

334 
	`rbåì_c›y_cﬁ‹
(
w
, 
ãmp
->
∑ª¡
);

335 
	`rbåì_bœck
(
ãmp
->
∑ª¡
);

336 
	`rbåì_bœck
(
w
->
À·
);

337 
	`rbåì_right_rŸ©e
(
roŸ
, 
£¡öñ
, 
ãmp
->
∑ª¡
);

338 
ãmp
 = *
roŸ
;

343 
	`rbåì_bœck
(
ãmp
);

344 
	}
}

	@src/nc_rbtree.h

18 #i‚de‡
_NC_RBTREE_


19 
	#_NC_RBTREE_


	)

21 
	#rbåì_ªd
(
_node
Ë((_node)->
cﬁ‹
 = 1)

	)

22 
	#rbåì_bœck
(
_node
Ë((_node)->
cﬁ‹
 = 0)

	)

23 
	#rbåì_is_ªd
(
_node
Ë((_node)->
cﬁ‹
)

	)

24 
	#rbåì_is_bœck
(
_node
Ë(!
	`rbåì_is_ªd
(_node))

	)

25 
	#rbåì_c›y_cﬁ‹
(
_n1
, 
_n2
Ë((_n1)->
cﬁ‹
 = (_n2)->cﬁ‹)

	)

27 
	srbnode
 {

28 
rbnode
 *
	mÀ·
;

29 
rbnode
 *
	mright
;

30 
rbnode
 *
	m∑ª¡
;

31 
öt64_t
 
	mkey
;

32 *
	md©a
;

33 
uöt8_t
 
	mcﬁ‹
;

36 
	srbåì
 {

37 
rbnode
 *
	mroŸ
;

38 
rbnode
 *
	m£¡öñ
;

41 
rbåì_node_öô
(
rbnode
 *
node
);

42 
rbåì_öô
(
rbåì
 *
åì
, 
rbnode
 *
node
);

43 
rbnode
 *
rbåì_mö
(
rbåì
 *
åì
);

44 
rbåì_ö£π
(
rbåì
 *
åì
, 
rbnode
 *
node
);

45 
rbåì_dñëe
(
rbåì
 *
åì
, 
rbnode
 *
node
);

	@src/nc_request.c

18 
	~<nc_c‹e.h
>

19 
	~<nc_£rvî.h
>

20 
	~<°dio.h
>

21 
msg
 *

22 
	$ªq_gë
(
c⁄n
 *conn)

24 
msg
 *msg;

26 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

28 
msg
 = 
	`msg_gë
(
c⁄n
, 
åue
, c⁄n->
ªdis
);

29 i‡(
msg
 =
NULL
) {

30 
c⁄n
->
îr
 = 
î∫o
;

34 
msg
->
time°amp
 = 
	`nc_now_us
();

35  
msg
;

36 
	}
}

39 
	$ªq_log
(
msg
 *
ªq
)

41 
msg
 *
r•
;

42 
öt64_t
 
ªq_time
;

43 *
≥î_°r
;

44 
uöt32_t
 
ªq_Àn
, 
r•_Àn
;

45 
°rög
 *
ªq_ty≥
;

46 
keypos
 *
kpos
;

48 i‡(
	`log_loggabÀ
(
LOG_NOTICE
) == 0) {

53 i‡(
ªq
->
‰ag_id
 !0 &&Ñeq->
‰ag_ow√r
 !=Ñeq) {

58 i‡(
ªq
->
mÀn
 == 0) {

66 i‡(
ªq
->
°¨t_ts
 == 0) {

70 
ªq_time
 = 
	`nc_u£c_now
(Ë- 
ªq
->
°¨t_ts
;

72 
r•
 = 
ªq
->
≥î
;

73 
ªq_Àn
 = 
ªq
->
mÀn
;

74 
r•_Àn
 = (
r•
 !
NULL
Ë?Ñ•->
mÀn
 : 0;

76 i‡(
	`¨øy_n
(
ªq
->
keys
) < 1) {

80 
kpos
 = 
	`¨øy_gë
(
ªq
->
keys
, 0);

81 i‡(
kpos
->
íd
 !
NULL
) {

82 *(
kpos
->
íd
) = '\0';

90 
≥î_°r
 = 
	`nc_uƒesﬁve_≥î_desc
(
ªq
->
ow√r
->
sd
);

92 
ªq_ty≥
 = 
	`msg_ty≥_°rög
(
ªq
->
ty≥
);

94 
	`log_debug
(
LOG_NOTICE
, "ªq %"
PRIu64
" d⁄ê⁄ c %dÑeq_timê%"
PRIi64
".%03"PRIi64

95 " m£¯ty≥ %.*†«rg %"
PRIu32
"Ñeq_len %"PRIu32"Ñsp_len %"PRIu32

97 
ªq
->
id
,Ñeq->
ow√r
->
sd
, 
ªq_time
 / 1000,Ñeq_time % 1000,

98 
ªq_ty≥
->
Àn
,Ñeq_ty≥->
d©a
, 
ªq
->
«rg
, 
ªq_Àn
, 
r•_Àn
,

99 
kpos
->
°¨t
, 
≥î_°r
, 
ªq
->
d⁄e
,Ñeq->
îr‹
);

100 
	}
}

103 
	$ªq_put
(
msg
 *msg)

105 
msg
 *
pmsg
;

107 
	`ASSERT
(
msg
->
ªque°
);

109 
	`ªq_log
(
msg
);

112 i‡(
msg
->
°¨t_ts
 > 0) {

113 
c⁄n
 *
c_c⁄n
 = (c⁄n*)
msg
->
ow√r
;

114 i‡(
c_c⁄n
){

115 
£rvî_poﬁ
 *
•
 = (£rvî_poﬁ*)
c_c⁄n
->
ow√r
;

116 i‡(
•
){

117 
c⁄ãxt
 *
˘x
 = 
•
->ctx;

118 i‡(
˘x
){

119 
öt64_t
 
œt_us
 = 
	`nc_u£c_now
(Ë- 
msg
->
°¨t_ts
;

120 
	`±hªad_muãx_lock
(&
˘x
->
hi°o_lock
);

121 
	`hdr_ªc‹d_vÆue
(
˘x
->
hi°ogøm
, 
œt_us
);

122 
	`±hªad_muãx_u∆ock
(&
˘x
->
hi°o_lock
);

128 
pmsg
 = 
msg
->
≥î
;

129 i‡(
pmsg
 !
NULL
) {

130 
	`ASSERT
(!
pmsg
->
ªque°
 &&Ömsg->
≥î
 =
msg
);

131 
msg
->
≥î
 = 
NULL
;

132 
pmsg
->
≥î
 = 
NULL
;

133 
	`r•_put
(
pmsg
);

136 
	`msg_tmo_dñëe
(
msg
);

138 
	`msg_put
(
msg
);

139 
	}
}

148 
boﬁ


149 
	$ªq_d⁄e
(
c⁄n
 *c⁄n, 
msg
 *msg)

151 
msg
 *
cmsg
, *
pmsg
;

152 
uöt64_t
 
id
;

153 
uöt32_t
 
n‰agmít
;

155 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

156 
	`ASSERT
(
msg
->
ªque°
);

158 i‡(!
msg
->
d⁄e
) {

159  
Ál£
;

162 
id
 = 
msg
->
‰ag_id
;

163 i‡(
id
 == 0) {

164  
åue
;

167 i‡(
msg
->
fd⁄e
) {

169  
åue
;

172 i‡(
msg
->
n‰ag_d⁄e
 < msg->
n‰ag
) {

173  
Ál£
;

178 
pmsg
 = 
msg
, 
cmsg
 = 
	`TAILQ_PREV
(msg, 
msg_tqh
, 
c_tqe
);

179 
cmsg
 !
NULL
 && cmsg->
‰ag_id
 =
id
;

180 
pmsg
 = 
cmsg
, cmsg = 
	`TAILQ_PREV
(cmsg, 
msg_tqh
, 
c_tqe
)) {

182 i‡(!
cmsg
->
d⁄e
) {

183  
Ál£
;

187 
pmsg
 = 
msg
, 
cmsg
 = 
	`TAILQ_NEXT
(msg, 
c_tqe
);

188 
cmsg
 !
NULL
 && cmsg->
‰ag_id
 =
id
;

189 
pmsg
 = 
cmsg
, cmsg = 
	`TAILQ_NEXT
(cmsg, 
c_tqe
)) {

191 i‡(!
cmsg
->
d⁄e
) {

192  
Ál£
;

204 
msg
->
fd⁄e
 = 1;

205 
n‰agmít
 = 0;

207 
pmsg
 = 
msg
, 
cmsg
 = 
	`TAILQ_PREV
(msg, 
msg_tqh
, 
c_tqe
);

208 
cmsg
 !
NULL
 && cmsg->
‰ag_id
 =
id
;

209 
pmsg
 = 
cmsg
, cmsg = 
	`TAILQ_PREV
(cmsg, 
msg_tqh
, 
c_tqe
)) {

210 
cmsg
->
fd⁄e
 = 1;

211 
n‰agmít
++;

214 
pmsg
 = 
msg
, 
cmsg
 = 
	`TAILQ_NEXT
(msg, 
c_tqe
);

215 
cmsg
 !
NULL
 && cmsg->
‰ag_id
 =
id
;

216 
pmsg
 = 
cmsg
, cmsg = 
	`TAILQ_NEXT
(cmsg, 
c_tqe
)) {

217 
cmsg
->
fd⁄e
 = 1;

218 
n‰agmít
++;

221 
	`ASSERT
(
msg
->
‰ag_ow√r
->
n‰ag
 =
n‰agmít
);

223 
msg
->
	`po°_cﬂÀs˚
(msg->
‰ag_ow√r
);

225 
	`log_debug
(
LOG_DEBUG
, "ªq from c %d wôh fid %"
PRIu64
"ánd %"
PRIu32
" "

226 "‰agmít†i†d⁄e", 
c⁄n
->
sd
, 
id
, 
n‰agmít
);

228  
åue
;

229 
	}
}

239 
boﬁ


240 
	$ªq_îr‹
(
c⁄n
 *c⁄n, 
msg
 *msg)

242 
msg
 *
cmsg
;

243 
uöt64_t
 
id
;

244 
uöt32_t
 
n‰agmít
;

246 
	`ASSERT
(
msg
->
ªque°
 && 
	`ªq_d⁄e
(
c⁄n
, msg));

248 i‡(
msg
->
îr‹
) {

249  
åue
;

252 
id
 = 
msg
->
‰ag_id
;

253 i‡(
id
 == 0) {

254  
Ál£
;

257 i‡(
msg
->
„º‹
) {

259  
åue
;

264 
cmsg
 = 
	`TAILQ_PREV
(
msg
, 
msg_tqh
, 
c_tqe
);

265 
cmsg
 !
NULL
 && cmsg->
‰ag_id
 =
id
;

266 
cmsg
 = 
	`TAILQ_PREV
(cmsg, 
msg_tqh
, 
c_tqe
)) {

268 i‡(
cmsg
->
îr‹
) {

269 
„º‹
;

273 
cmsg
 = 
	`TAILQ_NEXT
(
msg
, 
c_tqe
);

274 
cmsg
 !
NULL
 && cmsg->
‰ag_id
 =
id
;

275 
cmsg
 = 
	`TAILQ_NEXT
(cmsg, 
c_tqe
)) {

277 i‡(
cmsg
->
îr‹
) {

278 
„º‹
;

282  
Ál£
;

284 
„º‹
:

291 
msg
->
„º‹
 = 1;

292 
n‰agmít
 = 1;

294 
cmsg
 = 
	`TAILQ_PREV
(
msg
, 
msg_tqh
, 
c_tqe
);

295 
cmsg
 !
NULL
 && cmsg->
‰ag_id
 =
id
;

296 
cmsg
 = 
	`TAILQ_PREV
(cmsg, 
msg_tqh
, 
c_tqe
)) {

297 
cmsg
->
„º‹
 = 1;

298 
n‰agmít
++;

301 
cmsg
 = 
	`TAILQ_NEXT
(
msg
, 
c_tqe
);

302 
cmsg
 !
NULL
 && cmsg->
‰ag_id
 =
id
;

303 
cmsg
 = 
	`TAILQ_NEXT
(cmsg, 
c_tqe
)) {

304 
cmsg
->
„º‹
 = 1;

305 
n‰agmít
++;

308 
	`log_debug
(
LOG_DEBUG
, "ªq from c %d wôh fid %"
PRIu64
"ánd %"
PRIu32
" "

309 "‰agmít†i†öÉº‹", 
c⁄n
->
sd
, 
id
, 
n‰agmít
);

311  
åue
;

312 
	}
}

315 
	$ªq_£rvî_íqueue_imsgq
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

317 
	`ASSERT
(
msg
->
ªque°
);

318 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

328 i‡(!
msg
->
n‹ïly
) {

329 
	`msg_tmo_ö£π
(
msg
, 
c⁄n
);

332 
	`TAILQ_INSERT_TAIL
(&
c⁄n
->
imsg_q
, 
msg
, 
s_tqe
);

334 
	`°©s_£rvî_ö¸
(
˘x
, 
c⁄n
->
ow√r
, 
ö_queue
);

335 
	`°©s_£rvî_ö¸_by
(
˘x
, 
c⁄n
->
ow√r
, 
ö_queue_byãs
, 
msg
->
mÀn
);

336 
	}
}

339 
	$ªq_£rvî_íqueue_imsgq_hód
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

341 
	`ASSERT
(
msg
->
ªque°
);

342 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

352 i‡(!
msg
->
n‹ïly
) {

353 
	`msg_tmo_ö£π
(
msg
, 
c⁄n
);

356 
	`TAILQ_INSERT_HEAD
(&
c⁄n
->
imsg_q
, 
msg
, 
s_tqe
);

358 
	`°©s_£rvî_ö¸
(
˘x
, 
c⁄n
->
ow√r
, 
ö_queue
);

359 
	`°©s_£rvî_ö¸_by
(
˘x
, 
c⁄n
->
ow√r
, 
ö_queue_byãs
, 
msg
->
mÀn
);

360 
	}
}

363 
	$ªq_£rvî_dequeue_imsgq
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

365 
	`ASSERT
(
msg
->
ªque°
);

366 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

368 
	`TAILQ_REMOVE
(&
c⁄n
->
imsg_q
, 
msg
, 
s_tqe
);

370 
	`°©s_£rvî_de¸
(
˘x
, 
c⁄n
->
ow√r
, 
ö_queue
);

371 
	`°©s_£rvî_de¸_by
(
˘x
, 
c⁄n
->
ow√r
, 
ö_queue_byãs
, 
msg
->
mÀn
);

372 
	}
}

375 
	$ªq_˛õ¡_íqueue_omsgq
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

377 
	`ASSERT
(
msg
->
ªque°
);

378 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

380 
	`TAILQ_INSERT_TAIL
(&
c⁄n
->
omsg_q
, 
msg
, 
c_tqe
);

381 
	}
}

384 
	$ªq_£rvî_íqueue_omsgq
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

386 
	`ASSERT
(
msg
->
ªque°
);

387 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

389 
	`TAILQ_INSERT_TAIL
(&
c⁄n
->
omsg_q
, 
msg
, 
s_tqe
);

391 
	`°©s_£rvî_ö¸
(
˘x
, 
c⁄n
->
ow√r
, 
out_queue
);

392 
	`°©s_£rvî_ö¸_by
(
˘x
, 
c⁄n
->
ow√r
, 
out_queue_byãs
, 
msg
->
mÀn
);

393 
	}
}

396 
	$ªq_˛õ¡_dequeue_omsgq
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

398 
	`ASSERT
(
msg
->
ªque°
);

399 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

401 
	`TAILQ_REMOVE
(&
c⁄n
->
omsg_q
, 
msg
, 
c_tqe
);

402 
	}
}

405 
	$ªq_£rvî_dequeue_omsgq
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

407 
	`ASSERT
(
msg
->
ªque°
);

408 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

410 
	`msg_tmo_dñëe
(
msg
);

412 
	`TAILQ_REMOVE
(&
c⁄n
->
omsg_q
, 
msg
, 
s_tqe
);

414 
	`°©s_£rvî_de¸
(
˘x
, 
c⁄n
->
ow√r
, 
out_queue
);

415 
	`°©s_£rvî_de¸_by
(
˘x
, 
c⁄n
->
ow√r
, 
out_queue_byãs
, 
msg
->
mÀn
);

416 
	}
}

418 
msg
 *

419 
	$ªq_ªcv_√xt
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
boﬁ
 
Æloc
)

421 
msg
 *msg;

423 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

425 i‡(
c⁄n
->
eof
) {

426 
msg
 = 
c⁄n
->
rmsg
;

429 i‡(
msg
 !
NULL
) {

430 
c⁄n
->
rmsg
 = 
NULL
;

432 
	`ASSERT
(
msg
->
≥î
 =
NULL
);

433 
	`ASSERT
(
msg
->
ªque°
 && !msg->
d⁄e
);

435 
	`log_îr‹
("eo‡¯%d disˇrdög incom∂ëêªq %"
PRIu64
"Üen "

436 "%"
PRIu32
"", 
c⁄n
->
sd
, 
msg
->
id
, msg->
mÀn
);

438 
	`ªq_put
(
msg
);

448 i‡(!
c⁄n
->
	`a˘ive
(conn)) {

449 
c⁄n
->
d⁄e
 = 1;

450 
	`log_debug
(
LOG_INFO
, "¯%d i†d⁄e", 
c⁄n
->
sd
);

452  
NULL
;

455 
msg
 = 
c⁄n
->
rmsg
;

456 i‡(
msg
 !
NULL
) {

457 
	`ASSERT
(
msg
->
ªque°
);

458  
msg
;

461 i‡(!
Æloc
) {

462  
NULL
;

465 
msg
 = 
	`ªq_gë
(
c⁄n
);

466 i‡(
msg
 !
NULL
) {

467 
c⁄n
->
rmsg
 = 
msg
;

470  
msg
;

471 
	}
}

473 
r°©us_t


474 
	$ªq_make_ª∂y
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *
ªq
)

476 
msg
 *
r•
;

478 
r•
 = 
	`msg_gë
(
c⁄n
, 
Ál£
, c⁄n->
ªdis
);

479 i‡(
r•
 =
NULL
) {

480 
c⁄n
->
îr
 = 
î∫o
;

481  
NC_ENOMEM
;

484 
ªq
->
≥î
 = 
r•
;

485 
r•
->
≥î
 = 
ªq
;

486 
r•
->
ªque°
 = 0;

488 
ªq
->
d⁄e
 = 1;

489 
c⁄n
->
	`íqueue_outq
(
˘x
, c⁄n, 
ªq
);

491  
NC_OK
;

492 
	}
}

494 
boﬁ


495 
	$ªq_fûãr
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

497 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

499 i‡(
	`msg_em±y
(
msg
)) {

500 
	`ASSERT
(
c⁄n
->
rmsg
 =
NULL
);

501 
	`log_debug
(
LOG_VERB
, "fûã∏em±yÑeq %"
PRIu64
" from c %d", 
msg
->
id
,

502 
c⁄n
->
sd
);

503 
	`ªq_put
(
msg
);

504  
åue
;

512 i‡(
msg
->
quô
) {

513 
	`log_debug
(
LOG_INFO
, "fûã∏quôÑeq %"
PRIu64
" from c %d", 
msg
->
id
,

514 
c⁄n
->
sd
);

515 i‡(
c⁄n
->
rmsg
 !
NULL
) {

516 
	`log_debug
(
LOG_INFO
, "disˇrd invÆidÑeq %"
PRIu64
"Üí %"
PRIu32
" "

517 "‰om c %d síàa·î quôÑeq", 
c⁄n
->
rmsg
->
id
,

518 
c⁄n
->
rmsg
->
mÀn
, c⁄n->
sd
);

520 
c⁄n
->
eof
 = 1;

521 
c⁄n
->
ªcv_ªady
 = 0;

522 
	`ªq_put
(
msg
);

523  
åue
;

530 i‡(!
	`c⁄n_authítiˇãd
(
c⁄n
)) {

531 
msg
->
nof‹w¨d
 = 1;

534  
Ál£
;

535 
	}
}

538 
	$ªq_f‹w¨d_îr‹
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

540 
r°©us_t
 
°©us
;

542 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

544 
	`log_debug
(
LOG_INFO
, "f‹w¨dÑeq %"
PRIu64
"Üí %"
PRIu32
"Åype %d from "

545 "¯%d faûed: %s", 
msg
->
id
, msg->
mÀn
, msg->
ty≥
, 
c⁄n
->
sd
,

546 
	`°ªº‹
(
î∫o
));

548 
msg
->
d⁄e
 = 1;

549 
msg
->
îr‹
 = 1;

550 
msg
->
îr
 = 
î∫o
;

553 
	`°©s_poﬁ_ö¸
(
˘x
, 
c⁄n
->
ow√r
, 
f‹w¨d_îr‹
);

556 i‡(
msg
->
n‹ïly
) {

557 
	`ªq_put
(
msg
);

561 i‡(
	`ªq_d⁄e
(
c⁄n
, 
	`TAILQ_FIRST
(&c⁄n->
omsg_q
))) {

562 
°©us
 = 
	`evít_add_out
(
˘x
->
evb
, 
c⁄n
);

563 i‡(
°©us
 !
NC_OK
) {

564 
c⁄n
->
îr
 = 
î∫o
;

567 
	}
}

570 
	$ªq_f‹w¨d_°©s
(
c⁄ãxt
 *
˘x
, 
£rvî
 *£rvî, 
msg
 *msg)

572 
	`ASSERT
(
msg
->
ªque°
);

575 
uöt32_t
 
i
 = 0; i < 
	`¨øy_n
(
msg
->
keys
); i++) {

576 
	`°©s_£rvî_ö¸
(
˘x
, 
£rvî
, 
ªque°s
);

578 
	`°©s_£rvî_ö¸_by
(
˘x
, 
£rvî
, 
ªque°_byãs
, 
msg
->
mÀn
);

579 
	}
}

581 
boﬁ


582 
	$is_£rvî_c⁄n_wrôabÀ
(
c⁄n
* 
s_c⁄n
)

584 
£rvî
* 
§v
 = 
s_c⁄n
->
ow√r
;

585 
sh¨d
* 
sd
 = 
§v
->
ow√r_sh¨d
;

586  
sd
->
ˇn_wrôe
;

587 
	}
}

590 
	$ªq_f‹w¨d
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *
c_c⁄n
, 
msg
 *msg)

592 
r°©us_t
 
°©us
;

593 
c⁄n
 *
s_c⁄n
;

594 
£rvî_poﬁ
 *
poﬁ
;

595 
uöt8_t
 *
key
;

596 
uöt32_t
 
keyÀn
;

597 
keypos
 *
kpos
;

599 
	`ASSERT
(
c_c⁄n
->
˛õ¡
 && !c_c⁄n->
¥oxy
);

602 i‡(!
msg
->
n‹ïly
) {

603 
c_c⁄n
->
	`íqueue_outq
(
˘x
, c_c⁄n, 
msg
);

606 
poﬁ
 = 
c_c⁄n
->
ow√r
;

608 
	`ASSERT
(
	`¨øy_n
(
msg
->
keys
) > 0);

609 
kpos
 = 
	`¨øy_gë
(
msg
->
keys
, 0);

610 
key
 = 
kpos
->
°¨t
;

611 
keyÀn
 = (
uöt32_t
)(
kpos
->
íd
 - kpos->
°¨t
);

618 
	`±hªad_muãx_lock
(&
poﬁ
->
lock
);

619 
s_c⁄n
 = 
	`£rvî_poﬁ_c⁄n
(
˘x
, 
c_c⁄n
->
ow√r
, 
key
, 
keyÀn
);

620 
	`±hªad_muãx_u∆ock
(&
poﬁ
->
lock
);

621 i‡(
s_c⁄n
 =
NULL
) {

622 
	`ªq_f‹w¨d_îr‹
(
˘x
, 
c_c⁄n
, 
msg
);

626 
	`ASSERT
(!
s_c⁄n
->
˛õ¡
 && !s_c⁄n->
¥oxy
);

629 i‡(
msg
->
is_wrôe
 && !
	`is_£rvî_c⁄n_wrôabÀ
(
s_c⁄n
)) {

630 
	`log_debug
(
LOG_NOTICE
, "failá writeÑeqÅoÇon-writable shard.");

631 
	`ªq_f‹w¨d_îr‹
(
˘x
, 
c_c⁄n
, 
msg
);

636 i‡(
	`TAILQ_EMPTY
(&
s_c⁄n
->
imsg_q
)) {

637 
°©us
 = 
	`evít_add_out
(
˘x
->
evb
, 
s_c⁄n
);

638 i‡(
°©us
 !
NC_OK
) {

639 
	`ªq_f‹w¨d_îr‹
(
˘x
, 
c_c⁄n
, 
msg
);

640 
s_c⁄n
->
îr
 = 
î∫o
;

645 i‡(!
	`c⁄n_authítiˇãd
(
s_c⁄n
)) {

646 
°©us
 = 
msg
->
	`add_auth
(
˘x
, 
c_c⁄n
, 
s_c⁄n
);

647 i‡(
°©us
 !
NC_OK
) {

648 
	`ªq_f‹w¨d_îr‹
(
˘x
, 
c_c⁄n
, 
msg
);

649 
s_c⁄n
->
îr
 = 
î∫o
;

654 
s_c⁄n
->
	`íqueue_öq
(
˘x
, s_c⁄n, 
msg
);

656 
	`ªq_f‹w¨d_°©s
(
˘x
, 
s_c⁄n
->
ow√r
, 
msg
);

658 
	`log_debug
(
LOG_VERB
, "f‹w¨d from c %dÅÿ†%dÑeq %"
PRIu64
"Üí %"
PRIu32


659 "Åy≥ %d wôh key '%.*s'", 
c_c⁄n
->
sd
, 
s_c⁄n
->sd, 
msg
->
id
,

660 
msg
->
mÀn
, msg->
ty≥
, 
keyÀn
, 
key
);

661 
	}
}

664 
	$ªq_ªcv_d⁄e
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg,

665 
msg
 *
nmsg
)

667 
r°©us_t
 
°©us
;

668 
£rvî_poﬁ
 *
poﬁ
;

669 
msg_tqh
 
‰ag_msgq
;

670 
msg
 *
sub_msg
;

671 
msg
 *
tmsg
;

673 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

674 
	`ASSERT
(
msg
->
ªque°
);

675 
	`ASSERT
(
msg
->
ow√r
 =
c⁄n
);

676 
	`ASSERT
(
c⁄n
->
rmsg
 =
msg
);

677 
	`ASSERT
(
nmsg
 =
NULL
 ||Çmsg->
ªque°
);

680 
c⁄n
->
rmsg
 = 
nmsg
;

682 i‡(
	`ªq_fûãr
(
˘x
, 
c⁄n
, 
msg
)) {

686 i‡(
msg
->
nof‹w¨d
) {

687 
°©us
 = 
	`ªq_make_ª∂y
(
˘x
, 
c⁄n
, 
msg
);

688 i‡(
°©us
 !
NC_OK
) {

689 
c⁄n
->
îr
 = 
î∫o
;

693 
°©us
 = 
msg
->
	`ª∂y
(msg);

694 i‡(
°©us
 !
NC_OK
) {

695 
c⁄n
->
îr
 = 
î∫o
;

699 
°©us
 = 
	`evít_add_out
(
˘x
->
evb
, 
c⁄n
);

700 i‡(
°©us
 !
NC_OK
) {

701 
c⁄n
->
îr
 = 
î∫o
;

708 
poﬁ
 = 
c⁄n
->
ow√r
;

709 
	`TAILQ_INIT
(&
‰ag_msgq
);

710 
°©us
 = 
msg
->
	`‰agmít
(msg, 
poﬁ
->
nc⁄töuum
, &
‰ag_msgq
);

711 i‡(
°©us
 !
NC_OK
) {

712 i‡(!
msg
->
n‹ïly
) {

713 
c⁄n
->
	`íqueue_outq
(
˘x
, c⁄n, 
msg
);

715 
	`ªq_f‹w¨d_îr‹
(
˘x
, 
c⁄n
, 
msg
);

719 i‡(
	`TAILQ_EMPTY
(&
‰ag_msgq
)) {

720 
	`ªq_f‹w¨d
(
˘x
, 
c⁄n
, 
msg
);

724 
°©us
 = 
	`ªq_make_ª∂y
(
˘x
, 
c⁄n
, 
msg
);

725 i‡(
°©us
 !
NC_OK
) {

726 i‡(!
msg
->
n‹ïly
) {

727 
c⁄n
->
	`íqueue_outq
(
˘x
, c⁄n, 
msg
);

729 
	`ªq_f‹w¨d_îr‹
(
˘x
, 
c⁄n
, 
msg
);

732 
sub_msg
 = 
	`TAILQ_FIRST
(&
‰ag_msgq
); sub_msg !
NULL
; sub_msg = 
tmsg
) {

733 
tmsg
 = 
	`TAILQ_NEXT
(
sub_msg
, 
m_tqe
);

735 
	`TAILQ_REMOVE
(&
‰ag_msgq
, 
sub_msg
, 
m_tqe
);

736 
	`ªq_f‹w¨d
(
˘x
, 
c⁄n
, 
sub_msg
);

739 
	`ASSERT
(
	`TAILQ_EMPTY
(&
‰ag_msgq
));

741 
	}
}

743 
msg
 *

744 
	$ªq_£nd_√xt
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

746 
r°©us_t
 
°©us
;

747 
msg
 *msg, *
nmsg
;

749 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

751 i‡(
c⁄n
->
c⁄√˘ög
) {

752 
	`£rvî_c⁄√˘ed
(
˘x
, 
c⁄n
);

755 
nmsg
 = 
	`TAILQ_FIRST
(&
c⁄n
->
imsg_q
);

756 i‡(
nmsg
 =
NULL
) {

758 
°©us
 = 
	`evít_dñ_out
(
˘x
->
evb
, 
c⁄n
);

759 i‡(
°©us
 !
NC_OK
) {

760 
c⁄n
->
îr
 = 
î∫o
;

763  
NULL
;

766 
msg
 = 
c⁄n
->
smsg
;

767 i‡(
msg
 !
NULL
) {

768 
	`ASSERT
(
msg
->
ªque°
 && !msg->
d⁄e
);

769 
nmsg
 = 
	`TAILQ_NEXT
(
msg
, 
s_tqe
);

772 
c⁄n
->
smsg
 = 
nmsg
;

774 i‡(
nmsg
 =
NULL
) {

775  
NULL
;

778 
	`ASSERT
(
nmsg
->
ªque°
 && !nmsg->
d⁄e
);

780 
	`log_debug
(
LOG_VVERB
, "£ndÇexàªq %"
PRIu64
"Üí %"
PRIu32
"Åype %d on "

781 "†%d", 
nmsg
->
id
,Çmsg->
mÀn
,Çmsg->
ty≥
, 
c⁄n
->
sd
);

783  
nmsg
;

784 
	}
}

787 
	$ªq_£nd_d⁄e
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

789 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

790 
	`ASSERT
(
msg
 !
NULL
 && 
c⁄n
->
smsg
 == NULL);

791 
	`ASSERT
(
msg
->
ªque°
 && !msg->
d⁄e
);

792 
	`ASSERT
(
msg
->
ow√r
 !
c⁄n
);

794 
	`log_debug
(
LOG_VVERB
, "£nd d⁄êªq %"
PRIu64
"Üí %"
PRIu32
"Åype %d on "

795 "†%d", 
msg
->
id
, msg->
mÀn
, msg->
ty≥
, 
c⁄n
->
sd
);

798 
c⁄n
->
	`dequeue_öq
(
˘x
, c⁄n, 
msg
);

805 i‡(!
msg
->
n‹ïly
) {

806 
c⁄n
->
	`íqueue_outq
(
˘x
, c⁄n, 
msg
);

808 
	`ªq_put
(
msg
);

810 
	}
}

	@src/nc_response.c

18 
	~<nc_c‹e.h
>

19 
	~<nc_£rvî.h
>

21 
msg
 *

22 
	$r•_gë
(
c⁄n
 *conn)

24 
msg
 *msg;

26 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

28 
msg
 = 
	`msg_gë
(
c⁄n
, 
Ál£
, c⁄n->
ªdis
);

29 i‡(
msg
 =
NULL
) {

30 
c⁄n
->
îr
 = 
î∫o
;

34 
msg
->
time°amp
 = 
	`nc_now_us
();

35  
msg
;

36 
	}
}

39 
	$r•_put
(
msg
 *msg)

41 
	`ASSERT
(!
msg
->
ªque°
);

42 
	`ASSERT
(
msg
->
≥î
 =
NULL
);

43 
	`msg_put
(
msg
);

44 
	}
}

46 
msg
 *

47 
	$r•_make_îr‹
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

49 
msg
 *
pmsg
;

50 
msg
 *
cmsg
, *
nmsg
;

51 
uöt64_t
 
id
;

52 
îr_t
 
îr
;

54 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

55 
	`ASSERT
(
msg
->
ªque°
 && 
	`ªq_îr‹
(
c⁄n
, msg));

56 
	`ASSERT
(
msg
->
ow√r
 =
c⁄n
);

58 
id
 = 
msg
->
‰ag_id
;

59 i‡(
id
 != 0) {

60 
îr
 = 0, 
cmsg
 = 
	`TAILQ_NEXT
(
msg
, 
c_tqe
);

61 
cmsg
 !
NULL
 && cmsg->
‰ag_id
 =
id
;

62 
cmsg
 = 
nmsg
) {

63 
nmsg
 = 
	`TAILQ_NEXT
(
cmsg
, 
c_tqe
);

66 
c⁄n
->
	`dequeue_outq
(
˘x
, c⁄n, 
cmsg
);

67 i‡(
îr
 =0 && 
cmsg
->err != 0) {

68 
îr
 = 
cmsg
->err;

71 
	`ªq_put
(
cmsg
);

74 
îr
 = 
msg
->err;

77 
pmsg
 = 
msg
->
≥î
;

78 i‡(
pmsg
 !
NULL
) {

79 
	`ASSERT
(!
pmsg
->
ªque°
 &&Ömsg->
≥î
 =
msg
);

80 
msg
->
≥î
 = 
NULL
;

81 
pmsg
->
≥î
 = 
NULL
;

82 
	`r•_put
(
pmsg
);

85  
	`msg_gë_îr‹
(
c⁄n
->
ªdis
, 
îr
);

86 
	}
}

88 
msg
 *

89 
	$r•_ªcv_√xt
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
boﬁ
 
Æloc
)

91 
msg
 *msg;

93 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

95 i‡(
c⁄n
->
eof
) {

96 
msg
 = 
c⁄n
->
rmsg
;

99 i‡(
msg
 !
NULL
) {

100 
c⁄n
->
rmsg
 = 
NULL
;

102 
	`ASSERT
(
msg
->
≥î
 =
NULL
);

103 
	`ASSERT
(!
msg
->
ªque°
);

105 
	`log_îr‹
("eo‡†%d disˇrdög incom∂ëêr• %"
PRIu64
"Üen "

106 "%"
PRIu32
"", 
c⁄n
->
sd
, 
msg
->
id
, msg->
mÀn
);

108 
	`r•_put
(
msg
);

119 
c⁄n
->
d⁄e
 = 1;

120 
	`log_îr‹
("†%dá˘ivê%d i†d⁄e", 
c⁄n
->
sd
, c⁄n->
	`a˘ive
(conn));

122  
NULL
;

125 
msg
 = 
c⁄n
->
rmsg
;

126 i‡(
msg
 !
NULL
) {

127 
	`ASSERT
(!
msg
->
ªque°
);

128  
msg
;

131 i‡(!
Æloc
) {

132  
NULL
;

135 
msg
 = 
	`r•_gë
(
c⁄n
);

136 i‡(
msg
 !
NULL
) {

137 
c⁄n
->
rmsg
 = 
msg
;

140  
msg
;

141 
	}
}

143 
boﬁ


144 
	$r•_fûãr
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

146 
msg
 *
pmsg
;

148 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

150 i‡(
	`msg_em±y
(
msg
)) {

151 
	`ASSERT
(
c⁄n
->
rmsg
 =
NULL
);

152 
	`log_debug
(
LOG_VERB
, "fûã∏em±yÑ• %"
PRIu64
" o¿†%d", 
msg
->
id
,

153 
c⁄n
->
sd
);

154 
	`r•_put
(
msg
);

155  
åue
;

158 
pmsg
 = 
	`TAILQ_FIRST
(&
c⁄n
->
omsg_q
);

159 i‡(
pmsg
 =
NULL
) {

160 
	`log_debug
(
LOG_ERR
, "fûã∏°øyÑ• %"
PRIu64
"Üí %"
PRIu32
" on s %d",

161 
msg
->
id
, msg->
mÀn
, 
c⁄n
->
sd
);

162 
	`r•_put
(
msg
);

182 
c⁄n
->
îr
 = 
EINVAL
;

183 
c⁄n
->
d⁄e
 = 1;

184  
åue
;

186 
	`ASSERT
(
pmsg
->
≥î
 =
NULL
);

187 
	`ASSERT
(
pmsg
->
ªque°
 && !pmsg->
d⁄e
);

197 i‡(
msg
->
	`Áûuª
(msg)) {

198 
	`log_debug
(
LOG_INFO
, "£rvî faûuªÑ• %"
PRIu64
"Üí %"
PRIu32
" "

199 "ty≥ %d o¿†%d", 
msg
->
id
, msg->
mÀn
, msg->
ty≥
, 
c⁄n
->
sd
);

200 
	`r•_put
(
msg
);

202 
c⁄n
->
îr
 = 
EINVAL
;

203 
c⁄n
->
d⁄e
 = 1;

205  
åue
;

208 i‡(
pmsg
->
swÆlow
) {

209 
c⁄n
->
	`swÆlow_msg
(c⁄n, 
pmsg
, 
msg
);

211 
c⁄n
->
	`dequeue_outq
(
˘x
, c⁄n, 
pmsg
);

212 
pmsg
->
d⁄e
 = 1;

214 
	`log_debug
(
LOG_INFO
, "swÆlowÑ• %"
PRIu64
"Üí %"
PRIu32
" ofÑeq "

215 "%"
PRIu64
" o¿†%d", 
msg
->
id
, msg->
mÀn
, 
pmsg
->id,

216 
c⁄n
->
sd
);

218 
	`r•_put
(
msg
);

219 
	`ªq_put
(
pmsg
);

220  
åue
;

223  
Ál£
;

224 
	}
}

227 
	$r•_f‹w¨d_°©s
(
c⁄ãxt
 *
˘x
, 
£rvî
 *£rvî, 
msg
 *msg, 
uöt32_t
 
msgsize
)

229 
	`ASSERT
(!
msg
->
ªque°
);

231 
	`°©s_£rvî_ö¸
(
˘x
, 
£rvî
, 
ª•⁄£s
);

232 
	`°©s_£rvî_ö¸_by
(
˘x
, 
£rvî
, 
ª•⁄£_byãs
, 
msgsize
);

233 
	}
}

236 
	$r•_f‹w¨d
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *
s_c⁄n
, 
msg
 *msg)

238 
r°©us_t
 
°©us
;

239 
msg
 *
pmsg
;

240 
c⁄n
 *
c_c⁄n
;

241 
uöt32_t
 
msgsize
;

243 
	`ASSERT
(!
s_c⁄n
->
˛õ¡
 && !s_c⁄n->
¥oxy
);

244 
msgsize
 = 
msg
->
mÀn
;

247 
	`£rvî_ok
(
˘x
, 
s_c⁄n
);

250 
pmsg
 = 
	`TAILQ_FIRST
(&
s_c⁄n
->
omsg_q
);

251 
	`ASSERT
(
pmsg
 !
NULL
 &&Ömsg->
≥î
 == NULL);

252 
	`ASSERT
(
pmsg
->
ªque°
 && !pmsg->
d⁄e
);

254 
s_c⁄n
->
	`dequeue_outq
(
˘x
, s_c⁄n, 
pmsg
);

255 
pmsg
->
d⁄e
 = 1;

258 
pmsg
->
≥î
 = 
msg
;

259 
msg
->
≥î
 = 
pmsg
;

261 
msg
->
	`¥e_cﬂÀs˚
(msg);

263 
c_c⁄n
 = 
pmsg
->
ow√r
;

264 
	`ASSERT
(
c_c⁄n
->
˛õ¡
 && !c_c⁄n->
¥oxy
);

266 i‡(
	`ªq_d⁄e
(
c_c⁄n
, 
	`TAILQ_FIRST
(&c_c⁄n->
omsg_q
))) {

267 
°©us
 = 
	`evít_add_out
(
˘x
->
evb
, 
c_c⁄n
);

268 i‡(
°©us
 !
NC_OK
) {

269 
c_c⁄n
->
îr
 = 
î∫o
;

273 
	`r•_f‹w¨d_°©s
(
˘x
, 
s_c⁄n
->
ow√r
, 
msg
, 
msgsize
);

274 
	}
}

277 
	$r•_ªcv_d⁄e
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg,

278 
msg
 *
nmsg
)

280 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

281 
	`ASSERT
(
msg
 !
NULL
 && 
c⁄n
->
rmsg
 == msg);

282 
	`ASSERT
(!
msg
->
ªque°
);

283 
	`ASSERT
(
msg
->
ow√r
 =
c⁄n
);

284 
	`ASSERT
(
nmsg
 =
NULL
 || !nmsg->
ªque°
);

287 
c⁄n
->
rmsg
 = 
nmsg
;

289 i‡(
	`r•_fûãr
(
˘x
, 
c⁄n
, 
msg
)) {

293 
	`r•_f‹w¨d
(
˘x
, 
c⁄n
, 
msg
);

294 
	}
}

296 
msg
 *

297 
	$r•_£nd_√xt
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

299 
r°©us_t
 
°©us
;

300 
msg
 *msg, *
pmsg
;

302 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

304 
pmsg
 = 
	`TAILQ_FIRST
(&
c⁄n
->
omsg_q
);

305 i‡(
pmsg
 =
NULL
 || !
	`ªq_d⁄e
(
c⁄n
,Ömsg)) {

307 i‡(
pmsg
 =
NULL
 && 
c⁄n
->
eof
) {

308 
c⁄n
->
d⁄e
 = 1;

309 
	`log_debug
(
LOG_INFO
, "¯%d i†d⁄e", 
c⁄n
->
sd
);

312 
°©us
 = 
	`evít_dñ_out
(
˘x
->
evb
, 
c⁄n
);

313 i‡(
°©us
 !
NC_OK
) {

314 
c⁄n
->
îr
 = 
î∫o
;

317  
NULL
;

320 
msg
 = 
c⁄n
->
smsg
;

321 i‡(
msg
 !
NULL
) {

322 
	`ASSERT
(!
msg
->
ªque°
 && msg->
≥î
 !
NULL
);

323 
	`ASSERT
(
	`ªq_d⁄e
(
c⁄n
, 
msg
->
≥î
));

324 
pmsg
 = 
	`TAILQ_NEXT
(
msg
->
≥î
, 
c_tqe
);

327 i‡(
pmsg
 =
NULL
 || !
	`ªq_d⁄e
(
c⁄n
,Ömsg)) {

328 
c⁄n
->
smsg
 = 
NULL
;

329  
NULL
;

331 
	`ASSERT
(
pmsg
->
ªque°
 && !pmsg->
swÆlow
);

333 i‡(
	`ªq_îr‹
(
c⁄n
, 
pmsg
)) {

334 
msg
 = 
	`r•_make_îr‹
(
˘x
, 
c⁄n
, 
pmsg
);

335 i‡(
msg
 =
NULL
) {

336 
c⁄n
->
îr
 = 
î∫o
;

337  
NULL
;

339 
msg
->
≥î
 = 
pmsg
;

340 
pmsg
->
≥î
 = 
msg
;

341 
	`°©s_poﬁ_ö¸
(
˘x
, 
c⁄n
->
ow√r
, 
f‹w¨d_îr‹
);

343 
msg
 = 
pmsg
->
≥î
;

345 
	`ASSERT
(!
msg
->
ªque°
);

347 
c⁄n
->
smsg
 = 
msg
;

349 
	`log_debug
(
LOG_VVERB
, "£ndÇexàr• %"
PRIu64
" o¿¯%d", 
msg
->
id
, 
c⁄n
->
sd
);

351  
msg
;

352 
	}
}

355 
	$r•_£nd_d⁄e
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
msg
 *msg)

357 
msg
 *
pmsg
;

359 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

360 
	`ASSERT
(
c⁄n
->
smsg
 =
NULL
);

362 
	`log_debug
(
LOG_VVERB
, "£nd d⁄êr• %"
PRIu64
" o¿¯%d", 
msg
->
id
, 
c⁄n
->
sd
);

364 
pmsg
 = 
msg
->
≥î
;

366 
	`ASSERT
(!
msg
->
ªque°
 && 
pmsg
->request);

367 
	`ASSERT
(
pmsg
->
≥î
 =
msg
);

368 
	`ASSERT
(
pmsg
->
d⁄e
 && !pmsg->
swÆlow
);

371 
c⁄n
->
	`dequeue_outq
(
˘x
, c⁄n, 
pmsg
);

373 
	`ªq_put
(
pmsg
);

374 
	}
}

	@src/nc_server.c

18 
	~<°dlib.h
>

19 
	~<uni°d.h
>

21 
	~<nc_c‹e.h
>

22 
	~<nc_£rvî.h
>

23 
	~<nc_c⁄f.h
>

25 
sh¨d
*

26 
gë_sh¨d_‰om_key
(
£rvî_poﬁ
 *
poﬁ
, 
uöt8_t
 *
key
, 
uöt32_t
 
keyÀn
);

29 
	$£rvî_ªsﬁve
(
£rvî
 *£rvî, 
c⁄n
 *conn)

31 
r°©us_t
 
°©us
;

33 
°©us
 = 
	`nc_ªsﬁve
(&
£rvî
->
addr°r
, sîvî->
p‹t
, &£rvî->
öfo
);

34 i‡(
°©us
 !
NC_OK
) {

35 
c⁄n
->
îr
 = 
EHOSTDOWN
;

36 
c⁄n
->
d⁄e
 = 1;

40 
c⁄n
->
Ámûy
 = 
£rvî
->
öfo
.family;

41 
c⁄n
->
addæí
 = 
£rvî
->
öfo
.addrlen;

42 
c⁄n
->
addr
 = (
sockaddr
 *)&
£rvî
->
öfo
.addr;

43 
	}
}

46 
	$£rvî_ªf
(
c⁄n
 *c⁄n, *
ow√r
)

48 
£rvî
 *£rvî = 
ow√r
;

50 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

51 
	`ASSERT
(
c⁄n
->
ow√r
 =
NULL
);

53 
	`£rvî_ªsﬁve
(
£rvî
, 
c⁄n
);

55 
£rvî
->
ns_c⁄n_q
++;

56 
	`TAILQ_INSERT_TAIL
(&
£rvî
->
s_c⁄n_q
, 
c⁄n
, 
c⁄n_tqe
);

58 
c⁄n
->
ow√r
 = owner;

60 
	`log_debug
(
LOG_VVERB
, "ª‡c⁄¿%∞ow√∏%∞ötÿ'%.*s", 
c⁄n
, 
£rvî
,

61 
£rvî
->
≤ame
.
Àn
, sîvî->≤ame.
d©a
);

62 
	}
}

65 
	$£rvî_uƒef
(
c⁄n
 *conn)

67 
£rvî
 *server;

69 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

70 
	`ASSERT
(
c⁄n
->
ow√r
 !
NULL
);

72 
£rvî
 = 
c⁄n
->
ow√r
;

73 
c⁄n
->
ow√r
 = 
NULL
;

75 
	`ASSERT
(
£rvî
->
ns_c⁄n_q
 != 0);

76 
£rvî
->
ns_c⁄n_q
--;

77 
	`TAILQ_REMOVE
(&
£rvî
->
s_c⁄n_q
, 
c⁄n
, 
c⁄n_tqe
);

79 
	`log_debug
(
LOG_VVERB
, "uƒe‡c⁄¿%∞ow√∏%∞‰om '%.*s'", 
c⁄n
, 
£rvî
,

80 
£rvî
->
≤ame
.
Àn
, sîvî->≤ame.
d©a
);

81 
	}
}

84 
	$£rvî_timeout
(
c⁄n
 *conn)

86 
£rvî
 *server;

87 
£rvî_poﬁ
 *
poﬁ
;

89 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

91 
£rvî
 = 
c⁄n
->
ow√r
;

92 
poﬁ
 = 
£rvî
->
ow√r
;

94  
poﬁ
->
timeout
;

95 
	}
}

97 
boﬁ


98 
	$£rvî_a˘ive
(
c⁄n
 *conn)

100 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

102 i‡(!
	`TAILQ_EMPTY
(&
c⁄n
->
imsg_q
)) {

103 
	`log_debug
(
LOG_VVERB
, "†%d i†a˘ive", 
c⁄n
->
sd
);

104  
åue
;

107 i‡(!
	`TAILQ_EMPTY
(&
c⁄n
->
omsg_q
)) {

108 
	`log_debug
(
LOG_VVERB
, "†%d i†a˘ive", 
c⁄n
->
sd
);

109  
åue
;

112 i‡(
c⁄n
->
rmsg
 !
NULL
) {

113 
	`log_debug
(
LOG_VVERB
, "†%d i†a˘ive", 
c⁄n
->
sd
);

114  
åue
;

117 i‡(
c⁄n
->
smsg
 !
NULL
) {

118 
	`log_debug
(
LOG_VVERB
, "†%d i†a˘ive", 
c⁄n
->
sd
);

119  
åue
;

122 
	`log_debug
(
LOG_VVERB
, "†%d i†öa˘ive", 
c⁄n
->
sd
);

124  
Ál£
;

125 
	}
}

127 
r°©us_t


128 
	$£rvî_óch_£t_ow√r
(*
ñem
, *
d©a
)

130 
£rvî
 *
s
 = 
ñem
;

131 
£rvî_poﬁ
 *
•
 = 
d©a
;

133 
s
->
ow√r
 = 
•
;

135  
NC_OK
;

136 
	}
}

138 
r°©us_t


139 
	$£rvî_öô
(
¨øy
 *
£rvî
, ¨øy *
c⁄f_£rvî
,

140 
£rvî_poﬁ
 *
•
)

142 
r°©us_t
 
°©us
;

143 
uöt32_t
 
n£rvî
;

145 
n£rvî
 = 
	`¨øy_n
(
c⁄f_£rvî
);

146 
	`ASSERT
(
n£rvî
 != 0);

147 
	`ASSERT
(
	`¨øy_n
(
£rvî
) == 0);

149 
°©us
 = 
	`¨øy_öô
(
£rvî
, 
n£rvî
, (server));

150 i‡(
°©us
 !
NC_OK
) {

151  
°©us
;

155 
°©us
 = 
	`¨øy_óch
(
c⁄f_£rvî
, 
c⁄f_£rvî_óch_å™sf‹m
, 
£rvî
);

156 i‡(
°©us
 !
NC_OK
) {

157 
	`£rvî_deöô
(
£rvî
);

158  
°©us
;

160 
	`ASSERT
(
	`¨øy_n
(
£rvî
Ë=
n£rvî
);

163 
°©us
 = 
	`¨øy_óch
(
£rvî
, 
£rvî_óch_£t_ow√r
, 
•
);

164 i‡(
°©us
 !
NC_OK
) {

165 
	`£rvî_deöô
(
£rvî
);

166  
°©us
;

169 
	`log_debug
(
LOG_DEBUG
, "öô %"
PRIu32
" servers inÖool %"PRIu32" '%.*s'",

170 
n£rvî
, 
•
->
idx
, sp->
«me
.
Àn
, sp->«me.
d©a
);

172  
NC_OK
;

173 
	}
}

176 
	$£rvî_deöô
(
¨øy
 *
£rvî
)

178 
uöt32_t
 
i
, 
n£rvî
;

180 
i
 = 0, 
n£rvî
 = 
	`¨øy_n
(
£rvî
); i <Çserver; i++) {

181 
£rvî
 *
s
;

183 
s
 = 
	`¨øy_p›
(
£rvî
);

184 
	`ASSERT
(
	`TAILQ_EMPTY
(&
s
->
s_c⁄n_q
Ë&& s->
ns_c⁄n_q
 == 0);

186 
	`¨øy_deöô
(
£rvî
);

187 
	}
}

189 
c⁄n
 *

190 
	$£rvî_c⁄n
(
£rvî
 *server)

192 
£rvî_poﬁ
 *
poﬁ
;

193 
c⁄n
 *conn;

195 
poﬁ
 = 
£rvî
->
ow√r
;

203 i‡(
£rvî
->
ns_c⁄n_q
 < 
poﬁ
->
£rvî_c⁄√˘i⁄s
) {

204  
	`c⁄n_gë
(
£rvî
, 
Ál£
, 
poﬁ
->
ªdis
);

206 
	`ASSERT
(
£rvî
->
ns_c⁄n_q
 =
poﬁ
->
£rvî_c⁄√˘i⁄s
);

212 
c⁄n
 = 
	`TAILQ_FIRST
(&
£rvî
->
s_c⁄n_q
);

213 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

215 
	`TAILQ_REMOVE
(&
£rvî
->
s_c⁄n_q
, 
c⁄n
, 
c⁄n_tqe
);

216 
	`TAILQ_INSERT_TAIL
(&
£rvî
->
s_c⁄n_q
, 
c⁄n
, 
c⁄n_tqe
);

218  
c⁄n
;

219 
	}
}

221 
r°©us_t


222 
	$£rvî_óch_¥ec⁄√˘
(*
ñem
, *
d©a
)

224 
r°©us_t
 
°©us
;

225 
£rvî
 *server;

226 
£rvî_poﬁ
 *
poﬁ
;

227 
c⁄n
 *conn;

229 
£rvî
 = 
ñem
;

230 
poﬁ
 = 
£rvî
->
ow√r
;

232 
c⁄n
 = 
	`£rvî_c⁄n
(
£rvî
);

233 i‡(
c⁄n
 =
NULL
) {

234  
NC_ENOMEM
;

237 
°©us
 = 
	`£rvî_c⁄√˘
(
poﬁ
->
˘x
, 
£rvî
, 
c⁄n
);

238 i‡(
°©us
 !
NC_OK
) {

239 
	`log_w¨n
("connectÅo server '%.*s' failed, ignored: %s",

240 
£rvî
->
≤ame
.
Àn
, sîvî->≤ame.
d©a
, 
	`°ªº‹
(
î∫o
));

241 
	`£rvî_˛o£
(
poﬁ
->
˘x
, 
c⁄n
);

244  
NC_OK
;

245 
	}
}

247 
r°©us_t


248 
	$£rvî_óch_disc⁄√˘
(*
ñem
, *
d©a
)

250 
£rvî
 *server;

251 
£rvî_poﬁ
 *
poﬁ
;

253 
£rvî
 = 
ñem
;

254 
poﬁ
 = 
£rvî
->
ow√r
;

256 !
	`TAILQ_EMPTY
(&
£rvî
->
s_c⁄n_q
)) {

257 
c⁄n
 *conn;

259 
	`ASSERT
(
£rvî
->
ns_c⁄n_q
 > 0);

261 
c⁄n
 = 
	`TAILQ_FIRST
(&
£rvî
->
s_c⁄n_q
);

262 
c⁄n
->
	`˛o£
(
poﬁ
->
˘x
, conn);

265  
NC_OK
;

266 
	}
}

269 
	$£rvî_Áûuª
(
c⁄ãxt
 *
˘x
, 
£rvî
 *server)

271 
£rvî_poﬁ
 *
poﬁ
 = 
£rvî
->
ow√r
;

272 
öt64_t
 
now
, 
√xt
;

273 
r°©us_t
 
°©us
;

275 i‡(!
poﬁ
->
auto_eje˘_ho°s
) {

279 
£rvî
->
Áûuª_cou¡
++;

281 
	`log_debug
(
LOG_VERB
, "£rvî '%.*s' faûuª cou¡ %"
PRIu32
"Üimit %"PRIu32,

282 
£rvî
->
≤ame
.
Àn
, sîvî->≤ame.
d©a
, sîvî->
Áûuª_cou¡
,

283 
poﬁ
->
£rvî_Áûuª_limô
);

285 i‡(
£rvî
->
Áûuª_cou¡
 < 
poﬁ
->
£rvî_Áûuª_limô
) {

289 
now
 = 
	`nc_u£c_now
();

290 i‡(
now
 < 0) {

294 
	`°©s_£rvî_£t_ts
(
˘x
, 
£rvî
, 
£rvî_eje˘ed_©
, 
now
);

296 
√xt
 = 
now
 + 
poﬁ
->
£rvî_ªåy_timeout
;

298 
	`log_debug
(
LOG_INFO
, "upd©êpoﬁ %"
PRIu32
" '%.*s'Åo delete server '%.*s' "

299 "f‹Çexà%"
PRIu32
" secs", 
poﬁ
->
idx
,Öoﬁ->
«me
.
Àn
,

300 
poﬁ
->
«me
.
d©a
, 
£rvî
->
≤ame
.
Àn
, server->pname.data,

301 
poﬁ
->
£rvî_ªåy_timeout
 / 1000 / 1000);

303 
	`°©s_poﬁ_ö¸
(
˘x
, 
poﬁ
, 
£rvî_eje˘s
);

305 
£rvî
->
Áûuª_cou¡
 = 0;

306 
£rvî
->
√xt_ªåy
 = 
√xt
;

308 
°©us
 = 
	`£rvî_poﬁ_run
(
poﬁ
);

309 i‡(
°©us
 !
NC_OK
) {

310 
	`log_îr‹
("upd©ögÖoﬁ %"
PRIu32
" '%.*s' faûed: %s", 
poﬁ
->
idx
,

311 
poﬁ
->
«me
.
Àn
,Öoﬁ->«me.
d©a
, 
	`°ªº‹
(
î∫o
));

313 
	}
}

316 
	$£rvî_˛o£_°©s
(
c⁄ãxt
 *
˘x
, 
£rvî
 *£rvî, 
îr_t
 
îr
,

317 
eof
, 
c⁄√˘ed
)

319 i‡(
c⁄√˘ed
) {

320 
	`°©s_£rvî_de¸
(
˘x
, 
£rvî
, 
£rvî_c⁄√˘i⁄s
);

323 i‡(
eof
) {

324 
	`°©s_£rvî_ö¸
(
˘x
, 
£rvî
, 
£rvî_eof
);

328 
îr
) {

329 
ETIMEDOUT
:

330 
	`°©s_£rvî_ö¸
(
˘x
, 
£rvî
, 
£rvî_timedout
);

332 
EPIPE
:

333 
ECONNRESET
:

334 
ECONNABORTED
:

335 
ECONNREFUSED
:

336 
ENOTCONN
:

337 
ENETDOWN
:

338 
ENETUNREACH
:

339 
EHOSTDOWN
:

340 
EHOSTUNREACH
:

342 
	`°©s_£rvî_ö¸
(
˘x
, 
£rvî
, 
£rvî_îr
);

345 
	}
}

348 
	$£rvî_˛o£
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

350 
r°©us_t
 
°©us
;

351 
msg
 *msg, *
nmsg
;

352 
c⁄n
 *
c_c⁄n
;

354 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

356 
	`£rvî_˛o£_°©s
(
˘x
, 
c⁄n
->
ow√r
, c⁄n->
îr
, c⁄n->
eof
,

357 
c⁄n
->
c⁄√˘ed
);

359 
c⁄n
->
c⁄√˘ed
 = 
Ál£
;

361 i‡(
c⁄n
->
sd
 < 0) {

362 
	`£rvî_Áûuª
(
˘x
, 
c⁄n
->
ow√r
);

363 
c⁄n
->
	`uƒef
(conn);

364 
	`c⁄n_put
(
c⁄n
);

368 
msg
 = 
	`TAILQ_FIRST
(&
c⁄n
->
imsg_q
); msg !
NULL
; msg = 
nmsg
) {

369 
nmsg
 = 
	`TAILQ_NEXT
(
msg
, 
s_tqe
);

372 
c⁄n
->
	`dequeue_öq
(
˘x
, c⁄n, 
msg
);

379 i‡(
msg
->
swÆlow
 || msg->
n‹ïly
) {

380 
	`log_debug
(
LOG_INFO
, "˛o£ s %d swÆlowÑeq %"
PRIu64
"Üí %"
PRIu32


381 "Åy≥ %d", 
c⁄n
->
sd
, 
msg
->
id
, msg->
mÀn
, msg->
ty≥
);

382 
	`ªq_put
(
msg
);

384 
c_c⁄n
 = 
msg
->
ow√r
;

385 
	`ASSERT
(
c_c⁄n
->
˛õ¡
 && !c_c⁄n->
¥oxy
);

387 
msg
->
d⁄e
 = 1;

388 
msg
->
îr‹
 = 1;

389 
msg
->
îr
 = 
c⁄n
->err;

391 i‡(
msg
->
‰ag_ow√r
 !
NULL
) {

392 
msg
->
‰ag_ow√r
->
n‰ag_d⁄e
++;

395 i‡(
	`ªq_d⁄e
(
c_c⁄n
, 
	`TAILQ_FIRST
(&c_c⁄n->
omsg_q
))) {

396 
	`evít_add_out
(
˘x
->
evb
, 
msg
->
ow√r
);

399 
	`log_debug
(
LOG_INFO
, "˛o£ s %d scheduÀÉº‹ f‹Ñeq %"
PRIu64
" "

400 "À¿%"
PRIu32
"Åy≥ %d from c %d%¯%s", 
c⁄n
->
sd
, 
msg
->
id
,

401 
msg
->
mÀn
, msg->
ty≥
, 
c_c⁄n
->
sd
, 
c⁄n
->
îr
 ? ':' : ' ',

402 
c⁄n
->
îr
 ? 
	`°ªº‹
(conn->err): " ");

405 
	`ASSERT
(
	`TAILQ_EMPTY
(&
c⁄n
->
imsg_q
));

407 
msg
 = 
	`TAILQ_FIRST
(&
c⁄n
->
omsg_q
); msg !
NULL
; msg = 
nmsg
) {

408 
nmsg
 = 
	`TAILQ_NEXT
(
msg
, 
s_tqe
);

411 
c⁄n
->
	`dequeue_outq
(
˘x
, c⁄n, 
msg
);

413 i‡(
msg
->
swÆlow
) {

414 
	`log_debug
(
LOG_INFO
, "˛o£ s %d swÆlowÑeq %"
PRIu64
"Üí %"
PRIu32


415 "Åy≥ %d", 
c⁄n
->
sd
, 
msg
->
id
, msg->
mÀn
, msg->
ty≥
);

416 
	`ªq_put
(
msg
);

418 
c_c⁄n
 = 
msg
->
ow√r
;

419 
	`ASSERT
(
c_c⁄n
->
˛õ¡
 && !c_c⁄n->
¥oxy
);

421 
msg
->
d⁄e
 = 1;

422 
msg
->
îr‹
 = 1;

423 
msg
->
îr
 = 
c⁄n
->err;

424 i‡(
msg
->
‰ag_ow√r
 !
NULL
) {

425 
msg
->
‰ag_ow√r
->
n‰ag_d⁄e
++;

428 i‡(
	`ªq_d⁄e
(
c_c⁄n
, 
	`TAILQ_FIRST
(&c_c⁄n->
omsg_q
))) {

429 
	`evít_add_out
(
˘x
->
evb
, 
msg
->
ow√r
);

432 
	`log_debug
(
LOG_INFO
, "˛o£ s %d scheduÀÉº‹ f‹Ñeq %"
PRIu64
" "

433 "À¿%"
PRIu32
"Åy≥ %d from c %d%¯%s", 
c⁄n
->
sd
, 
msg
->
id
,

434 
msg
->
mÀn
, msg->
ty≥
, 
c_c⁄n
->
sd
, 
c⁄n
->
îr
 ? ':' : ' ',

435 
c⁄n
->
îr
 ? 
	`°ªº‹
(conn->err): " ");

438 
	`ASSERT
(
	`TAILQ_EMPTY
(&
c⁄n
->
omsg_q
));

440 
msg
 = 
c⁄n
->
rmsg
;

441 i‡(
msg
 !
NULL
) {

442 
c⁄n
->
rmsg
 = 
NULL
;

444 
	`ASSERT
(!
msg
->
ªque°
);

445 
	`ASSERT
(
msg
->
≥î
 =
NULL
);

447 
	`r•_put
(
msg
);

449 
	`log_debug
(
LOG_INFO
, "˛o£ s %d disˇrdögÑ• %"
PRIu64
"Üí %"
PRIu32
" "

450 "öÉº‹", 
c⁄n
->
sd
, 
msg
->
id
, msg->
mÀn
);

453 
	`ASSERT
(
c⁄n
->
smsg
 =
NULL
);

455 
	`£rvî_Áûuª
(
˘x
, 
c⁄n
->
ow√r
);

457 
c⁄n
->
	`uƒef
(conn);

459 
°©us
 = 
	`˛o£
(
c⁄n
->
sd
);

460 i‡(
°©us
 < 0) {

461 
	`log_îr‹
("˛o£ s %d faûed, ign‹ed: %s", 
c⁄n
->
sd
, 
	`°ªº‹
(
î∫o
));

463 
c⁄n
->
sd
 = -1;

465 
	`c⁄n_put
(
c⁄n
);

466 
	}
}

468 
r°©us_t


469 
	$£rvî_c⁄√˘
(
c⁄ãxt
 *
˘x
, 
£rvî
 *£rvî, 
c⁄n
 *conn)

471 
r°©us_t
 
°©us
;

473 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

475 i‡(
c⁄n
->
îr
) {

476 
	`ASSERT
(
c⁄n
->
d⁄e
 && c⁄n->
sd
 < 0);

477 
î∫o
 = 
c⁄n
->
îr
;

478  
NC_ERROR
;

481 i‡(
c⁄n
->
sd
 > 0) {

483  
NC_OK
;

486 
	`log_debug
(
LOG_VVERB
, "c⁄√˘Åÿ£rvî '%.*s'", 
£rvî
->
≤ame
.
Àn
,

487 
£rvî
->
≤ame
.
d©a
);

489 
c⁄n
->
sd
 = 
	`sockë
(c⁄n->
Ámûy
, 
SOCK_STREAM
, 0);

490 i‡(
c⁄n
->
sd
 < 0) {

491 
	`log_îr‹
("sockë f‹ sîvî '%.*s' faûed: %s", 
£rvî
->
≤ame
.
Àn
,

492 
£rvî
->
≤ame
.
d©a
, 
	`°ªº‹
(
î∫o
));

493 
°©us
 = 
NC_ERROR
;

494 
îr‹
;

497 
°©us
 = 
	`nc_£t_n⁄blockög
(
c⁄n
->
sd
);

498 i‡(
°©us
 !
NC_OK
) {

499 
	`log_îr‹
("setÇonblock on s %d for server '%.*s' failed: %s",

500 
c⁄n
->
sd
, 
£rvî
->
≤ame
.
Àn
, sîvî->≤ame.
d©a
,

501 
	`°ªº‹
(
î∫o
));

502 
îr‹
;

505 i‡(
£rvî
->
≤ame
.
d©a
[0] != '/') {

506 
°©us
 = 
	`nc_£t_t˝nodñay
(
c⁄n
->
sd
);

507 i‡(
°©us
 !
NC_OK
) {

508 
	`log_w¨n
("setÅcpnodelay on s %d for server '%.*s' failed, ignored: %s",

509 
c⁄n
->
sd
, 
£rvî
->
≤ame
.
Àn
, sîvî->≤ame.
d©a
,

510 
	`°ªº‹
(
î∫o
));

514 
°©us
 = 
	`evít_add_c⁄n
(
˘x
->
evb
, 
c⁄n
);

515 i‡(
°©us
 !
NC_OK
) {

516 
	`log_îr‹
("eventádd conn s %d for server '%.*s' failed: %s",

517 
c⁄n
->
sd
, 
£rvî
->
≤ame
.
Àn
, sîvî->≤ame.
d©a
,

518 
	`°ªº‹
(
î∫o
));

519 
îr‹
;

522 
	`ASSERT
(!
c⁄n
->
c⁄√˘ög
 && !c⁄n->
c⁄√˘ed
);

524 
°©us
 = 
	`c⁄√˘
(
c⁄n
->
sd
, c⁄n->
addr
, c⁄n->
addæí
);

525 i‡(
°©us
 !
NC_OK
) {

526 i‡(
î∫o
 =
EINPROGRESS
) {

527 
c⁄n
->
c⁄√˘ög
 = 1;

528 
	`log_debug
(
LOG_DEBUG
, "connecting on s %dÅo server '%.*s'",

529 
c⁄n
->
sd
, 
£rvî
->
≤ame
.
Àn
, sîvî->≤ame.
d©a
);

530  
NC_OK
;

533 
	`log_îr‹
("c⁄√˘ o¿†%dÅÿ£rvî '%.*s' faûed: %s", 
c⁄n
->
sd
,

534 
£rvî
->
≤ame
.
Àn
, sîvî->≤ame.
d©a
, 
	`°ªº‹
(
î∫o
));

536 
îr‹
;

539 
	`ASSERT
(!
c⁄n
->
c⁄√˘ög
);

540 
c⁄n
->
c⁄√˘ed
 = 1;

541 
	`log_debug
(
LOG_INFO
, "c⁄√˘ed o¿†%dÅÿ£rvî '%.*s'", 
c⁄n
->
sd
,

542 
£rvî
->
≤ame
.
Àn
, sîvî->≤ame.
d©a
);

544  
NC_OK
;

546 
îr‹
:

547 
c⁄n
->
îr
 = 
î∫o
;

548  
°©us
;

549 
	}
}

552 
	$£rvî_c⁄√˘ed
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

554 
£rvî
 *£rvî = 
c⁄n
->
ow√r
;

556 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

557 
	`ASSERT
(
c⁄n
->
c⁄√˘ög
 && !c⁄n->
c⁄√˘ed
);

559 
	`°©s_£rvî_ö¸
(
˘x
, 
£rvî
, 
£rvî_c⁄√˘i⁄s
);

561 
c⁄n
->
c⁄√˘ög
 = 0;

562 
c⁄n
->
c⁄√˘ed
 = 1;

564 
c⁄n
->
	`po°_c⁄√˘
(
˘x
, c⁄n, 
£rvî
);

566 
	`log_debug
(
LOG_INFO
, "c⁄√˘ed o¿†%dÅÿ£rvî '%.*s'", 
c⁄n
->
sd
,

567 
£rvî
->
≤ame
.
Àn
, sîvî->≤ame.
d©a
);

568 
	}
}

571 
	$£rvî_ok
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

573 
£rvî
 *£rvî = 
c⁄n
->
ow√r
;

575 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

576 
	`ASSERT
(
c⁄n
->
c⁄√˘ed
);

578 i‡(
£rvî
->
Áûuª_cou¡
 != 0) {

579 
	`log_debug
(
LOG_VERB
, "ª£à£rvî '%.*s' faûuª cou¡ from %"
PRIu32


580 "Åÿ0", 
£rvî
->
≤ame
.
Àn
, sîvî->≤ame.
d©a
,

581 
£rvî
->
Áûuª_cou¡
);

582 
£rvî
->
Áûuª_cou¡
 = 0;

583 
£rvî
->
√xt_ªåy
 = 0LL;

585 
	}
}

587 
r°©us_t


588 
	$£rvî_poﬁ_upd©e
(
£rvî_poﬁ
 *
poﬁ
)

590 
r°©us_t
 
°©us
;

591 
öt64_t
 
now
;

592 
uöt32_t
 
≤live_£rvî
;

594 i‡(!
poﬁ
->
auto_eje˘_ho°s
) {

595  
NC_OK
;

598 i‡(
poﬁ
->
√xt_ªbuûd
 == 0LL) {

599  
NC_OK
;

602 
now
 = 
	`nc_u£c_now
();

603 i‡(
now
 < 0) {

604  
NC_ERROR
;

607 i‡(
now
 <
poﬁ
->
√xt_ªbuûd
) {

608 i‡(
poﬁ
->
∆ive_£rvî
 == 0) {

609 
î∫o
 = 
ECONNREFUSED
;

610  
NC_ERROR
;

612  
NC_OK
;

615 
≤live_£rvî
 = 
poﬁ
->
∆ive_£rvî
;

617 
°©us
 = 
	`£rvî_poﬁ_run
(
poﬁ
);

618 i‡(
°©us
 !
NC_OK
) {

619 
	`log_îr‹
("upd©ögÖoﬁ %"
PRIu32
" wôh di° %d faûed: %s", 
poﬁ
->
idx
,

620 
poﬁ
->
di°_ty≥
, 
	`°ªº‹
(
î∫o
));

621  
°©us
;

624 
	`log_debug
(
LOG_INFO
, "upd©êpoﬁ %"
PRIu32
" '%.*s'Åoádd %"PRIu32" servers",

625 
poﬁ
->
idx
,Öoﬁ->
«me
.
Àn
,Öoﬁ->«me.
d©a
,

626 
poﬁ
->
∆ive_£rvî
 - 
≤live_£rvî
);

629  
NC_OK
;

630 
	}
}

632 
uöt32_t


633 
	$£rvî_poﬁ_hash
(
£rvî_poﬁ
 *
poﬁ
, 
uöt8_t
 *
key
, 
uöt32_t
 
keyÀn
)

635 
	`ASSERT
(
	`¨øy_n
(&
poﬁ
->
£rvî
) != 0);

636 
	`ASSERT
(
key
 !
NULL
);

638 i‡(
	`¨øy_n
(&
poﬁ
->
£rvî
) == 1) {

642 i‡(
keyÀn
 == 0) {

646  
poﬁ
->
	`key_hash
((*)
key
, 
keyÀn
);

647 
	}
}

649 
uöt32_t


650 
	$£rvî_poﬁ_idx
(
£rvî_poﬁ
 *
poﬁ
, 
uöt8_t
 *
key
, 
uöt32_t
 
keyÀn
)

652 
uöt32_t
 
hash
, 
idx
;

659 
	`ASSERT
(
key
 !
NULL
);

666 i‡(!
	`°rög_em±y
(&
poﬁ
->
hash_èg
)) {

667 
°rög
 *
èg
 = &
poﬁ
->
hash_èg
;

668 
uöt8_t
 *
èg_°¨t
, *
èg_íd
;

670 
èg_°¨t
 = 
	`nc_°rchr
(
key
, key + 
keyÀn
, 
èg
->
d©a
[0]);

671 i‡(
èg_°¨t
 !
NULL
) {

672 
èg_íd
 = 
	`nc_°rchr
(
èg_°¨t
 + 1, 
key
 + 
keyÀn
, 
èg
->
d©a
[1]);

673 i‡((
èg_íd
 !
NULL
Ë&& (èg_íd - 
èg_°¨t
 > 1)) {

674 
key
 = 
èg_°¨t
 + 1;

675 
keyÀn
 = (
uöt32_t
)(
èg_íd
 - 
key
);

681 
sh¨d
* 
sd
 = 
	`gë_sh¨d_‰om_key
(
poﬁ
, 
key
, 
keyÀn
);

682 
	`ASSERT
(
sd
 !
NULL
);

685  
sd
->
idx
;

689 
poﬁ
->
di°_ty≥
) {

690 
DIST_KETAMA
:

691 
hash
 = 
	`£rvî_poﬁ_hash
(
poﬁ
, 
key
, 
keyÀn
);

692 
idx
 = 
	`këama_di•©ch
(
poﬁ
->
c⁄töuum
,Öoﬁ->
nc⁄töuum
, 
hash
);

695 
DIST_MODULA
:

696 
hash
 = 
	`£rvî_poﬁ_hash
(
poﬁ
, 
key
, 
keyÀn
);

697 
idx
 = 
	`moduœ_di•©ch
(
poﬁ
->
c⁄töuum
,Öoﬁ->
nc⁄töuum
, 
hash
);

700 
DIST_RANDOM
:

701 
idx
 = 
	`øndom_di•©ch
(
poﬁ
->
c⁄töuum
,Öoﬁ->
nc⁄töuum
, 0);

705 
	`NOT_REACHED
();

708 
	`ASSERT
(
idx
 < 
	`¨øy_n
(&
poﬁ
->
£rvî
));

709  
idx
;

710 
	}
}

712 
£rvî
 *

713 
	$£rvî_poﬁ_£rvî
(
£rvî_poﬁ
 *
poﬁ
, 
uöt8_t
 *
key
, 
uöt32_t
 
keyÀn
)

715 
£rvî
 *server;

716 
uöt32_t
 
idx
;

718 
idx
 = 
	`£rvî_poﬁ_idx
(
poﬁ
, 
key
, 
keyÀn
);

719 
£rvî
 = 
	`¨øy_gë
(&
poﬁ
->£rvî, 
idx
);

721 
	`log_debug
(
LOG_VERB
, "key '%.*s' o¿di° %d m≠†tÿ£rvî '%.*s'", 
keyÀn
,

722 
key
, 
poﬁ
->
di°_ty≥
, 
£rvî
->
≤ame
.
Àn
, sîvî->≤ame.
d©a
);

724  
£rvî
;

725 
	}
}

728 
sh¨d
*

729 
	$gë_sh¨d_‰om_key
(
£rvî_poﬁ
 *
poﬁ
, 
uöt8_t
 *
key
, 
uöt32_t
 
keyÀn
)

731 
uöt32_t
 
nsh¨ds
 = 
	`¨øy_n
(&
poﬁ
->
sh¨ds
);

733 i‡(
nsh¨ds
 == 0) {

734  
NULL
;

737 i‡(
nsh¨ds
 =1 || 
keyÀn
 == 0) {

738 
	`log_debug
(
LOG_NOTICE
, "ˇ£ 1: key %†=> sh¨d %d", (*)
key
, 0);

739  (
sh¨d
*)
	`¨øy_gë
(&
poﬁ
->
sh¨ds
, 0);;

746 
uöt32_t
 
hv
 = 
	`hash_jíkös
((*)
key
, 
keyÀn
);

748 
hv
 = hv % 
poﬁ
->
sh¨d_ønge_max
;

749 i‡(
hv
 < 
poﬁ
->
sh¨d_ønge_mö
) {

750 
hv
 = 
poﬁ
->
sh¨d_ønge_mö
;

755 
uöt32_t
 
i
 = 0; i < 
nsh¨ds
; i++) {

756 
sh¨d
* 
sd
 = (sh¨d*)
	`¨øy_gë
(&
poﬁ
->
sh¨ds
, 
i
);

757 i‡(
sd
->
ønge_begö
 <
hv
 && hv <sd->
ønge_íd
) {

758 
	`log_debug
(
LOG_NOTICE
, "shard-search: key %s, hv %d, "

760 (*)
key
, 
hv
, 
nsh¨ds
, 
i
, 
sd
->
idx
);

761  
sd
;

764  
NULL
;

765 
	}
}

767 
c⁄n
 *

768 
	$£rvî_poﬁ_c⁄n
(
c⁄ãxt
 *
˘x
, 
£rvî_poﬁ
 *
poﬁ
, 
uöt8_t
 *
key
,

769 
uöt32_t
 
keyÀn
)

771 
r°©us_t
 
°©us
;

772 
£rvî
 *server;

773 
c⁄n
 *conn;

790 
sh¨d
* 
sd
 = 
	`gë_sh¨d_‰om_key
(
poﬁ
, 
key
, 
keyÀn
);

791 
	`ASSERT
(
sd
 !
NULL
);

793 
£rvî
 = 
sd
->
ma°î
;

794 i‡(!
£rvî
) {

795  
NULL
;

800 
c⁄n
 = 
	`£rvî_c⁄n
(
£rvî
);

801 i‡(
c⁄n
 =
NULL
) {

802  
NULL
;

805 
°©us
 = 
	`£rvî_c⁄√˘
(
˘x
, 
£rvî
, 
c⁄n
);

806 i‡(
°©us
 !
NC_OK
) {

807 
	`£rvî_˛o£
(
˘x
, 
c⁄n
);

808  
NULL
;

811  
c⁄n
;

812 
	}
}

814 
r°©us_t


815 
	$£rvî_poﬁ_óch_¥ec⁄√˘
(*
ñem
, *
d©a
)

817 
r°©us_t
 
°©us
;

818 
£rvî_poﬁ
 *
•
 = 
ñem
;

820 i‡(!
•
->
¥ec⁄√˘
) {

821  
NC_OK
;

826 i‡(
	`¨øy_n
(&
•
->
£rvî
) == 0) {

827  
NC_OK
;

830 
°©us
 = 
	`¨øy_óch
(&
•
->
£rvî
, 
£rvî_óch_¥ec⁄√˘
, 
NULL
);

831 i‡(
°©us
 !
NC_OK
) {

832  
°©us
;

835  
NC_OK
;

836 
	}
}

838 
r°©us_t


839 
	$£rvî_poﬁ_¥ec⁄√˘
(
c⁄ãxt
 *
˘x
)

841 
r°©us_t
 
°©us
;

843 
°©us
 = 
	`¨øy_óch
(&
˘x
->
poﬁ
, 
£rvî_poﬁ_óch_¥ec⁄√˘
, 
NULL
);

844 i‡(
°©us
 !
NC_OK
) {

845  
°©us
;

848  
NC_OK
;

849 
	}
}

851 
r°©us_t


852 
	$£rvî_poﬁ_óch_disc⁄√˘
(*
ñem
, *
d©a
)

854 
r°©us_t
 
°©us
;

855 
£rvî_poﬁ
 *
•
 = 
ñem
;

857 
°©us
 = 
	`¨øy_óch
(&
•
->
£rvî
, 
£rvî_óch_disc⁄√˘
, 
NULL
);

858 i‡(
°©us
 !
NC_OK
) {

859  
°©us
;

862  
NC_OK
;

863 
	}
}

866 
	$£rvî_poﬁ_disc⁄√˘
(
c⁄ãxt
 *
˘x
)

868 
	`¨øy_óch
(&
˘x
->
poﬁ
, 
£rvî_poﬁ_óch_disc⁄√˘
, 
NULL
);

869 
	}
}

871 
r°©us_t


872 
	$£rvî_poﬁ_óch_£t_ow√r
(*
ñem
, *
d©a
)

874 
£rvî_poﬁ
 *
•
 = 
ñem
;

875 
c⁄ãxt
 *
˘x
 = 
d©a
;

877 
•
->
˘x
 = ctx;

879  
NC_OK
;

880 
	}
}

882 
r°©us_t


883 
	$£rvî_poﬁ_óch_ˇlc_c⁄√˘i⁄s
(*
ñem
, *
d©a
)

885 
£rvî_poﬁ
 *
•
 = 
ñem
;

886 
c⁄ãxt
 *
˘x
 = 
d©a
;

888 
˘x
->
max_nsc⁄n
 +
•
->
£rvî_c⁄√˘i⁄s
 * 
	`¨øy_n
(&•->
£rvî
);

889 
˘x
->
max_nsc⁄n
 += 1;

891  
NC_OK
;

892 
	}
}

894 
r°©us_t


895 
	$£rvî_poﬁ_run
(
£rvî_poﬁ
 *
poﬁ
)

898  
NC_OK
;

899 
	`ASSERT
(
	`¨øy_n
(&
poﬁ
->
sh¨ds
) > 0 &&

900 
	`¨øy_n
(&
poﬁ
->
£rvî
) > 0);

901  
NC_OK
;

904 
	`ASSERT
(
	`¨øy_n
(&
poﬁ
->
£rvî
) != 0);

906 
poﬁ
->
di°_ty≥
) {

907 
DIST_KETAMA
:

908  
	`këama_upd©e
(
poﬁ
);

910 
DIST_MODULA
:

911  
	`moduœ_upd©e
(
poﬁ
);

913 
DIST_RANDOM
:

914  
	`øndom_upd©e
(
poﬁ
);

917 
	`NOT_REACHED
();

918  
NC_ERROR
;

921  
NC_OK
;

922 
	}
}

924 
r°©us_t


925 
	$£rvî_poﬁ_óch_run
(*
ñem
, *
d©a
)

927  
	`£rvî_poﬁ_run
(
ñem
);

928 
	}
}

933 
£rvî
*

934 
	$AddSîvîFromAddªssSåög
(
sh¨d
 *
sd
, *
ßddr
)

937 
uöt32_t
 
Àn
 = (uöt32_t)
	`°æí
(
ßddr
);

938 
uöt8_t
 *
s_«me
, *
s_p‹t
;

940 
uöt8_t
 *
dñim
 = 
	`nc_°rchr
((uöt8_t*)
ßddr
,

941 (
uöt8_t
*)(
ßddr
 + 
Àn
),

943 
	`ASSERT
(
dñim
 !
NULL
);

944 
s_«me
 = (
uöt8_t
*)
ßddr
;

945 
s_p‹t
 = 
dñim
 + 1;

948 
£rvî_poﬁ
 *
•
 = 
sd
->
ow√r
;

949 
£rvî
 *
§v
 = 
	`¨øy_push
(&
•
->server);

951 
	`ASSERT
(
§v
 !
NULL
);

952 
	`mem£t
(
§v
, 0, (*srv));

955 
§v
->
idx
 = 
	`¨øy_idx
(&
•
->
£rvî
, srv);

956 
§v
->
ow√r
 = 
•
;

957 
§v
->
ow√r_sh¨d
 = 
sd
;

959 
	`°rög_c›y
(&
§v
->
≤ame
, (c⁄° 
uöt8_t
*)
ßddr
, 
Àn
);

960 
	`°rög_c›y
(&
§v
->
«me
, (c⁄° 
uöt8_t
*)
ßddr
, 
Àn
);

961 
	`°rög_c›y
(&
§v
->
addr°r
,

962 (c⁄° 
uöt8_t
*)
ßddr
,

963 (
uöt32_t
)(
dñim
 - 
s_«me
));

964 
§v
->
p‹t
 = (
uöt16_t
)
	`nc_©oi
(
s_p‹t
, (
uöt32_t
)(
Àn
 - (
dñim
 + 1 - 
s_«me
)));

965 
§v
->
weight
 = 0;

967 
r°©us_t
 
°©us
 = 
	`nc_ªsﬁve
(&
§v
->
addr°r
, srv->
p‹t
, &§v->
öfo
);

968 i‡(
°©us
 !
NC_OK
) {

969 
	`°rög_deöô
(&
§v
->
≤ame
);

970 
	`°rög_deöô
(&
§v
->
«me
);

971 
	`°rög_deöô
(&
§v
->
addr°r
);

972 
	`¨øy_p›
(&
•
->
£rvî
);

973  
NULL
;

976 
§v
->
ns_c⁄n_q
 = 0;

977 
	`TAILQ_INIT
(&
§v
->
s_c⁄n_q
);

979 
§v
->
√xt_ªåy
 = 0LL;

980 
§v
->
Áûuª_cou¡
 = 0;

982  
§v
;

983 
	}
}

989 
	$add_£rvî_to_°©s
(
£rvî
 *
§v
, 
£rvî_poﬁ
 *
poﬁ
)

991 
c⁄ãxt
 *
˘x
 = 
poﬁ
->ctx;

993 
°©s_poﬁ
 *
°p
;

994 
°©s
 *
°
 = 
˘x
->stats;

996 i‡(
°
->
cuº_£rvîs
 >°->
max_Ælowed_£rvîs
) {

997 
	`log_îr‹
("stats curr servers %d >= max_allowed servers %d, cannotádd more",

998 
°
->
cuº_£rvîs
, st->
max_Ælowed_£rvîs
);

1002 
	`°©s_lock
(
°
);

1003 
°
->
cuº_£rvîs
++;

1005 
°p
 = 
	`¨øy_gë
(&
°
->
cuºít
, 
poﬁ
->
idx
);

1006 
	`add_£rvî_to_°©s_poﬁ
(
°p
, 
§v
);

1007 
°p
 = 
	`¨øy_gë
(&
°
->
shadow
, 
poﬁ
->
idx
);

1008 
	`add_£rvî_to_°©s_poﬁ
(
°p
, 
§v
);

1009 
°p
 = 
	`¨øy_gë
(&
°
->
sum
, 
poﬁ
->
idx
);

1010 
	`add_£rvî_to_°©s_poﬁ
(
°p
, 
§v
);

1012 
	`°©s_u∆ock
(
°
);

1013 
	}
}

1017 
	$Ma°îAddªssW©chî
(
zh™dÀ_t
 *
zkh
,

1018 
ty≥
,

1019 
°©e
,

1020 c⁄° *
∑th
,

1021 *
˘x
)

1023 
sh¨d
 *
§v_sd
 = (sh¨d *)
˘x
;

1024 
	`ASSERT
(
§v_sd
 !
NULL
);

1025 
£rvî_poﬁ
 *
poﬁ
 = 
§v_sd
->
ow√r
;

1026 
c⁄ãxt
 *
poﬁ_˘x
 = 
poﬁ
->
˘x
;

1027 
uöt32_t
 
poﬁ_idx
 = 
	`¨øy_idx
(&
poﬁ_˘x
->
poﬁ
,Öool);

1028 
	`ASSERT
(
poﬁ_idx
 =
poﬁ
->
idx
);

1030 
buÊí
 = 1000;

1031 
buf
[
buÊí
];

1032 
rc
;

1034 
	`log_îr‹
("Master Address Watcher gotÉvent %s, state %sátÖath %s",

1035 
	`Ty≥2Såög
(
ty≥
), 
	`Sèã2Såög
(
°©e
), 
∑th
);

1037 i‡(
ty≥
 =
ZOO_CREATED_EVENT
 ||

1038 
ty≥
 =
ZOO_CHANGED_EVENT
) {

1039 
	`mem£t
(
buf
, 0, (
size_t
)
buÊí
);

1040 
rc
 = 
	`ZKGë
(
zkh
, 
∑th
, 
buf
, 
buÊí
, 0, 1);

1041 i‡(
rc
 < 0) {

1042 
	`log_îr‹
("ªad %†Áûed!", 
∑th
);

1044 
£rvî
 *
cuº§v
 = 
§v_sd
->
ma°î
;

1045 i‡(
	`°æí
(
buf
Ë!(
size_t
)
cuº§v
->
«me
.
Àn
 ||

1046 
	`°∫cmp
(
buf
, (*)
cuº§v
->
«me
.
d©a
, 
	`°æí
(buf)) != 0) {

1049 
£rvî
 *
§v
 = 
	`AddSîvîFromAddªssSåög
(
§v_sd
, 
buf
);

1050 
	`add_£rvî_to_°©s
(
§v
, 
poﬁ
);

1068 
§v_sd
->
ma°î
 = 
§v
;

1069 i‡(!
§v_sd
->
ˇn_wrôe
) {

1070 
§v_sd
->
ˇn_wrôe
 = 1;

1073 
	`log_îr‹
("UseáÇew master %s for shard %s",

1074 
§v
->
≤ame
.
d©a
, 
∑th
);

1077 } i‡(
ty≥
 =
ZOO_DELETED_EVENT
) {

1081 
	`ZKSëExi°sW©ch
(
zkh
, (*)
∑th
, 
Ma°îAddªssW©chî
, 
˘x
);

1082 
	}
}

1087 
	$Ma°îSètusW©chî
(
zh™dÀ_t
 *
zkh
,

1088 
ty≥
,

1089 
°©e
,

1090 c⁄° *
∑th
,

1091 *
˘x
)

1093 
sh¨d
 *
§v_sd
 = (sh¨d *)
˘x
;

1094 
	`ASSERT
(
§v_sd
 !
NULL
);

1096 
buÊí
 = 1000;

1097 
buf
[
buÊí
];

1098 
rc
;

1100 
	`log_îr‹
("Status Watcher gotÉvent %s, state %sátÖath %s",

1101 
	`Ty≥2Såög
(
ty≥
), 
	`Sèã2Såög
(
°©e
), 
∑th
);

1102 i‡(
ty≥
 =
ZOO_CREATED_EVENT
 ||

1103 
ty≥
 =
ZOO_CHANGED_EVENT
) {

1104 
rc
 = 
	`ZKGë
(
zkh
, 
∑th
, 
buf
, 
buÊí
, 0, 1);

1105 i‡(
rc
 < 0) {

1106 
	`log_îr‹
("ªad %†Áûed!", 
∑th
);

1108 i‡(
	`°∫cmp
(
buf
, "draining", 8) == 0) {

1110 
§v_sd
->
ˇn_wrôe
 = 0;

1111 
	`log_îr‹
("Tu∫ sh¨d %†tÿªad-⁄ly.", 
∑th
);

1112 } i‡(
	`°∫cmp
(
buf
, "running", 7) == 0) {

1113 
§v_sd
->
ˇn_wrôe
 = 1;

1114 
	`log_îr‹
("Tu∫ sh¨d %†tÿªad-wrôe.", 
∑th
);

1117 } i‡(
ty≥
 =
ZOO_DELETED_EVENT
) {

1121 
	`ZKSëExi°sW©ch
(
zkh
, (*)
∑th
, 
Ma°îSètusW©chî
, 
˘x
);

1122 
	}
}

1131 
	$£t_w©ch_⁄_ma°î_°©us
(
¨øy
 *
£rvî_poﬁ
, 
c⁄ãxt
 *
˘x
)

1133 
buÊí
 = 5000;

1134 
zk∑th
[
buÊí
];

1135 
buf
[
buÊí
];

1136 
rc
;

1138 
uöt32_t
 
i
 = 0; i < 
	`¨øy_n
(
£rvî_poﬁ
); i++ ) {

1139 
£rvî_poﬁ
 *
•
 =

1140 (
£rvî_poﬁ
*)
	`¨øy_gë
(£rvî_poﬁ, 
i
);

1142 
uöt32_t
 
j
 = 0; j < 
	`¨øy_n
(&
•
->
sh¨ds
); j++ ) {

1143 
sh¨d
 *
§v_sd
 = (sh¨d*)
	`¨øy_gë
(&
•
->
sh¨ds
, 
j
);

1144 
£rvî
 *
§v
 = 
§v_sd
->
ma°î
;

1145 
	`ASSERT
(
§v
->
ow√r_sh¨d
 =
§v_sd
);

1152 
	`•rötf
(
zk∑th
, "%s/hosts/%s/status",

1153 
ZK_BASE
,

1154 
§v
->
«me
.
d©a
);

1156 
	`mem£t
(
buf
, 0, (
size_t
)
buÊí
);

1157 
rc
 = 
	`ZKGë
(
˘x
->
zkh
, 
zk∑th
, 
buf
, 
buÊí
, 0, 1);

1158 i‡(
rc
 <= 0) {

1159 
	`log_îr‹
("master %s statusÇon-exist: %s",

1160 
§v
->
«me
.
d©a
, 
zk∑th
);

1162 
	`log_debug
(
LOG_NOTICE
, "master %s status znode %s: %s",

1163 
§v
->
«me
.
d©a
, 
zk∑th
, 
buf
);

1166 
rc
 = 
	`ZKSëExi°sW©ch
(
˘x
->
zkh
, 
zk∑th
, 
Ma°îSètusW©chî
, 
§v_sd
);

1167 
	`log_debug
(
LOG_NOTICE
, "set watch on master %s status: %s",

1168 
§v
->
«me
.
d©a
, 
zk∑th
);

1171 
	`•rötf
(
zk∑th
, "%s/pools/%s/shards/%d:%d/master/addr",

1172 
ZK_BASE
,

1173 
•
->
«me
.
d©a
,

1174 
§v_sd
->
ønge_begö
,

1175 
§v_sd
->
ønge_íd
);

1176 
rc
 = 
	`ZKSëExi°sW©ch
(
˘x
->
zkh
, 
zk∑th
, 
Ma°îAddªssW©chî
, 
§v_sd
);

1177 
	`log_debug
(
LOG_NOTICE
, "set watch on master %sáddress: %s",

1178 
§v
->
«me
.
d©a
, 
zk∑th
);

1181 
	`•rötf
(
zk∑th
, "%s/pools/%s/proxies/%s",

1182 
ZK_BASE
, 
•
->
«me
.
d©a
, sp->
addr°r
.data);

1183 
rc
 = 
	`ZKCª©e
(
˘x
->
zkh
, 
zk∑th
, 
NULL
, -1, 
ZOO_EPHEMERAL
);

1184 
	`log_debug
(
LOG_NOTICE
, "createdÖroxy marker znode %s,Ñet %d",

1185 
zk∑th
, 
rc
);

1187 
	}
}

1189 
r°©us_t


1190 
	$£rvî_poﬁ_öô
(
¨øy
 *
£rvî_poﬁ
, ¨øy *
c⁄f_poﬁ
,

1191 
c⁄ãxt
 *
˘x
)

1193 
r°©us_t
 
°©us
;

1194 
uöt32_t
 
≈oﬁ
;

1196 
≈oﬁ
 = 
	`¨øy_n
(
c⁄f_poﬁ
);

1197 
	`ASSERT
(
≈oﬁ
 != 0);

1198 
	`ASSERT
(
	`¨øy_n
(
£rvî_poﬁ
) == 0);

1200 
°©us
 = 
	`¨øy_öô
(
£rvî_poﬁ
, 
≈oﬁ
, (server_pool));

1201 i‡(
°©us
 !
NC_OK
) {

1202  
°©us
;

1206 
°©us
 = 
	`¨øy_óch
(
c⁄f_poﬁ
, 
c⁄f_poﬁ_óch_å™sf‹m
, 
£rvî_poﬁ
);

1207 i‡(
°©us
 !
NC_OK
) {

1208 
	`£rvî_poﬁ_deöô
(
£rvî_poﬁ
);

1209  
°©us
;

1211 
	`ASSERT
(
	`¨øy_n
(
£rvî_poﬁ
Ë=
≈oﬁ
);

1214 
°©us
 = 
	`¨øy_óch
(
£rvî_poﬁ
, 
£rvî_poﬁ_óch_£t_ow√r
, 
˘x
);

1215 i‡(
°©us
 !
NC_OK
) {

1216 
	`£rvî_poﬁ_deöô
(
£rvî_poﬁ
);

1217  
°©us
;

1221 
˘x
->
max_nsc⁄n
 = 0;

1222 
°©us
 = 
	`¨øy_óch
(
£rvî_poﬁ
, 
£rvî_poﬁ_óch_ˇlc_c⁄√˘i⁄s
, 
˘x
);

1223 i‡(
°©us
 !
NC_OK
) {

1224 
	`£rvî_poﬁ_deöô
(
£rvî_poﬁ
);

1225  
°©us
;

1229 
°©us
 = 
	`¨øy_óch
(
£rvî_poﬁ
, 
£rvî_poﬁ_óch_run
, 
NULL
);

1230 i‡(
°©us
 !
NC_OK
) {

1231 
	`£rvî_poﬁ_deöô
(
£rvî_poﬁ
);

1232  
°©us
;

1237 
	`add_w©chî_⁄_c⁄f_poﬁ
(
˘x
);

1239 
	`log_debug
(
LOG_DEBUG
, "öô %"
PRIu32
"Öoﬁs", 
≈oﬁ
);

1241  
NC_OK
;

1242 
	}
}

1245 
	$£rvî_poﬁ_deöô
(
¨øy
 *
£rvî_poﬁ
)

1247 
uöt32_t
 
i
, 
≈oﬁ
;

1249 
i
 = 0, 
≈oﬁ
 = 
	`¨øy_n
(
£rvî_poﬁ
); i <Çpool; i++) {

1250 
£rvî_poﬁ
 *
•
;

1252 
•
 = 
	`¨øy_p›
(
£rvî_poﬁ
);

1253 
	`ASSERT
(
•
->
p_c⁄n
 =
NULL
);

1254 
	`ASSERT
(
	`TAILQ_EMPTY
(&
•
->
c_c⁄n_q
Ë&& sp->
nc_c⁄n_q
 == 0);

1256 i‡(
•
->
c⁄töuum
 !
NULL
) {

1257 
	`nc_‰ì
(
•
->
c⁄töuum
);

1258 
•
->
nc⁄töuum
 = 0;

1259 
•
->
n£rvî_c⁄töuum
 = 0;

1260 
•
->
∆ive_£rvî
 = 0;

1263 
	`£rvî_deöô
(&
•
->
£rvî
);

1265 
	`log_debug
(
LOG_DEBUG
, "deöôÖoﬁ %"
PRIu32
" '%.*s'", 
•
->
idx
,

1266 
•
->
«me
.
Àn
, sp->«me.
d©a
);

1269 
	`¨øy_deöô
(
£rvî_poﬁ
);

1271 
	`log_debug
(
LOG_DEBUG
, "deöô %"
PRIu32
"Öoﬁs", 
≈oﬁ
);

1272 
	}
}

1275 
	$dump_£rvî
(
£rvî
 *
§v
)

1277 
	`log_w¨n
("server %s (idx %d)",

1278 (*)
§v
->
«me
.
d©a
, srv->
idx
);

1279 
	}
}

1282 
	$dump_£rvî_sh¨d
(
sh¨d
 *
sd
)

1284 
£rvî
 *
ma°î
 = 
sd
->master;

1285 
	`log_w¨n
("shard %d [%d : %d]: have %d master, %d slaves, "

1287 
sd
->
idx
, sd->
ønge_begö
, sd->
ønge_íd
,

1288 
ma°î
 ? 1 : 0,

1289 
	`¨øy_n
(&
sd
->
¶aves
),

1290 
sd
->
ˇn_ªad
,

1291 
sd
->
ˇn_wrôe
);

1292 i‡(
ma°î
) {

1293 
	`log_w¨n
("master :");

1294 
	`dump_£rvî
(
ma°î
);

1297 
uöt32_t
 
i
 = 0; i < 
	`¨øy_n
(&
sd
->
¶aves
); i++) {

1298 
	`log_w¨n
("¶avê%d:", 
i
);

1299 
	`dump_£rvî
(*(
£rvî
**)
	`¨øy_gë
(&
sd
->
¶aves
, 
i
));

1301 
	}
}

1304 
	$dump_£rvî_poﬁ
(
£rvî_poﬁ
 *
•
)

1306 
	`log_w¨n
("");

1307 
	`log_w¨n
("pool %s (idx %d), have %d shards, %d servers",

1308 (*)
•
->
«me
.
d©a
, sp->
idx
,

1309 
	`¨øy_n
(&
•
->
sh¨ds
),áºay_n(&•->
£rvî
));

1310 
	`log_w¨n
("proxyáddr %s, shardÑange [%d : %d]",

1311 (*)
•
->
addr°r
.
d©a
,

1312 
•
->
sh¨d_ønge_mö
,

1313 
•
->
sh¨d_ønge_max
);

1315 
uöt32_t
 
i
 = 0; i < 
	`¨øy_n
(&
•
->
sh¨ds
); i++) {

1316 
	`log_w¨n
("poﬁ \"%s\" sh¨d %d ::", (*)
•
->
«me
.
d©a
, 
i
);

1317 
	`dump_£rvî_sh¨d
((
sh¨d
*)
	`¨øy_gë
(&
•
->
sh¨ds
, 
i
));

1320 
	`log_w¨n
("");

1322 
	}
}

	@src/nc_server.h

18 #i‚de‡
_NC_SERVER_H_


19 
	#_NC_SERVER_H_


	)

21 
	~<nc_c‹e.h
>

62 
	$uöt32_t
 (*
	thash_t
)(c⁄° *, 
	tsize_t
);

64 
	sc⁄töuum
 {

65 
uöt32_t
 
ödex
;

66 
uöt32_t
 
vÆue
;

69 
sh¨d
;

71 
	s£rvî
 {

72 
uöt32_t
 
idx
;

73 
£rvî_poﬁ
 *
ow√r
;

75 
°rög
 
≤ame
;

76 
°rög
 
«me
;

77 
°rög
 
addr°r
;

78 
uöt16_t
 
p‹t
;

79 
uöt32_t
 
weight
;

80 
socköfo
 
öfo
;

82 
uöt32_t
 
ns_c⁄n_q
;

83 
c⁄n_tqh
 
s_c⁄n_q
;

85 
öt64_t
 
√xt_ªåy
;

86 
uöt32_t
 
Áûuª_cou¡
;

88 
sh¨d
 *
ow√r_sh¨d
;

93 
	ssh¨d
 {

94 
uöt32_t
 
idx
;

95 
£rvî_poﬁ
 *
ow√r
;

97 
uöt32_t
 
ønge_begö
;

98 
uöt32_t
 
ønge_íd
;

100 
£rvî
 *
ma°î
;

101 
¨øy
 
¶aves
;

103 
ˇn_ªad
;

104 
ˇn_wrôe
;

107 
	s£rvî_poﬁ
 {

108 
uöt32_t
 
idx
;

109 
c⁄ãxt
 *
˘x
;

111 
c⁄n
 *
p_c⁄n
;

112 
uöt32_t
 
nc_c⁄n_q
;

113 
c⁄n_tqh
 
c_c⁄n_q
;

115 
¨øy
 
£rvî
;

116 
uöt32_t
 
nc⁄töuum
;

117 
uöt32_t
 
n£rvî_c⁄töuum
;

118 
c⁄töuum
 *continuum;

119 
uöt32_t
 
∆ive_£rvî
;

120 
öt64_t
 
√xt_ªbuûd
;

122 
°rög
 
«me
;

123 
°rög
 
addr°r
;

124 
uöt16_t
 
p‹t
;

125 
socköfo
 
öfo
;

126 
mode_t
 
≥rm
;

127 
di°_ty≥
;

128 
key_hash_ty≥
;

129 
hash_t
 
key_hash
;

130 
°rög
 
hash_èg
;

131 
timeout
;

132 
backlog
;

133 
ªdis_db
;

134 
uöt32_t
 
˛õ¡_c⁄√˘i⁄s
;

135 
uöt32_t
 
£rvî_c⁄√˘i⁄s
;

136 
öt64_t
 
£rvî_ªåy_timeout
;

137 
uöt32_t
 
£rvî_Áûuª_limô
;

138 
°rög
 
ªdis_auth
;

139 
ªquúe_auth
;

140 
auto_eje˘_ho°s
:1;

141 
¥ec⁄√˘
:1;

142 
ªdis
:1;

143 
t˝kì∑live
:1;

145 
uöt32_t
 
sh¨d_ønge_mö
;

146 
uöt32_t
 
sh¨d_ønge_max
;

147 
¨øy
 
sh¨ds
;

149 
±hªad_muãx_t
 
lock
;

152 
	`£rvî_ªf
(
c⁄n
 *c⁄n, *
ow√r
);

153 
	`£rvî_uƒef
(
c⁄n
 *conn);

154 
	`£rvî_timeout
(
c⁄n
 *conn);

155 
boﬁ
 
	`£rvî_a˘ive
(
c⁄n
 *conn);

156 
r°©us_t
 
	`£rvî_öô
(
¨øy
 *
£rvî
, ¨øy *
c⁄f_£rvî
, 
£rvî_poﬁ
 *
•
);

157 
	`£rvî_deöô
(
¨øy
 *
£rvî
);

158 
c⁄n
 *
	`£rvî_c⁄n
(
£rvî
 *server);

159 
r°©us_t
 
	`£rvî_c⁄√˘
(
c⁄ãxt
 *
˘x
, 
£rvî
 *£rvî, 
c⁄n
 *conn);

160 
	`£rvî_˛o£
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

161 
	`£rvî_c⁄√˘ed
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

162 
	`£rvî_ok
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

164 
uöt32_t
 
	`£rvî_poﬁ_idx
(
£rvî_poﬁ
 *
poﬁ
, 
uöt8_t
 *
key
, uöt32_à
keyÀn
);

165 
c⁄n
 *
	`£rvî_poﬁ_c⁄n
(
c⁄ãxt
 *
˘x
, 
£rvî_poﬁ
 *
poﬁ
, 
uöt8_t
 *
key
, 
uöt32_t
 
keyÀn
);

166 
r°©us_t
 
	`£rvî_poﬁ_run
(
£rvî_poﬁ
 *
poﬁ
);

167 
r°©us_t
 
	`£rvî_poﬁ_¥ec⁄√˘
(
c⁄ãxt
 *
˘x
);

168 
	`£rvî_poﬁ_disc⁄√˘
(
c⁄ãxt
 *
˘x
);

169 
r°©us_t
 
	`£rvî_poﬁ_öô
(
¨øy
 *
£rvî_poﬁ
, ¨øy *
c⁄f_poﬁ
, 
c⁄ãxt
 *
˘x
);

170 
	`£rvî_poﬁ_deöô
(
¨øy
 *
£rvî_poﬁ
);

171 
£rvî
 *
	`AddSîvîFromAddªssSåög
(
sh¨d
 *
sd
, *
ßddr
);

172 
	`add_£rvî_to_°©s
(
£rvî
 *
§v
, 
£rvî_poﬁ
 *
poﬁ
);

173 
	`dump_£rvî_poﬁ
(
£rvî_poﬁ
 *
•
);

174 
	`dump_sh¨d
(
sh¨d
 *
sd
);

175 
	`dump_£rvî
(
£rvî
 *
§v
);

	@src/nc_signal.c

18 
	~<°dlib.h
>

19 
	~<sig«l.h
>

21 
	~<nc_c‹e.h
>

22 
	~<nc_sig«l.h
>

24 
sig«l
 
	gsig«ls
[] = {

25 { 
SIGUSR1
, "SIGUSR1", 0, 
sig«l_h™dÀr
 },

26 { 
SIGUSR2
, "SIGUSR2", 0, 
sig«l_h™dÀr
 },

27 { 
SIGTTIN
, "SIGTTIN", 0, 
sig«l_h™dÀr
 },

28 { 
SIGTTOU
, "SIGTTOU", 0, 
sig«l_h™dÀr
 },

29 { 
SIGHUP
, "SIGHUP", 0, 
sig«l_h™dÀr
 },

30 { 
SIGINT
, "SIGINT", 0, 
sig«l_h™dÀr
 },

31 { 
SIGSEGV
, "SIGSEGV", ()
SA_RESETHAND
, 
sig«l_h™dÀr
 },

32 { 
SIGPIPE
, "SIGPIPE", 0, 
SIG_IGN
 },

33 { 0, 
NULL
, 0, NULL }

36 
r°©us_t


37 
	$sig«l_öô
()

39 
sig«l
 *
sig
;

41 
sig
 = 
sig«ls
; sig->
signo
 != 0; sig++) {

42 
r°©us_t
 
°©us
;

43 
siga˘i⁄
 
ß
;

45 
	`mem£t
(&
ß
, 0, (sa));

46 
ß
.
ß_h™dÀr
 = 
sig
->
h™dÀr
;

47 
ß
.
ß_Êags
 = 
sig
->
Êags
;

48 
	`sigem±y£t
(&
ß
.
ß_mask
);

50 
°©us
 = 
	`siga˘i⁄
(
sig
->
signo
, &
ß
, 
NULL
);

51 i‡(
°©us
 < 0) {

52 
	`log_îr‹
("siga˘i⁄(%sËÁûed: %s", 
sig
->
sig«me
,

53 
	`°ªº‹
(
î∫o
));

54  
NC_ERROR
;

58  
NC_OK
;

59 
	}
}

62 
	$sig«l_deöô
()

64 
	}
}

67 
	$sig«l_h™dÀr
(
signo
)

69 
sig«l
 *
sig
;

70 (*
a˘i⁄
)();

71 *
a˘i⁄°r
;

72 
boﬁ
 
d⁄e
;

74 
sig
 = 
sig«ls
; sig->
signo
 != 0; sig++) {

75 i‡(
sig
->
signo
 == signo) {

79 
	`ASSERT
(
sig
->
signo
 != 0);

81 
a˘i⁄°r
 = "";

82 
a˘i⁄
 = 
NULL
;

83 
d⁄e
 = 
Ál£
;

85 
signo
) {

86 
SIGUSR1
:

89 
SIGUSR2
:

92 
SIGTTIN
:

93 
a˘i⁄°r
 = ", upÜoggingÜevel";

94 
a˘i⁄
 = 
log_Àvñ_up
;

97 
SIGTTOU
:

98 
a˘i⁄°r
 = ", downÜoggingÜevel";

99 
a˘i⁄
 = 
log_Àvñ_down
;

102 
SIGHUP
:

103 
a˘i⁄°r
 = ",ÑeopeningÜog file";

104 
a˘i⁄
 = 
log_ª›í
;

107 
SIGINT
:

108 
d⁄e
 = 
åue
;

109 
a˘i⁄°r
 = ",Éxiting";

112 
SIGSEGV
:

113 
	`log_°ackåa˚
();

114 
a˘i⁄°r
 = ", core dumping";

115 
	`øi£
(
SIGSEGV
);

119 
	`NOT_REACHED
();

122 
	`log_ß„
("sig«»%d (%sËª˚ived%s", 
signo
, 
sig
->
sig«me
, 
a˘i⁄°r
);

124 i‡(
a˘i⁄
 !
NULL
) {

125 
	`a˘i⁄
();

128 i‡(
d⁄e
) {

129 
	`exô
(1);

131 
	}
}

	@src/nc_signal.h

18 #i‚de‡
_NC_SIGNAL_H_


19 
	#_NC_SIGNAL_H_


	)

21 
	~<nc_c‹e.h
>

23 
	ssig«l
 {

24 
	msigno
;

25 *
	msig«me
;

26 
	mÊags
;

27 (*
	mh™dÀr
)(
	msigno
);

30 
r°©us_t
 
sig«l_öô
();

31 
sig«l_deöô
();

32 
sig«l_h™dÀr
(
signo
);

	@src/nc_stats.c

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

20 
	~<uni°d.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<sys/sockë.h
>

24 
	~<√töë/ö.h
>

26 
	~<nc_c‹e.h
>

27 
	~<nc_£rvî.h
>

29 
	s°©s_desc
 {

30 *
	m«me
;

31 *
	mdesc
;

34 
	#DEFINE_ACTION
(
_«me
, 
_ty≥
, 
_desc
Ë{ .
ty≥
 = _ty≥, .
«me
 = 
	`°rög
(#_«meË},

	)

35 
°©s_mëric
 
	g°©s_poﬁ_codec
[] = {

36 
STATS_POOL_CODEC
–
DEFINE_ACTION
 )

39 
°©s_mëric
 
	g°©s_£rvî_codec
[] = {

40 
STATS_SERVER_CODEC
–
DEFINE_ACTION
 )

42 #unde‡
DEFINE_ACTION


44 
	#DEFINE_ACTION
(
_«me
, 
_ty≥
, 
_desc
Ë{ .
«me
 = #_«me, .
desc
 = _des¯},

	)

45 
°©s_desc
 
	g°©s_poﬁ_desc
[] = {

46 
STATS_POOL_CODEC
–
DEFINE_ACTION
 )

49 
°©s_desc
 
	g°©s_£rvî_desc
[] = {

50 
STATS_SERVER_CODEC
–
DEFINE_ACTION
 )

52 #unde‡
DEFINE_ACTION


55 
	$°©s_des¸ibe
()

57 
uöt32_t
 
i
;

59 
	`log_°dîr
("pool stats:");

60 
i
 = 0; i < 
	`NELEMS
(
°©s_poﬁ_desc
); i++) {

61 
	`log_°dîr
(" %-20s\"%s\"", 
°©s_poﬁ_desc
[
i
].
«me
,

62 
°©s_poﬁ_desc
[
i
].
desc
);

65 
	`log_°dîr
("");

67 
	`log_°dîr
("server stats:");

68 
i
 = 0; i < 
	`NELEMS
(
°©s_£rvî_desc
); i++) {

69 
	`log_°dîr
(" %-20s\"%s\"", 
°©s_£rvî_desc
[
i
].
«me
,

70 
°©s_£rvî_desc
[
i
].
desc
);

72 
	}
}

75 
	$°©s_mëric_öô
(
°©s_mëric
 *
°m
)

77 
°m
->
ty≥
) {

78 
STATS_COUNTER
:

79 
°m
->
vÆue
.
cou¡î
 = 0LL;

82 
STATS_GAUGE
:

83 
°m
->
vÆue
.
cou¡î
 = 0LL;

86 
STATS_TIMESTAMP
:

87 
°m
->
vÆue
.
time°amp
 = 0LL;

91 
	`NOT_REACHED
();

93 
	}
}

96 
	$°©s_mëric_ª£t
(
¨øy
 *
°©s_mëric
)

98 
uöt32_t
 
i
, 
nmëric
;

100 
nmëric
 = 
	`¨øy_n
(
°©s_mëric
);

101 
	`ASSERT
(
nmëric
 =
STATS_POOL_NFIELD
 ||Çmëri¯=
STATS_SERVER_NFIELD
);

103 
i
 = 0; i < 
nmëric
; i++) {

104 
°©s_mëric
 *
°m
 = 
	`¨øy_gë
(°©s_mëric, 
i
);

106 
	`°©s_mëric_öô
(
°m
);

108 
	}
}

110 
r°©us_t


111 
	$°©s_poﬁ_mëric_öô
(
¨øy
 *
°©s_mëric
)

113 
r°©us_t
 
°©us
;

114 
uöt32_t
 
i
, 
nfõld
 = 
STATS_POOL_NFIELD
;

116 
°©us
 = 
	`¨øy_öô
(
°©s_mëric
, 
nfõld
, (stats_metric));

117 i‡(
°©us
 !
NC_OK
) {

118  
°©us
;

121 
i
 = 0; i < 
nfõld
; i++) {

122 
°©s_mëric
 *
°m
 = 
	`¨øy_push
(stats_metric);

125 *
°m
 = 
°©s_poﬁ_codec
[
i
];

128 
	`°©s_mëric_öô
(
°m
);

131  
NC_OK
;

132 
	}
}

134 
r°©us_t


135 
	$°©s_£rvî_mëric_öô
(
°©s_£rvî
 *
°s
)

137 
r°©us_t
 
°©us
;

138 
uöt32_t
 
i
, 
nfõld
 = 
STATS_SERVER_NFIELD
;

140 
°©us
 = 
	`¨øy_öô
(&
°s
->
mëric
, 
nfõld
, (
°©s_mëric
));

141 i‡(
°©us
 !
NC_OK
) {

142  
°©us
;

145 
i
 = 0; i < 
nfõld
; i++) {

146 
°©s_mëric
 *
°m
 = 
	`¨øy_push
(&
°s
->
mëric
);

149 *
°m
 = 
°©s_£rvî_codec
[
i
];

152 
	`°©s_mëric_öô
(
°m
);

155  
NC_OK
;

156 
	}
}

159 
	$°©s_mëric_deöô
(
¨øy
 *
mëric
)

161 
uöt32_t
 
i
, 
nmëric
;

163 
nmëric
 = 
	`¨øy_n
(
mëric
);

164 
i
 = 0; i < 
nmëric
; i++) {

165 
	`¨øy_p›
(
mëric
);

167 
	`¨øy_deöô
(
mëric
);

168 
	}
}

170 
r°©us_t


171 
	$°©s_£rvî_öô
(
°©s_£rvî
 *
°s
, 
£rvî
 *
s
)

173 
r°©us_t
 
°©us
;

175 
°s
->
«me
 = 
s
->name;

176 
	`¨øy_nuŒ
(&
°s
->
mëric
);

178 
°©us
 = 
	`°©s_£rvî_mëric_öô
(
°s
);

179 i‡(
°©us
 !
NC_OK
) {

180  
°©us
;

183 
	`log_debug
(
LOG_VVVERB
, "öô sèt†£rvî '%.*s' wôh %"
PRIu32
" metric",

184 
°s
->
«me
.
Àn
, sts->«me.
d©a
, 
	`¨øy_n
(&°s->
mëric
));

186  
NC_OK
;

188 
	}
}

190 
r°©us_t


191 
	$add_£rvî_to_°©s_poﬁ
(
°©s_poﬁ
 *
°p
, 
£rvî
 *
§v
)

193 
r°©us_t
 
°©us
;

194 
°©s_£rvî
 *
°s
 = 
	`¨øy_push
(&
°p
->
£rvî
);

196 
°©us
 = 
	`°©s_£rvî_öô
(
°s
, 
§v
);

197 i‡(
°©us
 !
NC_OK
) {

198  
°©us
;

201  
°©us
;

202 
	}
}

204 
r°©us_t


205 
	$°©s_£rvî_m≠
(
¨øy
 *
°©s_£rvî
, ¨øy *
£rvî
)

207 
r°©us_t
 
°©us
;

208 
uöt32_t
 
i
, 
n£rvî
;

210 
n£rvî
 = 
	`¨øy_n
(
£rvî
);

213 
°©us
 = 
	`¨øy_öô
(
°©s_£rvî
, 
n£rvî
 + 4, (stats_server));

214 i‡(
°©us
 !
NC_OK
) {

215  
°©us
;

218 
i
 = 0; i < 
n£rvî
; i++) {

219 
£rvî
 *
s
 = 
	`¨øy_gë
(£rvî, 
i
);

220 
°©s_£rvî
 *
°s
 = 
	`¨øy_push
(stats_server);

222 
°©us
 = 
	`°©s_£rvî_öô
(
°s
, 
s
);

223 i‡(
°©us
 !
NC_OK
) {

224  
°©us
;

228 
	`log_debug
(
LOG_VVVERB
, "m≠ %"
PRIu32
" sèt†£rvîs", 
n£rvî
);

230  
NC_OK
;

231 
	}
}

234 
	$°©s_£rvî_unm≠
(
¨øy
 *
°©s_£rvî
)

236 
uöt32_t
 
i
, 
n£rvî
;

238 
n£rvî
 = 
	`¨øy_n
(
°©s_£rvî
);

240 
i
 = 0; i < 
n£rvî
; i++) {

241 
°©s_£rvî
 *
°s
 = 
	`¨øy_p›
(stats_server);

242 
	`°©s_mëric_deöô
(&
°s
->
mëric
);

244 
	`¨øy_deöô
(
°©s_£rvî
);

246 
	`log_debug
(
LOG_VVVERB
, "unm≠ %"
PRIu32
" sèt†£rvîs", 
n£rvî
);

247 
	}
}

249 
r°©us_t


250 
	$°©s_poﬁ_öô
(
°©s_poﬁ
 *
°p
, 
£rvî_poﬁ
 *
•
)

252 
r°©us_t
 
°©us
;

254 
°p
->
«me
 = 
•
->name;

255 
	`¨øy_nuŒ
(&
°p
->
mëric
);

256 
	`¨øy_nuŒ
(&
°p
->
£rvî
);

258 
°©us
 = 
	`°©s_poﬁ_mëric_öô
(&
°p
->
mëric
);

259 i‡(
°©us
 !
NC_OK
) {

260  
°©us
;

263 
°©us
 = 
	`°©s_£rvî_m≠
(&
°p
->
£rvî
, &
•
->server);

264 i‡(
°©us
 !
NC_OK
) {

265 
	`°©s_mëric_deöô
(&
°p
->
mëric
);

266  
°©us
;

269 
	`log_debug
(
LOG_VVVERB
, "öô sèt†poﬁ '%.*s' wôh %"
PRIu32
" metricánd "

270 "%"
PRIu32
" sîvî", 
°p
->
«me
.
Àn
, sç->«me.
d©a
,

271 
	`¨øy_n
(&
°p
->
mëric
),árray_n(&stp->metric));

273  
NC_OK
;

274 
	}
}

277 
	$°©s_poﬁ_ª£t
(
¨øy
 *
°©s_poﬁ
)

279 
uöt32_t
 
i
, 
≈oﬁ
;

281 
≈oﬁ
 = 
	`¨øy_n
(
°©s_poﬁ
);

283 
i
 = 0; i < 
≈oﬁ
; i++) {

284 
°©s_poﬁ
 *
°p
 = 
	`¨øy_gë
(°©s_poﬁ, 
i
);

285 
uöt32_t
 
j
, 
n£rvî
;

287 
	`°©s_mëric_ª£t
(&
°p
->
mëric
);

289 
n£rvî
 = 
	`¨øy_n
(&
°p
->
£rvî
);

290 
j
 = 0; j < 
n£rvî
; j++) {

291 
°©s_£rvî
 *
°s
 = 
	`¨øy_gë
(&
°p
->
£rvî
, 
j
);

292 
	`°©s_mëric_ª£t
(&
°s
->
mëric
);

295 
	}
}

297 
r°©us_t


298 
	$°©s_poﬁ_m≠
(
¨øy
 *
°©s_poﬁ
, ¨øy *
£rvî_poﬁ
)

300 
r°©us_t
 
°©us
;

301 
uöt32_t
 
i
, 
≈oﬁ
;

303 
≈oﬁ
 = 
	`¨øy_n
(
£rvî_poﬁ
);

304 
	`ASSERT
(
≈oﬁ
 != 0);

306 
°©us
 = 
	`¨øy_öô
(
°©s_poﬁ
, 
≈oﬁ
, (stats_pool));

307 i‡(
°©us
 !
NC_OK
) {

308  
°©us
;

311 
i
 = 0; i < 
≈oﬁ
; i++) {

312 
£rvî_poﬁ
 *
•
 = 
	`¨øy_gë
(£rvî_poﬁ, 
i
);

313 
°©s_poﬁ
 *
°p
 = 
	`¨øy_push
(stats_pool);

315 
°©us
 = 
	`°©s_poﬁ_öô
(
°p
, 
•
);

316 i‡(
°©us
 !
NC_OK
) {

317  
°©us
;

321 
	`log_debug
(
LOG_VVVERB
, "m≠ %"
PRIu32
" sèt†poﬁs", 
≈oﬁ
);

323  
NC_OK
;

324 
	}
}

327 
	$°©s_poﬁ_unm≠
(
¨øy
 *
°©s_poﬁ
)

329 
uöt32_t
 
i
, 
≈oﬁ
;

331 
≈oﬁ
 = 
	`¨øy_n
(
°©s_poﬁ
);

333 
i
 = 0; i < 
≈oﬁ
; i++) {

334 
°©s_poﬁ
 *
°p
 = 
	`¨øy_p›
(stats_pool);

335 
	`°©s_mëric_deöô
(&
°p
->
mëric
);

336 
	`°©s_£rvî_unm≠
(&
°p
->
£rvî
);

338 
	`¨øy_deöô
(
°©s_poﬁ
);

340 
	`log_debug
(
LOG_VVVERB
, "unm≠ %"
PRIu32
" sèt†poﬁ", 
≈oﬁ
);

341 
	}
}

343 
r°©us_t


344 
	$°©s_¸óã_buf
(
°©s
 *
°
)

346 
uöt32_t
 
öt64_max_digôs
 = 20;

347 
uöt32_t
 
key_vÆue_exåa
 = 8;

348 
uöt32_t
 
poﬁ_exåa
 = 8;

349 
uöt32_t
 
£rvî_exåa
 = 8;

350 
size_t
 
size
 = 0;

351 
uöt32_t
 
i
;

356 
size
 += 1;

358 
size
 +
°
->
£rvi˚_°r
.
Àn
;

359 
size
 +
°
->
£rvi˚
.
Àn
;

360 
size
 +
key_vÆue_exåa
;

362 
size
 +
°
->
sour˚_°r
.
Àn
;

363 
size
 +
°
->
sour˚
.
Àn
;

364 
size
 +
key_vÆue_exåa
;

366 
size
 +
°
->
vîsi⁄_°r
.
Àn
;

367 
size
 +
°
->
vîsi⁄
.
Àn
;

368 
size
 +
key_vÆue_exåa
;

370 
size
 +
°
->
u±ime_°r
.
Àn
;

371 
size
 +
öt64_max_digôs
;

372 
size
 +
key_vÆue_exåa
;

374 
size
 +
°
->
time°amp_°r
.
Àn
;

375 
size
 +
öt64_max_digôs
;

376 
size
 +
key_vÆue_exåa
;

378 
size
 +
°
->
¡ŸÆ_c⁄n_°r
.
Àn
;

379 
size
 +
öt64_max_digôs
;

380 
size
 +
key_vÆue_exåa
;

382 
size
 +
°
->
ncuº_c⁄n_°r
.
Àn
;

383 
size
 +
öt64_max_digôs
;

384 
size
 +
key_vÆue_exåa
;

387 
i
 = 0; i < 
	`¨øy_n
(&
°
->
sum
); i++) {

388 
°©s_poﬁ
 *
°p
 = 
	`¨øy_gë
(&
°
->
sum
, 
i
);

389 
uöt32_t
 
j
;

391 
size
 +
°p
->
«me
.
Àn
;

392 
size
 +
poﬁ_exåa
;

394 
j
 = 0; j < 
	`¨øy_n
(&
°p
->
mëric
); j++) {

395 
°©s_mëric
 *
°m
 = 
	`¨øy_gë
(&
°p
->
mëric
, 
j
);

397 
size
 +
°m
->
«me
.
Àn
;

398 
size
 +
öt64_max_digôs
;

399 
size
 +
key_vÆue_exåa
;

403 
j
 = 0; j < 
	`¨øy_n
(&
°p
->
£rvî
); j++) {

404 
°©s_£rvî
 *
°s
 = 
	`¨øy_gë
(&
°p
->
£rvî
, 
j
);

405 
uöt32_t
 
k
;

407 
size
 +
°s
->
«me
.
Àn
;

408 
size
 +
£rvî_exåa
;

410 
k
 = 0; k < 
	`¨øy_n
(&
°s
->
mëric
); k++) {

411 
°©s_mëric
 *
°m
 = 
	`¨øy_gë
(&
°s
->
mëric
, 
k
);

413 
size
 +
°m
->
«me
.
Àn
;

414 
size
 +
öt64_max_digôs
;

415 
size
 +
key_vÆue_exåa
;

418 
°
->
cuº_£rvîs
 +
	`¨øy_n
(&
°p
->
£rvî
);;

426 
size
 +
°
->
max_Ælowed_£rvîs
 * (40 + 
öt64_max_digôs
 + 
key_vÆue_exåa
);

429 
size
 += 2;

431 
size
 = 
	`NC_ALIGN
(size, 
NC_ALIGNMENT
);

433 
°
->
buf
.
d©a
 = 
	`nc_Æloc
(
size
);

434 i‡(
°
->
buf
.
d©a
 =
NULL
) {

435 
	`log_îr‹
("¸óã sèt†buf„∏o‡sizê%zu faûed: %s", 
size
,

436 
	`°ªº‹
(
î∫o
));

437  
NC_ENOMEM
;

439 
°
->
buf
.
size
 = size;

441 
	`log_debug
(
LOG_DEBUG
, "°©†buf„∏sizê%zu", 
size
);

443  
NC_OK
;

444 
	}
}

447 
	$°©s_de°roy_buf
(
°©s
 *
°
)

449 i‡(
°
->
buf
.
size
 != 0) {

450 
	`ASSERT
(
°
->
buf
.
d©a
 !
NULL
);

451 
	`nc_‰ì
(
°
->
buf
.
d©a
);

452 
°
->
buf
.
size
 = 0;

454 
	}
}

456 
r°©us_t


457 
	$°©s_add_°rög
(
°©s
 *
°
, 
°rög
 *
key
, °rög *
vÆ
)

459 
°©s_buf„r
 *
buf
;

460 
uöt8_t
 *
pos
;

461 
size_t
 
room
;

462 
n
;

464 
buf
 = &
°
->buf;

465 
pos
 = 
buf
->
d©a
 + buf->
Àn
;

466 
room
 = 
buf
->
size
 - buf->
Àn
 - 1;

468 
n
 = 
	`nc_¢¥ötf
(
pos
, 
room
, "\"%.*s\":\"%.*s\", ", 
key
->
Àn
, key->
d©a
,

469 
vÆ
->
Àn
, vÆ->
d©a
);

470 i‡(
n
 < 0 ||Ç >()
room
) {

471  
NC_ERROR
;

474 
buf
->
Àn
 +(
size_t
)
n
;

476  
NC_OK
;

477 
	}
}

479 
r°©us_t


480 
	$°©s_add_num
(
°©s
 *
°
, 
°rög
 *
key
, 
öt64_t
 
vÆ
)

482 
°©s_buf„r
 *
buf
;

483 
uöt8_t
 *
pos
;

484 
size_t
 
room
;

485 
n
;

487 
buf
 = &
°
->buf;

488 
pos
 = 
buf
->
d©a
 + buf->
Àn
;

489 
room
 = 
buf
->
size
 - buf->
Àn
 - 1;

491 
n
 = 
	`nc_¢¥ötf
(
pos
, 
room
, "\"%.*s\":%"
PRId64
", ", 
key
->
Àn
, key->
d©a
,

492 
vÆ
);

493 i‡(
n
 < 0 ||Ç >()
room
) {

494  
NC_ERROR
;

497 
buf
->
Àn
 +(
size_t
)
n
;

499  
NC_OK
;

500 
	}
}

502 
r°©us_t


503 
	$°©s_add_hódî
(
°©s
 *
°
)

505 
r°©us_t
 
°©us
;

506 
°©s_buf„r
 *
buf
;

507 
öt64_t
 
cur_ts
, 
u±ime
;

509 
buf
 = &
°
->buf;

510 
buf
->
d©a
[0] = '{';

511 
buf
->
Àn
 = 1;

513 
cur_ts
 = (
öt64_t
)
	`time
(
NULL
);

514 
u±ime
 = 
cur_ts
 - 
°
->
°¨t_ts
;

516 
°©us
 = 
	`°©s_add_°rög
(
°
, &°->
£rvi˚_°r
, &°->
£rvi˚
);

517 i‡(
°©us
 !
NC_OK
) {

518  
°©us
;

521 
°©us
 = 
	`°©s_add_°rög
(
°
, &°->
sour˚_°r
, &°->
sour˚
);

522 i‡(
°©us
 !
NC_OK
) {

523  
°©us
;

526 
°©us
 = 
	`°©s_add_°rög
(
°
, &°->
vîsi⁄_°r
, &°->
vîsi⁄
);

527 i‡(
°©us
 !
NC_OK
) {

528  
°©us
;

531 
°©us
 = 
	`°©s_add_num
(
°
, &°->
u±ime_°r
, 
u±ime
);

532 i‡(
°©us
 !
NC_OK
) {

533  
°©us
;

536 
°©us
 = 
	`°©s_add_num
(
°
, &°->
time°amp_°r
, 
cur_ts
);

537 i‡(
°©us
 !
NC_OK
) {

538  
°©us
;

541 
°©us
 = 
	`°©s_add_num
(
°
, &°->
¡ŸÆ_c⁄n_°r
, 
	`c⁄n_¡ŸÆ_c⁄n
());

542 i‡(
°©us
 !
NC_OK
) {

543  
°©us
;

546 
°©us
 = 
	`°©s_add_num
(
°
, &°->
ncuº_c⁄n_°r
, 
	`c⁄n_ncuº_c⁄n
());

547 i‡(
°©us
 !
NC_OK
) {

548  
°©us
;

551  
NC_OK
;

552 
	}
}

554 
r°©us_t


555 
	$°©s_add_foŸî
(
°©s
 *
°
)

557 
°©s_buf„r
 *
buf
;

558 
uöt8_t
 *
pos
;

560 
buf
 = &
°
->buf;

562 i‡(
buf
->
Àn
 =buf->
size
) {

563  
NC_ERROR
;

567 
pos
 = 
buf
->
d©a
 + buf->
Àn
 - 1;

568 
pos
[0] = '}';

569 
pos
[1] = '\n';

570 
buf
->
Àn
 += 1;

572  
NC_OK
;

573 
	}
}

575 
r°©us_t


576 
	$°©s_begö_√°ög
(
°©s
 *
°
, 
°rög
 *
key
)

578 
°©s_buf„r
 *
buf
;

579 
uöt8_t
 *
pos
;

580 
size_t
 
room
;

581 
n
;

583 
buf
 = &
°
->buf;

584 
pos
 = 
buf
->
d©a
 + buf->
Àn
;

585 
room
 = 
buf
->
size
 - buf->
Àn
 - 1;

587 
n
 = 
	`nc_¢¥ötf
(
pos
, 
room
, "\"%.*s\": {", 
key
->
Àn
, key->
d©a
);

588 i‡(
n
 < 0 ||Ç >()
room
) {

589  
NC_ERROR
;

592 
buf
->
Àn
 +(
size_t
)
n
;

594  
NC_OK
;

595 
	}
}

597 
r°©us_t


598 
	$°©s_íd_√°ög
(
°©s
 *
°
)

600 
°©s_buf„r
 *
buf
;

601 
uöt8_t
 *
pos
;

603 
buf
 = &
°
->buf;

604 
pos
 = 
buf
->
d©a
 + buf->
Àn
;

606 
pos
 -= 2;

608 
pos
[0]) {

611 
	`ASSERT
(
pos
[1] == ' ');

612 
pos
[0] = '}';

613 
pos
[1] = ',';

617 i‡(
buf
->
Àn
 =buf->
size
) {

618  
NC_ERROR
;

621 
	`ASSERT
(
pos
[1] == ',');

622 
pos
[1] = '}';

623 
pos
[2] = ',';

624 
buf
->
Àn
 += 1;

628 
	`NOT_REACHED
();

631  
NC_OK
;

632 
	}
}

634 
r°©us_t


635 
	$°©s_c›y_mëric
(
°©s
 *
°
, 
¨øy
 *
mëric
)

637 
r°©us_t
 
°©us
;

638 
uöt32_t
 
i
;

640 
i
 = 0; i < 
	`¨øy_n
(
mëric
); i++) {

641 
°©s_mëric
 *
°m
 = 
	`¨øy_gë
(
mëric
, 
i
);

643 
°©us
 = 
	`°©s_add_num
(
°
, &
°m
->
«me
, stm->
vÆue
.
cou¡î
);

644 i‡(
°©us
 !
NC_OK
) {

645  
°©us
;

649  
NC_OK
;

650 
	}
}

653 
	$°©s_aggªg©e_mëric
(
¨øy
 *
d°
, ¨øy *
§c
)

655 
uöt32_t
 
i
;

657 
i
 = 0; i < 
	`¨øy_n
(
§c
); i++) {

658 
°©s_mëric
 *
°m1
, *
°m2
;

660 
°m1
 = 
	`¨øy_gë
(
§c
, 
i
);

661 
°m2
 = 
	`¨øy_gë
(
d°
, 
i
);

663 
	`ASSERT
(
°m1
->
ty≥
 =
°m2
->type);

665 
°m1
->
ty≥
) {

666 
STATS_COUNTER
:

667 
°m2
->
vÆue
.
cou¡î
 +
°m1
->value.counter;

670 
STATS_GAUGE
:

671 
°m2
->
vÆue
.
cou¡î
 +
°m1
->value.counter;

674 
STATS_TIMESTAMP
:

675 i‡(
°m1
->
vÆue
.
time°amp
) {

676 
°m2
->
vÆue
.
time°amp
 = 
°m1
->value.timestamp;

681 
	`NOT_REACHED
();

684 
	}
}

687 
	$°©s_summ¨ize_£rvîs_to_poﬁ
(
°©s
 *
°
)

689 
uöt32_t
 
i
, 
j
;

690 
i
 = 0; i < 
	`¨øy_n
(&
°
->
sum
); i++) {

691 
°©s_poﬁ
 *
°p
 = 
	`¨øy_gë
(&
°
->
sum
, 
i
);

693 
	`log_debug
(
LOG_PVERB
, "aggregate %d serversÅoÖool: %s\n",

694 
	`¨øy_n
(&
°p
->
£rvî
), sç->
«me
.
d©a
);

696 
°©s_mëric
 *
tŸÆ_rq°s
 = 
	`¨øy_gë
(&
°p
->
mëric
, 6);

697 
°©s_mëric
 *
tŸÆ_rq°s_byãs
 = 
	`¨øy_gë
(&
°p
->
mëric
, 7);

698 
°©s_mëric
 *
tŸÆ_ª•s
 = 
	`¨øy_gë
(&
°p
->
mëric
, 8);

699 
°©s_mëric
 *
tŸÆ_ª•s_byãs
 = 
	`¨øy_gë
(&
°p
->
mëric
, 9);

700 
tŸÆ_rq°s
->
vÆue
.
cou¡î
 = 0;

701 
tŸÆ_rq°s_byãs
->
vÆue
.
cou¡î
 = 0;

702 
tŸÆ_ª•s
->
vÆue
.
cou¡î
 = 0;

703 
tŸÆ_ª•s_byãs
->
vÆue
.
cou¡î
 = 0;

705 
j
 = 0; j < 
	`¨øy_n
(&
°p
->
£rvî
); j++) {

706 
°©s_£rvî
 *
°s
 = 
	`¨øy_gë
(&
°p
->
£rvî
, 
j
);

707 
°©s_mëric
 *
sm
;

709 
sm
 = 
	`¨øy_gë
(&
°s
->
mëric
, 5);

710 
tŸÆ_rq°s
->
vÆue
.
cou¡î
 +
sm
->value.counter;

712 
sm
 = 
	`¨øy_gë
(&
°s
->
mëric
, 6);

713 
tŸÆ_rq°s_byãs
->
vÆue
.
cou¡î
 +
sm
->value.counter;

715 
sm
 = 
	`¨øy_gë
(&
°s
->
mëric
, 7);

716 
tŸÆ_ª•s
->
vÆue
.
cou¡î
 +
sm
->value.counter;

718 
sm
 = 
	`¨øy_gë
(&
°s
->
mëric
, 8);

719 
tŸÆ_ª•s_byãs
->
vÆue
.
cou¡î
 +
sm
->value.counter;

722 
	}
}

725 
	$°©s_summ¨ize_œãncy
(
°©s
 *
°
)

727 
c⁄ãxt
 *
˘x
 = 
°
->context;

728 
	`as£π
(
	`¨øy_n
(&
°
->
sum
) == 1);

729 
i
 = 0; i < 
	`¨øy_n
(&
°
->
sum
); i++) {

730 
°©s_poﬁ
 *
°p
 = 
	`¨øy_gë
(&
°
->
sum
, 
i
);

733 
°©s_mëric
 *
œt_mö
 = 
	`¨øy_gë
(&
°p
->
mëric
, 10);

734 
°©s_mëric
 *
œt_max
 = 
	`¨øy_gë
(&
°p
->
mëric
, 11);

735 
°©s_mëric
 *
œt_p50
 = 
	`¨øy_gë
(&
°p
->
mëric
, 12);

736 
°©s_mëric
 *
œt_p90
 = 
	`¨øy_gë
(&
°p
->
mëric
, 13);

737 
°©s_mëric
 *
œt_p95
 = 
	`¨øy_gë
(&
°p
->
mëric
, 14);

738 
°©s_mëric
 *
œt_p99
 = 
	`¨øy_gë
(&
°p
->
mëric
, 15);

740 
œt_mö
->
vÆue
.
cou¡î
 = 
	`hdr_vÆue_©_≥r˚¡ûe
(
˘x
->
hi°ogøm
, 0);

741 
œt_max
->
vÆue
.
cou¡î
 = 
	`hdr_max
(
˘x
->
hi°ogøm
);

742 
œt_p50
->
vÆue
.
cou¡î
 = 
	`hdr_vÆue_©_≥r˚¡ûe
(
˘x
->
hi°ogøm
, 50);

743 
œt_p90
->
vÆue
.
cou¡î
 = 
	`hdr_vÆue_©_≥r˚¡ûe
(
˘x
->
hi°ogøm
, 90);

744 
œt_p95
->
vÆue
.
cou¡î
 = 
	`hdr_vÆue_©_≥r˚¡ûe
(
˘x
->
hi°ogøm
, 95);

745 
œt_p99
->
vÆue
.
cou¡î
 = 
	`hdr_vÆue_©_≥r˚¡ûe
(
˘x
->
hi°ogøm
, 99);

750 
	`±hªad_muãx_lock
(&
˘x
->
hi°o_lock
);

751 
	`hdr_ª£t
(
˘x
->
hi°ogøm
);

752 
	`±hªad_muãx_u∆ock
(&
˘x
->
hi°o_lock
);

753 
	}
}

759 
	$°©s_lock
(
°©s
 *
°
)

761 
	`±hªad_muãx_lock
(&
°
->
lock
);

762 
	}
}

765 
	$°©s_u∆ock
(
°©s
 *
°
)

767 
	`±hªad_muãx_u∆ock
(&
°
->
lock
);

768 
	}
}

775 
	$ªsize_°©s_buf„r
(
°©s
 *
°
)

780 
	}
}

783 
	$°©s_aggªg©e
(
°©s
 *
°
)

785 
uöt32_t
 
i
;

787 i‡(
°
->
aggªg©e
 == 0) {

788 
	`log_debug
(
LOG_PVERB
, "skipággregate of shadow %pÅo sum %pás "

789 "gíî©‹ i†¶ow", 
°
->
shadow
.
ñem
, st->
sum
.elem);

793 
	`log_debug
(
LOG_PVERB
, "aggªg©ê°©†shadow %∞tÿsum %p", 
°
->
shadow
.
ñem
,

794 
°
->
sum
.
ñem
);

798 
	`°©s_lock
(
°
);

800 
i
 = 0; i < 
	`¨øy_n
(&
°
->
shadow
); i++) {

801 
°©s_poﬁ
 *
°p1
, *
°p2
;

802 
uöt32_t
 
j
;

804 
°p1
 = 
	`¨øy_gë
(&
°
->
shadow
, 
i
);

805 
°p2
 = 
	`¨øy_gë
(&
°
->
sum
, 
i
);

806 
	`°©s_aggªg©e_mëric
(&
°p2
->
mëric
, &
°p1
->metric);

808 
j
 = 0; j < 
	`¨øy_n
(&
°p1
->
£rvî
); j++) {

809 
°©s_£rvî
 *
°s1
, *
°s2
;

811 
°s1
 = 
	`¨øy_gë
(&
°p1
->
£rvî
, 
j
);

812 
°s2
 = 
	`¨øy_gë
(&
°p2
->
£rvî
, 
j
);

813 
	`°©s_aggªg©e_mëric
(&
°s2
->
mëric
, &
°s1
->metric);

818 
	`°©s_summ¨ize_£rvîs_to_poﬁ
(
°
);

820 
	`°©s_u∆ock
(
°
);

822 
°
->
aggªg©e
 = 0;

823 
	}
}

825 
r°©us_t


826 
	$°©s_make_r•
(
°©s
 *
°
)

828 
r°©us_t
 
°©us
;

829 
uöt32_t
 
i
;

831 
°©us
 = 
	`°©s_add_hódî
(
°
);

832 i‡(
°©us
 !
NC_OK
) {

833  
°©us
;

836 
i
 = 0; i < 
	`¨øy_n
(&
°
->
sum
); i++) {

837 
°©s_poﬁ
 *
°p
 = 
	`¨øy_gë
(&
°
->
sum
, 
i
);

838 
uöt32_t
 
j
;

840 
°©us
 = 
	`°©s_begö_√°ög
(
°
, &
°p
->
«me
);

841 i‡(
°©us
 !
NC_OK
) {

842  
°©us
;

846 
°©us
 = 
	`°©s_c›y_mëric
(
°
, &
°p
->
mëric
);

847 i‡(
°©us
 !
NC_OK
) {

848  
°©us
;

851 
j
 = 0; j < 
	`¨øy_n
(&
°p
->
£rvî
); j++) {

852 
°©s_£rvî
 *
°s
 = 
	`¨øy_gë
(&
°p
->
£rvî
, 
j
);

854 
°©us
 = 
	`°©s_begö_√°ög
(
°
, &
°s
->
«me
);

855 i‡(
°©us
 !
NC_OK
) {

856  
°©us
;

860 
°©us
 = 
	`°©s_c›y_mëric
(
°
, &
°s
->
mëric
);

861 i‡(
°©us
 !
NC_OK
) {

862  
°©us
;

865 
°©us
 = 
	`°©s_íd_√°ög
(
°
);

866 i‡(
°©us
 !
NC_OK
) {

867  
°©us
;

871 
°©us
 = 
	`°©s_íd_√°ög
(
°
);

872 i‡(
°©us
 !
NC_OK
) {

873  
°©us
;

877 
°©us
 = 
	`°©s_add_foŸî
(
°
);

878 i‡(
°©us
 !
NC_OK
) {

879  
°©us
;

882  
NC_OK
;

883 
	}
}

885 
r°©us_t


886 
	$°©s_£nd_r•
(
°©s
 *
°
)

888 
r°©us_t
 
°©us
;

889 
ssize_t
 
n
;

890 
sd
;

892 
°©us
 = 
	`°©s_make_r•
(
°
);

893 i‡(
°©us
 !
NC_OK
) {

894  
°©us
;

897 
sd
 = 
	`ac˚±
(
°
->sd, 
NULL
, NULL);

898 i‡(
sd
 < 0) {

899 
	`log_îr‹
("ac˚± o¿m %d faûed: %s", 
°
->
sd
, 
	`°ªº‹
(
î∫o
));

900  
NC_ERROR
;

903 
	`log_debug
(
LOG_VERB
, "£nd sèt†⁄ sd %d %d byãs", 
sd
, 
°
->
buf
.
Àn
);

905 
n
 = 
	`nc_£ndn
(
sd
, 
°
->
buf
.
d©a
, st->buf.
Àn
);

906 i‡(
n
 < 0) {

907 
	`log_îr‹
("£nd sèt†⁄ sd %d faûed: %s", 
sd
, 
	`°ªº‹
(
î∫o
));

908 
	`˛o£
(
sd
);

909  
NC_ERROR
;

912 
	`˛o£
(
sd
);

914  
NC_OK
;

915 
	}
}

918 
	$°©s_lo›_ˇŒback
(*
¨g1
, *
¨g2
)

920 
°©s
 *
°
 = 
¨g1
;

921 
n
 = *((*)
¨g2
);

924 
	`°©s_aggªg©e
(
°
);

926 i‡(
n
 == 0) {

931 
	`°©s_summ¨ize_œãncy
(
°
);

934 
	`°©s_£nd_r•
(
°
);

935 
	}
}

938 
	$°©s_lo›
(*
¨g
)

940 
	`evít_lo›_°©s
(
°©s_lo›_ˇŒback
, 
¨g
);

941  
NULL
;

942 
	}
}

944 
r°©us_t


945 
	$°©s_li°í
(
°©s
 *
°
)

947 
r°©us_t
 
°©us
;

948 
socköfo
 
si
;

950 
°©us
 = 
	`nc_ªsﬁve
(&
°
->
addr
, st->
p‹t
, &
si
);

951 i‡(
°©us
 < 0) {

952  
°©us
;

955 
°
->
sd
 = 
	`sockë
(
si
.
Ámûy
, 
SOCK_STREAM
, 0);

956 i‡(
°
->
sd
 < 0) {

957 
	`log_îr‹
("sockë faûed: %s", 
	`°ªº‹
(
î∫o
));

958  
NC_ERROR
;

961 
°©us
 = 
	`nc_£t_ªu£addr
(
°
->
sd
);

962 i‡(
°©us
 < 0) {

963 
	`log_îr‹
("£àªu£add∏⁄ m %d faûed: %s", 
°
->
sd
, 
	`°ªº‹
(
î∫o
));

964  
NC_ERROR
;

967 
°©us
 = 
	`böd
(
°
->
sd
, (
sockaddr
 *)&
si
.
addr
, si.
addæí
);

968 i‡(
°©us
 < 0) {

969 
	`log_îr‹
("böd o¿m %dÅÿadd∏'%.*s:%u' faûed: %s", 
°
->
sd
,

970 
°
->
addr
.
Àn
, st->addr.
d©a
, st->
p‹t
, 
	`°ªº‹
(
î∫o
));

971  
NC_ERROR
;

974 
°©us
 = 
	`li°í
(
°
->
sd
, 
SOMAXCONN
);

975 i‡(
°©us
 < 0) {

976 
	`log_îr‹
("li°í o¿m %d faûed: %s", 
°
->
sd
, 
	`°ªº‹
(
î∫o
));

977  
NC_ERROR
;

980 
	`log_debug
(
LOG_NOTICE
, "m %dÜi°íög o¿'%.*s:%u'", 
°
->
sd
,

981 
°
->
addr
.
Àn
, st->addr.
d©a
, st->
p‹t
);

983  
NC_OK
;

984 
	}
}

986 
r°©us_t


987 
	$°©s_°¨t_aggªg©‹
(
°©s
 *
°
)

989 
r°©us_t
 
°©us
;

991 i‡(!
°©s_íabÀd
) {

992  
NC_OK
;

995 
°©us
 = 
	`°©s_li°í
(
°
);

996 i‡(
°©us
 !
NC_OK
) {

997  
°©us
;

1000 
°©us
 = 
	`±hªad_¸óã
(&
°
->
tid
, 
NULL
, 
°©s_lo›
, st);

1001 i‡(
°©us
 < 0) {

1002 
	`log_îr‹
("°©†aggªg©‹ cª©êÁûed: %s", 
	`°ªº‹
(
°©us
));

1003  
NC_ERROR
;

1006  
NC_OK
;

1007 
	}
}

1010 
	$°©s_°›_aggªg©‹
(
°©s
 *
°
)

1012 i‡(!
°©s_íabÀd
) {

1016 
	`˛o£
(
°
->
sd
);

1017 
	}
}

1019 
°©s
 *

1020 
	$°©s_¸óã
(
uöt16_t
 
°©s_p‹t
, *
°©s_ù
, 
°©s_öãrvÆ
,

1021 *
sour˚
, 
¨øy
 *
£rvî_poﬁ
)

1023 
r°©us_t
 
°©us
;

1024 
°©s
 *
°
;

1026 
°
 = 
	`nc_Æloc
((*st));

1027 i‡(
°
 =
NULL
) {

1028  
NULL
;

1031 
°
->
p‹t
 = 
°©s_p‹t
;

1032 
°
->
öãrvÆ
 = 
°©s_öãrvÆ
;

1033 
	`°rög_£t_øw
(&
°
->
addr
, 
°©s_ù
);

1035 
°
->
°¨t_ts
 = (
öt64_t
)
	`time
(
NULL
);

1037 
°
->
buf
.
Àn
 = 0;

1038 
°
->
buf
.
d©a
 = 
NULL
;

1039 
°
->
buf
.
size
 = 0;

1041 
	`¨øy_nuŒ
(&
°
->
cuºít
);

1042 
	`¨øy_nuŒ
(&
°
->
shadow
);

1043 
	`¨øy_nuŒ
(&
°
->
sum
);

1045 
°
->
tid
 = (
±hªad_t
) -1;

1046 
°
->
sd
 = -1;

1048 
	`°rög_£t_ãxt
(&
°
->
£rvi˚_°r
, "service");

1049 
	`°rög_£t_ãxt
(&
°
->
£rvi˚
, "nutcracker");

1051 
	`°rög_£t_ãxt
(&
°
->
sour˚_°r
, "source");

1052 
	`°rög_£t_øw
(&
°
->
sour˚
, source);

1054 
	`°rög_£t_ãxt
(&
°
->
vîsi⁄_°r
, "version");

1055 
	`°rög_£t_ãxt
(&
°
->
vîsi⁄
, 
NC_VERSION_STRING
);

1057 
	`°rög_£t_ãxt
(&
°
->
u±ime_°r
, "uptime");

1058 
	`°rög_£t_ãxt
(&
°
->
time°amp_°r
, "timestamp");

1060 
	`°rög_£t_ãxt
(&
°
->
¡ŸÆ_c⁄n_°r
, "total_connections");

1061 
	`°rög_£t_ãxt
(&
°
->
ncuº_c⁄n_°r
, "curr_connections");

1063 
°
->
upd©ed
 = 0;

1064 
°
->
aggªg©e
 = 0;

1066 
	`±hªad_muãx_öô
(&
°
->
lock
, 
NULL
);

1067 
°
->
max_Ælowed_£rvîs
 = 10000;

1068 
°
->
cuº_£rvîs
 = 0;

1072 
°©us
 = 
	`°©s_poﬁ_m≠
(&
°
->
cuºít
, 
£rvî_poﬁ
);

1073 i‡(
°©us
 !
NC_OK
) {

1074 
îr‹
;

1077 
°©us
 = 
	`°©s_poﬁ_m≠
(&
°
->
shadow
, 
£rvî_poﬁ
);

1078 i‡(
°©us
 !
NC_OK
) {

1079 
îr‹
;

1082 
°©us
 = 
	`°©s_poﬁ_m≠
(&
°
->
sum
, 
£rvî_poﬁ
);

1083 i‡(
°©us
 !
NC_OK
) {

1084 
îr‹
;

1087 
°©us
 = 
	`°©s_¸óã_buf
(
°
);

1088 i‡(
°©us
 !
NC_OK
) {

1089 
îr‹
;

1092 
°©us
 = 
	`°©s_°¨t_aggªg©‹
(
°
);

1093 i‡(
°©us
 !
NC_OK
) {

1094 
îr‹
;

1097  
°
;

1099 
îr‹
:

1100 
	`°©s_de°roy
(
°
);

1101  
NULL
;

1102 
	}
}

1105 
	$°©s_de°roy
(
°©s
 *
°
)

1107 
	`°©s_°›_aggªg©‹
(
°
);

1108 
	`°©s_poﬁ_unm≠
(&
°
->
sum
);

1109 
	`°©s_poﬁ_unm≠
(&
°
->
shadow
);

1110 
	`°©s_poﬁ_unm≠
(&
°
->
cuºít
);

1111 
	`°©s_de°roy_buf
(
°
);

1112 
	`nc_‰ì
(
°
);

1113 
	}
}

1116 
	$°©s_sw≠
(
°©s
 *
°
)

1118 i‡(!
°©s_íabÀd
) {

1122 i‡(
°
->
aggªg©e
 == 1) {

1123 
	`log_debug
(
LOG_PVERB
, "skip swap of current %p shadow %pásággregator "

1124 "i†busy", 
°
->
cuºít
.
ñem
, st->
shadow
.elem);

1128 i‡(
°
->
upd©ed
 == 0) {

1129 
	`log_debug
(
LOG_PVERB
, "skip swap of current %p shadow %pásÅhere is "

1130 "nŸhögÇew", 
°
->
cuºít
.
ñem
, st->
shadow
.elem);

1134 
	`log_debug
(
LOG_PVERB
, "sw≠ sèt†cuºíà%∞shadow %p", 
°
->
cuºít
.
ñem
,

1135 
°
->
shadow
.
ñem
);

1137 
	`°©s_lock
(
°
);

1138 
	`¨øy_sw≠
(&
°
->
cuºít
, &°->
shadow
);

1144 
	`°©s_poﬁ_ª£t
(&
°
->
cuºít
);

1145 
	`°©s_u∆ock
(
°
);

1147 
°
->
upd©ed
 = 0;

1149 
°
->
aggªg©e
 = 1;

1150 
	}
}

1152 
°©s_mëric
 *

1153 
	$°©s_poﬁ_to_mëric
(
c⁄ãxt
 *
˘x
, 
£rvî_poﬁ
 *
poﬁ
,

1154 
°©s_poﬁ_fõld_t
 
fidx
)

1156 
°©s
 *
°
;

1157 
°©s_poﬁ
 *
°p
;

1158 
°©s_mëric
 *
°m
;

1159 
uöt32_t
 
pidx
;

1161 
pidx
 = 
poﬁ
->
idx
;

1163 
°
 = 
˘x
->
°©s
;

1164 
°p
 = 
	`¨øy_gë
(&
°
->
cuºít
, 
pidx
);

1165 
°m
 = 
	`¨øy_gë
(&
°p
->
mëric
, 
fidx
);

1167 
°
->
upd©ed
 = 1;

1169 
	`log_debug
(
LOG_VVVERB
, "mëri¯'%.*s' i¿poﬁ %"
PRIu32
"", 
°m
->
«me
.
Àn
,

1170 
°m
->
«me
.
d©a
, 
pidx
);

1172  
°m
;

1173 
	}
}

1176 
	$_°©s_poﬁ_ö¸
(
c⁄ãxt
 *
˘x
, 
£rvî_poﬁ
 *
poﬁ
,

1177 
°©s_poﬁ_fõld_t
 
fidx
)

1179 
°©s_mëric
 *
°m
;

1181 
°m
 = 
	`°©s_poﬁ_to_mëric
(
˘x
, 
poﬁ
, 
fidx
);

1183 
	`ASSERT
(
°m
->
ty≥
 =
STATS_COUNTER
 || stm->ty≥ =
STATS_GAUGE
);

1184 
°m
->
vÆue
.
cou¡î
++;

1186 
	`log_debug
(
LOG_VVVERB
, "ö¸ fõld '%.*s'Åÿ%"
PRId64
"", 
°m
->
«me
.
Àn
,

1187 
°m
->
«me
.
d©a
, stm->
vÆue
.
cou¡î
);

1188 
	}
}

1191 
	$_°©s_poﬁ_de¸
(
c⁄ãxt
 *
˘x
, 
£rvî_poﬁ
 *
poﬁ
,

1192 
°©s_poﬁ_fõld_t
 
fidx
)

1194 
°©s_mëric
 *
°m
;

1196 
°m
 = 
	`°©s_poﬁ_to_mëric
(
˘x
, 
poﬁ
, 
fidx
);

1198 
	`ASSERT
(
°m
->
ty≥
 =
STATS_GAUGE
);

1199 
°m
->
vÆue
.
cou¡î
--;

1201 
	`log_debug
(
LOG_VVVERB
, "de¸ fõld '%.*s'Åÿ%"
PRId64
"", 
°m
->
«me
.
Àn
,

1202 
°m
->
«me
.
d©a
, stm->
vÆue
.
cou¡î
);

1203 
	}
}

1206 
	$_°©s_poﬁ_ö¸_by
(
c⁄ãxt
 *
˘x
, 
£rvî_poﬁ
 *
poﬁ
,

1207 
°©s_poﬁ_fõld_t
 
fidx
, 
öt64_t
 
vÆ
)

1209 
°©s_mëric
 *
°m
;

1211 
°m
 = 
	`°©s_poﬁ_to_mëric
(
˘x
, 
poﬁ
, 
fidx
);

1213 
	`ASSERT
(
°m
->
ty≥
 =
STATS_COUNTER
 || stm->ty≥ =
STATS_GAUGE
);

1214 
°m
->
vÆue
.
cou¡î
 +
vÆ
;

1216 
	`log_debug
(
LOG_VVVERB
, "ö¸ by fõld '%.*s'Åÿ%"
PRId64
"", 
°m
->
«me
.
Àn
,

1217 
°m
->
«me
.
d©a
, stm->
vÆue
.
cou¡î
);

1218 
	}
}

1221 
	$_°©s_poﬁ_de¸_by
(
c⁄ãxt
 *
˘x
, 
£rvî_poﬁ
 *
poﬁ
,

1222 
°©s_poﬁ_fõld_t
 
fidx
, 
öt64_t
 
vÆ
)

1224 
°©s_mëric
 *
°m
;

1226 
°m
 = 
	`°©s_poﬁ_to_mëric
(
˘x
, 
poﬁ
, 
fidx
);

1228 
	`ASSERT
(
°m
->
ty≥
 =
STATS_GAUGE
);

1229 
°m
->
vÆue
.
cou¡î
 -
vÆ
;

1231 
	`log_debug
(
LOG_VVVERB
, "de¸ by fõld '%.*s'Åÿ%"
PRId64
"", 
°m
->
«me
.
Àn
,

1232 
°m
->
«me
.
d©a
, stm->
vÆue
.
cou¡î
);

1233 
	}
}

1236 
	$_°©s_poﬁ_£t_ts
(
c⁄ãxt
 *
˘x
, 
£rvî_poﬁ
 *
poﬁ
,

1237 
°©s_poﬁ_fõld_t
 
fidx
, 
öt64_t
 
vÆ
)

1239 
°©s_mëric
 *
°m
;

1241 
°m
 = 
	`°©s_poﬁ_to_mëric
(
˘x
, 
poﬁ
, 
fidx
);

1243 
	`ASSERT
(
°m
->
ty≥
 =
STATS_TIMESTAMP
);

1244 
°m
->
vÆue
.
time°amp
 = 
vÆ
;

1246 
	`log_debug
(
LOG_VVVERB
, "£àt†fõld '%.*s'Åÿ%"
PRId64
"", 
°m
->
«me
.
Àn
,

1247 
°m
->
«me
.
d©a
, stm->
vÆue
.
time°amp
);

1248 
	}
}

1250 
°©s_mëric
 *

1251 
	$°©s_£rvî_to_mëric
(
c⁄ãxt
 *
˘x
, 
£rvî
 *server,

1252 
°©s_£rvî_fõld_t
 
fidx
)

1254 
°©s
 *
°
;

1255 
°©s_poﬁ
 *
°p
;

1256 
°©s_£rvî
 *
°s
;

1257 
°©s_mëric
 *
°m
;

1258 
uöt32_t
 
pidx
, 
sidx
;

1260 
sidx
 = 
£rvî
->
idx
;

1261 
pidx
 = 
£rvî
->
ow√r
->
idx
;

1263 
°
 = 
˘x
->
°©s
;

1264 
°p
 = 
	`¨øy_gë
(&
°
->
cuºít
, 
pidx
);

1265 
°s
 = 
	`¨øy_gë
(&
°p
->
£rvî
, 
sidx
);

1266 
°m
 = 
	`¨øy_gë
(&
°s
->
mëric
, 
fidx
);

1268 
°
->
upd©ed
 = 1;

1270 
	`log_debug
(
LOG_VVVERB
, "mëri¯'%.*s' i¿poﬁ %"
PRIu32
" server %"PRIu32"",

1271 
°m
->
«me
.
Àn
, stm->«me.
d©a
, 
pidx
, 
sidx
);

1273  
°m
;

1274 
	}
}

1277 
	$_°©s_£rvî_ö¸
(
c⁄ãxt
 *
˘x
, 
£rvî
 *server,

1278 
°©s_£rvî_fõld_t
 
fidx
)

1280 
°©s_mëric
 *
°m
;

1282 
°m
 = 
	`°©s_£rvî_to_mëric
(
˘x
, 
£rvî
, 
fidx
);

1284 
	`ASSERT
(
°m
->
ty≥
 =
STATS_COUNTER
 || stm->ty≥ =
STATS_GAUGE
);

1285 
°m
->
vÆue
.
cou¡î
++;

1287 
	`log_debug
(
LOG_VVVERB
, "ö¸ fõld '%.*s'Åÿ%"
PRId64
"", 
°m
->
«me
.
Àn
,

1288 
°m
->
«me
.
d©a
, stm->
vÆue
.
cou¡î
);

1289 
	}
}

1292 
	$_°©s_£rvî_de¸
(
c⁄ãxt
 *
˘x
, 
£rvî
 *server,

1293 
°©s_£rvî_fõld_t
 
fidx
)

1295 
°©s_mëric
 *
°m
;

1297 
°m
 = 
	`°©s_£rvî_to_mëric
(
˘x
, 
£rvî
, 
fidx
);

1299 
	`ASSERT
(
°m
->
ty≥
 =
STATS_GAUGE
);

1300 
°m
->
vÆue
.
cou¡î
--;

1302 
	`log_debug
(
LOG_VVVERB
, "de¸ fõld '%.*s'Åÿ%"
PRId64
"", 
°m
->
«me
.
Àn
,

1303 
°m
->
«me
.
d©a
, stm->
vÆue
.
cou¡î
);

1304 
	}
}

1307 
	$_°©s_£rvî_ö¸_by
(
c⁄ãxt
 *
˘x
, 
£rvî
 *server,

1308 
°©s_£rvî_fõld_t
 
fidx
, 
öt64_t
 
vÆ
)

1310 
°©s_mëric
 *
°m
;

1312 
°m
 = 
	`°©s_£rvî_to_mëric
(
˘x
, 
£rvî
, 
fidx
);

1314 
	`ASSERT
(
°m
->
ty≥
 =
STATS_COUNTER
 || stm->ty≥ =
STATS_GAUGE
);

1315 
°m
->
vÆue
.
cou¡î
 +
vÆ
;

1317 
	`log_debug
(
LOG_VVVERB
, "ö¸ by fõld '%.*s'Åÿ%"
PRId64
"", 
°m
->
«me
.
Àn
,

1318 
°m
->
«me
.
d©a
, stm->
vÆue
.
cou¡î
);

1319 
	}
}

1322 
	$_°©s_£rvî_de¸_by
(
c⁄ãxt
 *
˘x
, 
£rvî
 *server,

1323 
°©s_£rvî_fõld_t
 
fidx
, 
öt64_t
 
vÆ
)

1325 
°©s_mëric
 *
°m
;

1327 
°m
 = 
	`°©s_£rvî_to_mëric
(
˘x
, 
£rvî
, 
fidx
);

1329 
	`ASSERT
(
°m
->
ty≥
 =
STATS_GAUGE
);

1330 
°m
->
vÆue
.
cou¡î
 -
vÆ
;

1332 
	`log_debug
(
LOG_VVVERB
, "de¸ by fõld '%.*s'Åÿ%"
PRId64
"", 
°m
->
«me
.
Àn
,

1333 
°m
->
«me
.
d©a
, stm->
vÆue
.
cou¡î
);

1334 
	}
}

1337 
	$_°©s_£rvî_£t_ts
(
c⁄ãxt
 *
˘x
, 
£rvî
 *server,

1338 
°©s_£rvî_fõld_t
 
fidx
, 
öt64_t
 
vÆ
)

1340 
°©s_mëric
 *
°m
;

1342 
°m
 = 
	`°©s_£rvî_to_mëric
(
˘x
, 
£rvî
, 
fidx
);

1344 
	`ASSERT
(
°m
->
ty≥
 =
STATS_TIMESTAMP
);

1345 
°m
->
vÆue
.
time°amp
 = 
vÆ
;

1347 
	`log_debug
(
LOG_VVVERB
, "£àt†fõld '%.*s'Åÿ%"
PRId64
"", 
°m
->
«me
.
Àn
,

1348 
°m
->
«me
.
d©a
, stm->
vÆue
.
time°amp
);

1349 
	}
}

	@src/nc_stats.h

18 #i‚de‡
_NC_STATS_H_


19 
	#_NC_STATS_H_


	)

21 
	~<nc_c‹e.h
>

23 
	#STATS_POOL_CODEC
(
ACTION
) \

25 
	`ACTION
–
˛õ¡_eof
, 
STATS_COUNTER
, "#Éof on client connections") \

26 
	`ACTION
–
˛õ¡_îr
, 
STATS_COUNTER
, "#Érrors on client connections") \

27 
	`ACTION
–
˛õ¡_c⁄√˘i⁄s
, 
STATS_GAUGE
, "#áctive client connections") \

29 
	`ACTION
–
£rvî_eje˘s
, 
STATS_COUNTER
, "#Åimes backend server wasÉjected") \

31 
	`ACTION
–
f‹w¨d_îr‹
, 
STATS_COUNTER
, "#Åimes weÉncounteredá forwardingÉrror") \

32 
	`ACTION
–
‰agmíts
, 
STATS_COUNTER
, "# fragments created fromá multi-vectorÑequest") \

33 
	`ACTION
–
tŸÆ_ªque°s
, 
STATS_COUNTER
, "#ÅotalÑequests ofáll servers") \

34 
	`ACTION
–
tŸÆ_ªque°s_byãs
, 
STATS_COUNTER
, "#ÅotalÑequests bytes ofáll servers") \

35 
	`ACTION
–
tŸÆ_ª•⁄£s
, 
STATS_COUNTER
, "#ÅotalÑesponses ofáll servers") \

36 
	`ACTION
–
tŸÆ_ª•⁄£s_byãs
, 
STATS_COUNTER
, "#ÅotalÑesponses bytes ofáll servers") \

37 
	`ACTION
–
œãncy_mö
, 
STATS_COUNTER
, "minÜatency (us) ofállÑequests") \

38 
	`ACTION
–
œãncy_max
, 
STATS_COUNTER
, "maxÜatency (us) ofállÑequests") \

39 
	`ACTION
–
œãncy_p50
, 
STATS_COUNTER
, "50\%Üatency (us) ofállÑequests") \

40 
	`ACTION
–
œãncy_p90
, 
STATS_COUNTER
, "90\%Üatency (us) ofállÑequests") \

41 
	`ACTION
–
œãncy_p95
, 
STATS_COUNTER
, "95\%Üatency (us) ofállÑequests") \

42 
	`ACTION
–
œãncy_p99
, 
STATS_COUNTER
, "99\%Üatency (us) ofállÑequests") \

43 

	)

44 
	#STATS_SERVER_CODEC
(
ACTION
) \

46 
	`ACTION
–
£rvî_eof
, 
STATS_COUNTER
, "#Éof on server connections") \

47 
	`ACTION
–
£rvî_îr
, 
STATS_COUNTER
, "#Érrors on server connections") \

48 
	`ACTION
–
£rvî_timedout
, 
STATS_COUNTER
, "#Åimeouts on server connections") \

49 
	`ACTION
–
£rvî_c⁄√˘i⁄s
, 
STATS_GAUGE
, "#áctive server connections") \

50 
	`ACTION
–
£rvî_eje˘ed_©
, 
STATS_TIMESTAMP
, "timestamp when server wasÉjected in usec sinceÉpoch") \

52 
	`ACTION
–
ªque°s
, 
STATS_COUNTER
, "#Ñequests") \

53 
	`ACTION
–
ªque°_byãs
, 
STATS_COUNTER
, "totalÑequest bytes") \

54 
	`ACTION
–
ª•⁄£s
, 
STATS_COUNTER
, "#Ñesponses") \

55 
	`ACTION
–
ª•⁄£_byãs
, 
STATS_COUNTER
, "totalÑesponse bytes") \

56 
	`ACTION
–
ö_queue
, 
STATS_GAUGE
, "#Ñequests in incoming queue") \

57 
	`ACTION
–
ö_queue_byãs
, 
STATS_GAUGE
, "currentÑequest bytes in incoming queue") \

58 
	`ACTION
–
out_queue
, 
STATS_GAUGE
, "#Ñequests in outgoing queue") \

59 
	`ACTION
–
out_queue_byãs
, 
STATS_GAUGE
, "currentÑequest bytes in outgoing queue") \

60 

	)

61 
	#STATS_ADDR
 "0.0.0.0"

	)

62 
	#STATS_PORT
 22225

	)

63 
	#STATS_INTERVAL
 (10 * 1000Ë

	)

65 
	e°©s_ty≥
 {

66 
	mSTATS_INVALID
,

67 
	mSTATS_COUNTER
,

68 
	mSTATS_GAUGE
,

69 
	mSTATS_TIMESTAMP
,

70 
	mSTATS_SENTINEL


71 } 
	t°©s_ty≥_t
;

73 
	s°©s_mëric
 {

74 
°©s_ty≥_t
 
	mty≥
;

75 
°rög
 
	m«me
;

77 
öt64_t
 
	mcou¡î
;

78 
öt64_t
 
	mtime°amp
;

79 } 
	mvÆue
;

82 
	s°©s_£rvî
 {

83 
°rög
 
	m«me
;

84 
¨øy
 
	mmëric
;

87 
	s°©s_poﬁ
 {

88 
°rög
 
	m«me
;

89 
¨øy
 
	mmëric
;

90 
¨øy
 
	m£rvî
;

93 
	s°©s_buf„r
 {

94 
size_t
 
	mÀn
;

95 
uöt8_t
 *
	md©a
;

96 
size_t
 
	msize
;

99 
	s°©s
 {

100 
uöt16_t
 
	mp‹t
;

101 
	möãrvÆ
;

102 
°rög
 
	maddr
;

104 
öt64_t
 
	m°¨t_ts
;

105 
°©s_buf„r
 
	mbuf
;

107 
¨øy
 
	mcuºít
;

108 
¨øy
 
	mshadow
;

109 
¨øy
 
	msum
;

111 
±hªad_t
 
	mtid
;

112 
	msd
;

114 
°rög
 
	m£rvi˚_°r
;

115 
°rög
 
	m£rvi˚
;

116 
°rög
 
	msour˚_°r
;

117 
°rög
 
	msour˚
;

118 
°rög
 
	mvîsi⁄_°r
;

119 
°rög
 
	mvîsi⁄
;

120 
°rög
 
	mu±ime_°r
;

121 
°rög
 
	mtime°amp_°r
;

122 
°rög
 
	m¡ŸÆ_c⁄n_°r
;

123 
°rög
 
	mncuº_c⁄n_°r
;

125 vﬁ©ûê
	maggªg©e
;

126 vﬁ©ûê
	mupd©ed
;

128 
c⁄ãxt
 *
	mc⁄ãxt
;

129 
±hªad_muãx_t
 
	mlock
;

133 
	mmax_Ælowed_£rvîs
;

134 
	mcuº_£rvîs
;

137 
	#DEFINE_ACTION
(
_«me
, 
_ty≥
, 
_desc
Ë
STATS_POOL_
##_«me,

	)

138 
	e°©s_poﬁ_fõld
 {

139 
STATS_POOL_CODEC
(
DEFINE_ACTION
)

140 
	mSTATS_POOL_NFIELD


141 } 
	t°©s_poﬁ_fõld_t
;

142 #unde‡
DEFINE_ACTION


144 
	#DEFINE_ACTION
(
_«me
, 
_ty≥
, 
_desc
Ë
STATS_SERVER_
##_«me,

	)

145 
	e°©s_£rvî_fõld
 {

146 
STATS_SERVER_CODEC
(
DEFINE_ACTION
)

147 
	mSTATS_SERVER_NFIELD


148 } 
	t°©s_£rvî_fõld_t
;

149 #unde‡
DEFINE_ACTION


151 #i‡
deföed
 
NC_STATS
 && NC_STATS == 1

153 
	#°©s_poﬁ_ö¸
(
_˘x
, 
_poﬁ
, 
_«me
) do { \

154 
	`_°©s_poﬁ_ö¸
(
_˘x
, 
_poﬁ
, 
STATS_POOL_
##
_«me
); \

155 } 0)

	)

157 
	#°©s_poﬁ_de¸
(
_˘x
, 
_poﬁ
, 
_«me
) do { \

158 
	`_°©s_poﬁ_de¸
(
_˘x
, 
_poﬁ
, 
STATS_POOL_
##
_«me
); \

159 } 0)

	)

161 
	#°©s_poﬁ_ö¸_by
(
_˘x
, 
_poﬁ
, 
_«me
, 
_vÆ
) do { \

162 
	`_°©s_poﬁ_ö¸_by
(
_˘x
, 
_poﬁ
, 
STATS_POOL_
##
_«me
, 
_vÆ
); \

163 } 0)

	)

165 
	#°©s_poﬁ_de¸_by
(
_˘x
, 
_poﬁ
, 
_«me
, 
_vÆ
) do { \

166 
	`_°©s_poﬁ_de¸_by
(
_˘x
, 
_poﬁ
, 
STATS_POOL_
##
_«me
, 
_vÆ
); \

167 } 0)

	)

169 
	#°©s_poﬁ_£t_ts
(
_˘x
, 
_poﬁ
, 
_«me
, 
_vÆ
) do { \

170 
	`_°©s_poﬁ_£t_ts
(
_˘x
, 
_poﬁ
, 
STATS_POOL_
##
_«me
, 
_vÆ
); \

171 } 0)

	)

173 
	#°©s_£rvî_ö¸
(
_˘x
, 
_£rvî
, 
_«me
) do { \

174 
	`_°©s_£rvî_ö¸
(
_˘x
, 
_£rvî
, 
STATS_SERVER_
##
_«me
); \

175 } 0)

	)

177 
	#°©s_£rvî_de¸
(
_˘x
, 
_£rvî
, 
_«me
) do { \

178 
	`_°©s_£rvî_de¸
(
_˘x
, 
_£rvî
, 
STATS_SERVER_
##
_«me
); \

179 } 0)

	)

181 
	#°©s_£rvî_ö¸_by
(
_˘x
, 
_£rvî
, 
_«me
, 
_vÆ
) do { \

182 
	`_°©s_£rvî_ö¸_by
(
_˘x
, 
_£rvî
, 
STATS_SERVER_
##
_«me
, 
_vÆ
); \

183 } 0)

	)

185 
	#°©s_£rvî_de¸_by
(
_˘x
, 
_£rvî
, 
_«me
, 
_vÆ
) do { \

186 
	`_°©s_£rvî_de¸_by
(
_˘x
, 
_£rvî
, 
STATS_SERVER_
##
_«me
, 
_vÆ
); \

187 } 0)

	)

189 
	#°©s_£rvî_£t_ts
(
_˘x
, 
_£rvî
, 
_«me
, 
_vÆ
) do { \

190 
	`_°©s_£rvî_£t_ts
(
_˘x
, 
_£rvî
, 
STATS_SERVER_
##
_«me
, 
_vÆ
); \

191 } 0)

	)

195 
	#°©s_poﬁ_ö¸
(
_˘x
, 
_poﬁ
, 
_«me
)

	)

197 
	#°©s_poﬁ_de¸
(
_˘x
, 
_poﬁ
, 
_«me
)

	)

199 
	#°©s_poﬁ_ö¸_by
(
_˘x
, 
_poﬁ
, 
_«me
, 
_vÆ
)

	)

201 
	#°©s_poﬁ_de¸_by
(
_˘x
, 
_poﬁ
, 
_«me
, 
_vÆ
)

	)

203 
	#°©s_£rvî_ö¸
(
_˘x
, 
_£rvî
, 
_«me
)

	)

205 
	#°©s_£rvî_de¸
(
_˘x
, 
_£rvî
, 
_«me
)

	)

207 
	#°©s_£rvî_ö¸_by
(
_˘x
, 
_£rvî
, 
_«me
, 
_vÆ
)

	)

209 
	#°©s_£rvî_de¸_by
(
_˘x
, 
_£rvî
, 
_«me
, 
_vÆ
)

	)

213 
	#°©s_íabÀd
 
NC_STATS


	)

215 
°©s_des¸ibe
();

217 
_°©s_poﬁ_ö¸
(
c⁄ãxt
 *
˘x
, 
£rvî_poﬁ
 *
poﬁ
, 
°©s_poﬁ_fõld_t
 
fidx
);

218 
_°©s_poﬁ_de¸
(
c⁄ãxt
 *
˘x
, 
£rvî_poﬁ
 *
poﬁ
, 
°©s_poﬁ_fõld_t
 
fidx
);

219 
_°©s_poﬁ_ö¸_by
(
c⁄ãxt
 *
˘x
, 
£rvî_poﬁ
 *
poﬁ
, 
°©s_poﬁ_fõld_t
 
fidx
, 
öt64_t
 
vÆ
);

220 
_°©s_poﬁ_de¸_by
(
c⁄ãxt
 *
˘x
, 
£rvî_poﬁ
 *
poﬁ
, 
°©s_poﬁ_fõld_t
 
fidx
, 
öt64_t
 
vÆ
);

221 
_°©s_poﬁ_£t_ts
(
c⁄ãxt
 *
˘x
, 
£rvî_poﬁ
 *
poﬁ
, 
°©s_poﬁ_fõld_t
 
fidx
, 
öt64_t
 
vÆ
);

223 
_°©s_£rvî_ö¸
(
c⁄ãxt
 *
˘x
, 
£rvî
 *£rvî, 
°©s_£rvî_fõld_t
 
fidx
);

224 
_°©s_£rvî_de¸
(
c⁄ãxt
 *
˘x
, 
£rvî
 *£rvî, 
°©s_£rvî_fõld_t
 
fidx
);

225 
_°©s_£rvî_ö¸_by
(
c⁄ãxt
 *
˘x
, 
£rvî
 *£rvî, 
°©s_£rvî_fõld_t
 
fidx
, 
öt64_t
 
vÆ
);

226 
_°©s_£rvî_de¸_by
(
c⁄ãxt
 *
˘x
, 
£rvî
 *£rvî, 
°©s_£rvî_fõld_t
 
fidx
, 
öt64_t
 
vÆ
);

227 
_°©s_£rvî_£t_ts
(
c⁄ãxt
 *
˘x
, 
£rvî
 *£rvî, 
°©s_£rvî_fõld_t
 
fidx
, 
öt64_t
 
vÆ
);

229 
°©s
 *
°©s_¸óã
(
uöt16_t
 
°©s_p‹t
, *
°©s_ù
, 
°©s_öãrvÆ
, *
sour˚
, 
¨øy
 *
£rvî_poﬁ
);

230 
°©s_de°roy
(
°©s
 *stats);

231 
°©s_sw≠
(
°©s
 *stats);

233 
r°©us_t
 
add_£rvî_to_°©s_poﬁ
(
°©s_poﬁ
 *
°p
, 
£rvî
 *
§v
);

234 
°©s_lock
(
°©s
 *
°
);

235 
°©s_u∆ock
(
°©s
 *
°
);

	@src/nc_string.c

18 
	~<°dlib.h
>

19 
	~<°rög.h
>

21 
	~<nc_c‹e.h
>

41 
	$°rög_öô
(
°rög
 *
°r
)

43 
°r
->
Àn
 = 0;

44 
°r
->
d©a
 = 
NULL
;

45 
	}
}

48 
	$°rög_deöô
(
°rög
 *
°r
)

50 
	`ASSERT
((
°r
->
Àn
 =0 && så->
d©a
 =
NULL
) ||

51 (
°r
->
Àn
 !0 && så->
d©a
 !
NULL
));

53 i‡(
°r
->
d©a
 !
NULL
) {

54 
	`nc_‰ì
(
°r
->
d©a
);

55 
	`°rög_öô
(
°r
);

57 
	}
}

59 
boﬁ


60 
	$°rög_em±y
(c⁄° 
°rög
 *
°r
)

62 
	`ASSERT
((
°r
->
Àn
 =0 && så->
d©a
 =
NULL
) ||

63 (
°r
->
Àn
 !0 && så->
d©a
 !
NULL
));

64  
°r
->
Àn
 =0 ? 
åue
 : 
Ál£
;

65 
	}
}

67 
r°©us_t


68 
	$°rög_du∂iˇã
(
°rög
 *
d°
, c⁄° °rög *
§c
)

70 
	`ASSERT
(
d°
->
Àn
 =0 && d°->
d©a
 =
NULL
);

71 
	`ASSERT
(
§c
->
Àn
 !0 && src->
d©a
 !
NULL
);

73 
d°
->
d©a
 = 
	`nc_°∫dup
(
§c
->d©a, src->
Àn
 + 1);

74 i‡(
d°
->
d©a
 =
NULL
) {

75  
NC_ENOMEM
;

78 
d°
->
Àn
 = 
§c
->len;

79 
d°
->
d©a
[d°->
Àn
] = '\0';

81  
NC_OK
;

82 
	}
}

84 
r°©us_t


85 
	$°rög_c›y
(
°rög
 *
d°
, c⁄° 
uöt8_t
 *
§c
, 
uöt32_t
 
§˛í
)

87 
	`ASSERT
(
d°
->
Àn
 =0 && d°->
d©a
 =
NULL
);

88 
	`ASSERT
(
§c
 !
NULL
 && 
§˛í
 != 0);

90 
d°
->
d©a
 = 
	`nc_°∫dup
(
§c
, 
§˛í
);

92 i‡(
d°
->
d©a
 =
NULL
) {

93  
NC_ENOMEM
;

96 
d°
->
Àn
 = 
§˛í
;

97 
d°
->
d©a
[d°->
Àn
+1] = '\0';

100  
NC_OK
;

101 
	}
}

104 
	$°rög_com∑ª
(c⁄° 
°rög
 *
s1
, c⁄° °rög *
s2
)

106 i‡(
s1
->
Àn
 !
s2
->len) {

107  
s1
->
Àn
 > 
s2
->len ? 1 : -1;

110  
	`nc_°∫cmp
(
s1
->
d©a
, 
s2
->d©a, s1->
Àn
);

111 
	}
}

114 
	$_ß„_utﬂ
(
_ba£
, 
uöt64_t
 
vÆ
, *
buf
)

116 
hex
[] = "0123456789abcdef";

117 
uöt32_t
 
ba£
 = (uöt32_tË
_ba£
;

118 *
buf
-- = 0;

120 *
buf
-- = 
hex
[
vÆ
 % 
ba£
];

121 } (
vÆ
 /
ba£
) != 0);

122  
buf
 + 1;

123 
	}
}

126 
	$_ß„_ôﬂ
(
ba£
, 
öt64_t
 
vÆ
, *
buf
)

128 
hex
[] = "0123456789abcdef";

129 *
‹ig_buf
 = 
buf
;

130 c⁄° 
öt32_t
 
is_√g
 = (
vÆ
 < 0);

131 *
buf
-- = 0;

133 i‡(
is_√g
) {

134 
vÆ
 = -val;

136 i‡(
is_√g
 && 
ba£
 == 16) {

137 
ix
;

138 
vÆ
 -= 1;

139 
ix
 = 0; ix < 16; ++ix)

140 
buf
[-
ix
] = '0';

144 *
buf
-- = 
hex
[
vÆ
 % 
ba£
];

145 } (
vÆ
 /
ba£
) != 0);

147 i‡(
is_√g
 && 
ba£
 == 10) {

148 *
buf
-- = '-';

151 i‡(
is_√g
 && 
ba£
 == 16) {

152 
ix
;

153 
buf
 = 
‹ig_buf
 - 1;

154 
ix
 = 0; ix < 16; ++ix, --
buf
) {

156 *
buf
) {

157 '0': *
buf
 = 'f'; ;

158 '1': *
buf
 = 'e'; ;

159 '2': *
buf
 = 'd'; ;

160 '3': *
buf
 = 'c'; ;

161 '4': *
buf
 = 'b'; ;

162 '5': *
buf
 = 'a'; ;

163 '6': *
buf
 = '9'; ;

164 '7': *
buf
 = '8'; ;

165 '8': *
buf
 = '7'; ;

166 '9': *
buf
 = '6'; ;

167 'a': *
buf
 = '5'; ;

168 'b': *
buf
 = '4'; ;

169 'c': *
buf
 = '3'; ;

170 'd': *
buf
 = '2'; ;

171 'e': *
buf
 = '1'; ;

172 'f': *
buf
 = '0'; ;

177  
buf
 + 1;

178 
	}
}

181 
	$_ß„_check_l⁄gl⁄g
(c⁄° *
fmt
, 
öt32_t
 * 
have_l⁄gl⁄g
)

183 *
have_l⁄gl⁄g
 = 
Ál£
;

184 i‡(*
fmt
 == 'l') {

185 
fmt
++;

186 i‡(*
fmt
 != 'l') {

187 *
have_l⁄gl⁄g
 = ((Ë=(
öt64_t
));

189 
fmt
++;

190 *
have_l⁄gl⁄g
 = 
åue
;

193  
fmt
;

194 
	}
}

197 
	$_ß„_v¢¥ötf
(*
to
, 
size_t
 
size
, c⁄° *
f‹m©
, 
va_li°
 
≠
)

199 *
°¨t
 = 
to
;

200 *
íd
 = 
°¨t
 + 
size
 - 1;

201 ; *
f‹m©
; ++format) {

202 
öt32_t
 
have_l⁄gl⁄g
 = 
Ál£
;

203 i‡(*
f‹m©
 != '%') {

204 i‡(
to
 =
íd
) {

207 *
to
++ = *
f‹m©
;

210 ++
f‹m©
;

212 
f‹m©
 = 
	`_ß„_check_l⁄gl⁄g
(f‹m©, &
have_l⁄gl⁄g
);

214 *
f‹m©
) {

221 
öt64_t
 
ivÆ
 = 0;

222 
uöt64_t
 
uvÆ
 = 0;

223 i‡(*
f‹m©
 == 'p')

224 
have_l⁄gl⁄g
 = ((*Ë=(
uöt64_t
));

225 i‡(
have_l⁄gl⁄g
) {

226 i‡(*
f‹m©
 == 'u') {

227 
uvÆ
 = 
	`va_¨g
(
≠
, 
uöt64_t
);

229 
ivÆ
 = 
	`va_¨g
(
≠
, 
öt64_t
);

232 i‡(*
f‹m©
 == 'u') {

233 
uvÆ
 = 
	`va_¨g
(
≠
, 
uöt32_t
);

235 
ivÆ
 = 
	`va_¨g
(
≠
, 
öt32_t
);

240 
buff
[22];

241 c⁄° 
ba£
 = (*
f‹m©
 == 'x' || *format == 'p') ? 16 : 10;

244 *
vÆ_as_°r
 = (*
f‹m©
 == 'u') ?

245 
	`_ß„_utﬂ
(
ba£
, 
uvÆ
, &
buff
[(buff) - 1]) :

246 
	`_ß„_ôﬂ
(
ba£
, 
ivÆ
, &
buff
[(buff) - 1]);

250 i‡(*
f‹m©
 ='x' && !
have_l⁄gl⁄g
 && 
ivÆ
 < 0) {

251 
vÆ_as_°r
 += 8;

254 *
vÆ_as_°r
 && 
to
 < 
íd
) {

255 *
to
++ = *
vÆ_as_°r
++;

262 c⁄° *
vÆ
 = 
	`va_¨g
(
≠
, *);

263 i‡(!
vÆ
) {

264 
vÆ
 = "(null)";

266 *
vÆ
 && 
to
 < 
íd
) {

267 *
to
++ = *
vÆ
++;

273 *
to
 = 0;

274  ()(
to
 - 
°¨t
);

275 
	}
}

278 
	$_ß„_¢¥ötf
(*
to
, 
size_t
 
n
, c⁄° *
fmt
, ...)

280 
ªsu…
;

281 
va_li°
 
¨gs
;

282 
	`va_°¨t
(
¨gs
, 
fmt
);

283 
ªsu…
 = 
	`_ß„_v¢¥ötf
(
to
, 
n
, 
fmt
, 
¨gs
);

284 
	`va_íd
(
¨gs
);

285  
ªsu…
;

286 
	}
}

	@src/nc_string.h

18 #i‚de‡
_NC_STRING_H_


19 
	#_NC_STRING_H_


	)

21 
	~<°rög.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<°d¨g.h
>

25 
	~<nc_c‹e.h
>

27 
	s°rög
 {

28 
uöt32_t
 
	mÀn
;

29 
uöt8_t
 *
	md©a
;

32 
	#°rög
(
_°r
Ë{ (_°rË- 1, (
uöt8_t
 *)(_°rË}

	)

33 
	#nuŒ_°rög
 { 0, 
NULL
 }

	)

35 
	#°rög_£t_ãxt
(
_°r
, 
_ãxt
) do { \

36 (
_°r
)->
Àn
 = (
uöt32_t
)((
_ãxt
) - 1);\

37 (
_°r
)->
d©a
 = (
uöt8_t
 *)(
_ãxt
); \

38 } 0);

	)

40 
	#°rög_£t_øw
(
_°r
, 
_øw
) do { \

41 (
_°r
)->
Àn
 = (
uöt32_t
)(
	`nc_°æí
(
_øw
)); \

42 (
_°r
)->
d©a
 = (
uöt8_t
 *)(
_øw
); \

43 } 0);

	)

45 
°rög_öô
(
°rög
 *
°r
);

46 
°rög_deöô
(
°rög
 *
°r
);

47 
boﬁ
 
°rög_em±y
(c⁄° 
°rög
 *
°r
);

48 
r°©us_t
 
°rög_du∂iˇã
(
°rög
 *
d°
, c⁄° °rög *
§c
);

49 
r°©us_t
 
°rög_c›y
(
°rög
 *
d°
, c⁄° 
uöt8_t
 *
§c
, 
uöt32_t
 
§˛í
);

50 
°rög_com∑ª
(c⁄° 
°rög
 *
s1
, c⁄° °rög *
s2
);

56 
	#nc_mem˝y
(
_d
, 
_c
, 
_n
) \

57 
	`mem˝y
(
_d
, 
_c
, (
size_t
)(
_n
))

	)

59 
	#nc_memmove
(
_d
, 
_c
, 
_n
) \

60 
	`memmove
(
_d
, 
_c
, (
size_t
)(
_n
))

	)

62 
	#nc_memchr
(
_d
, 
_c
, 
_n
) \

63 
	`memchr
(
_d
, 
_c
, (
size_t
)(
_n
))

	)

65 
	#nc_°æí
(
_s
) \

66 
	`°æí
((*)(
_s
))

	)

68 
	#nc_°∫cmp
(
_s1
, 
_s2
, 
_n
) \

69 
	`°∫cmp
((*)(
_s1
), (*)(
_s2
), (
size_t
)(
_n
))

	)

71 
	#nc_°rchr
(
_p
, 
_l
, 
_c
) \

72 
	`_nc_°rchr
((
uöt8_t
 *)(
_p
), (uöt8_à*)(
_l
), (uöt8_t)(
_c
))

	)

74 
	#nc_°ºchr
(
_p
, 
_s
, 
_c
) \

75 
	`_nc_°ºchr
((
uöt8_t
 *)(
_p
),(uöt8_à*)(
_s
), (uöt8_t)(
_c
))

	)

77 
	#nc_°∫dup
(
_s
, 
_n
) \

78 (
uöt8_t
 *)
	`°∫dup
((*)(
_s
), (
size_t
)(
_n
));

	)

94 
	#nc_¢¥ötf
(
_s
, 
_n
, ...) \

95 
	`¢¥ötf
((*)(
_s
), (
size_t
)(
_n
), 
__VA_ARGS__
)

	)

97 
	#nc_s˙¥ötf
(
_s
, 
_n
, ...) \

98 
	`_s˙¥ötf
((*)(
_s
), (
size_t
)(
_n
), 
__VA_ARGS__
)

	)

100 
	#nc_v¢¥ötf
(
_s
, 
_n
, 
_f
, 
_a
) \

101 
	`v¢¥ötf
((*)(
_s
), (
size_t
)(
_n
), 
_f
, 
_a
)

	)

103 
	#nc_vs˙¥ötf
(
_s
, 
_n
, 
_f
, 
_a
) \

104 
	`_vs˙¥ötf
((*)(
_s
), (
size_t
)(
_n
), 
_f
, 
_a
)

	)

106 
	#nc_°r·ime
(
_s
, 
_n
, 
fmt
, 
tm
) \

107 ()
	`°r·ime
((*)(
_s
), (
size_t
)(
_n
), 
fmt
, 
tm
)

	)

120 
_ß„_v¢¥ötf
(*
to
, 
size_t
 
size
, c⁄° *
f‹m©
, 
va_li°
 
≠
);

121 
_ß„_¢¥ötf
(*
to
, 
size_t
 
n
, c⁄° *
fmt
, ...);

123 
	#nc_ß„_¢¥ötf
(
_s
, 
_n
, ...) \

124 
	`_ß„_¢¥ötf
((*)(
_s
), (
size_t
)(
_n
), 
__VA_ARGS__
)

	)

126 
	#nc_ß„_v¢¥ötf
(
_s
, 
_n
, 
_f
, 
_a
) \

127 
	`_ß„_v¢¥ötf
((*)(
_s
), (
size_t
)(
_n
), 
_f
, 
_a
)

	)

129 
ölöe
 
uöt8_t
 *

130 
	$_nc_°rchr
(
uöt8_t
 *
p
, uöt8_à*
œ°
, uöt8_à
c
)

132 
p
 < 
œ°
) {

133 i‡(*
p
 =
c
) {

134  
p
;

136 
p
++;

139  
NULL
;

140 
	}
}

142 
ölöe
 
uöt8_t
 *

143 
	$_nc_°ºchr
(
uöt8_t
 *
p
, uöt8_à*
°¨t
, uöt8_à
c
)

145 
p
 >
°¨t
) {

146 i‡(*
p
 =
c
) {

147  
p
;

149 
p
--;

152  
NULL
;

153 
	}
}

	@src/nc_util.c

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

20 
	~<°d¨g.h
>

21 
	~<°rög.h
>

22 
	~<time.h
>

23 
	~<uni°d.h
>

24 
	~<f˙é.h
>

25 
	~<√tdb.h
>

27 
	~<sys/time.h
>

28 
	~<sys/ty≥s.h
>

29 
	~<sys/sockë.h
>

30 
	~<sys/io˘l.h
>

32 
	~<√töë/ö.h
>

33 
	~<√töë/t˝.h
>

35 
	~<nc_c‹e.h
>

37 #ifde‡
NC_HAVE_BACKTRACE


38 
	~<execöfo.h
>

42 
	$nc_£t_blockög
(
sd
)

44 
Êags
;

46 
Êags
 = 
	`f˙é
(
sd
, 
F_GETFL
, 0);

47 i‡(
Êags
 < 0) {

48  
Êags
;

51  
	`f˙é
(
sd
, 
F_SETFL
, 
Êags
 & ~
O_NONBLOCK
);

52 
	}
}

55 
	$nc_£t_n⁄blockög
(
sd
)

57 
Êags
;

59 
Êags
 = 
	`f˙é
(
sd
, 
F_GETFL
, 0);

60 i‡(
Êags
 < 0) {

61  
Êags
;

64  
	`f˙é
(
sd
, 
F_SETFL
, 
Êags
 | 
O_NONBLOCK
);

65 
	}
}

68 
	$nc_£t_ªu£addr
(
sd
)

70 
ªu£
;

71 
sockÀn_t
 
Àn
;

73 
ªu£
 = 1;

74 
Àn
 = (
ªu£
);

76  
	`£tsock›t
(
sd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
ªu£
, 
Àn
);

77 
	}
}

88 
	$nc_£t_t˝nodñay
(
sd
)

90 
nodñay
;

91 
sockÀn_t
 
Àn
;

93 
nodñay
 = 1;

94 
Àn
 = (
nodñay
);

96  
	`£tsock›t
(
sd
, 
IPPROTO_TCP
, 
TCP_NODELAY
, &
nodñay
, 
Àn
);

97 
	}
}

100 
	$nc_£t_lögî
(
sd
, 
timeout
)

102 
lögî
Üinger;

103 
sockÀn_t
 
Àn
;

105 
lögî
.
l_⁄off
 = 1;

106 
lögî
.
l_lögî
 = 
timeout
;

108 
Àn
 = (
lögî
);

110  
	`£tsock›t
(
sd
, 
SOL_SOCKET
, 
SO_LINGER
, &
lögî
, 
Àn
);

111 
	}
}

114 
	$nc_£t_t˝kì∑live
(
sd
)

116 
vÆ
 = 1;

117  
	`£tsock›t
(
sd
, 
SOL_SOCKET
, 
SO_KEEPALIVE
, &
vÆ
, (val));

118 
	}
}

121 
	$nc_£t_¢dbuf
(
sd
, 
size
)

123 
sockÀn_t
 
Àn
;

125 
Àn
 = (
size
);

127  
	`£tsock›t
(
sd
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
size
, 
Àn
);

128 
	}
}

131 
	$nc_£t_rcvbuf
(
sd
, 
size
)

133 
sockÀn_t
 
Àn
;

135 
Àn
 = (
size
);

137  
	`£tsock›t
(
sd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
size
, 
Àn
);

138 
	}
}

141 
	$nc_gë_s€º‹
(
sd
)

143 
°©us
, 
îr
;

144 
sockÀn_t
 
Àn
;

146 
îr
 = 0;

147 
Àn
 = (
îr
);

149 
°©us
 = 
	`gësock›t
(
sd
, 
SOL_SOCKET
, 
SO_ERROR
, &
îr
, &
Àn
);

150 i‡(
°©us
 == 0) {

151 
î∫o
 = 
îr
;

154  
°©us
;

155 
	}
}

158 
	$nc_gë_¢dbuf
(
sd
)

160 
°©us
, 
size
;

161 
sockÀn_t
 
Àn
;

163 
size
 = 0;

164 
Àn
 = (
size
);

166 
°©us
 = 
	`gësock›t
(
sd
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
size
, &
Àn
);

167 i‡(
°©us
 < 0) {

168  
°©us
;

171  
size
;

172 
	}
}

175 
	$nc_gë_rcvbuf
(
sd
)

177 
°©us
, 
size
;

178 
sockÀn_t
 
Àn
;

180 
size
 = 0;

181 
Àn
 = (
size
);

183 
°©us
 = 
	`gësock›t
(
sd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
size
, &
Àn
);

184 i‡(
°©us
 < 0) {

185  
°©us
;

188  
size
;

189 
	}
}

192 
	$_nc_©oi
(
uöt8_t
 *
löe
, 
size_t
 
n
)

194 
vÆue
;

196 i‡(
n
 == 0) {

200 
vÆue
 = 0; 
n
--; 
löe
++) {

201 i‡(*
löe
 < '0' || *line > '9') {

205 
vÆue
 = vÆuê* 10 + (*
löe
 - '0');

208 i‡(
vÆue
 < 0) {

212  
vÆue
;

213 
	}
}

215 
boﬁ


216 
	$nc_vÆid_p‹t
(
n
)

218 i‡(
n
 < 1 ||Ç > 
UINT16_MAX
) {

219  
Ál£
;

222  
åue
;

223 
	}
}

226 
	$_nc_Æloc
(
size_t
 
size
, c⁄° *
«me
, 
löe
)

228 *
p
;

230 
	`ASSERT
(
size
 != 0);

232 
p
 = 
	`mÆloc
(
size
);

233 i‡(
p
 =
NULL
) {

234 
	`log_îr‹
("mÆloc(%zuËÁûed @ %s:%d", 
size
, 
«me
, 
löe
);

236 
	`log_debug
(
LOG_VVERB
, "mÆloc(%zuË© %∞@ %s:%d", 
size
, 
p
, 
«me
, 
löe
);

239  
p
;

240 
	}
}

243 
	$_nc_zÆloc
(
size_t
 
size
, c⁄° *
«me
, 
löe
)

245 *
p
;

247 
p
 = 
	`_nc_Æloc
(
size
, 
«me
, 
löe
);

248 i‡(
p
 !
NULL
) {

249 
	`mem£t
(
p
, 0, 
size
);

252  
p
;

253 
	}
}

256 
	$_nc_ˇŒoc
(
size_t
 
nmemb
, size_à
size
, c⁄° *
«me
, 
löe
)

258  
	`_nc_zÆloc
(
nmemb
 * 
size
, 
«me
, 
löe
);

259 
	}
}

262 
	$_nc_ªÆloc
(*
±r
, 
size_t
 
size
, c⁄° *
«me
, 
löe
)

264 *
p
;

266 
	`ASSERT
(
size
 != 0);

268 
p
 = 
	`ªÆloc
(
±r
, 
size
);

269 i‡(
p
 =
NULL
) {

270 
	`log_îr‹
("ªÆloc(%zuËÁûed @ %s:%d", 
size
, 
«me
, 
löe
);

272 
	`log_debug
(
LOG_VVERB
, "ªÆloc(%zuË© %∞@ %s:%d", 
size
, 
p
, 
«me
, 
löe
);

275  
p
;

276 
	}
}

279 
	$_nc_‰ì
(*
±r
, c⁄° *
«me
, 
löe
)

281 
	`ASSERT
(
±r
 !
NULL
);

282 
	`log_debug
(
LOG_VVERB
, "‰ì(%pË@ %s:%d", 
±r
, 
«me
, 
löe
);

283 
	`‰ì
(
±r
);

284 
	}
}

287 
	$nc_°ackåa˚
(
skù_cou¡
)

289 #ifde‡
NC_HAVE_BACKTRACE


290 *
°ack
[64];

291 **
symbﬁs
;

292 
size
, 
i
, 
j
;

294 
size
 = 
	`backåa˚
(
°ack
, 64);

295 
symbﬁs
 = 
	`backåa˚_symbﬁs
(
°ack
, 
size
);

296 i‡(
symbﬁs
 =
NULL
) {

300 
skù_cou¡
++;

302 
i
 = 
skù_cou¡
, 
j
 = 0; i < 
size
; i++, j++) {

303 
	`loga
("[%d] %s", 
j
, 
symbﬁs
[
i
]);

306 
	`‰ì
(
symbﬁs
);

308 
	}
}

311 
	$nc_°ackåa˚_fd
(
fd
)

313 #ifde‡
NC_HAVE_BACKTRACE


314 *
°ack
[64];

315 
size
;

317 
size
 = 
	`backåa˚
(
°ack
, 64);

318 
	`backåa˚_symbﬁs_fd
(
°ack
, 
size
, 
fd
);

320 
	}
}

323 
	$nc_as£π
(c⁄° *
c⁄d
, c⁄° *
fûe
, 
löe
, 
∑nic
)

325 
	`log_îr‹
("as£π '%s' faûed @ (%s, %d)", 
c⁄d
, 
fûe
, 
löe
);

326 i‡(
∑nic
) {

327 
	`nc_°ackåa˚
(1);

328 
	`ab‹t
();

330 
	}
}

333 
	$_vs˙¥ötf
(*
buf
, 
size_t
 
size
, c⁄° *
fmt
, 
va_li°
 
¨gs
)

335 
n
;

337 
n
 = 
	`v¢¥ötf
(
buf
, 
size
, 
fmt
, 
¨gs
);

349 i‡(
n
 <= 0) {

353 i‡(
n
 < (Ë
size
) {

354  
n
;

357  ()(
size
 - 1);

358 
	}
}

361 
	$_s˙¥ötf
(*
buf
, 
size_t
 
size
, c⁄° *
fmt
, ...)

363 
va_li°
 
¨gs
;

364 
n
;

366 
	`va_°¨t
(
¨gs
, 
fmt
);

367 
n
 = 
	`_vs˙¥ötf
(
buf
, 
size
, 
fmt
, 
¨gs
);

368 
	`va_íd
(
¨gs
);

370  
n
;

371 
	}
}

376 
ssize_t


377 
	$_nc_£ndn
(
sd
, c⁄° *
v±r
, 
size_t
 
n
)

379 
size_t
 
∆e·
;

380 
ssize_t
 
n£nd
;

381 c⁄° *
±r
;

383 
±r
 = 
v±r
;

384 
∆e·
 = 
n
;

385 
∆e·
 > 0) {

386 
n£nd
 = 
	`£nd
(
sd
, 
±r
, 
∆e·
, 0);

387 i‡(
n£nd
 < 0) {

388 i‡(
î∫o
 =
EINTR
) {

391  
n£nd
;

393 i‡(
n£nd
 == 0) {

397 
∆e·
 -(
size_t
)
n£nd
;

398 
±r
 +
n£nd
;

401  (
ssize_t
)
n
;

402 
	}
}

407 
ssize_t


408 
	$_nc_ªcvn
(
sd
, *
v±r
, 
size_t
 
n
)

410 
size_t
 
∆e·
;

411 
ssize_t
 
ƒecv
;

412 *
±r
;

414 
±r
 = 
v±r
;

415 
∆e·
 = 
n
;

416 
∆e·
 > 0) {

417 
ƒecv
 = 
	`ªcv
(
sd
, 
±r
, 
∆e·
, 0);

418 i‡(
ƒecv
 < 0) {

419 i‡(
î∫o
 =
EINTR
) {

422  
ƒecv
;

424 i‡(
ƒecv
 == 0) {

428 
∆e·
 -(
size_t
)
ƒecv
;

429 
±r
 +
ƒecv
;

432  (
ssize_t
)(
n
 - 
∆e·
);

433 
	}
}

438 
öt64_t


439 
	$nc_u£c_now
()

441 
timevÆ
 
now
;

442 
öt64_t
 
u£c
;

443 
°©us
;

445 
°©us
 = 
	`gëtimeofday
(&
now
, 
NULL
);

446 i‡(
°©us
 < 0) {

447 
	`log_îr‹
("gëtimeofday faûed: %s", 
	`°ªº‹
(
î∫o
));

451 
u£c
 = (
öt64_t
)
now
.
tv_£c
 * 1000000LL + (öt64_tÍow.
tv_u£c
;

453  
u£c
;

454 
	}
}

459 
öt64_t


460 
	$nc_m£c_now
()

462  
	`nc_u£c_now
() / 1000LL;

463 
	}
}

466 
	$nc_ªsﬁve_öë
(
°rög
 *
«me
, 
p‹t
, 
socköfo
 *
si
)

468 
°©us
;

469 
addröfo
 *
ai
, *
ˇi
;

470 
addröfo
 
höts
;

471 *
node
, 
£rvi˚
[
NC_UINTMAX_MAXLEN
];

472 
boﬁ
 
found
;

474 
	`ASSERT
(
	`nc_vÆid_p‹t
(
p‹t
));

476 
	`mem£t
(&
höts
, 0, (hints));

477 
höts
.
ai_Êags
 = 
AI_NUMERICSERV
;

478 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

479 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

480 
höts
.
ai_¥Ÿocﬁ
 = 0;

481 
höts
.
ai_addæí
 = 0;

482 
höts
.
ai_addr
 = 
NULL
;

483 
höts
.
ai_ˇn⁄«me
 = 
NULL
;

485 i‡(
«me
 !
NULL
) {

486 
node
 = (*)
«me
->
d©a
;

494 
node
 = 
NULL
;

495 
höts
.
ai_Êags
 |
AI_PASSIVE
;

498 
	`nc_¢¥ötf
(
£rvi˚
, 
NC_UINTMAX_MAXLEN
, "%d", 
p‹t
);

504 
°©us
 = 
	`gëaddröfo
(
node
, 
£rvi˚
, &
höts
, &
ai
);

505 i‡(
°©us
 != 0) {

506 
	`log_îr‹
("addressÑesolution ofÇode '%s' service '%s' failed: %s",

507 
node
, 
£rvi˚
, 
	`gai_°ªº‹
(
°©us
));

522 
ˇi
 = 
ai
, 
found
 = 
Ál£
; caò!
NULL
; caòˇi->
ai_√xt
) {

523 
si
->
Ámûy
 = 
ˇi
->
ai_Ámûy
;

524 
si
->
addæí
 = 
ˇi
->
ai_addæí
;

525 
	`nc_mem˝y
(&
si
->
addr
, 
ˇi
->
ai_addr
, si->
addæí
);

526 
found
 = 
åue
;

530 
	`‰ìaddröfo
(
ai
);

532  !
found
 ? -1 : 0;

533 
	}
}

536 
	$nc_ªsﬁve_unix
(
°rög
 *
«me
, 
socköfo
 *
si
)

538 
sockaddr_un
 *
un
;

540 i‡(
«me
->
Àn
 >
NC_UNIX_ADDRSTRLEN
) {

544 
un
 = &
si
->
addr
.un;

546 
un
->
sun_Ámûy
 = 
AF_UNIX
;

547 
	`nc_mem˝y
(
un
->
sun_∑th
, 
«me
->
d©a
,Çame->
Àn
);

548 
un
->
sun_∑th
[
«me
->
Àn
] = '\0';

550 
si
->
Ámûy
 = 
AF_UNIX
;

551 
si
->
addæí
 = (*
un
);

555 
	}
}

564 
	$nc_ªsﬁve
(
°rög
 *
«me
, 
p‹t
, 
socköfo
 *
si
)

566 i‡(
«me
 !
NULL
 &&Çame->
d©a
[0] == '/') {

567  
	`nc_ªsﬁve_unix
(
«me
, 
si
);

570  
	`nc_ªsﬁve_öë
(
«me
, 
p‹t
, 
si
);

571 
	}
}

580 
	$nc_uƒesﬁve_addr
(
sockaddr
 *
addr
, 
sockÀn_t
 
addæí
)

582 
uƒesﬁve
[
NI_MAXHOST
 + 
NI_MAXSERV
];

583 
ho°
[
NI_MAXHOST
], 
£rvi˚
[
NI_MAXSERV
];

584 
°©us
;

586 
°©us
 = 
	`gë«meöfo
(
addr
, 
addæí
, 
ho°
, (host),

587 
£rvi˚
, (service),

588 
NI_NUMERICHOST
 | 
NI_NUMERICSERV
);

589 i‡(
°©us
 < 0) {

593 
	`nc_¢¥ötf
(
uƒesﬁve
, (uƒesﬁve), "%s:%s", 
ho°
, 
£rvi˚
);

595  
uƒesﬁve
;

596 
	}
}

605 
	$nc_uƒesﬁve_≥î_desc
(
sd
)

607 
socköfo
 
si
;

608 
sockaddr
 *
addr
;

609 
sockÀn_t
 
addæí
;

610 
°©us
;

612 
	`mem£t
(&
si
, 0, (si));

613 
addr
 = (
sockaddr
 *)&
si
.addr;

614 
addæí
 = (
si
.
addr
);

616 
°©us
 = 
	`gë≥î«me
(
sd
, 
addr
, &
addæí
);

617 i‡(
°©us
 < 0) {

621  
	`nc_uƒesﬁve_addr
(
addr
, 
addæí
);

622 
	}
}

631 
	$nc_uƒesﬁve_desc
(
sd
)

633 
socköfo
 
si
;

634 
sockaddr
 *
addr
;

635 
sockÀn_t
 
addæí
;

636 
°©us
;

638 
	`mem£t
(&
si
, 0, (si));

639 
addr
 = (
sockaddr
 *)&
si
.addr;

640 
addæí
 = (
si
.
addr
);

642 
°©us
 = 
	`gësock«me
(
sd
, 
addr
, &
addæí
);

643 i‡(
°©us
 < 0) {

647  
	`nc_uƒesﬁve_addr
(
addr
, 
addæí
);

648 
	}
}

651 
uöt64_t


652 
	$nc_now_us
()

654 
time•ec
 
ts
;

655 
	`˛ock_gëtime
(
CLOCK_MONOTONIC
, &
ts
);

656  (
ts
.
tv_£c
 * 1000000 + (
uöt64_t
Ès.
tv_n£c
 / 1000);

657 
	}
}

660 
	$nc_wrôe_fûe
(*
fûï©h
, *
buf
, 
buf_Àn
)

662 
FILE
 *
fh
 = 
	`f›í
(
fûï©h
, "w");

663 i‡(!
fh
) {

664 
	`log_îr‹
("ÁûedÅÿ›í fûêf‹ wrôe: %s\n", 
fûï©h
);

667 
ªt
 = ()
	`fwrôe
(
buf
, 1, 
buf_Àn
, 
fh
);

668 
	`f˛o£
(
fh
);

669  
ªt
;

670 
	}
}

	@src/nc_util.h

18 #i‚de‡
_NC_UTIL_H_


19 
	#_NC_UTIL_H_


	)

21 
	~<°d¨g.h
>

23 
	#LF
 (
uöt8_t
Ë10

	)

24 
	#CR
 (
uöt8_t
Ë13

	)

25 
	#CRLF
 "\x0d\x0a"

	)

26 
	#CRLF_LEN
 (("\x0d\x0a"Ë- 1)

	)

28 
	#NELEMS
(
a
Ë((◊)Ë/ (◊)[0]))

	)

30 
	#MIN
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

31 
	#MAX
(
a
, 
b
Ë(◊Ë> (bË? (aË: (b))

	)

33 
	#SQUARE
(
d
Ë((dË* (d))

	)

34 
	#VAR
(
s
, 
s2
, 
n
Ë((“Ë< 2Ë? 0.0 : ((s2Ë- 
	`SQUARE
(s)/“)Ë/ (“Ë- 1))

	)

35 
	#STDDEV
(
s
, 
s2
, 
n
Ë((“Ë< 2Ë? 0.0 : 
	`sqπ
(
	`VAR
((s), (s2), (n))))

	)

37 
	#NC_INET4_ADDRSTRLEN
 (("255.255.255.255"Ë- 1)

	)

38 
	#NC_INET6_ADDRSTRLEN
 \

39 (("ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255"Ë- 1)

	)

40 
	#NC_INET_ADDRSTRLEN
 
	`MAX
(
NC_INET4_ADDRSTRLEN
, 
NC_INET6_ADDRSTRLEN
)

	)

41 
	#NC_UNIX_ADDRSTRLEN
 \

42 ((
sockaddr_un
Ë- 
	`off£tof
(sockaddr_un, 
sun_∑th
))

	)

44 
	#NC_MAXHOSTNAMELEN
 256

	)

56 
	#NC_UINT8_MAXLEN
 (3 + 1)

	)

57 
	#NC_UINT16_MAXLEN
 (5 + 1)

	)

58 
	#NC_UINT32_MAXLEN
 (10 + 1)

	)

59 
	#NC_UINT64_MAXLEN
 (20 + 1)

	)

60 
	#NC_UINTMAX_MAXLEN
 
NC_UINT64_MAXLEN


	)

66 
	#NC_ALIGNMENT
 (Ë

	)

67 
	#NC_ALIGN
(
d
, 
n
Ë(((dË+ (¿- 1)Ë& ~“ - 1))

	)

68 
	#NC_ALIGN_PTR
(
p
, 
n
) \

69 (*Ë(((
uöçå_t
Ë(
p
Ë+ ((uöçå_tË
n
 - 1)Ë& ~((uöçå_tË¿- 1))

	)

75 
	#nc_gëho°«me
(
_«me
, 
_Àn
) \

76 
	`gëho°«me
((*)
_«me
, (
size_t
)
_Àn
)

	)

78 
	#nc_©oi
(
_löe
, 
_n
) \

79 
	`_nc_©oi
((
uöt8_t
 *)
_löe
, (
size_t
)
_n
)

	)

81 
nc_£t_blockög
(
sd
);

82 
nc_£t_n⁄blockög
(
sd
);

83 
nc_£t_ªu£addr
(
sd
);

84 
nc_£t_t˝nodñay
(
sd
);

85 
nc_£t_lögî
(
sd
, 
timeout
);

86 
nc_£t_¢dbuf
(
sd
, 
size
);

87 
nc_£t_rcvbuf
(
sd
, 
size
);

88 
nc_£t_t˝kì∑live
(
sd
);

89 
nc_gë_s€º‹
(
sd
);

90 
nc_gë_¢dbuf
(
sd
);

91 
nc_gë_rcvbuf
(
sd
);

93 
_nc_©oi
(
uöt8_t
 *
löe
, 
size_t
 
n
);

94 
boﬁ
 
nc_vÆid_p‹t
(
n
);

102 
	#nc_Æloc
(
_s
) \

103 
	`_nc_Æloc
((
size_t
)(
_s
), 
__FILE__
, 
__LINE__
)

	)

105 
	#nc_zÆloc
(
_s
) \

106 
	`_nc_zÆloc
((
size_t
)(
_s
), 
__FILE__
, 
__LINE__
)

	)

108 
	#nc_ˇŒoc
(
_n
, 
_s
) \

109 
	`_nc_ˇŒoc
((
size_t
)(
_n
), (size_t)(
_s
), 
__FILE__
, 
__LINE__
)

	)

111 
	#nc_ªÆloc
(
_p
, 
_s
) \

112 
	`_nc_ªÆloc
(
_p
, (
size_t
)(
_s
), 
__FILE__
, 
__LINE__
)

	)

114 
	#nc_‰ì
(
_p
) do { \

115 
	`_nc_‰ì
(
_p
, 
__FILE__
, 
__LINE__
); \

116 (
_p
Ë
NULL
; \

117 } 0)

	)

119 *
_nc_Æloc
(
size_t
 
size
, c⁄° *
«me
, 
löe
);

120 *
_nc_zÆloc
(
size_t
 
size
, c⁄° *
«me
, 
löe
);

121 *
_nc_ˇŒoc
(
size_t
 
nmemb
, size_à
size
, c⁄° *
«me
, 
löe
);

122 *
_nc_ªÆloc
(*
±r
, 
size_t
 
size
, c⁄° *
«me
, 
löe
);

123 
_nc_‰ì
(*
±r
, c⁄° *
«me
, 
löe
);

129 
	#nc_£ndn
(
_s
, 
_b
, 
_n
) \

130 
	`_nc_£ndn
(
_s
, 
_b
, (
size_t
)(
_n
))

	)

132 
	#nc_ªcvn
(
_s
, 
_b
, 
_n
) \

133 
	`_nc_ªcvn
(
_s
, 
_b
, (
size_t
)(
_n
))

	)

139 
	#nc_ªad
(
_d
, 
_b
, 
_n
) \

140 
	`ªad
(
_d
, 
_b
, (
size_t
)(
_n
))

	)

142 
	#nc_ªadv
(
_d
, 
_b
, 
_n
) \

143 
	`ªadv
(
_d
, 
_b
, ()(
_n
))

	)

145 
	#nc_wrôe
(
_d
, 
_b
, 
_n
) \

146 
	`wrôe
(
_d
, 
_b
, (
size_t
)(
_n
))

	)

148 
	#nc_wrôev
(
_d
, 
_b
, 
_n
) \

149 
	`wrôev
(
_d
, 
_b
, ()(
_n
))

	)

151 
ssize_t
 
_nc_£ndn
(
sd
, c⁄° *
v±r
, 
size_t
 
n
);

152 
ssize_t
 
_nc_ªcvn
(
sd
, *
v±r
, 
size_t
 
n
);

159 #ifde‡
NC_ASSERT_PANIC


161 
	#ASSERT
(
_x
) do { \

162 i‡(!(
_x
)) { \

163 
	`nc_as£π
(#_x, 
__FILE__
, 
__LINE__
, 1); \

165 } 0)

	)

167 
	#NOT_REACHED
(Ë
	`ASSERT
(0)

	)

169 #ñi‡
NC_ASSERT_LOG


171 
	#ASSERT
(
_x
) do { \

172 i‡(!(
_x
)) { \

173 
	`nc_as£π
(#_x, 
__FILE__
, 
__LINE__
, 0); \

175 } 0)

	)

177 
	#NOT_REACHED
(Ë
	`ASSERT
(0)

	)

181 
	#ASSERT
(
_x
)

	)

183 
	#NOT_REACHED
()

	)

187 
nc_as£π
(c⁄° *
c⁄d
, c⁄° *
fûe
, 
löe
, 
∑nic
);

188 
nc_°ackåa˚
(
skù_cou¡
);

189 
nc_°ackåa˚_fd
(
fd
);

191 
_s˙¥ötf
(*
buf
, 
size_t
 
size
, c⁄° *
fmt
, ...);

192 
_vs˙¥ötf
(*
buf
, 
size_t
 
size
, c⁄° *
fmt
, 
va_li°
 
¨gs
);

193 
öt64_t
 
nc_u£c_now
();

194 
öt64_t
 
nc_m£c_now
();

201 
	ssocköfo
 {

202 
	mÁmûy
;

203 
sockÀn_t
 
	maddæí
;

205 
sockaddr_ö
 
	mö
;

206 
sockaddr_ö6
 
	mö6
;

207 
sockaddr_un
 
	mun
;

208 } 
	maddr
;

211 
nc_ªsﬁve
(
°rög
 *
«me
, 
p‹t
, 
socköfo
 *
si
);

212 *
nc_uƒesﬁve_addr
(
sockaddr
 *
addr
, 
sockÀn_t
 
addæí
);

213 *
nc_uƒesﬁve_≥î_desc
(
sd
);

214 *
nc_uƒesﬁve_desc
(
sd
);

216 
uöt64_t
 
nc_now_us
();

217 
nc_wrôe_fûe
(*
fûï©h
, *
buf
, 
buf_Àn
);

	@src/parson/parson.c

23 #ifde‡
_MSC_VER


24 
	#_CRT_SECURE_NO_WARNINGS


	)

27 
	~"∑rs⁄.h
"

29 
	~<°dio.h
>

30 
	~<°dlib.h
>

31 
	~<°rög.h
>

32 
	~<˘y≥.h
>

33 
	~<m©h.h
>

35 
	#STARTING_CAPACITY
 15

	)

36 
	#ARRAY_MAX_CAPACITY
 122880

	)

37 
	#OBJECT_MAX_CAPACITY
 960

	)

38 
	#MAX_NESTING
 19

	)

39 
	#DOUBLE_SERIALIZATION_FORMAT
 "%f"

	)

41 
	#SIZEOF_TOKEN
(
a
Ë(◊Ë- 1)

	)

42 
	#SKIP_CHAR
(
°r
Ë((*°r)++)

	)

43 
	#SKIP_WHITESPACES
(
°r
Ë
	`is•a˚
(**°r)Ë{ 
	`SKIP_CHAR
(°r); }

	)

44 
	#MAX
(
a
, 
b
Ë(◊Ë> (bË? (aË: (b))

	)

46 #unde‡
mÆloc


47 #unde‡
‰ì


49 
JSON_MÆloc_Fun˘i⁄
 
	g∑rs⁄_mÆloc
 = 
mÆloc
;

50 
JSON_Fªe_Fun˘i⁄
 
	g∑rs⁄_‰ì
 = 
‰ì
;

52 
	#IS_CONT
(
b
Ë((()(bË& 0xC0Ë=0x80Ë

	)

55 
	ujs⁄_vÆue_vÆue
 {

56 *
	m°rög
;

57 
	mnumbî
;

58 
JSON_Obje˘
 *
	mobje˘
;

59 
JSON_Aºay
 *
	m¨øy
;

60 
	mboﬁón
;

61 
	mnuŒ
;

62 } 
	tJSON_VÆue_VÆue
;

64 
	sjs⁄_vÆue_t
 {

65 
JSON_VÆue_Ty≥
 
	mty≥
;

66 
JSON_VÆue_VÆue
 
	mvÆue
;

69 
	sjs⁄_obje˘_t
 {

70 **
	m«mes
;

71 
JSON_VÆue
 **
	mvÆues
;

72 
size_t
 
	mcou¡
;

73 
size_t
 
	mˇ∑côy
;

76 
	sjs⁄_¨øy_t
 {

77 
JSON_VÆue
 **
	môems
;

78 
size_t
 
	mcou¡
;

79 
size_t
 
	mˇ∑côy
;

83 * 
ªad_fûe
(c⁄° *
fûíame
);

84 
ªmove_commíts
(*
°rög
, c⁄° *
°¨t_tokí
, c⁄° *
íd_tokí
);

85 * 
∑rs⁄_°∫dup
(c⁄° *
°rög
, 
size_t
 
n
);

86 * 
∑rs⁄_°rdup
(c⁄° *
°rög
);

87 
is_utf16_hex
(c⁄° *
°rög
);

88 
num_byãs_ö_utf8_£quí˚
(
c
);

89 
vîify_utf8_£quí˚
(c⁄° *
°rög
, *
Àn
);

90 
is_vÆid_utf8
(c⁄° *
°rög
, 
size_t
 
°rög_Àn
);

91 
is_decimÆ
(c⁄° *
°rög
, 
size_t
 
Àngth
);

94 
JSON_Obje˘
 * 
js⁄_obje˘_öô
();

95 
JSON_Sètus
 
js⁄_obje˘_add
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
JSON_VÆue
 *
vÆue
);

96 
JSON_Sètus
 
js⁄_obje˘_ªsize
(
JSON_Obje˘
 *
obje˘
, 
size_t
 
√w_ˇ∑côy
);

97 
JSON_VÆue
 * 
js⁄_obje˘_ngë_vÆue
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
size_t
 
n
);

98 
js⁄_obje˘_‰ì
(
JSON_Obje˘
 *
obje˘
);

101 
JSON_Aºay
 * 
js⁄_¨øy_öô
();

102 
JSON_Sètus
 
js⁄_¨øy_add
(
JSON_Aºay
 *
¨øy
, 
JSON_VÆue
 *
vÆue
);

103 
JSON_Sètus
 
js⁄_¨øy_ªsize
(
JSON_Aºay
 *
¨øy
, 
size_t
 
√w_ˇ∑côy
);

104 
js⁄_¨øy_‰ì
(
JSON_Aºay
 *
¨øy
);

107 
JSON_VÆue
 * 
js⁄_vÆue_öô_°rög_no_c›y
(*
°rög
);

110 
skù_quŸes
(c⁄° **
°rög
);

111 
∑r£_utf_16
(c⁄° **
u≈ro˚s£d
, **
¥o˚s£d
);

112 * 
¥o˚ss_°rög
(c⁄° *
öput
, 
size_t
 
Àn
);

113 * 
gë_quŸed_°rög
(c⁄° **
°rög
);

114 
JSON_VÆue
 * 
∑r£_obje˘_vÆue
(c⁄° **
°rög
, 
size_t
 
√°ög
);

115 
JSON_VÆue
 * 
∑r£_¨øy_vÆue
(c⁄° **
°rög
, 
size_t
 
√°ög
);

116 
JSON_VÆue
 * 
∑r£_°rög_vÆue
(c⁄° **
°rög
);

117 
JSON_VÆue
 * 
∑r£_boﬁón_vÆue
(c⁄° **
°rög
);

118 
JSON_VÆue
 * 
∑r£_numbî_vÆue
(c⁄° **
°rög
);

119 
JSON_VÆue
 * 
∑r£_nuŒ_vÆue
(c⁄° **
°rög
);

120 
JSON_VÆue
 * 
∑r£_vÆue
(c⁄° **
°rög
, 
size_t
 
√°ög
);

123 
js⁄_£rülize_to_buf„r_r
(c⁄° 
JSON_VÆue
 *
vÆue
, *
buf
, 
Àvñ
, 
is_¥ëty
, *
num_buf
);

124 
js⁄_£rülize_°rög
(c⁄° *
°rög
, *
buf
);

125 
≠≥nd_ödít
(*
buf
, 
Àvñ
);

126 
≠≥nd_°rög
(*
buf
, c⁄° *
°rög
);

129 * 
	$∑rs⁄_°∫dup
(c⁄° *
°rög
, 
size_t
 
n
) {

130 *
ouçut_°rög
 = (*)
	`∑rs⁄_mÆloc
(
n
 + 1);

131 i‡(!
ouçut_°rög
)

132  
NULL
;

133 
ouçut_°rög
[
n
] = '\0';

134 
	`°∫˝y
(
ouçut_°rög
, 
°rög
, 
n
);

135  
ouçut_°rög
;

136 
	}
}

138 * 
	$∑rs⁄_°rdup
(c⁄° *
°rög
) {

139  
	`∑rs⁄_°∫dup
(
°rög
, 
	`°æí
(string));

140 
	}
}

142 
	$is_utf16_hex
(c⁄° *
s
) {

143  
	`isxdigô
(
s
[0]) && isxdigit(s[1]) && isxdigit(s[2]) && isxdigit(s[3]);

144 
	}
}

146 
	$num_byãs_ö_utf8_£quí˚
(
c
) {

147 i‡(
c
 =0xC0 || c =0xC1 || c > 0xF4 || 
	`IS_CONT
(c)) {

149 } i‡((
c
 & 0x80) == 0) {

151 } i‡((
c
 & 0xE0) == 0xC0) {

153 } i‡((
c
 & 0xF0) == 0xE0) {

155 } i‡((
c
 & 0xF8) == 0xF0) {

159 
	}
}

161 
	$vîify_utf8_£quí˚
(c⁄° *
°rög
, *
Àn
) {

162 
˝
 = 0;

163 *
Àn
 = 
	`num_byãs_ö_utf8_£quí˚
(
°rög
[0]);

165 i‡(*
Àn
 == 1) {

166 
˝
 = 
°rög
[0];

167 } i‡(*
Àn
 =2 && 
	`IS_CONT
(
°rög
[1])) {

168 
˝
 = 
°rög
[0] & 0x1F;

169 
˝
 = (˝ << 6Ë| (
°rög
[1] & 0x3F);

170 } i‡(*
Àn
 =3 && 
	`IS_CONT
(
°rög
[1]) && IS_CONT(string[2])) {

171 
˝
 = (()
°rög
[0]) & 0xF;

172 
˝
 = (˝ << 6Ë| (
°rög
[1] & 0x3F);

173 
˝
 = (˝ << 6Ë| (
°rög
[2] & 0x3F);

174 } i‡(*
Àn
 =4 && 
	`IS_CONT
(
°rög
[1]) && IS_CONT(string[2]) && IS_CONT(string[3])) {

175 
˝
 = 
°rög
[0] & 0x7;

176 
˝
 = (˝ << 6Ë| (
°rög
[1] & 0x3F);

177 
˝
 = (˝ << 6Ë| (
°rög
[2] & 0x3F);

178 
˝
 = (˝ << 6Ë| (
°rög
[3] & 0x3F);

184 i‡((
˝
 < 0x80 && *
Àn
 > 1) ||

185 (
˝
 < 0x800 && *
Àn
 > 2) ||

186 (
˝
 < 0x10000 && *
Àn
 > 3)) {

191 i‡(
˝
 > 0x10FFFF) {

196 i‡(
˝
 >= 0xD800 && cp <= 0xDFFF) {

201 
	}
}

203 
	$is_vÆid_utf8
(c⁄° *
°rög
, 
size_t
 
°rög_Àn
) {

204 
Àn
 = 0;

205 c⁄° *
°rög_íd
 = 
°rög
 + 
°rög_Àn
;

206 
°rög
 < 
°rög_íd
) {

207 i‡(!
	`vîify_utf8_£quí˚
((c⁄° *)
°rög
, &
Àn
)) {

210 
°rög
 +
Àn
;

213 
	}
}

215 
	$is_decimÆ
(c⁄° *
°rög
, 
size_t
 
Àngth
) {

216 i‡(
Àngth
 > 1 && 
°rög
[0] == '0' && string[1] != '.')

218 i‡(
Àngth
 > 2 && !
	`°∫cmp
(
°rög
, "-0", 2) && string[2] != '.')

220 
Àngth
--)

221 i‡(
	`°rchr
("xX", 
°rög
[
Àngth
]))

224 
	}
}

226 * 
	$ªad_fûe
(c⁄° * 
fûíame
) {

227 
FILE
 *
Â
 = 
	`f›í
(
fûíame
, "r");

228 
size_t
 
fûe_size
;

229 
pos
;

230 *
fûe_c⁄ã¡s
;

231 i‡(!
Â
)

232  
NULL
;

233 
	`f£ek
(
Â
, 0L, 
SEEK_END
);

234 
pos
 = 
	`·ñl
(
Â
);

235 i‡(
pos
 < 0) {

236 
	`f˛o£
(
Â
);

237  
NULL
;

239 
fûe_size
 = 
pos
;

240 
	`ªwöd
(
Â
);

241 
fûe_c⁄ã¡s
 = (*)
	`∑rs⁄_mÆloc
((Ë* (
fûe_size
 + 1));

242 i‡(!
fûe_c⁄ã¡s
) {

243 
	`f˛o£
(
Â
);

244  
NULL
;

246 i‡(
	`‰ód
(
fûe_c⁄ã¡s
, 
fûe_size
, 1, 
Â
) < 1) {

247 i‡(
	`„º‹
(
Â
)) {

248 
	`f˛o£
(
Â
);

249 
	`∑rs⁄_‰ì
(
fûe_c⁄ã¡s
);

250  
NULL
;

253 
	`f˛o£
(
Â
);

254 
fûe_c⁄ã¡s
[
fûe_size
] = '\0';

255  
fûe_c⁄ã¡s
;

256 
	}
}

258 
	$ªmove_commíts
(*
°rög
, c⁄° *
°¨t_tokí
, c⁄° *
íd_tokí
) {

259 
ö_°rög
 = 0, 
esˇ≥d
 = 0;

260 
size_t
 
i
;

261 *
±r
 = 
NULL
, 
cuºít_ch¨
;

262 
size_t
 
°¨t_tokí_Àn
 = 
	`°æí
(
°¨t_tokí
);

263 
size_t
 
íd_tokí_Àn
 = 
	`°æí
(
íd_tokí
);

264 i‡(
°¨t_tokí_Àn
 =0 || 
íd_tokí_Àn
 == 0)

266 (
cuºít_ch¨
 = *
°rög
) != '\0') {

267 i‡(
cuºít_ch¨
 ='\\' && !
esˇ≥d
) {

268 
esˇ≥d
 = 1;

269 
°rög
++;

271 } i‡(
cuºít_ch¨
 ='\"' && !
esˇ≥d
) {

272 
ö_°rög
 = !in_string;

273 } i‡(!
ö_°rög
 && 
	`°∫cmp
(
°rög
, 
°¨t_tokí
, 
°¨t_tokí_Àn
) == 0) {

274 
i
 = 0; i < 
°¨t_tokí_Àn
; i++)

275 
°rög
[
i
] = ' ';

276 
°rög
 = såög + 
°¨t_tokí_Àn
;

277 
±r
 = 
	`°r°r
(
°rög
, 
íd_tokí
);

278 i‡(!
±r
)

280 
i
 = 0; i < (
±r
 - 
°rög
Ë+ 
íd_tokí_Àn
; i++)

281 
°rög
[
i
] = ' ';

282 
°rög
 = 
±r
 + 
íd_tokí_Àn
 - 1;

284 
esˇ≥d
 = 0;

285 
°rög
++;

287 
	}
}

290 
JSON_Obje˘
 * 
	$js⁄_obje˘_öô
() {

291 
JSON_Obje˘
 *
√w_obj
 = (JSON_Obje˘*)
	`∑rs⁄_mÆloc
((JSON_Object));

292 i‡(!
√w_obj
)

293  
NULL
;

294 
√w_obj
->
«mes
 = (**)
NULL
;

295 
√w_obj
->
vÆues
 = (
JSON_VÆue
**)
NULL
;

296 
√w_obj
->
ˇ∑côy
 = 0;

297 
√w_obj
->
cou¡
 = 0;

298  
√w_obj
;

299 
	}
}

301 
JSON_Sètus
 
	$js⁄_obje˘_add
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
JSON_VÆue
 *
vÆue
) {

302 
size_t
 
ödex
 = 0;

303 i‡(
obje˘
 =
NULL
 || 
«me
 =NULL || 
vÆue
 == NULL) {

304  
JSONFaûuª
;

306 i‡(
obje˘
->
cou¡
 >obje˘->
ˇ∑côy
) {

307 
size_t
 
√w_ˇ∑côy
 = 
	`MAX
(
obje˘
->
ˇ∑côy
 * 2, 
STARTING_CAPACITY
);

308 i‡(
√w_ˇ∑côy
 > 
OBJECT_MAX_CAPACITY
)

309  
JSONFaûuª
;

310 i‡(
	`js⁄_obje˘_ªsize
(
obje˘
, 
√w_ˇ∑côy
Ë=
JSONFaûuª
)

311  
JSONFaûuª
;

313 i‡(
	`js⁄_obje˘_gë_vÆue
(
obje˘
, 
«me
Ë!
NULL
)

314  
JSONFaûuª
;

315 
ödex
 = 
obje˘
->
cou¡
;

316 
obje˘
->
«mes
[
ödex
] = 
	`∑rs⁄_°rdup
(
«me
);

317 i‡(
obje˘
->
«mes
[
ödex
] =
NULL
)

318  
JSONFaûuª
;

319 
obje˘
->
vÆues
[
ödex
] = 
vÆue
;

320 
obje˘
->
cou¡
++;

321  
JSONSuc˚ss
;

322 
	}
}

324 
JSON_Sètus
 
	$js⁄_obje˘_ªsize
(
JSON_Obje˘
 *
obje˘
, 
size_t
 
√w_ˇ∑côy
) {

325 **
ãmp_«mes
 = 
NULL
;

326 
JSON_VÆue
 **
ãmp_vÆues
 = 
NULL
;

328 i‡((
obje˘
->
«mes
 =
NULL
 && obje˘->
vÆues
 != NULL) ||

329 (
obje˘
->
«mes
 !
NULL
 && obje˘->
vÆues
 == NULL) ||

330 
√w_ˇ∑côy
 == 0) {

331  
JSONFaûuª
;

334 
ãmp_«mes
 = (**)
	`∑rs⁄_mÆloc
(
√w_ˇ∑côy
 * (*));

335 i‡(
ãmp_«mes
 =
NULL
)

336  
JSONFaûuª
;

338 
ãmp_vÆues
 = (
JSON_VÆue
**)
	`∑rs⁄_mÆloc
(
√w_ˇ∑côy
 * (JSON_Value*));

339 i‡(
ãmp_«mes
 =
NULL
) {

340 
	`∑rs⁄_‰ì
(
ãmp_«mes
);

341  
JSONFaûuª
;

344 i‡(
obje˘
->
«mes
 !
NULL
 && obje˘->
vÆues
 !NULL && obje˘->
cou¡
 > 0) {

345 
	`mem˝y
(
ãmp_«mes
, 
obje˘
->
«mes
, obje˘->
cou¡
 * (*));

346 
	`mem˝y
(
ãmp_vÆues
, 
obje˘
->
vÆues
, obje˘->
cou¡
 * (
JSON_VÆue
*));

348 
	`∑rs⁄_‰ì
(
obje˘
->
«mes
);

349 
	`∑rs⁄_‰ì
(
obje˘
->
vÆues
);

350 
obje˘
->
«mes
 = 
ãmp_«mes
;

351 
obje˘
->
vÆues
 = 
ãmp_vÆues
;

352 
obje˘
->
ˇ∑côy
 = 
√w_ˇ∑côy
;

353  
JSONSuc˚ss
;

354 
	}
}

356 
JSON_VÆue
 * 
	$js⁄_obje˘_ngë_vÆue
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
size_t
 
n
) {

357 
size_t
 
i
, 
«me_Àngth
;

358 
i
 = 0; i < 
	`js⁄_obje˘_gë_cou¡
(
obje˘
); i++) {

359 
	`¥ötf
("====wgu=Úgë vÆue: %d %s\n", 
i
, 
obje˘
->
«mes
[i]);

360 
«me_Àngth
 = 
	`°æí
(
obje˘
->
«mes
[
i
]);

361 i‡(
«me_Àngth
 !
n
)

363 i‡(
	`°∫cmp
(
obje˘
->
«mes
[
i
], 
«me
, 
n
) == 0)

364  
obje˘
->
vÆues
[
i
];

366  
NULL
;

367 
	}
}

369 
	$js⁄_obje˘_‰ì
(
JSON_Obje˘
 *
obje˘
) {

370 
obje˘
->
cou¡
--) {

371 
	`∑rs⁄_‰ì
(
obje˘
->
«mes
[obje˘->
cou¡
]);

372 
	`js⁄_vÆue_‰ì
(
obje˘
->
vÆues
[obje˘->
cou¡
]);

374 
	`∑rs⁄_‰ì
(
obje˘
->
«mes
);

375 
	`∑rs⁄_‰ì
(
obje˘
->
vÆues
);

376 
	`∑rs⁄_‰ì
(
obje˘
);

377 
	}
}

380 
JSON_Aºay
 * 
	$js⁄_¨øy_öô
() {

381 
JSON_Aºay
 *
√w_¨øy
 = (JSON_Aºay*)
	`∑rs⁄_mÆloc
((JSON_Array));

382 i‡(!
√w_¨øy
)

383  
NULL
;

384 
√w_¨øy
->
ôems
 = (
JSON_VÆue
**)
NULL
;

385 
√w_¨øy
->
ˇ∑côy
 = 0;

386 
√w_¨øy
->
cou¡
 = 0;

387  
√w_¨øy
;

388 
	}
}

390 
JSON_Sètus
 
	$js⁄_¨øy_add
(
JSON_Aºay
 *
¨øy
, 
JSON_VÆue
 *
vÆue
) {

391 i‡(
¨øy
->
cou¡
 >¨øy->
ˇ∑côy
) {

392 
size_t
 
√w_ˇ∑côy
 = 
	`MAX
(
¨øy
->
ˇ∑côy
 * 2, 
STARTING_CAPACITY
);

393 i‡(
√w_ˇ∑côy
 > 
ARRAY_MAX_CAPACITY
)

394  
JSONFaûuª
;

395 i‡(
	`js⁄_¨øy_ªsize
(
¨øy
, 
√w_ˇ∑côy
Ë=
JSONFaûuª
)

396  
JSONFaûuª
;

398 
¨øy
->
ôems
[¨øy->
cou¡
] = 
vÆue
;

399 
¨øy
->
cou¡
++;

400  
JSONSuc˚ss
;

401 
	}
}

403 
JSON_Sètus
 
	$js⁄_¨øy_ªsize
(
JSON_Aºay
 *
¨øy
, 
size_t
 
√w_ˇ∑côy
) {

404 
JSON_VÆue
 **
√w_ôems
 = 
NULL
;

405 i‡(
√w_ˇ∑côy
 == 0) {

406  
JSONFaûuª
;

408 
√w_ôems
 = (
JSON_VÆue
**)
	`∑rs⁄_mÆloc
(
√w_ˇ∑côy
 * (JSON_Value*));

409 i‡(
√w_ôems
 =
NULL
) {

410  
JSONFaûuª
;

412 i‡(
¨øy
->
ôems
 !
NULL
 &&áºay->
cou¡
 > 0) {

413 
	`mem˝y
(
√w_ôems
, 
¨øy
->
ôems
,áºay->
cou¡
 * (
JSON_VÆue
*));

415 
	`∑rs⁄_‰ì
(
¨øy
->
ôems
);

416 
¨øy
->
ôems
 = 
√w_ôems
;

417 
¨øy
->
ˇ∑côy
 = 
√w_ˇ∑côy
;

418  
JSONSuc˚ss
;

419 
	}
}

421 
	$js⁄_¨øy_‰ì
(
JSON_Aºay
 *
¨øy
) {

422 
¨øy
->
cou¡
--)

423 
	`js⁄_vÆue_‰ì
(
¨øy
->
ôems
[¨øy->
cou¡
]);

424 
	`∑rs⁄_‰ì
(
¨øy
->
ôems
);

425 
	`∑rs⁄_‰ì
(
¨øy
);

426 
	}
}

429 
JSON_VÆue
 * 
	$js⁄_vÆue_öô_°rög_no_c›y
(*
°rög
) {

430 
JSON_VÆue
 *
√w_vÆue
 = (JSON_VÆue*)
	`∑rs⁄_mÆloc
((JSON_Value));

431 i‡(!
√w_vÆue
)

432  
NULL
;

433 
√w_vÆue
->
ty≥
 = 
JSONSåög
;

434 
√w_vÆue
->
vÆue
.
°rög
 = string;

435  
√w_vÆue
;

436 
	}
}

439 
	$skù_quŸes
(c⁄° **
°rög
) {

440 
	`SKIP_CHAR
(
°rög
);

441 **
°rög
 != '\"') {

442 i‡(**
°rög
 == '\0')

444 i‡(**
°rög
 == '\\') {

445 
	`SKIP_CHAR
(
°rög
);

446 i‡(**
°rög
 == '\0')

449 
	`SKIP_CHAR
(
°rög
);

451 
	`SKIP_CHAR
(
°rög
);

452 
	}
}

454 
	$∑r£_utf_16
(c⁄° **
u≈ro˚s£d
, **
¥o˚s£d
) {

455 
˝
, 
Àad
, 
åaû
;

456 *
¥o˚s£d_±r
 = *
¥o˚s£d
;

457 c⁄° *
u≈ro˚s£d_±r
 = *
u≈ro˚s£d
;

458 
u≈ro˚s£d_±r
++;

459 i‡(!
	`is_utf16_hex
((c⁄° *)
u≈ro˚s£d_±r
Ë|| 
	`ssˇnf
(u≈ro˚s£d_±r, "%4x", &
˝
Ë=
EOF
)

460  
JSONFaûuª
;

461 i‡(
˝
 < 0x80) {

462 *
¥o˚s£d_±r
 = 
˝
;

463 } i‡(
˝
 < 0x800) {

464 *
¥o˚s£d_±r
++ = ((
˝
 >> 6) & 0x1F) | 0xC0;

465 *
¥o˚s£d_±r
 = ((
˝
 ) & 0x3F) | 0x80;

466 } i‡(
˝
 < 0xD800 || cp > 0xDFFF) {

467 *
¥o˚s£d_±r
++ = ((
˝
 >> 12) & 0x0F) | 0xE0;

468 *
¥o˚s£d_±r
++ = ((
˝
 >> 6) & 0x3F) | 0x80;

469 *
¥o˚s£d_±r
 = ((
˝
 ) & 0x3F) | 0x80;

470 } i‡(
˝
 >= 0xD800 && cp <= 0xDBFF) {

471 
Àad
 = 
˝
;

472 
u≈ro˚s£d_±r
 += 4;

473 i‡(*
u≈ro˚s£d_±r
++ != '\\' || *unprocessed_ptr++ != 'u' ||

474 !
	`is_utf16_hex
((c⁄° *)
u≈ro˚s£d_±r
) ||

475 
	`ssˇnf
(
u≈ro˚s£d_±r
, "%4x", &
åaû
Ë=
EOF
 ||

476 
åaû
 < 0xDC00 ||Årail > 0xDFFF) {

477  
JSONFaûuª
;

479 
˝
 = ((((
Àad
-0xD800)&0x3FF)<<10)|((
åaû
-0xDC00)&0x3FF))+0x010000;

480 *
¥o˚s£d_±r
++ = (((
˝
 >> 18) & 0x07) | 0xF0);

481 *
¥o˚s£d_±r
++ = (((
˝
 >> 12) & 0x3F) | 0x80);

482 *
¥o˚s£d_±r
++ = (((
˝
 >> 6) & 0x3F) | 0x80);

483 *
¥o˚s£d_±r
 = (((
˝
 ) & 0x3F) | 0x80);

485  
JSONFaûuª
;

487 
u≈ro˚s£d_±r
 += 3;

488 *
¥o˚s£d
 = 
¥o˚s£d_±r
;

489 *
u≈ro˚s£d
 = 
u≈ro˚s£d_±r
;

490  
JSONSuc˚ss
;

491 
	}
}

496 * 
	$¥o˚ss_°rög
(c⁄° *
öput
, 
size_t
 
Àn
) {

497 c⁄° *
öput_±r
 = 
öput
;

498 
size_t
 
öôül_size
 = (
Àn
 + 1) * ();

499 
size_t
 
föÆ_size
 = 0;

500 *
ouçut
 = (*)
	`∑rs⁄_mÆloc
(
öôül_size
);

501 *
ouçut_±r
 = 
ouçut
;

502 *
ªsized_ouçut
 = 
NULL
;

503 (*
öput_±r
 !'\0'Ë&& (
size_t
)(öput_±∏- 
öput
Ë< 
Àn
) {

504 i‡(*
öput_±r
 == '\\') {

505 
öput_±r
++;

506 *
öput_±r
) {

507 '\"': *
ouçut_±r
 = '\"'; ;

508 '\\': *
ouçut_±r
 = '\\'; ;

509 '/': *
ouçut_±r
 = '/'; ;

510 'b': *
ouçut_±r
 = '\b'; ;

511 'f': *
ouçut_±r
 = '\f'; ;

512 'n': *
ouçut_±r
 = '\n'; ;

513 'r': *
ouçut_±r
 = '\r'; ;

514 't': *
ouçut_±r
 = '\t'; ;

516 i‡(
	`∑r£_utf_16
(&
öput_±r
, &
ouçut_±r
Ë=
JSONFaûuª
)

517 
îr‹
;

520 
îr‹
;

522 } i‡(()*
öput_±r
 < 0x20) {

523 
îr‹
;

525 *
ouçut_±r
 = *
öput_±r
;

527 
ouçut_±r
++;

528 
öput_±r
++;

530 *
ouçut_±r
 = '\0';

532 
föÆ_size
 = (
size_t
)(
ouçut_±r
-
ouçut
) + 1;

533 
ªsized_ouçut
 = (*)
	`∑rs⁄_mÆloc
(
föÆ_size
);

534 i‡(
ªsized_ouçut
 =
NULL
)

535 
îr‹
;

536 
	`mem˝y
(
ªsized_ouçut
, 
ouçut
, 
föÆ_size
);

537 
	`∑rs⁄_‰ì
(
ouçut
);

538  
ªsized_ouçut
;

539 
îr‹
:

540 
	`∑rs⁄_‰ì
(
ouçut
);

541  
NULL
;

542 
	}
}

546 * 
	$gë_quŸed_°rög
(c⁄° **
°rög
) {

547 c⁄° *
°rög_°¨t
 = *
°rög
;

548 
size_t
 
°rög_Àn
 = 0;

549 
	`skù_quŸes
(
°rög
);

550 i‡(**
°rög
 == '\0')

551  
NULL
;

552 
°rög_Àn
 = *
°rög
 - 
°rög_°¨t
 - 2;

553  
	`¥o˚ss_°rög
(
°rög_°¨t
 + 1, 
°rög_Àn
);

554 
	}
}

556 
JSON_VÆue
 * 
	$∑r£_vÆue
(c⁄° **
°rög
, 
size_t
 
√°ög
) {

557 i‡(
√°ög
 > 
MAX_NESTING
)

558  
NULL
;

559 
	`SKIP_WHITESPACES
(
°rög
);

560 **
°rög
) {

562  
	`∑r£_obje˘_vÆue
(
°rög
, 
√°ög
 + 1);

564  
	`∑r£_¨øy_vÆue
(
°rög
, 
√°ög
 + 1);

566  
	`∑r£_°rög_vÆue
(
°rög
);

568  
	`∑r£_boﬁón_vÆue
(
°rög
);

572  
	`∑r£_numbî_vÆue
(
°rög
);

574  
	`∑r£_nuŒ_vÆue
(
°rög
);

576  
NULL
;

578 
	}
}

580 
JSON_VÆue
 * 
	$∑r£_obje˘_vÆue
(c⁄° **
°rög
, 
size_t
 
√°ög
) {

581 
JSON_VÆue
 *
ouçut_vÆue
 = 
	`js⁄_vÆue_öô_obje˘
(), *
√w_vÆue
 = 
NULL
;

582 
JSON_Obje˘
 *
ouçut_obje˘
 = 
	`js⁄_vÆue_gë_obje˘
(
ouçut_vÆue
);

583 *
√w_key
 = 
NULL
;

584 i‡(
ouçut_vÆue
 =
NULL
)

585  
NULL
;

586 
	`SKIP_CHAR
(
°rög
);

587 
	`SKIP_WHITESPACES
(
°rög
);

588 i‡(**
°rög
 == '}') {

589 
	`SKIP_CHAR
(
°rög
);

590  
ouçut_vÆue
;

592 **
°rög
 != '\0') {

593 
√w_key
 = 
	`gë_quŸed_°rög
(
°rög
);

594 
	`SKIP_WHITESPACES
(
°rög
);

595 i‡(
√w_key
 =
NULL
 || **
°rög
 != ':') {

596 
	`js⁄_vÆue_‰ì
(
ouçut_vÆue
);

597  
NULL
;

599 
	`SKIP_CHAR
(
°rög
);

600 
√w_vÆue
 = 
	`∑r£_vÆue
(
°rög
, 
√°ög
);

601 i‡(
√w_vÆue
 =
NULL
) {

602 
	`∑rs⁄_‰ì
(
√w_key
);

603 
	`js⁄_vÆue_‰ì
(
ouçut_vÆue
);

604  
NULL
;

606 if(
	`js⁄_obje˘_add
(
ouçut_obje˘
, 
√w_key
, 
√w_vÆue
Ë=
JSONFaûuª
) {

607 
	`∑rs⁄_‰ì
(
√w_key
);

608 
	`∑rs⁄_‰ì
(
√w_vÆue
);

609 
	`js⁄_vÆue_‰ì
(
ouçut_vÆue
);

610  
NULL
;

612 
	`∑rs⁄_‰ì
(
√w_key
);

613 
	`SKIP_WHITESPACES
(
°rög
);

614 i‡(**
°rög
 != ',')

616 
	`SKIP_CHAR
(
°rög
);

617 
	`SKIP_WHITESPACES
(
°rög
);

619 
	`SKIP_WHITESPACES
(
°rög
);

620 i‡(**
°rög
 != '}' ||

621 
	`js⁄_obje˘_ªsize
(
ouçut_obje˘
, 
	`js⁄_obje˘_gë_cou¡
(ouçut_obje˘)Ë=
JSONFaûuª
) {

622 
	`js⁄_vÆue_‰ì
(
ouçut_vÆue
);

623  
NULL
;

625 
	`SKIP_CHAR
(
°rög
);

626  
ouçut_vÆue
;

627 
	}
}

629 
JSON_VÆue
 * 
	$∑r£_¨øy_vÆue
(c⁄° **
°rög
, 
size_t
 
√°ög
) {

630 
JSON_VÆue
 *
ouçut_vÆue
 = 
	`js⁄_vÆue_öô_¨øy
(), *
√w_¨øy_vÆue
 = 
NULL
;

631 
JSON_Aºay
 *
ouçut_¨øy
 = 
	`js⁄_vÆue_gë_¨øy
(
ouçut_vÆue
);

632 i‡(!
ouçut_vÆue
)

633  
NULL
;

634 
	`SKIP_CHAR
(
°rög
);

635 
	`SKIP_WHITESPACES
(
°rög
);

636 i‡(**
°rög
 == ']') {

637 
	`SKIP_CHAR
(
°rög
);

638  
ouçut_vÆue
;

640 **
°rög
 != '\0') {

641 
√w_¨øy_vÆue
 = 
	`∑r£_vÆue
(
°rög
, 
√°ög
);

642 i‡(!
√w_¨øy_vÆue
) {

643 
	`js⁄_vÆue_‰ì
(
ouçut_vÆue
);

644  
NULL
;

646 if(
	`js⁄_¨øy_add
(
ouçut_¨øy
, 
√w_¨øy_vÆue
Ë=
JSONFaûuª
) {

647 
	`∑rs⁄_‰ì
(
√w_¨øy_vÆue
);

648 
	`js⁄_vÆue_‰ì
(
ouçut_vÆue
);

649  
NULL
;

651 
	`SKIP_WHITESPACES
(
°rög
);

652 i‡(**
°rög
 != ',')

654 
	`SKIP_CHAR
(
°rög
);

655 
	`SKIP_WHITESPACES
(
°rög
);

657 
	`SKIP_WHITESPACES
(
°rög
);

658 i‡(**
°rög
 != ']' ||

659 
	`js⁄_¨øy_ªsize
(
ouçut_¨øy
, 
	`js⁄_¨øy_gë_cou¡
(ouçut_¨øy)Ë=
JSONFaûuª
) {

660 
	`js⁄_vÆue_‰ì
(
ouçut_vÆue
);

661  
NULL
;

663 
	`SKIP_CHAR
(
°rög
);

664  
ouçut_vÆue
;

665 
	}
}

667 
JSON_VÆue
 * 
	$∑r£_°rög_vÆue
(c⁄° **
°rög
) {

668 
JSON_VÆue
 *
vÆue
 = 
NULL
;

669 *
√w_°rög
 = 
	`gë_quŸed_°rög
(
°rög
);

670 i‡(
√w_°rög
 =
NULL
)

671  
NULL
;

672 
vÆue
 = 
	`js⁄_vÆue_öô_°rög_no_c›y
(
√w_°rög
);

673 i‡(
vÆue
 =
NULL
) {

674 
	`∑rs⁄_‰ì
(
√w_°rög
);

675  
NULL
;

677  
vÆue
;

678 
	}
}

680 
JSON_VÆue
 * 
	$∑r£_boﬁón_vÆue
(c⁄° **
°rög
) {

681 
size_t
 
åue_tokí_size
 = 
	`SIZEOF_TOKEN
("true");

682 
size_t
 
Ál£_tokí_size
 = 
	`SIZEOF_TOKEN
("false");

683 i‡(
	`°∫cmp
("åue", *
°rög
, 
åue_tokí_size
) == 0) {

684 *
°rög
 +
åue_tokí_size
;

685  
	`js⁄_vÆue_öô_boﬁón
(1);

686 } i‡(
	`°∫cmp
("Ál£", *
°rög
, 
Ál£_tokí_size
) == 0) {

687 *
°rög
 +
Ál£_tokí_size
;

688  
	`js⁄_vÆue_öô_boﬁón
(0);

690  
NULL
;

691 
	}
}

693 
JSON_VÆue
 * 
	$∑r£_numbî_vÆue
(c⁄° **
°rög
) {

694 *
íd
;

695 
numbî
 = 
	`°πod
(*
°rög
, &
íd
);

696 
JSON_VÆue
 *
ouçut_vÆue
;

697 i‡(
	`is_decimÆ
(*
°rög
, 
íd
 - *string)) {

698 *
°rög
 = 
íd
;

699 
ouçut_vÆue
 = 
	`js⁄_vÆue_öô_numbî
(
numbî
);

701 
ouçut_vÆue
 = 
NULL
;

703  
ouçut_vÆue
;

704 
	}
}

706 
JSON_VÆue
 * 
	$∑r£_nuŒ_vÆue
(c⁄° **
°rög
) {

707 
size_t
 
tokí_size
 = 
	`SIZEOF_TOKEN
("null");

708 i‡(
	`°∫cmp
("nuŒ", *
°rög
, 
tokí_size
) == 0) {

709 *
°rög
 +
tokí_size
;

710  
	`js⁄_vÆue_öô_nuŒ
();

712  
NULL
;

713 
	}
}

716 
	#APPEND_STRING
(
°r
Ëdÿ{ 
wrôãn
 = 
	`≠≥nd_°rög
(
buf
, (str)); \

717 i‡(
wrôãn
 < 0) {  -1; } \

718 i‡(
buf
 !
NULL
Ë{ bu‡+
wrôãn
; } \

719 
wrôãn_tŸÆ
 +
wrôãn
; } 0)

	)

721 
	#APPEND_INDENT
(
Àvñ
Ëdÿ{ 
wrôãn
 = 
	`≠≥nd_ödít
(
buf
, (level)); \

722 i‡(
wrôãn
 < 0) {  -1; } \

723 i‡(
buf
 !
NULL
Ë{ bu‡+
wrôãn
; } \

724 
wrôãn_tŸÆ
 +
wrôãn
; } 0)

	)

726 
	$js⁄_£rülize_to_buf„r_r
(c⁄° 
JSON_VÆue
 *
vÆue
, *
buf
, 
Àvñ
, 
is_¥ëty
, *
num_buf
)

728 c⁄° *
key
 = 
NULL
, *
°rög
 = NULL;

729 
JSON_VÆue
 *
ãmp_vÆue
 = 
NULL
;

730 
JSON_Aºay
 *
¨øy
 = 
NULL
;

731 
JSON_Obje˘
 *
obje˘
 = 
NULL
;

732 
size_t
 
i
 = 0, 
cou¡
 = 0;

733 
num
 = 0.0;

734 
wrôãn
 = -1, 
wrôãn_tŸÆ
 = 0;

736 
	`js⁄_vÆue_gë_ty≥
(
vÆue
)) {

737 
JSONAºay
:

738 
¨øy
 = 
	`js⁄_vÆue_gë_¨øy
(
vÆue
);

739 
cou¡
 = 
	`js⁄_¨øy_gë_cou¡
(
¨øy
);

740 
	`APPEND_STRING
("[");

741 i‡(
cou¡
 > 0 && 
is_¥ëty
)

742 
	`APPEND_STRING
("\n");

743 
i
 = 0; i < 
cou¡
; i++) {

744 i‡(
is_¥ëty
)

745 
	`APPEND_INDENT
(
Àvñ
+1);

746 
ãmp_vÆue
 = 
	`js⁄_¨øy_gë_vÆue
(
¨øy
, 
i
);

747 
wrôãn
 = 
	`js⁄_£rülize_to_buf„r_r
(
ãmp_vÆue
, 
buf
, 
Àvñ
+1, 
is_¥ëty
, 
num_buf
);

748 i‡(
wrôãn
 < 0)

750 i‡(
buf
 !
NULL
)

751 
buf
 +
wrôãn
;

752 
wrôãn_tŸÆ
 +
wrôãn
;

753 i‡(
i
 < (
cou¡
 - 1))

754 
	`APPEND_STRING
(",");

755 i‡(
is_¥ëty
)

756 
	`APPEND_STRING
("\n");

758 i‡(
cou¡
 > 0 && 
is_¥ëty
)

759 
	`APPEND_INDENT
(
Àvñ
);

760 
	`APPEND_STRING
("]");

761  
wrôãn_tŸÆ
;

762 
JSONObje˘
:

763 
obje˘
 = 
	`js⁄_vÆue_gë_obje˘
(
vÆue
);

764 
cou¡
 = 
	`js⁄_obje˘_gë_cou¡
(
obje˘
);

765 
	`APPEND_STRING
("{");

766 i‡(
cou¡
 > 0 && 
is_¥ëty
)

767 
	`APPEND_STRING
("\n");

768 
i
 = 0; i < 
cou¡
; i++) {

769 
key
 = 
	`js⁄_obje˘_gë_«me
(
obje˘
, 
i
);

770 i‡(
is_¥ëty
)

771 
	`APPEND_INDENT
(
Àvñ
+1);

772 
wrôãn
 = 
	`js⁄_£rülize_°rög
(
key
, 
buf
);

773 i‡(
wrôãn
 < 0)

775 i‡(
buf
 !
NULL
)

776 
buf
 +
wrôãn
;

777 
wrôãn_tŸÆ
 +
wrôãn
;

778 
	`APPEND_STRING
(":");

779 i‡(
is_¥ëty
)

780 
	`APPEND_STRING
(" ");

781 
ãmp_vÆue
 = 
	`js⁄_obje˘_gë_vÆue
(
obje˘
, 
key
);

782 
wrôãn
 = 
	`js⁄_£rülize_to_buf„r_r
(
ãmp_vÆue
, 
buf
, 
Àvñ
+1, 
is_¥ëty
, 
num_buf
);

783 i‡(
wrôãn
 < 0)

785 i‡(
buf
 !
NULL
)

786 
buf
 +
wrôãn
;

787 
wrôãn_tŸÆ
 +
wrôãn
;

788 i‡(
i
 < (
cou¡
 - 1))

789 
	`APPEND_STRING
(",");

790 i‡(
is_¥ëty
)

791 
	`APPEND_STRING
("\n");

793 i‡(
cou¡
 > 0 && 
is_¥ëty
)

794 
	`APPEND_INDENT
(
Àvñ
);

795 
	`APPEND_STRING
("}");

796  
wrôãn_tŸÆ
;

797 
JSONSåög
:

798 
°rög
 = 
	`js⁄_vÆue_gë_°rög
(
vÆue
);

799 
wrôãn
 = 
	`js⁄_£rülize_°rög
(
°rög
, 
buf
);

800 i‡(
wrôãn
 < 0)

802 i‡(
buf
 !
NULL
)

803 
buf
 +
wrôãn
;

804 
wrôãn_tŸÆ
 +
wrôãn
;

805  
wrôãn_tŸÆ
;

806 
JSONBoﬁón
:

807 i‡(
	`js⁄_vÆue_gë_boﬁón
(
vÆue
))

808 
	`APPEND_STRING
("true");

810 
	`APPEND_STRING
("false");

811  
wrôãn_tŸÆ
;

812 
JSONNumbî
:

813 
num
 = 
	`js⁄_vÆue_gë_numbî
(
vÆue
);

814 i‡(
buf
 !
NULL
)

815 
num_buf
 = 
buf
;

816 i‡(
num
 == (()()num))

817 
wrôãn
 = 
	`•rötf
(
num_buf
, "%d", ()
num
);

819 
wrôãn
 = 
	`•rötf
(
num_buf
, 
DOUBLE_SERIALIZATION_FORMAT
, 
num
);

820 i‡(
wrôãn
 < 0)

822 i‡(
buf
 !
NULL
)

823 
buf
 +
wrôãn
;

824 
wrôãn_tŸÆ
 +
wrôãn
;

825  
wrôãn_tŸÆ
;

826 
JSONNuŒ
:

827 
	`APPEND_STRING
("null");

828  
wrôãn_tŸÆ
;

829 
JSONEº‹
:

834 
	}
}

836 
	$js⁄_£rülize_°rög
(c⁄° *
°rög
, *
buf
) {

837 
size_t
 
i
 = 0, 
Àn
 = 
	`°æí
(
°rög
);

838 
c
 = '\0';

839 
wrôãn
 = -1, 
wrôãn_tŸÆ
 = 0;

840 
	`APPEND_STRING
("\"");

841 
i
 = 0; i < 
Àn
; i++) {

842 
c
 = 
°rög
[
i
];

843 
c
) {

844 '\"': 
	`APPEND_STRING
("\\\""); ;

845 '\\': 
	`APPEND_STRING
("\\\\"); ;

846 '/': 
	`APPEND_STRING
("\\/"); ;

847 '\b': 
	`APPEND_STRING
("\\b"); ;

848 '\f': 
	`APPEND_STRING
("\\f"); ;

849 '\n': 
	`APPEND_STRING
("\\n"); ;

850 '\r': 
	`APPEND_STRING
("\\r"); ;

851 '\t': 
	`APPEND_STRING
("\\t"); ;

853 i‡(
buf
 !
NULL
) {

854 
buf
[0] = 
c
;

855 
buf
 += 1;

857 
wrôãn_tŸÆ
 += 1;

861 
	`APPEND_STRING
("\"");

862  
wrôãn_tŸÆ
;

863 
	}
}

865 
	$≠≥nd_ödít
(*
buf
, 
Àvñ
) {

866 
i
;

867 
wrôãn
 = -1, 
wrôãn_tŸÆ
 = 0;

868 
i
 = 0; i < 
Àvñ
; i++) {

869 
	`APPEND_STRING
(" ");

871  
wrôãn_tŸÆ
;

872 
	}
}

874 
	$≠≥nd_°rög
(*
buf
, c⁄° *
°rög
) {

875 i‡(
buf
 =
NULL
) {

876  ()
	`°æí
(
°rög
);

878  
	`•rötf
(
buf
, "%s", 
°rög
);

879 
	}
}

881 #unde‡
APPEND_STRING


882 #unde‡
APPEND_INDENT


885 
JSON_VÆue
 * 
	$js⁄_∑r£_fûe
(c⁄° *
fûíame
) {

886 *
fûe_c⁄ã¡s
 = 
	`ªad_fûe
(
fûíame
);

887 
JSON_VÆue
 *
ouçut_vÆue
 = 
NULL
;

888 i‡(
fûe_c⁄ã¡s
 =
NULL
)

889  
NULL
;

890 
ouçut_vÆue
 = 
	`js⁄_∑r£_°rög
(
fûe_c⁄ã¡s
);

891 
	`∑rs⁄_‰ì
(
fûe_c⁄ã¡s
);

892  
ouçut_vÆue
;

893 
	}
}

895 
JSON_VÆue
 * 
	$js⁄_∑r£_fûe_wôh_commíts
(c⁄° *
fûíame
) {

896 *
fûe_c⁄ã¡s
 = 
	`ªad_fûe
(
fûíame
);

897 
JSON_VÆue
 *
ouçut_vÆue
 = 
NULL
;

898 i‡(
fûe_c⁄ã¡s
 =
NULL
)

899  
NULL
;

900 
ouçut_vÆue
 = 
	`js⁄_∑r£_°rög_wôh_commíts
(
fûe_c⁄ã¡s
);

901 
	`∑rs⁄_‰ì
(
fûe_c⁄ã¡s
);

902  
ouçut_vÆue
;

903 
	}
}

905 
JSON_VÆue
 * 
	$js⁄_∑r£_°rög
(c⁄° *
°rög
) {

906 i‡(
°rög
 =
NULL
)

907  
NULL
;

908 
	`SKIP_WHITESPACES
(&
°rög
);

909 i‡(*
°rög
 != '{' && *string != '[')

910  
NULL
;

911  
	`∑r£_vÆue
((c⁄° **)&
°rög
, 0);

912 
	}
}

914 
JSON_VÆue
 * 
	$js⁄_∑r£_°rög_wôh_commíts
(c⁄° *
°rög
) {

915 
JSON_VÆue
 *
ªsu…
 = 
NULL
;

916 *
°rög_muèbÀ_c›y
 = 
NULL
, *
°rög_muèbÀ_c›y_±r
 = NULL;

917 
°rög_muèbÀ_c›y
 = 
	`∑rs⁄_°rdup
(
°rög
);

918 i‡(
°rög_muèbÀ_c›y
 =
NULL
)

919  
NULL
;

920 
	`ªmove_commíts
(
°rög_muèbÀ_c›y
, "/*", "*/");

921 
	`ªmove_commíts
(
°rög_muèbÀ_c›y
, "//", "\n");

922 
°rög_muèbÀ_c›y_±r
 = 
°rög_muèbÀ_c›y
;

923 
	`SKIP_WHITESPACES
(&
°rög_muèbÀ_c›y_±r
);

924 i‡(*
°rög_muèbÀ_c›y_±r
 != '{' && *string_mutable_copy_ptr != '[') {

925 
	`∑rs⁄_‰ì
(
°rög_muèbÀ_c›y
);

926  
NULL
;

928 
ªsu…
 = 
	`∑r£_vÆue
((c⁄° **)&
°rög_muèbÀ_c›y_±r
, 0);

929 
	`∑rs⁄_‰ì
(
°rög_muèbÀ_c›y
);

930  
ªsu…
;

931 
	}
}

936 
JSON_VÆue
 * 
	$js⁄_obje˘_gë_vÆue
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

937 i‡(
obje˘
 =
NULL
 || 
«me
 == NULL)

938  
NULL
;

939  
	`js⁄_obje˘_ngë_vÆue
(
obje˘
, 
«me
, 
	`°æí
(name));

940 
	}
}

942 c⁄° * 
	$js⁄_obje˘_gë_°rög
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

943  
	`js⁄_vÆue_gë_°rög
(
	`js⁄_obje˘_gë_vÆue
(
obje˘
, 
«me
));

944 
	}
}

946 
	$js⁄_obje˘_gë_numbî
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

947  
	`js⁄_vÆue_gë_numbî
(
	`js⁄_obje˘_gë_vÆue
(
obje˘
, 
«me
));

948 
	}
}

950 
JSON_Obje˘
 * 
	$js⁄_obje˘_gë_obje˘
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

951  
	`js⁄_vÆue_gë_obje˘
(
	`js⁄_obje˘_gë_vÆue
(
obje˘
, 
«me
));

952 
	}
}

954 
JSON_Aºay
 * 
	$js⁄_obje˘_gë_¨øy
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

955  
	`js⁄_vÆue_gë_¨øy
(
	`js⁄_obje˘_gë_vÆue
(
obje˘
, 
«me
));

956 
	}
}

958 
	$js⁄_obje˘_gë_boﬁón
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

959  
	`js⁄_vÆue_gë_boﬁón
(
	`js⁄_obje˘_gë_vÆue
(
obje˘
, 
«me
));

960 
	}
}

962 
JSON_VÆue
 * 
	$js⁄_obje˘_dŸgë_vÆue
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

963 c⁄° *
dŸ_posôi⁄
 = 
	`°rchr
(
«me
, '.');

964 i‡(!
dŸ_posôi⁄
)

965  
	`js⁄_obje˘_gë_vÆue
(
obje˘
, 
«me
);

966 
obje˘
 = 
	`js⁄_vÆue_gë_obje˘
(
	`js⁄_obje˘_ngë_vÆue
(obje˘, 
«me
, 
dŸ_posôi⁄
 -Çame));

967  
	`js⁄_obje˘_dŸgë_vÆue
(
obje˘
, 
dŸ_posôi⁄
 + 1);

968 
	}
}

970 c⁄° * 
	$js⁄_obje˘_dŸgë_°rög
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

971  
	`js⁄_vÆue_gë_°rög
(
	`js⁄_obje˘_dŸgë_vÆue
(
obje˘
, 
«me
));

972 
	}
}

974 
	$js⁄_obje˘_dŸgë_numbî
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

975  
	`js⁄_vÆue_gë_numbî
(
	`js⁄_obje˘_dŸgë_vÆue
(
obje˘
, 
«me
));

976 
	}
}

978 
JSON_Obje˘
 * 
	$js⁄_obje˘_dŸgë_obje˘
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

979  
	`js⁄_vÆue_gë_obje˘
(
	`js⁄_obje˘_dŸgë_vÆue
(
obje˘
, 
«me
));

980 
	}
}

982 
JSON_Aºay
 * 
	$js⁄_obje˘_dŸgë_¨øy
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

983  
	`js⁄_vÆue_gë_¨øy
(
	`js⁄_obje˘_dŸgë_vÆue
(
obje˘
, 
«me
));

984 
	}
}

986 
	$js⁄_obje˘_dŸgë_boﬁón
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

987  
	`js⁄_vÆue_gë_boﬁón
(
	`js⁄_obje˘_dŸgë_vÆue
(
obje˘
, 
«me
));

988 
	}
}

990 
size_t
 
	$js⁄_obje˘_gë_cou¡
(c⁄° 
JSON_Obje˘
 *
obje˘
) {

991  
obje˘
 ? obje˘->
cou¡
 : 0;

992 
	}
}

994 c⁄° * 
	$js⁄_obje˘_gë_«me
(c⁄° 
JSON_Obje˘
 *
obje˘
, 
size_t
 
ödex
) {

995 i‡(
ödex
 >
	`js⁄_obje˘_gë_cou¡
(
obje˘
))

996  
NULL
;

997  
obje˘
->
«mes
[
ödex
];

998 
	}
}

1001 
JSON_VÆue
 * 
	$js⁄_¨øy_gë_vÆue
(c⁄° 
JSON_Aºay
 *
¨øy
, 
size_t
 
ödex
) {

1002 i‡(
ödex
 >
	`js⁄_¨øy_gë_cou¡
(
¨øy
))

1003  
NULL
;

1004  
¨øy
->
ôems
[
ödex
];

1005 
	}
}

1007 c⁄° * 
	$js⁄_¨øy_gë_°rög
(c⁄° 
JSON_Aºay
 *
¨øy
, 
size_t
 
ödex
) {

1008  
	`js⁄_vÆue_gë_°rög
(
	`js⁄_¨øy_gë_vÆue
(
¨øy
, 
ödex
));

1009 
	}
}

1011 
	$js⁄_¨øy_gë_numbî
(c⁄° 
JSON_Aºay
 *
¨øy
, 
size_t
 
ödex
) {

1012  
	`js⁄_vÆue_gë_numbî
(
	`js⁄_¨øy_gë_vÆue
(
¨øy
, 
ödex
));

1013 
	}
}

1015 
JSON_Obje˘
 * 
	$js⁄_¨øy_gë_obje˘
(c⁄° 
JSON_Aºay
 *
¨øy
, 
size_t
 
ödex
) {

1016  
	`js⁄_vÆue_gë_obje˘
(
	`js⁄_¨øy_gë_vÆue
(
¨øy
, 
ödex
));

1017 
	}
}

1019 
JSON_Aºay
 * 
	$js⁄_¨øy_gë_¨øy
(c⁄° 
JSON_Aºay
 *
¨øy
, 
size_t
 
ödex
) {

1020  
	`js⁄_vÆue_gë_¨øy
(
	`js⁄_¨øy_gë_vÆue
(
¨øy
, 
ödex
));

1021 
	}
}

1023 
	$js⁄_¨øy_gë_boﬁón
(c⁄° 
JSON_Aºay
 *
¨øy
, 
size_t
 
ödex
) {

1024  
	`js⁄_vÆue_gë_boﬁón
(
	`js⁄_¨øy_gë_vÆue
(
¨øy
, 
ödex
));

1025 
	}
}

1027 
size_t
 
	$js⁄_¨øy_gë_cou¡
(c⁄° 
JSON_Aºay
 *
¨øy
) {

1028  
¨øy
 ?áºay->
cou¡
 : 0;

1029 
	}
}

1032 
JSON_VÆue_Ty≥
 
	$js⁄_vÆue_gë_ty≥
(c⁄° 
JSON_VÆue
 *
vÆue
) {

1033  
vÆue
 ? vÆue->
ty≥
 : 
JSONEº‹
;

1034 
	}
}

1036 
JSON_Obje˘
 * 
	$js⁄_vÆue_gë_obje˘
(c⁄° 
JSON_VÆue
 *
vÆue
) {

1037  
	`js⁄_vÆue_gë_ty≥
(
vÆue
Ë=
JSONObje˘
 ? vÆue->vÆue.
obje˘
 : 
NULL
;

1038 
	}
}

1040 
JSON_Aºay
 * 
	$js⁄_vÆue_gë_¨øy
(c⁄° 
JSON_VÆue
 *
vÆue
) {

1041  
	`js⁄_vÆue_gë_ty≥
(
vÆue
Ë=
JSONAºay
 ? vÆue->vÆue.
¨øy
 : 
NULL
;

1042 
	}
}

1044 c⁄° * 
	$js⁄_vÆue_gë_°rög
(c⁄° 
JSON_VÆue
 *
vÆue
) {

1045  
	`js⁄_vÆue_gë_ty≥
(
vÆue
Ë=
JSONSåög
 ? vÆue->vÆue.
°rög
 : 
NULL
;

1046 
	}
}

1048 
	$js⁄_vÆue_gë_numbî
(c⁄° 
JSON_VÆue
 *
vÆue
) {

1049  
	`js⁄_vÆue_gë_ty≥
(
vÆue
Ë=
JSONNumbî
 ? vÆue->vÆue.
numbî
 : 0;

1050 
	}
}

1052 
	$js⁄_vÆue_gë_boﬁón
(c⁄° 
JSON_VÆue
 *
vÆue
) {

1053  
	`js⁄_vÆue_gë_ty≥
(
vÆue
Ë=
JSONBoﬁón
 ? vÆue->vÆue.
boﬁón
 : -1;

1054 
	}
}

1056 
	$js⁄_vÆue_‰ì
(
JSON_VÆue
 *
vÆue
) {

1057 
	`js⁄_vÆue_gë_ty≥
(
vÆue
)) {

1058 
JSONObje˘
:

1059 
	`js⁄_obje˘_‰ì
(
vÆue
->vÆue.
obje˘
);

1061 
JSONSåög
:

1062 i‡(
vÆue
->vÆue.
°rög
Ë{ 
	`∑rs⁄_‰ì
(value->value.string); }

1064 
JSONAºay
:

1065 
	`js⁄_¨øy_‰ì
(
vÆue
->vÆue.
¨øy
);

1070 
	`∑rs⁄_‰ì
(
vÆue
);

1071 
	}
}

1073 
JSON_VÆue
 * 
	$js⁄_vÆue_öô_obje˘
() {

1074 
JSON_VÆue
 *
√w_vÆue
 = (JSON_VÆue*)
	`∑rs⁄_mÆloc
((JSON_Value));

1075 i‡(!
√w_vÆue
)

1076  
NULL
;

1077 
√w_vÆue
->
ty≥
 = 
JSONObje˘
;

1078 
√w_vÆue
->
vÆue
.
obje˘
 = 
	`js⁄_obje˘_öô
();

1079 i‡(!
√w_vÆue
->
vÆue
.
obje˘
) {

1080 
	`∑rs⁄_‰ì
(
√w_vÆue
);

1081  
NULL
;

1083  
√w_vÆue
;

1084 
	}
}

1086 
JSON_VÆue
 * 
	$js⁄_vÆue_öô_¨øy
() {

1087 
JSON_VÆue
 *
√w_vÆue
 = (JSON_VÆue*)
	`∑rs⁄_mÆloc
((JSON_Value));

1088 i‡(!
√w_vÆue
)

1089  
NULL
;

1090 
√w_vÆue
->
ty≥
 = 
JSONAºay
;

1091 
√w_vÆue
->
vÆue
.
¨øy
 = 
	`js⁄_¨øy_öô
();

1092 i‡(!
√w_vÆue
->
vÆue
.
¨øy
) {

1093 
	`∑rs⁄_‰ì
(
√w_vÆue
);

1094  
NULL
;

1096  
√w_vÆue
;

1097 
	}
}

1099 
JSON_VÆue
 * 
	$js⁄_vÆue_öô_°rög
(c⁄° *
°rög
) {

1100 *
c›y
 = 
NULL
;

1101 
JSON_VÆue
 *
vÆue
;

1102 
size_t
 
°rög_Àn
 = 0;

1103 i‡(
°rög
 =
NULL
)

1104  
NULL
;

1105 
°rög_Àn
 = 
	`°æí
(
°rög
);

1106 i‡(!
	`is_vÆid_utf8
(
°rög
, 
°rög_Àn
))

1107  
NULL
;

1108 
c›y
 = 
	`∑rs⁄_°∫dup
(
°rög
, 
°rög_Àn
);

1109 i‡(
c›y
 =
NULL
)

1110  
NULL
;

1111 
vÆue
 = 
	`js⁄_vÆue_öô_°rög_no_c›y
(
c›y
);

1112 i‡(
vÆue
 =
NULL
)

1113 
	`∑rs⁄_‰ì
(
c›y
);

1114  
vÆue
;

1115 
	}
}

1117 
JSON_VÆue
 * 
	$js⁄_vÆue_öô_numbî
(
numbî
) {

1118 
JSON_VÆue
 *
√w_vÆue
 = (JSON_VÆue*)
	`∑rs⁄_mÆloc
((JSON_Value));

1119 i‡(!
√w_vÆue
)

1120  
NULL
;

1121 
√w_vÆue
->
ty≥
 = 
JSONNumbî
;

1122 
√w_vÆue
->
vÆue
.
numbî
 =Çumber;

1123  
√w_vÆue
;

1124 
	}
}

1126 
JSON_VÆue
 * 
	$js⁄_vÆue_öô_boﬁón
(
boﬁón
) {

1127 
JSON_VÆue
 *
√w_vÆue
 = (JSON_VÆue*)
	`∑rs⁄_mÆloc
((JSON_Value));

1128 i‡(!
√w_vÆue
)

1129  
NULL
;

1130 
√w_vÆue
->
ty≥
 = 
JSONBoﬁón
;

1131 
√w_vÆue
->
vÆue
.
boﬁón
 = boolean ? 1 : 0;

1132  
√w_vÆue
;

1133 
	}
}

1135 
JSON_VÆue
 * 
	$js⁄_vÆue_öô_nuŒ
() {

1136 
JSON_VÆue
 *
√w_vÆue
 = (JSON_VÆue*)
	`∑rs⁄_mÆloc
((JSON_Value));

1137 i‡(!
√w_vÆue
)

1138  
NULL
;

1139 
√w_vÆue
->
ty≥
 = 
JSONNuŒ
;

1140  
√w_vÆue
;

1141 
	}
}

1143 
JSON_VÆue
 * 
	$js⁄_vÆue_dìp_c›y
(c⁄° 
JSON_VÆue
 *
vÆue
) {

1144 
size_t
 
i
 = 0;

1145 
JSON_VÆue
 *
ªtu∫_vÆue
 = 
NULL
, *
ãmp_vÆue_c›y
 = NULL, *
ãmp_vÆue
 = NULL;

1146 c⁄° *
ãmp_°rög
 = 
NULL
, *
ãmp_key
 = NULL;

1147 *
ãmp_°rög_c›y
 = 
NULL
;

1148 
JSON_Aºay
 *
ãmp_¨øy
 = 
NULL
, *
ãmp_¨øy_c›y
 = NULL;

1149 
JSON_Obje˘
 *
ãmp_obje˘
 = 
NULL
, *
ãmp_obje˘_c›y
 = NULL;

1151 
	`js⁄_vÆue_gë_ty≥
(
vÆue
)) {

1152 
JSONAºay
:

1153 
ãmp_¨øy
 = 
	`js⁄_vÆue_gë_¨øy
(
vÆue
);

1154 
ªtu∫_vÆue
 = 
	`js⁄_vÆue_öô_¨øy
();

1155 i‡(
ªtu∫_vÆue
 =
NULL
)

1156  
NULL
;

1157 
ãmp_¨øy_c›y
 = 
	`js⁄_vÆue_gë_¨øy
(
ªtu∫_vÆue
);

1158 
i
 = 0; i < 
	`js⁄_¨øy_gë_cou¡
(
ãmp_¨øy
); i++) {

1159 
ãmp_vÆue
 = 
	`js⁄_¨øy_gë_vÆue
(
ãmp_¨øy
, 
i
);

1160 
ãmp_vÆue_c›y
 = 
	`js⁄_vÆue_dìp_c›y
(
ãmp_vÆue
);

1161 i‡(
ãmp_vÆue_c›y
 =
NULL
) {

1162 
	`js⁄_vÆue_‰ì
(
ªtu∫_vÆue
);

1163  
NULL
;

1165 i‡(
	`js⁄_¨øy_add
(
ãmp_¨øy_c›y
, 
ãmp_vÆue_c›y
Ë=
JSONFaûuª
) {

1166 
	`js⁄_vÆue_‰ì
(
ªtu∫_vÆue
);

1167 
	`js⁄_vÆue_‰ì
(
ãmp_vÆue_c›y
);

1168  
NULL
;

1171  
ªtu∫_vÆue
;

1172 
JSONObje˘
:

1173 
ãmp_obje˘
 = 
	`js⁄_vÆue_gë_obje˘
(
vÆue
);

1174 
ªtu∫_vÆue
 = 
	`js⁄_vÆue_öô_obje˘
();

1175 i‡(
ªtu∫_vÆue
 =
NULL
)

1176  
NULL
;

1177 
ãmp_obje˘_c›y
 = 
	`js⁄_vÆue_gë_obje˘
(
ªtu∫_vÆue
);

1178 
i
 = 0; i < 
	`js⁄_obje˘_gë_cou¡
(
ãmp_obje˘
); i++) {

1179 
ãmp_key
 = 
	`js⁄_obje˘_gë_«me
(
ãmp_obje˘
, 
i
);

1180 
ãmp_vÆue
 = 
	`js⁄_obje˘_gë_vÆue
(
ãmp_obje˘
, 
ãmp_key
);

1181 
ãmp_vÆue_c›y
 = 
	`js⁄_vÆue_dìp_c›y
(
ãmp_vÆue
);

1182 i‡(
ãmp_vÆue_c›y
 =
NULL
) {

1183 
	`js⁄_vÆue_‰ì
(
ªtu∫_vÆue
);

1184  
NULL
;

1186 i‡(
	`js⁄_obje˘_add
(
ãmp_obje˘_c›y
, 
ãmp_key
, 
ãmp_vÆue_c›y
Ë=
JSONFaûuª
) {

1187 
	`js⁄_vÆue_‰ì
(
ªtu∫_vÆue
);

1188 
	`js⁄_vÆue_‰ì
(
ãmp_vÆue_c›y
);

1189  
NULL
;

1192  
ªtu∫_vÆue
;

1193 
JSONBoﬁón
:

1194  
	`js⁄_vÆue_öô_boﬁón
(
	`js⁄_vÆue_gë_boﬁón
(
vÆue
));

1195 
JSONNumbî
:

1196  
	`js⁄_vÆue_öô_numbî
(
	`js⁄_vÆue_gë_numbî
(
vÆue
));

1197 
JSONSåög
:

1198 
ãmp_°rög
 = 
	`js⁄_vÆue_gë_°rög
(
vÆue
);

1199 
ãmp_°rög_c›y
 = 
	`∑rs⁄_°rdup
(
ãmp_°rög
);

1200 i‡(
ãmp_°rög_c›y
 =
NULL
)

1201  
NULL
;

1202 
ªtu∫_vÆue
 = 
	`js⁄_vÆue_öô_°rög_no_c›y
(
ãmp_°rög_c›y
);

1203 i‡(
ªtu∫_vÆue
 =
NULL
)

1204 
	`∑rs⁄_‰ì
(
ãmp_°rög_c›y
);

1205  
ªtu∫_vÆue
;

1206 
JSONNuŒ
:

1207  
	`js⁄_vÆue_öô_nuŒ
();

1208 
JSONEº‹
:

1209  
NULL
;

1211  
NULL
;

1213 
	}
}

1215 
size_t
 
	$js⁄_£rüliz©i⁄_size
(c⁄° 
JSON_VÆue
 *
vÆue
) {

1216 
num_buf
[1100];

1217 
ªs
 = 
	`js⁄_£rülize_to_buf„r_r
(
vÆue
, 
NULL
, 0, 0, 
num_buf
);

1218  
ªs
 < 0 ? 0 : (
size_t
)(res + 1);

1219 
	}
}

1221 
JSON_Sètus
 
	$js⁄_£rülize_to_buf„r
(c⁄° 
JSON_VÆue
 *
vÆue
, *
buf
, 
size_t
 
buf_size_ö_byãs
) {

1222 
wrôãn
 = -1;

1223 
size_t
 
√eded_size_ö_byãs
 = 
	`js⁄_£rüliz©i⁄_size
(
vÆue
);

1224 i‡(
√eded_size_ö_byãs
 =0 || 
buf_size_ö_byãs
 <Çeeded_size_in_bytes) {

1225  
JSONFaûuª
;

1227 
wrôãn
 = 
	`js⁄_£rülize_to_buf„r_r
(
vÆue
, 
buf
, 0, 0, 
NULL
);

1228 i‡(
wrôãn
 < 0)

1229  
JSONFaûuª
;

1230  
JSONSuc˚ss
;

1231 
	}
}

1233 
JSON_Sètus
 
	$js⁄_£rülize_to_fûe
(c⁄° 
JSON_VÆue
 *
vÆue
, c⁄° *
fûíame
) {

1234 
JSON_Sètus
 
ªtu∫_code
 = 
JSONSuc˚ss
;

1235 
FILE
 *
Â
 = 
NULL
;

1236 *
£rülized_°rög
 = 
	`js⁄_£rülize_to_°rög
(
vÆue
);

1237 i‡(
£rülized_°rög
 =
NULL
) {

1238  
JSONFaûuª
;

1240 
Â
 = 
	`f›í
 (
fûíame
, "w");

1241 i‡(
Â
 !
NULL
) {

1242 i‡(
	`Âuts
 (
£rülized_°rög
, 
Â
Ë=
EOF
) {

1243 
ªtu∫_code
 = 
JSONFaûuª
;

1245 i‡(
	`f˛o£
 (
Â
Ë=
EOF
) {

1246 
ªtu∫_code
 = 
JSONFaûuª
;

1249 
	`js⁄_‰ì_£rülized_°rög
(
£rülized_°rög
);

1250  
ªtu∫_code
;

1251 
	}
}

1253 * 
	$js⁄_£rülize_to_°rög
(c⁄° 
JSON_VÆue
 *
vÆue
) {

1254 
JSON_Sètus
 
£rüliz©i⁄_ªsu…
 = 
JSONFaûuª
;

1255 
size_t
 
buf_size_byãs
 = 
	`js⁄_£rüliz©i⁄_size
(
vÆue
);

1256 *
buf
 = 
NULL
;

1257 i‡(
buf_size_byãs
 == 0) {

1258  
NULL
;

1260 
buf
 = (*)
	`∑rs⁄_mÆloc
(
buf_size_byãs
);

1261 i‡(
buf
 =
NULL
)

1262  
NULL
;

1263 
£rüliz©i⁄_ªsu…
 = 
	`js⁄_£rülize_to_buf„r
(
vÆue
, 
buf
, 
buf_size_byãs
);

1264 i‡(
£rüliz©i⁄_ªsu…
 =
JSONFaûuª
) {

1265 
	`js⁄_‰ì_£rülized_°rög
(
buf
);

1266  
NULL
;

1268  
buf
;

1269 
	}
}

1271 
size_t
 
	$js⁄_£rüliz©i⁄_size_¥ëty
(c⁄° 
JSON_VÆue
 *
vÆue
) {

1272 
num_buf
[1100];

1273 
ªs
 = 
	`js⁄_£rülize_to_buf„r_r
(
vÆue
, 
NULL
, 0, 1, 
num_buf
);

1274  
ªs
 < 0 ? 0 : (
size_t
)(res + 1);

1275 
	}
}

1277 
JSON_Sètus
 
	$js⁄_£rülize_to_buf„r_¥ëty
(c⁄° 
JSON_VÆue
 *
vÆue
, *
buf
, 
size_t
 
buf_size_ö_byãs
) {

1278 
wrôãn
 = -1;

1279 
size_t
 
√eded_size_ö_byãs
 = 
	`js⁄_£rüliz©i⁄_size_¥ëty
(
vÆue
);

1280 i‡(
√eded_size_ö_byãs
 =0 || 
buf_size_ö_byãs
 <Çeeded_size_in_bytes)

1281  
JSONFaûuª
;

1282 
wrôãn
 = 
	`js⁄_£rülize_to_buf„r_r
(
vÆue
, 
buf
, 0, 1, 
NULL
);

1283 i‡(
wrôãn
 < 0)

1284  
JSONFaûuª
;

1285  
JSONSuc˚ss
;

1286 
	}
}

1288 
JSON_Sètus
 
	$js⁄_£rülize_to_fûe_¥ëty
(c⁄° 
JSON_VÆue
 *
vÆue
, c⁄° *
fûíame
) {

1289 
JSON_Sètus
 
ªtu∫_code
 = 
JSONSuc˚ss
;

1290 
FILE
 *
Â
 = 
NULL
;

1291 *
£rülized_°rög
 = 
	`js⁄_£rülize_to_°rög_¥ëty
(
vÆue
);

1292 i‡(
£rülized_°rög
 =
NULL
) {

1293  
JSONFaûuª
;

1295 
Â
 = 
	`f›í
 (
fûíame
, "w");

1296 i‡(
Â
 !
NULL
) {

1297 i‡(
	`Âuts
 (
£rülized_°rög
, 
Â
Ë=
EOF
) {

1298 
ªtu∫_code
 = 
JSONFaûuª
;

1300 i‡(
	`f˛o£
 (
Â
Ë=
EOF
) {

1301 
ªtu∫_code
 = 
JSONFaûuª
;

1304 
	`js⁄_‰ì_£rülized_°rög
(
£rülized_°rög
);

1305  
ªtu∫_code
;

1306 
	}
}

1308 * 
	$js⁄_£rülize_to_°rög_¥ëty
(c⁄° 
JSON_VÆue
 *
vÆue
) {

1309 
JSON_Sètus
 
£rüliz©i⁄_ªsu…
 = 
JSONFaûuª
;

1310 
size_t
 
buf_size_byãs
 = 
	`js⁄_£rüliz©i⁄_size_¥ëty
(
vÆue
);

1311 *
buf
 = 
NULL
;

1312 i‡(
buf_size_byãs
 == 0) {

1313  
NULL
;

1315 
buf
 = (*)
	`∑rs⁄_mÆloc
(
buf_size_byãs
);

1316 i‡(
buf
 =
NULL
)

1317  
NULL
;

1318 
£rüliz©i⁄_ªsu…
 = 
	`js⁄_£rülize_to_buf„r_¥ëty
(
vÆue
, 
buf
, 
buf_size_byãs
);

1319 i‡(
£rüliz©i⁄_ªsu…
 =
JSONFaûuª
) {

1320 
	`js⁄_‰ì_£rülized_°rög
(
buf
);

1321  
NULL
;

1323  
buf
;

1324 
	}
}

1327 
	$js⁄_‰ì_£rülized_°rög
(*
°rög
) {

1328 
	`∑rs⁄_‰ì
(
°rög
);

1329 
	}
}

1331 
JSON_Sètus
 
	$js⁄_¨øy_ªmove
(
JSON_Aºay
 *
¨øy
, 
size_t
 
ix
) {

1332 
size_t
 
œ°_ñemít_ix
 = 0;

1333 i‡(
¨øy
 =
NULL
 || 
ix
 >
	`js⁄_¨øy_gë_cou¡
(array)) {

1334  
JSONFaûuª
;

1336 
œ°_ñemít_ix
 = 
	`js⁄_¨øy_gë_cou¡
(
¨øy
) - 1;

1337 
	`js⁄_vÆue_‰ì
(
	`js⁄_¨øy_gë_vÆue
(
¨øy
, 
ix
));

1338 
¨øy
->
cou¡
 -= 1;

1339 i‡(
ix
 !
œ°_ñemít_ix
)

1340 
¨øy
->
ôems
[
ix
] = 
	`js⁄_¨øy_gë_vÆue
◊ºay, 
œ°_ñemít_ix
);

1341  
JSONSuc˚ss
;

1342 
	}
}

1344 
JSON_Sètus
 
	$js⁄_¨øy_ª∂a˚_vÆue
(
JSON_Aºay
 *
¨øy
, 
size_t
 
ix
, 
JSON_VÆue
 *
vÆue
) {

1345 i‡(
¨øy
 =
NULL
 || 
vÆue
 =NULL || 
ix
 >
	`js⁄_¨øy_gë_cou¡
(array)) {

1346  
JSONFaûuª
;

1348 
	`js⁄_vÆue_‰ì
(
	`js⁄_¨øy_gë_vÆue
(
¨øy
, 
ix
));

1349 
¨øy
->
ôems
[
ix
] = 
vÆue
;

1350  
JSONSuc˚ss
;

1351 
	}
}

1353 
JSON_Sètus
 
	$js⁄_¨øy_ª∂a˚_°rög
(
JSON_Aºay
 *
¨øy
, 
size_t
 
i
, c⁄° * 
°rög
) {

1354 
JSON_VÆue
 *
vÆue
 = 
	`js⁄_vÆue_öô_°rög
(
°rög
);

1355 i‡(
vÆue
 =
NULL
)

1356  
JSONFaûuª
;

1357 i‡(
	`js⁄_¨øy_ª∂a˚_vÆue
(
¨øy
, 
i
, 
vÆue
Ë=
JSONFaûuª
) {

1358 
	`js⁄_vÆue_‰ì
(
vÆue
);

1359  
JSONFaûuª
;

1361  
JSONSuc˚ss
;

1362 
	}
}

1364 
JSON_Sètus
 
	$js⁄_¨øy_ª∂a˚_numbî
(
JSON_Aºay
 *
¨øy
, 
size_t
 
i
, 
numbî
) {

1365 
JSON_VÆue
 *
vÆue
 = 
	`js⁄_vÆue_öô_numbî
(
numbî
);

1366 i‡(
vÆue
 =
NULL
)

1367  
JSONFaûuª
;

1368 i‡(
	`js⁄_¨øy_ª∂a˚_vÆue
(
¨øy
, 
i
, 
vÆue
Ë=
JSONFaûuª
) {

1369 
	`js⁄_vÆue_‰ì
(
vÆue
);

1370  
JSONFaûuª
;

1372  
JSONSuc˚ss
;

1373 
	}
}

1375 
JSON_Sètus
 
	$js⁄_¨øy_ª∂a˚_boﬁón
(
JSON_Aºay
 *
¨øy
, 
size_t
 
i
, 
boﬁón
) {

1376 
JSON_VÆue
 *
vÆue
 = 
	`js⁄_vÆue_öô_boﬁón
(
boﬁón
);

1377 i‡(
vÆue
 =
NULL
)

1378  
JSONFaûuª
;

1379 i‡(
	`js⁄_¨øy_ª∂a˚_vÆue
(
¨øy
, 
i
, 
vÆue
Ë=
JSONFaûuª
) {

1380 
	`js⁄_vÆue_‰ì
(
vÆue
);

1381  
JSONFaûuª
;

1383  
JSONSuc˚ss
;

1384 
	}
}

1386 
JSON_Sètus
 
	$js⁄_¨øy_ª∂a˚_nuŒ
(
JSON_Aºay
 *
¨øy
, 
size_t
 
i
) {

1387 
JSON_VÆue
 *
vÆue
 = 
	`js⁄_vÆue_öô_nuŒ
();

1388 i‡(
vÆue
 =
NULL
)

1389  
JSONFaûuª
;

1390 i‡(
	`js⁄_¨øy_ª∂a˚_vÆue
(
¨øy
, 
i
, 
vÆue
Ë=
JSONFaûuª
) {

1391 
	`js⁄_vÆue_‰ì
(
vÆue
);

1392  
JSONFaûuª
;

1394  
JSONSuc˚ss
;

1395 
	}
}

1397 
JSON_Sètus
 
	$js⁄_¨øy_˛ór
(
JSON_Aºay
 *
¨øy
) {

1398 
size_t
 
i
 = 0;

1399 i‡(
¨øy
 =
NULL
)

1400  
JSONFaûuª
;

1401 
i
 = 0; i < 
	`js⁄_¨øy_gë_cou¡
(
¨øy
); i++) {

1402 
	`js⁄_vÆue_‰ì
(
	`js⁄_¨øy_gë_vÆue
(
¨øy
, 
i
));

1404 
¨øy
->
cou¡
 = 0;

1405  
JSONSuc˚ss
;

1406 
	}
}

1408 
JSON_Sètus
 
	$js⁄_¨øy_≠≥nd_vÆue
(
JSON_Aºay
 *
¨øy
, 
JSON_VÆue
 *
vÆue
) {

1409 i‡(
¨øy
 =
NULL
 || 
vÆue
 == NULL)

1410  
JSONFaûuª
;

1411  
	`js⁄_¨øy_add
(
¨øy
, 
vÆue
);

1412 
	}
}

1414 
JSON_Sètus
 
	$js⁄_¨øy_≠≥nd_°rög
(
JSON_Aºay
 *
¨øy
, c⁄° *
°rög
) {

1415 
JSON_VÆue
 *
vÆue
 = 
	`js⁄_vÆue_öô_°rög
(
°rög
);

1416 i‡(
vÆue
 =
NULL
)

1417  
JSONFaûuª
;

1418 i‡(
	`js⁄_¨øy_≠≥nd_vÆue
(
¨øy
, 
vÆue
Ë=
JSONFaûuª
) {

1419 
	`js⁄_vÆue_‰ì
(
vÆue
);

1420  
JSONFaûuª
;

1422  
JSONSuc˚ss
;

1423 
	}
}

1425 
JSON_Sètus
 
	$js⁄_¨øy_≠≥nd_numbî
(
JSON_Aºay
 *
¨øy
, 
numbî
) {

1426 
JSON_VÆue
 *
vÆue
 = 
	`js⁄_vÆue_öô_numbî
(
numbî
);

1427 i‡(
vÆue
 =
NULL
)

1428  
JSONFaûuª
;

1429 i‡(
	`js⁄_¨øy_≠≥nd_vÆue
(
¨øy
, 
vÆue
Ë=
JSONFaûuª
) {

1430 
	`js⁄_vÆue_‰ì
(
vÆue
);

1431  
JSONFaûuª
;

1433  
JSONSuc˚ss
;

1434 
	}
}

1436 
JSON_Sètus
 
	$js⁄_¨øy_≠≥nd_boﬁón
(
JSON_Aºay
 *
¨øy
, 
boﬁón
) {

1437 
JSON_VÆue
 *
vÆue
 = 
	`js⁄_vÆue_öô_boﬁón
(
boﬁón
);

1438 i‡(
vÆue
 =
NULL
)

1439  
JSONFaûuª
;

1440 i‡(
	`js⁄_¨øy_≠≥nd_vÆue
(
¨øy
, 
vÆue
Ë=
JSONFaûuª
) {

1441 
	`js⁄_vÆue_‰ì
(
vÆue
);

1442  
JSONFaûuª
;

1444  
JSONSuc˚ss
;

1445 
	}
}

1447 
JSON_Sètus
 
	$js⁄_¨øy_≠≥nd_nuŒ
(
JSON_Aºay
 *
¨øy
) {

1448 
JSON_VÆue
 *
vÆue
 = 
	`js⁄_vÆue_öô_nuŒ
();

1449 i‡(
vÆue
 =
NULL
)

1450  
JSONFaûuª
;

1451 i‡(
	`js⁄_¨øy_≠≥nd_vÆue
(
¨øy
, 
vÆue
Ë=
JSONFaûuª
) {

1452 
	`js⁄_vÆue_‰ì
(
vÆue
);

1453  
JSONFaûuª
;

1455  
JSONSuc˚ss
;

1456 
	}
}

1458 
JSON_Sètus
 
	$js⁄_obje˘_£t_vÆue
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
JSON_VÆue
 *
vÆue
) {

1459 
size_t
 
i
 = 0;

1460 
JSON_VÆue
 *
ﬁd_vÆue
;

1461 i‡(
obje˘
 =
NULL
 || 
«me
 =NULL || 
vÆue
 == NULL)

1462  
JSONFaûuª
;

1463 
ﬁd_vÆue
 = 
	`js⁄_obje˘_gë_vÆue
(
obje˘
, 
«me
);

1464 i‡(
ﬁd_vÆue
 !
NULL
) {

1465 
	`js⁄_vÆue_‰ì
(
ﬁd_vÆue
);

1466 
i
 = 0; i < 
	`js⁄_obje˘_gë_cou¡
(
obje˘
); i++) {

1467 i‡(
	`°rcmp
(
obje˘
->
«mes
[
i
], 
«me
) == 0) {

1468 
obje˘
->
vÆues
[
i
] = 
vÆue
;

1469  
JSONSuc˚ss
;

1474  
	`js⁄_obje˘_add
(
obje˘
, 
«me
, 
vÆue
);

1475 
	}
}

1477 
JSON_Sètus
 
	$js⁄_obje˘_£t_°rög
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, c⁄° *
°rög
) {

1478  
	`js⁄_obje˘_£t_vÆue
(
obje˘
, 
«me
, 
	`js⁄_vÆue_öô_°rög
(
°rög
));

1479 
	}
}

1481 
JSON_Sètus
 
	$js⁄_obje˘_£t_numbî
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
numbî
) {

1482  
	`js⁄_obje˘_£t_vÆue
(
obje˘
, 
«me
, 
	`js⁄_vÆue_öô_numbî
(
numbî
));

1483 
	}
}

1485 
JSON_Sètus
 
	$js⁄_obje˘_£t_boﬁón
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
boﬁón
) {

1486  
	`js⁄_obje˘_£t_vÆue
(
obje˘
, 
«me
, 
	`js⁄_vÆue_öô_boﬁón
(
boﬁón
));

1487 
	}
}

1489 
JSON_Sètus
 
	$js⁄_obje˘_£t_nuŒ
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

1490  
	`js⁄_obje˘_£t_vÆue
(
obje˘
, 
«me
, 
	`js⁄_vÆue_öô_nuŒ
());

1491 
	}
}

1493 
JSON_Sètus
 
	$js⁄_obje˘_dŸ£t_vÆue
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
JSON_VÆue
 *
vÆue
) {

1494 c⁄° *
dŸ_pos
 = 
NULL
;

1495 *
cuºít_«me
 = 
NULL
;

1496 
JSON_Obje˘
 *
ãmp_obj
 = 
NULL
;

1497 
JSON_VÆue
 *
√w_vÆue
 = 
NULL
;

1498 i‡(
vÆue
 =
NULL
 || 
«me
 == NULL || value == NULL)

1499  
JSONFaûuª
;

1500 
dŸ_pos
 = 
	`°rchr
(
«me
, '.');

1501 i‡(
dŸ_pos
 =
NULL
) {

1502  
	`js⁄_obje˘_£t_vÆue
(
obje˘
, 
«me
, 
vÆue
);

1504 
cuºít_«me
 = 
	`∑rs⁄_°∫dup
(
«me
, 
dŸ_pos
 -Çame);

1505 
ãmp_obj
 = 
	`js⁄_obje˘_gë_obje˘
(
obje˘
, 
cuºít_«me
);

1506 i‡(
ãmp_obj
 =
NULL
) {

1507 
√w_vÆue
 = 
	`js⁄_vÆue_öô_obje˘
();

1508 i‡(
√w_vÆue
 =
NULL
) {

1509 
	`∑rs⁄_‰ì
(
cuºít_«me
);

1510  
JSONFaûuª
;

1512 i‡(
	`js⁄_obje˘_add
(
obje˘
, 
cuºít_«me
, 
√w_vÆue
Ë=
JSONFaûuª
) {

1513 
	`js⁄_vÆue_‰ì
(
√w_vÆue
);

1514 
	`∑rs⁄_‰ì
(
cuºít_«me
);

1515  
JSONFaûuª
;

1517 
ãmp_obj
 = 
	`js⁄_obje˘_gë_obje˘
(
obje˘
, 
cuºít_«me
);

1519 
	`∑rs⁄_‰ì
(
cuºít_«me
);

1520  
	`js⁄_obje˘_dŸ£t_vÆue
(
ãmp_obj
, 
dŸ_pos
 + 1, 
vÆue
);

1522 
	}
}

1524 
JSON_Sètus
 
	$js⁄_obje˘_dŸ£t_°rög
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, c⁄° *
°rög
) {

1525 
JSON_VÆue
 *
vÆue
 = 
	`js⁄_vÆue_öô_°rög
(
°rög
);

1526 i‡(
vÆue
 =
NULL
)

1527  
JSONFaûuª
;

1528 i‡(
	`js⁄_obje˘_dŸ£t_vÆue
(
obje˘
, 
«me
, 
vÆue
Ë=
JSONFaûuª
) {

1529 
	`js⁄_vÆue_‰ì
(
vÆue
);

1530  
JSONFaûuª
;

1532  
JSONSuc˚ss
;

1533 
	}
}

1535 
JSON_Sètus
 
	$js⁄_obje˘_dŸ£t_numbî
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
numbî
) {

1536 
JSON_VÆue
 *
vÆue
 = 
	`js⁄_vÆue_öô_numbî
(
numbî
);

1537 i‡(
vÆue
 =
NULL
)

1538  
JSONFaûuª
;

1539 i‡(
	`js⁄_obje˘_dŸ£t_vÆue
(
obje˘
, 
«me
, 
vÆue
Ë=
JSONFaûuª
) {

1540 
	`js⁄_vÆue_‰ì
(
vÆue
);

1541  
JSONFaûuª
;

1543  
JSONSuc˚ss
;

1544 
	}
}

1546 
JSON_Sètus
 
	$js⁄_obje˘_dŸ£t_boﬁón
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
boﬁón
) {

1547 
JSON_VÆue
 *
vÆue
 = 
	`js⁄_vÆue_öô_boﬁón
(
boﬁón
);

1548 i‡(
vÆue
 =
NULL
)

1549  
JSONFaûuª
;

1550 i‡(
	`js⁄_obje˘_dŸ£t_vÆue
(
obje˘
, 
«me
, 
vÆue
Ë=
JSONFaûuª
) {

1551 
	`js⁄_vÆue_‰ì
(
vÆue
);

1552  
JSONFaûuª
;

1554  
JSONSuc˚ss
;

1555 
	}
}

1557 
JSON_Sètus
 
	$js⁄_obje˘_dŸ£t_nuŒ
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

1558 
JSON_VÆue
 *
vÆue
 = 
	`js⁄_vÆue_öô_nuŒ
();

1559 i‡(
vÆue
 =
NULL
)

1560  
JSONFaûuª
;

1561 i‡(
	`js⁄_obje˘_dŸ£t_vÆue
(
obje˘
, 
«me
, 
vÆue
Ë=
JSONFaûuª
) {

1562 
	`js⁄_vÆue_‰ì
(
vÆue
);

1563  
JSONFaûuª
;

1565  
JSONSuc˚ss
;

1566 
	}
}

1568 
JSON_Sètus
 
	$js⁄_obje˘_ªmove
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

1569 
size_t
 
i
 = 0, 
œ°_ôem_ödex
 = 0;

1570 i‡(
obje˘
 =
NULL
 || 
	`js⁄_obje˘_gë_vÆue
(obje˘, 
«me
) == NULL)

1571  
JSONFaûuª
;

1572 
œ°_ôem_ödex
 = 
	`js⁄_obje˘_gë_cou¡
(
obje˘
) - 1;

1573 
i
 = 0; i < 
	`js⁄_obje˘_gë_cou¡
(
obje˘
); i++) {

1574 i‡(
	`°rcmp
(
obje˘
->
«mes
[
i
], 
«me
) == 0) {

1575 
	`∑rs⁄_‰ì
(
obje˘
->
«mes
[
i
]);

1576 
	`js⁄_vÆue_‰ì
(
obje˘
->
vÆues
[
i
]);

1577 i‡(
i
 !
œ°_ôem_ödex
) {

1578 
obje˘
->
«mes
[
i
] = obje˘->«mes[
œ°_ôem_ödex
];

1579 
obje˘
->
vÆues
[
i
] = obje˘->vÆues[
œ°_ôem_ödex
];

1581 
obje˘
->
cou¡
 -= 1;

1582  
JSONSuc˚ss
;

1585  
JSONFaûuª
;

1586 
	}
}

1588 
JSON_Sètus
 
	$js⁄_obje˘_dŸªmove
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
) {

1589 c⁄° *
dŸ_pos
 = 
	`°rchr
(
«me
, '.');

1590 *
cuºít_«me
 = 
NULL
;

1591 
JSON_Obje˘
 *
ãmp_obj
 = 
NULL
;

1592 i‡(
dŸ_pos
 =
NULL
) {

1593  
	`js⁄_obje˘_ªmove
(
obje˘
, 
«me
);

1595 
cuºít_«me
 = 
	`∑rs⁄_°∫dup
(
«me
, 
dŸ_pos
 -Çame);

1596 
ãmp_obj
 = 
	`js⁄_obje˘_gë_obje˘
(
obje˘
, 
cuºít_«me
);

1597 i‡(
ãmp_obj
 =
NULL
) {

1598 
	`∑rs⁄_‰ì
(
cuºít_«me
);

1599  
JSONFaûuª
;

1601 
	`∑rs⁄_‰ì
(
cuºít_«me
);

1602  
	`js⁄_obje˘_dŸªmove
(
ãmp_obj
, 
dŸ_pos
 + 1);

1604 
	}
}

1606 
JSON_Sètus
 
	$js⁄_obje˘_˛ór
(
JSON_Obje˘
 *
obje˘
) {

1607 
size_t
 
i
 = 0;

1608 i‡(
obje˘
 =
NULL
) {

1609  
JSONFaûuª
;

1611 
i
 = 0; i < 
	`js⁄_obje˘_gë_cou¡
(
obje˘
); i++) {

1612 
	`∑rs⁄_‰ì
(
obje˘
->
«mes
[
i
]);

1613 
	`js⁄_vÆue_‰ì
(
obje˘
->
vÆues
[
i
]);

1615 
obje˘
->
cou¡
 = 0;

1616  
JSONSuc˚ss
;

1617 
	}
}

1619 
JSON_Sètus
 
	$js⁄_vÆid©e
(c⁄° 
JSON_VÆue
 *
schema
, c⁄° JSON_VÆuê*
vÆue
) {

1620 
JSON_VÆue
 *
ãmp_schema_vÆue
 = 
NULL
, *
ãmp_vÆue
 = NULL;

1621 
JSON_Aºay
 *
schema_¨øy
 = 
NULL
, *
vÆue_¨øy
 = NULL;

1622 
JSON_Obje˘
 *
schema_obje˘
 = 
NULL
, *
vÆue_obje˘
 = NULL;

1623 
JSON_VÆue_Ty≥
 
schema_ty≥
 = 
JSONEº‹
, 
vÆue_ty≥
 = JSONError;

1624 c⁄° *
key
 = 
NULL
;

1625 
size_t
 
i
 = 0, 
cou¡
 = 0;

1626 i‡(
schema
 =
NULL
 || 
vÆue
 == NULL)

1627  
JSONFaûuª
;

1628 
schema_ty≥
 = 
	`js⁄_vÆue_gë_ty≥
(
schema
);

1629 
vÆue_ty≥
 = 
	`js⁄_vÆue_gë_ty≥
(
vÆue
);

1630 i‡(
schema_ty≥
 !
vÆue_ty≥
 && schema_ty≥ !
JSONNuŒ
)

1631  
JSONFaûuª
;

1632 
schema_ty≥
) {

1633 
JSONAºay
:

1634 
schema_¨øy
 = 
	`js⁄_vÆue_gë_¨øy
(
schema
);

1635 
vÆue_¨øy
 = 
	`js⁄_vÆue_gë_¨øy
(
vÆue
);

1636 
cou¡
 = 
	`js⁄_¨øy_gë_cou¡
(
schema_¨øy
);

1637 i‡(
cou¡
 == 0)

1638  
JSONSuc˚ss
;

1640 
ãmp_schema_vÆue
 = 
	`js⁄_¨øy_gë_vÆue
(
schema_¨øy
, 0);

1641 
i
 = 0; i < 
	`js⁄_¨øy_gë_cou¡
(
vÆue_¨øy
); i++) {

1642 
ãmp_vÆue
 = 
	`js⁄_¨øy_gë_vÆue
(
vÆue_¨øy
, 
i
);

1643 i‡(
	`js⁄_vÆid©e
(
ãmp_schema_vÆue
, 
ãmp_vÆue
) == 0) {

1644  
JSONFaûuª
;

1647  
JSONSuc˚ss
;

1648 
JSONObje˘
:

1649 
schema_obje˘
 = 
	`js⁄_vÆue_gë_obje˘
(
schema
);

1650 
vÆue_obje˘
 = 
	`js⁄_vÆue_gë_obje˘
(
vÆue
);

1651 
cou¡
 = 
	`js⁄_obje˘_gë_cou¡
(
schema_obje˘
);

1652 i‡(
cou¡
 == 0)

1653  
JSONSuc˚ss
;

1654 i‡(
	`js⁄_obje˘_gë_cou¡
(
vÆue_obje˘
Ë< 
cou¡
)

1655  
JSONFaûuª
;

1656 
i
 = 0; i < 
cou¡
; i++) {

1657 
key
 = 
	`js⁄_obje˘_gë_«me
(
schema_obje˘
, 
i
);

1658 
ãmp_schema_vÆue
 = 
	`js⁄_obje˘_gë_vÆue
(
schema_obje˘
, 
key
);

1659 
ãmp_vÆue
 = 
	`js⁄_obje˘_gë_vÆue
(
vÆue_obje˘
, 
key
);

1660 i‡(
ãmp_vÆue
 =
NULL
)

1661  
JSONFaûuª
;

1662 i‡(
	`js⁄_vÆid©e
(
ãmp_schema_vÆue
, 
ãmp_vÆue
Ë=
JSONFaûuª
)

1663  
JSONFaûuª
;

1665  
JSONSuc˚ss
;

1666 
JSONSåög
: 
JSONNumbî
: 
JSONBoﬁón
: 
JSONNuŒ
:

1667  
JSONSuc˚ss
;

1668 
JSONEº‹
: :

1669  
JSONFaûuª
;

1671 
	}
}

1673 
JSON_Sètus
 
	$js⁄_vÆue_equÆs
(c⁄° 
JSON_VÆue
 *
a
, c⁄° JSON_VÆuê*
b
) {

1674 
JSON_Obje˘
 *
a_obje˘
 = 
NULL
, *
b_obje˘
 = NULL;

1675 
JSON_Aºay
 *
a_¨øy
 = 
NULL
, *
b_¨øy
 = NULL;

1676 c⁄° *
a_°rög
 = 
NULL
, *
b_°rög
 = NULL;

1677 c⁄° *
key
 = 
NULL
;

1678 
size_t
 
a_cou¡
 = 0, 
b_cou¡
 = 0, 
i
 = 0;

1679 
JSON_VÆue_Ty≥
 
a_ty≥
, 
b_ty≥
;

1680 
a_ty≥
 = 
	`js⁄_vÆue_gë_ty≥
(
a
);

1681 
b_ty≥
 = 
	`js⁄_vÆue_gë_ty≥
(
b
);

1682 i‡(
a_ty≥
 !
b_ty≥
) {

1685 
a_ty≥
) {

1686 
JSONAºay
:

1687 
a_¨øy
 = 
	`js⁄_vÆue_gë_¨øy
(
a
);

1688 
b_¨øy
 = 
	`js⁄_vÆue_gë_¨øy
(
b
);

1689 
a_cou¡
 = 
	`js⁄_¨øy_gë_cou¡
(
a_¨øy
);

1690 
b_cou¡
 = 
	`js⁄_¨øy_gë_cou¡
(
b_¨øy
);

1691 i‡(
a_cou¡
 !
b_cou¡
) {

1694 
i
 = 0; i < 
a_cou¡
; i++) {

1695 i‡(!
	`js⁄_vÆue_equÆs
(
	`js⁄_¨øy_gë_vÆue
(
a_¨øy
, 
i
),

1696 
	`js⁄_¨øy_gë_vÆue
(
b_¨øy
, 
i
))) {

1701 
JSONObje˘
:

1702 
a_obje˘
 = 
	`js⁄_vÆue_gë_obje˘
(
a
);

1703 
b_obje˘
 = 
	`js⁄_vÆue_gë_obje˘
(
b
);

1704 
a_cou¡
 = 
	`js⁄_obje˘_gë_cou¡
(
a_obje˘
);

1705 
b_cou¡
 = 
	`js⁄_obje˘_gë_cou¡
(
b_obje˘
);

1706 i‡(
a_cou¡
 !
b_cou¡
) {

1709 
i
 = 0; i < 
a_cou¡
; i++) {

1710 
key
 = 
	`js⁄_obje˘_gë_«me
(
a_obje˘
, 
i
);

1711 i‡(!
	`js⁄_vÆue_equÆs
(
	`js⁄_obje˘_gë_vÆue
(
a_obje˘
, 
key
),

1712 
	`js⁄_obje˘_gë_vÆue
(
b_obje˘
, 
key
))) {

1717 
JSONSåög
:

1718 
a_°rög
 = 
	`js⁄_vÆue_gë_°rög
(
a
);

1719 
b_°rög
 = 
	`js⁄_vÆue_gë_°rög
(
b
);

1720  
	`°rcmp
(
a_°rög
, 
b_°rög
) == 0;

1721 
JSONBoﬁón
:

1722  
	`js⁄_vÆue_gë_boﬁón
(
a
Ë=js⁄_vÆue_gë_boﬁón(
b
);

1723 
JSONNumbî
:

1724  
	`Ábs
(
	`js⁄_vÆue_gë_numbî
(
a
Ë- js⁄_vÆue_gë_numbî(
b
)) < 0.000001;

1725 
JSONEº‹
:

1727 
JSONNuŒ
:

1732 
	}
}

1734 
JSON_VÆue_Ty≥
 
	$js⁄_ty≥
(c⁄° 
JSON_VÆue
 *
vÆue
) {

1735  
	`js⁄_vÆue_gë_ty≥
(
vÆue
);

1736 
	}
}

1738 
JSON_Obje˘
 * 
	$js⁄_obje˘
 (c⁄° 
JSON_VÆue
 *
vÆue
) {

1739  
	`js⁄_vÆue_gë_obje˘
(
vÆue
);

1740 
	}
}

1742 
JSON_Aºay
 * 
	$js⁄_¨øy
 (c⁄° 
JSON_VÆue
 *
vÆue
) {

1743  
	`js⁄_vÆue_gë_¨øy
(
vÆue
);

1744 
	}
}

1746 c⁄° * 
	$js⁄_°rög
 (c⁄° 
JSON_VÆue
 *
vÆue
) {

1747  
	`js⁄_vÆue_gë_°rög
(
vÆue
);

1748 
	}
}

1750 
	$js⁄_numbî
 (c⁄° 
JSON_VÆue
 *
vÆue
) {

1751  
	`js⁄_vÆue_gë_numbî
(
vÆue
);

1752 
	}
}

1754 
	$js⁄_boﬁón
(c⁄° 
JSON_VÆue
 *
vÆue
) {

1755  
	`js⁄_vÆue_gë_boﬁón
(
vÆue
);

1756 
	}
}

1758 
	$js⁄_£t_Æloˇti⁄_fun˘i⁄s
(
JSON_MÆloc_Fun˘i⁄
 
mÆloc_fun
, 
JSON_Fªe_Fun˘i⁄
 
‰ì_fun
) {

1759 
∑rs⁄_mÆloc
 = 
mÆloc_fun
;

1760 
∑rs⁄_‰ì
 = 
‰ì_fun
;

1761 
	}
}

	@src/parson/parson.h

24 #i‚de‡
∑rs⁄_∑rs⁄_h


25 
	#∑rs⁄_∑rs⁄_h


	)

27 #ifde‡
__˝lu•lus


32 
	~<°ddef.h
>

35 
js⁄_obje˘_t
 
	tJSON_Obje˘
;

36 
js⁄_¨øy_t
 
	tJSON_Aºay
;

37 
js⁄_vÆue_t
 
	tJSON_VÆue
;

39 
	ejs⁄_vÆue_ty≥
 {

40 
JSONEº‹
 = -1,

41 
JSONNuŒ
 = 1,

42 
JSONSåög
 = 2,

43 
JSONNumbî
 = 3,

44 
JSONObje˘
 = 4,

45 
JSONAºay
 = 5,

46 
JSONBoﬁón
 = 6

48 
	tJSON_VÆue_Ty≥
;

50 
	ejs⁄_ªsu…_t
 {

51 
JSONSuc˚ss
 = 0,

52 
JSONFaûuª
 = -1

54 
	tJSON_Sètus
;

56 * (*
	tJSON_MÆloc_Fun˘i⁄
)(
	tsize_t
);

57 (*
JSON_Fªe_Fun˘i⁄
)(*);

61 
js⁄_£t_Æloˇti⁄_fun˘i⁄s
(
JSON_MÆloc_Fun˘i⁄
 
mÆloc_fun
, 
JSON_Fªe_Fun˘i⁄
 
‰ì_fun
);

64 
JSON_VÆue
 * 
js⁄_∑r£_fûe
(c⁄° *
fûíame
);

68 
JSON_VÆue
 * 
js⁄_∑r£_fûe_wôh_commíts
(c⁄° *
fûíame
);

71 
JSON_VÆue
 * 
js⁄_∑r£_°rög
(c⁄° *
°rög
);

75 
JSON_VÆue
 * 
js⁄_∑r£_°rög_wôh_commíts
(c⁄° *
°rög
);

78 
size_t
 
js⁄_£rüliz©i⁄_size
(c⁄° 
JSON_VÆue
 *
vÆue
);

79 
JSON_Sètus
 
js⁄_£rülize_to_buf„r
(c⁄° 
JSON_VÆue
 *
vÆue
, *
buf
, 
size_t
 
buf_size_ö_byãs
);

80 
JSON_Sètus
 
js⁄_£rülize_to_fûe
(c⁄° 
JSON_VÆue
 *
vÆue
, c⁄° *
fûíame
);

81 * 
js⁄_£rülize_to_°rög
(c⁄° 
JSON_VÆue
 *
vÆue
);

84 
size_t
 
js⁄_£rüliz©i⁄_size_¥ëty
(c⁄° 
JSON_VÆue
 *
vÆue
);

85 
JSON_Sètus
 
js⁄_£rülize_to_buf„r_¥ëty
(c⁄° 
JSON_VÆue
 *
vÆue
, *
buf
, 
size_t
 
buf_size_ö_byãs
);

86 
JSON_Sètus
 
js⁄_£rülize_to_fûe_¥ëty
(c⁄° 
JSON_VÆue
 *
vÆue
, c⁄° *
fûíame
);

87 * 
js⁄_£rülize_to_°rög_¥ëty
(c⁄° 
JSON_VÆue
 *
vÆue
);

89 
js⁄_‰ì_£rülized_°rög
(*
°rög
);

92 
js⁄_vÆue_equÆs
(c⁄° 
JSON_VÆue
 *
a
, c⁄° JSON_VÆuê*
b
);

104 
JSON_Sètus
 
js⁄_vÆid©e
(c⁄° 
JSON_VÆue
 *
schema
, c⁄° JSON_VÆuê*
vÆue
);

109 
JSON_VÆue
 * 
js⁄_obje˘_gë_vÆue
 (c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
);

110 c⁄° * 
js⁄_obje˘_gë_°rög
 (c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
);

111 
JSON_Obje˘
 * 
js⁄_obje˘_gë_obje˘
 (c⁄° JSON_Obje˘ *
obje˘
, c⁄° *
«me
);

112 
JSON_Aºay
 * 
js⁄_obje˘_gë_¨øy
 (c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
);

113 
js⁄_obje˘_gë_numbî
 (c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
);

114 
js⁄_obje˘_gë_boﬁón
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
);

120 
JSON_VÆue
 * 
js⁄_obje˘_dŸgë_vÆue
 (c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
);

121 c⁄° * 
js⁄_obje˘_dŸgë_°rög
 (c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
);

122 
JSON_Obje˘
 * 
js⁄_obje˘_dŸgë_obje˘
 (c⁄° JSON_Obje˘ *
obje˘
, c⁄° *
«me
);

123 
JSON_Aºay
 * 
js⁄_obje˘_dŸgë_¨øy
 (c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
);

124 
js⁄_obje˘_dŸgë_numbî
 (c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
);

125 
js⁄_obje˘_dŸgë_boﬁón
(c⁄° 
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
);

128 
size_t
 
js⁄_obje˘_gë_cou¡
(c⁄° 
JSON_Obje˘
 *
obje˘
);

129 c⁄° * 
js⁄_obje˘_gë_«me
 (c⁄° 
JSON_Obje˘
 *
obje˘
, 
size_t
 
ödex
);

133 
JSON_Sètus
 
js⁄_obje˘_£t_vÆue
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
JSON_VÆue
 *
vÆue
);

134 
JSON_Sètus
 
js⁄_obje˘_£t_°rög
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, c⁄° *
°rög
);

135 
JSON_Sètus
 
js⁄_obje˘_£t_numbî
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
numbî
);

136 
JSON_Sètus
 
js⁄_obje˘_£t_boﬁón
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
boﬁón
);

137 
JSON_Sètus
 
js⁄_obje˘_£t_nuŒ
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
);

141 
JSON_Sètus
 
js⁄_obje˘_dŸ£t_vÆue
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
JSON_VÆue
 *
vÆue
);

142 
JSON_Sètus
 
js⁄_obje˘_dŸ£t_°rög
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, c⁄° *
°rög
);

143 
JSON_Sètus
 
js⁄_obje˘_dŸ£t_numbî
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
numbî
);

144 
JSON_Sètus
 
js⁄_obje˘_dŸ£t_boﬁón
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
, 
boﬁón
);

145 
JSON_Sètus
 
js⁄_obje˘_dŸ£t_nuŒ
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
);

148 
JSON_Sètus
 
js⁄_obje˘_ªmove
(
JSON_Obje˘
 *
obje˘
, c⁄° *
«me
);

151 
JSON_Sètus
 
js⁄_obje˘_dŸªmove
(
JSON_Obje˘
 *
obje˘
, c⁄° *
key
);

154 
JSON_Sètus
 
js⁄_obje˘_˛ór
(
JSON_Obje˘
 *
obje˘
);

159 
JSON_VÆue
 * 
js⁄_¨øy_gë_vÆue
 (c⁄° 
JSON_Aºay
 *
¨øy
, 
size_t
 
ödex
);

160 c⁄° * 
js⁄_¨øy_gë_°rög
 (c⁄° 
JSON_Aºay
 *
¨øy
, 
size_t
 
ödex
);

161 
JSON_Obje˘
 * 
js⁄_¨øy_gë_obje˘
 (c⁄° 
JSON_Aºay
 *
¨øy
, 
size_t
 
ödex
);

162 
JSON_Aºay
 * 
js⁄_¨øy_gë_¨øy
 (c⁄° JSON_Aºay *
¨øy
, 
size_t
 
ödex
);

163 
js⁄_¨øy_gë_numbî
 (c⁄° 
JSON_Aºay
 *
¨øy
, 
size_t
 
ödex
);

164 
js⁄_¨øy_gë_boﬁón
(c⁄° 
JSON_Aºay
 *
¨øy
, 
size_t
 
ödex
);

165 
size_t
 
js⁄_¨øy_gë_cou¡
 (c⁄° 
JSON_Aºay
 *
¨øy
);

169 
JSON_Sètus
 
js⁄_¨øy_ªmove
(
JSON_Aºay
 *
¨øy
, 
size_t
 
i
);

174 
JSON_Sètus
 
js⁄_¨øy_ª∂a˚_vÆue
(
JSON_Aºay
 *
¨øy
, 
size_t
 
i
, 
JSON_VÆue
 *
vÆue
);

175 
JSON_Sètus
 
js⁄_¨øy_ª∂a˚_°rög
(
JSON_Aºay
 *
¨øy
, 
size_t
 
i
, c⁄° * 
°rög
);

176 
JSON_Sètus
 
js⁄_¨øy_ª∂a˚_numbî
(
JSON_Aºay
 *
¨øy
, 
size_t
 
i
, 
numbî
);

177 
JSON_Sètus
 
js⁄_¨øy_ª∂a˚_boﬁón
(
JSON_Aºay
 *
¨øy
, 
size_t
 
i
, 
boﬁón
);

178 
JSON_Sètus
 
js⁄_¨øy_ª∂a˚_nuŒ
(
JSON_Aºay
 *
¨øy
, 
size_t
 
i
);

181 
JSON_Sètus
 
js⁄_¨øy_˛ór
(
JSON_Aºay
 *
¨øy
);

185 
JSON_Sètus
 
js⁄_¨øy_≠≥nd_vÆue
(
JSON_Aºay
 *
¨øy
, 
JSON_VÆue
 *
vÆue
);

186 
JSON_Sètus
 
js⁄_¨øy_≠≥nd_°rög
(
JSON_Aºay
 *
¨øy
, c⁄° *
°rög
);

187 
JSON_Sètus
 
js⁄_¨øy_≠≥nd_numbî
(
JSON_Aºay
 *
¨øy
, 
numbî
);

188 
JSON_Sètus
 
js⁄_¨øy_≠≥nd_boﬁón
(
JSON_Aºay
 *
¨øy
, 
boﬁón
);

189 
JSON_Sètus
 
js⁄_¨øy_≠≥nd_nuŒ
(
JSON_Aºay
 *
¨øy
);

194 
JSON_VÆue
 * 
js⁄_vÆue_öô_obje˘
 ();

195 
JSON_VÆue
 * 
js⁄_vÆue_öô_¨øy
 ();

196 
JSON_VÆue
 * 
js⁄_vÆue_öô_°rög
 (c⁄° *
°rög
);

197 
JSON_VÆue
 * 
js⁄_vÆue_öô_numbî
 (
numbî
);

198 
JSON_VÆue
 * 
js⁄_vÆue_öô_boﬁón
(
boﬁón
);

199 
JSON_VÆue
 * 
js⁄_vÆue_öô_nuŒ
 ();

200 
JSON_VÆue
 * 
js⁄_vÆue_dìp_c›y
 (c⁄° JSON_VÆuê*
vÆue
);

201 
js⁄_vÆue_‰ì
 (
JSON_VÆue
 *
vÆue
);

203 
JSON_VÆue_Ty≥
 
js⁄_vÆue_gë_ty≥
 (c⁄° 
JSON_VÆue
 *
vÆue
);

204 
JSON_Obje˘
 * 
js⁄_vÆue_gë_obje˘
 (c⁄° 
JSON_VÆue
 *
vÆue
);

205 
JSON_Aºay
 * 
js⁄_vÆue_gë_¨øy
 (c⁄° 
JSON_VÆue
 *
vÆue
);

206 c⁄° * 
js⁄_vÆue_gë_°rög
 (c⁄° 
JSON_VÆue
 *
vÆue
);

207 
js⁄_vÆue_gë_numbî
 (c⁄° 
JSON_VÆue
 *
vÆue
);

208 
js⁄_vÆue_gë_boﬁón
(c⁄° 
JSON_VÆue
 *
vÆue
);

211 
JSON_VÆue_Ty≥
 
js⁄_ty≥
 (c⁄° 
JSON_VÆue
 *
vÆue
);

212 
JSON_Obje˘
 * 
js⁄_obje˘
 (c⁄° 
JSON_VÆue
 *
vÆue
);

213 
JSON_Aºay
 * 
js⁄_¨øy
 (c⁄° 
JSON_VÆue
 *
vÆue
);

214 c⁄° * 
js⁄_°rög
 (c⁄° 
JSON_VÆue
 *
vÆue
);

215 
js⁄_numbî
 (c⁄° 
JSON_VÆue
 *
vÆue
);

216 
js⁄_boﬁón
(c⁄° 
JSON_VÆue
 *
vÆue
);

218 #ifde‡
__˝lu•lus


	@src/proto/nc_memcache.c

18 
	~<˘y≥.h
>

20 
	~<nc_c‹e.h
>

21 
	~<nc_¥Ÿo.h
>

33 
	#MEMCACHE_MAX_KEY_LENGTH
 250

	)

39 
boﬁ


40 
	$memˇche_°‹age
(
msg
 *
r
)

42 
r
->
ty≥
) {

43 
MSG_REQ_MC_SET
:

44 
MSG_REQ_MC_CAS
:

45 
MSG_REQ_MC_ADD
:

46 
MSG_REQ_MC_REPLACE
:

47 
MSG_REQ_MC_APPEND
:

48 
MSG_REQ_MC_PREPEND
:

49  
åue
;

55  
Ál£
;

56 
	}
}

62 
boﬁ


63 
	$memˇche_ˇs
(
msg
 *
r
)

65 i‡(
r
->
ty≥
 =
MSG_REQ_MC_CAS
) {

66  
åue
;

69  
Ál£
;

70 
	}
}

76 
boﬁ


77 
	$memˇche_ªåõvÆ
(
msg
 *
r
)

79 
r
->
ty≥
) {

80 
MSG_REQ_MC_GET
:

81 
MSG_REQ_MC_GETS
:

82  
åue
;

88  
Ál£
;

89 
	}
}

95 
boﬁ


96 
	$memˇche_¨ôhmëic
(
msg
 *
r
)

98 
r
->
ty≥
) {

99 
MSG_REQ_MC_INCR
:

100 
MSG_REQ_MC_DECR
:

101  
åue
;

107  
Ál£
;

108 
	}
}

114 
boﬁ


115 
	$memˇche_dñëe
(
msg
 *
r
)

117 i‡(
r
->
ty≥
 =
MSG_REQ_MC_DELETE
) {

118  
åue
;

121  
Ál£
;

122 
	}
}

128 
boﬁ


129 
	$memˇche_touch
(
msg
 *
r
)

131 i‡(
r
->
ty≥
 =
MSG_REQ_MC_TOUCH
) {

132  
åue
;

135  
Ál£
;

136 
	}
}

139 
	$memˇche_∑r£_ªq
(
msg
 *
r
)

141 
mbuf
 *
b
;

142 
uöt8_t
 *
p
, *
m
;

143 
uöt8_t
 
ch
;

145 
SW_START
,

146 
SW_REQ_TYPE
,

147 
SW_SPACES_BEFORE_KEY
,

148 
SW_KEY
,

149 
SW_SPACES_BEFORE_KEYS
,

150 
SW_SPACES_BEFORE_FLAGS
,

151 
SW_FLAGS
,

152 
SW_SPACES_BEFORE_EXPIRY
,

153 
SW_EXPIRY
,

154 
SW_SPACES_BEFORE_VLEN
,

155 
SW_VLEN
,

156 
SW_SPACES_BEFORE_CAS
,

157 
SW_CAS
,

158 
SW_RUNTO_VAL
,

159 
SW_VAL
,

160 
SW_SPACES_BEFORE_NUM
,

161 
SW_NUM
,

162 
SW_RUNTO_CRLF
,

163 
SW_CRLF
,

164 
SW_NOREPLY
,

165 
SW_AFTER_NOREPLY
,

166 
SW_ALMOST_DONE
,

167 
SW_SENTINEL


168 } 
°©e
;

170 
°©e
 = 
r
->state;

171 
b
 = 
	`STAILQ_LAST
(&
r
->
mhdr
, 
mbuf
, 
√xt
);

173 
	`ASSERT
(
r
->
ªque°
);

174 
	`ASSERT
(!
r
->
ªdis
);

175 
	`ASSERT
(
°©e
 >
SW_START
 && sèã < 
SW_SENTINEL
);

176 
	`ASSERT
(
b
 !
NULL
);

177 
	`ASSERT
(
b
->
pos
 <b->
œ°
);

180 
	`ASSERT
(
r
->
pos
 !
NULL
);

181 
	`ASSERT
(
r
->
pos
 >
b
->po†&&Ñ->po†<b->
œ°
);

183 
p
 = 
r
->
pos
;Ö < 
b
->
œ°
;Ö++) {

184 
ch
 = *
p
;

186 
°©e
) {

188 
SW_START
:

189 i‡(
ch
 == ' ') {

193 i‡(!
	`i¶owî
(
ch
)) {

194 
îr‹
;

198 
r
->
tokí
 = 
p
;

199 
°©e
 = 
SW_REQ_TYPE
;

203 
SW_REQ_TYPE
:

204 i‡(
ch
 =' ' || ch =
CR
) {

206 
m
 = 
r
->
tokí
;

207 
r
->
tokí
 = 
NULL
;

208 
r
->
ty≥
 = 
MSG_UNKNOWN
;

209 
r
->
«rg
++;

211 
p
 - 
m
) {

214 i‡(
	`°r4cmp
(
m
, 'g', 'e', 't', ' ')) {

215 
r
->
ty≥
 = 
MSG_REQ_MC_GET
;

219 i‡(
	`°r4cmp
(
m
, 's', 'e', 't', ' ')) {

220 
r
->
ty≥
 = 
MSG_REQ_MC_SET
;

224 i‡(
	`°r4cmp
(
m
, 'a', 'd', 'd', ' ')) {

225 
r
->
ty≥
 = 
MSG_REQ_MC_ADD
;

229 i‡(
	`°r4cmp
(
m
, 'c', 'a', 's', ' ')) {

230 
r
->
ty≥
 = 
MSG_REQ_MC_CAS
;

237 i‡(
	`°r4cmp
(
m
, 'g', 'e', 't', 's')) {

238 
r
->
ty≥
 = 
MSG_REQ_MC_GETS
;

242 i‡(
	`°r4cmp
(
m
, 'i', 'n', 'c', 'r')) {

243 
r
->
ty≥
 = 
MSG_REQ_MC_INCR
;

247 i‡(
	`°r4cmp
(
m
, 'd', 'e', 'c', 'r')) {

248 
r
->
ty≥
 = 
MSG_REQ_MC_DECR
;

252 i‡(
	`°r4cmp
(
m
, 'q', 'u', 'i', 't')) {

253 
r
->
ty≥
 = 
MSG_REQ_MC_QUIT
;

254 
r
->
quô
 = 1;

261 i‡(
	`°r5cmp
(
m
, 't', 'o', 'u', 'c', 'h')) {

262 
r
->
ty≥
 = 
MSG_REQ_MC_TOUCH
;

269 i‡(
	`°r6cmp
(
m
, 'a', 'p', 'p', 'e', 'n', 'd')) {

270 
r
->
ty≥
 = 
MSG_REQ_MC_APPEND
;

274 i‡(
	`°r6cmp
(
m
, 'd', 'e', 'l', 'e', 't', 'e')) {

275 
r
->
ty≥
 = 
MSG_REQ_MC_DELETE
;

282 i‡(
	`°r7cmp
(
m
, 'p', 'r', 'e', 'p', 'e', 'n', 'd')) {

283 
r
->
ty≥
 = 
MSG_REQ_MC_PREPEND
;

287 i‡(
	`°r7cmp
(
m
, 'r', 'e', 'p', 'l', 'a', 'c', 'e')) {

288 
r
->
ty≥
 = 
MSG_REQ_MC_REPLACE
;

295 
r
->
ty≥
) {

296 
MSG_REQ_MC_GET
:

297 
MSG_REQ_MC_GETS
:

298 
MSG_REQ_MC_DELETE
:

299 
MSG_REQ_MC_CAS
:

300 
MSG_REQ_MC_SET
:

301 
MSG_REQ_MC_ADD
:

302 
MSG_REQ_MC_REPLACE
:

303 
MSG_REQ_MC_APPEND
:

304 
MSG_REQ_MC_PREPEND
:

305 
MSG_REQ_MC_INCR
:

306 
MSG_REQ_MC_DECR
:

307 
MSG_REQ_MC_TOUCH
:

308 i‡(
ch
 =
CR
) {

309 
îr‹
;

311 
°©e
 = 
SW_SPACES_BEFORE_KEY
;

314 
MSG_REQ_MC_QUIT
:

315 
p
 =Ö - 1;

316 
°©e
 = 
SW_CRLF
;

319 
MSG_UNKNOWN
:

320 
îr‹
;

323 
	`NOT_REACHED
();

326 } i‡(!
	`i¶owî
(
ch
)) {

327 
îr‹
;

332 
SW_SPACES_BEFORE_KEY
:

333 i‡(
ch
 != ' ') {

334 
p
 =Ö - 1;

335 
r
->
tokí
 = 
NULL
;

336 
°©e
 = 
SW_KEY
;

340 
SW_KEY
:

341 i‡(
r
->
tokí
 =
NULL
) {

342 
r
->
tokí
 = 
p
;

344 i‡(
ch
 =' ' || ch =
CR
) {

345 
keypos
 *
kpos
;

346 
keyÀn
 = 
p
 - 
r
->
tokí
;

347 i‡(
keyÀn
 > 
MEMCACHE_MAX_KEY_LENGTH
) {

348 
	`log_îr‹
("∑r£d badÑeq %"
PRIu64
" ofÅype %d with key "

350 "maximum keyÜígth", 
r
->
id
,Ñ->
ty≥
, 16,

351 
r
->
tokí
, 
p
 -Ñ->token);

352 
îr‹
;

353 } i‡(
keyÀn
 == 0) {

354 
	`log_îr‹
("∑r£d badÑeq %"
PRIu64
" ofÅype %d withán "

355 "em±y key", 
r
->
id
,Ñ->
ty≥
);

356 
îr‹
;

359 
kpos
 = 
	`¨øy_push
(
r
->
keys
);

360 i‡(
kpos
 =
NULL
) {

361 
íomem
;

363 
kpos
->
°¨t
 = 
r
->
tokí
;

364 
kpos
->
íd
 = 
p
;

366 
r
->
«rg
++;

367 
r
->
tokí
 = 
NULL
;

370 i‡(
	`memˇche_°‹age
(
r
)) {

371 
°©e
 = 
SW_SPACES_BEFORE_FLAGS
;

372 } i‡(
	`memˇche_¨ôhmëic
(
r
Ë|| 
	`memˇche_touch
(r) ) {

373 
°©e
 = 
SW_SPACES_BEFORE_NUM
;

374 } i‡(
	`memˇche_dñëe
(
r
)) {

375 
°©e
 = 
SW_RUNTO_CRLF
;

376 } i‡(
	`memˇche_ªåõvÆ
(
r
)) {

377 
°©e
 = 
SW_SPACES_BEFORE_KEYS
;

379 
°©e
 = 
SW_RUNTO_CRLF
;

382 i‡(
ch
 =
CR
) {

383 i‡(
	`memˇche_°‹age
(
r
Ë|| 
	`memˇche_¨ôhmëic
(r)) {

384 
îr‹
;

386 
p
 =Ö - 1;

392 
SW_SPACES_BEFORE_KEYS
:

393 
	`ASSERT
(
	`memˇche_ªåõvÆ
(
r
));

394 
ch
) {

398 
CR
:

399 
°©e
 = 
SW_ALMOST_DONE
;

403 
r
->
tokí
 = 
NULL
;

404 
p
 =Ö - 1;

405 
°©e
 = 
SW_KEY
;

410 
SW_SPACES_BEFORE_FLAGS
:

411 i‡(
ch
 != ' ') {

412 i‡(!
	`isdigô
(
ch
)) {

413 
îr‹
;

416 
r
->
tokí
 = 
p
;

417 
°©e
 = 
SW_FLAGS
;

422 
SW_FLAGS
:

423 i‡(
	`isdigô
(
ch
)) {

426 } i‡(
ch
 == ' ') {

428 
r
->
tokí
 = 
NULL
;

429 
°©e
 = 
SW_SPACES_BEFORE_EXPIRY
;

431 
îr‹
;

436 
SW_SPACES_BEFORE_EXPIRY
:

437 i‡(
ch
 != ' ') {

438 i‡(!
	`isdigô
(
ch
)) {

439 
îr‹
;

442 
r
->
tokí
 = 
p
;

443 
°©e
 = 
SW_EXPIRY
;

448 
SW_EXPIRY
:

449 i‡(
	`isdigô
(
ch
)) {

452 } i‡(
ch
 == ' ') {

454 
r
->
tokí
 = 
NULL
;

455 
°©e
 = 
SW_SPACES_BEFORE_VLEN
;

457 
îr‹
;

462 
SW_SPACES_BEFORE_VLEN
:

463 i‡(
ch
 != ' ') {

464 i‡(!
	`isdigô
(
ch
)) {

465 
îr‹
;

468 
r
->
vÀn
 = (
uöt32_t
)(
ch
 - '0');

469 
°©e
 = 
SW_VLEN
;

474 
SW_VLEN
:

475 i‡(
	`isdigô
(
ch
)) {

476 
r
->
vÀn
 =Ñ->vÀ¿* 10 + (
uöt32_t
)(
ch
 - '0');

477 } i‡(
	`memˇche_ˇs
(
r
)) {

478 i‡(
ch
 != ' ') {

479 
îr‹
;

482 
p
 =Ö - 1;

483 
r
->
tokí
 = 
NULL
;

484 
°©e
 = 
SW_SPACES_BEFORE_CAS
;

485 } i‡(
ch
 =' ' || ch =
CR
) {

487 
p
 =Ö - 1;

488 
r
->
tokí
 = 
NULL
;

489 
°©e
 = 
SW_RUNTO_CRLF
;

491 
îr‹
;

496 
SW_SPACES_BEFORE_CAS
:

497 i‡(
ch
 != ' ') {

498 i‡(!
	`isdigô
(
ch
)) {

499 
îr‹
;

502 
r
->
tokí
 = 
p
;

503 
°©e
 = 
SW_CAS
;

508 
SW_CAS
:

509 i‡(
	`isdigô
(
ch
)) {

512 } i‡(
ch
 =' ' || ch =
CR
) {

514 
p
 =Ö - 1;

515 
r
->
tokí
 = 
NULL
;

516 
°©e
 = 
SW_RUNTO_CRLF
;

518 
îr‹
;

524 
SW_RUNTO_VAL
:

525 
ch
) {

526 
LF
:

528 
°©e
 = 
SW_VAL
;

532 
îr‹
;

537 
SW_VAL
:

538 
m
 = 
p
 + 
r
->
vÀn
;

539 i‡(
m
 >
b
->
œ°
) {

540 
	`ASSERT
(
r
->
vÀn
 >(
uöt32_t
)(
b
->
œ°
 - 
p
));

541 
r
->
vÀn
 -(
uöt32_t
)(
b
->
œ°
 - 
p
);

542 
m
 = 
b
->
œ°
 - 1;

543 
p
 = 
m
;

546 *
m
) {

547 
CR
:

549 
p
 = 
m
;

550 
°©e
 = 
SW_ALMOST_DONE
;

554 
îr‹
;

559 
SW_SPACES_BEFORE_NUM
:

560 i‡(
ch
 != ' ') {

561 i‡(!(
	`isdigô
(
ch
) || ch == '-')) {

562 
îr‹
;

565 
r
->
tokí
 = 
p
;

566 
°©e
 = 
SW_NUM
;

571 
SW_NUM
:

572 i‡(
	`isdigô
(
ch
)) {

575 } i‡(
ch
 =' ' || ch =
CR
) {

576 
r
->
tokí
 = 
NULL
;

578 
p
 =Ö - 1;

579 
°©e
 = 
SW_RUNTO_CRLF
;

581 
îr‹
;

586 
SW_RUNTO_CRLF
:

587 
ch
) {

592 i‡(
	`memˇche_°‹age
(
r
Ë|| 
	`memˇche_¨ôhmëic
‘Ë|| 
	`memˇche_dñëe
‘Ë|| 
	`memˇche_touch
(r)) {

594 
r
->
tokí
 = 
p
;

595 
°©e
 = 
SW_NOREPLY
;

597 
îr‹
;

602 
CR
:

603 i‡(
	`memˇche_°‹age
(
r
)) {

604 
°©e
 = 
SW_RUNTO_VAL
;

606 
°©e
 = 
SW_ALMOST_DONE
;

612 
îr‹
;

617 
SW_NOREPLY
:

618 
ch
) {

620 
CR
:

621 
m
 = 
r
->
tokí
;

622 i‡(((
p
 - 
m
Ë=7Ë&& 
	`°r7cmp
(m, 'n', 'o', 'r', 'e', 'p', 'l', 'y')) {

623 
	`ASSERT
(
	`memˇche_°‹age
(
r
Ë|| 
	`memˇche_¨ôhmëic
‘Ë|| 
	`memˇche_dñëe
‘Ë|| 
	`memˇche_touch
(r));

624 
r
->
tokí
 = 
NULL
;

626 
r
->
n‹ïly
 = 1;

627 
°©e
 = 
SW_AFTER_NOREPLY
;

628 
p
 =Ö - 1;

630 
îr‹
;

636 
SW_AFTER_NOREPLY
:

637 
ch
) {

641 
CR
:

642 i‡(
	`memˇche_°‹age
(
r
)) {

643 
°©e
 = 
SW_RUNTO_VAL
;

645 
°©e
 = 
SW_ALMOST_DONE
;

650 
îr‹
;

655 
SW_CRLF
:

656 
ch
) {

660 
CR
:

661 
°©e
 = 
SW_ALMOST_DONE
;

665 
îr‹
;

670 
SW_ALMOST_DONE
:

671 
ch
) {

672 
LF
:

674 
d⁄e
;

677 
îr‹
;

682 
SW_SENTINEL
:

684 
	`NOT_REACHED
();

703 
	`ASSERT
(
p
 =
b
->
œ°
);

704 
r
->
pos
 = 
p
;

705 
r
->
°©e
 = state;

707 i‡(
b
->
œ°
 =b->
íd
 && 
r
->
tokí
 !
NULL
) {

708 
r
->
pos
 =Ñ->
tokí
;

709 
r
->
tokí
 = 
NULL
;

710 
r
->
ªsu…
 = 
MSG_PARSE_REPAIR
;

712 
r
->
ªsu…
 = 
MSG_PARSE_AGAIN
;

715 
	`log_hexdump
(
LOG_VERB
, 
b
->
pos
, 
	`mbuf_Àngth
(b), "∑r£dÑeq %"
PRIu64
"Ñes %d "

716 "ty≥ %d sèã %dÑpo†%d o‡%d", 
r
->
id
,Ñ->
ªsu…
,Ñ->
ty≥
,

717 
r
->
°©e
,Ñ->
pos
 - 
b
->pos, b->
œ°
 - b->pos);

720 
d⁄e
:

721 
	`ASSERT
(
r
->
ty≥
 > 
MSG_UNKNOWN
 &&Ñ->ty≥ < 
MSG_SENTINEL
);

722 
r
->
pos
 = 
p
 + 1;

723 
	`ASSERT
(
r
->
pos
 <
b
->
œ°
);

724 
r
->
°©e
 = 
SW_START
;

725 
r
->
ªsu…
 = 
MSG_PARSE_OK
;

727 
	`log_hexdump
(
LOG_VERB
, 
b
->
pos
, 
	`mbuf_Àngth
(b), "∑r£dÑeq %"
PRIu64
"Ñes %d "

728 "ty≥ %d sèã %dÑpo†%d o‡%d", 
r
->
id
,Ñ->
ªsu…
,Ñ->
ty≥
,

729 
r
->
°©e
,Ñ->
pos
 - 
b
->pos, b->
œ°
 - b->pos);

732 
íomem
:

733 
r
->
ªsu…
 = 
MSG_PARSE_ERROR
;

734 
r
->
°©e
 = state;

736 
	`log_hexdump
(
LOG_INFO
, 
b
->
pos
, 
	`mbuf_Àngth
(b), "ouào‡mem‹y o¿∑r£Ñeq %"
PRIu64
" "

737 "ª†%dÅy≥ %d sèã %d", 
r
->
id
,Ñ->
ªsu…
,Ñ->
ty≥
,Ñ->
°©e
);

741 
îr‹
:

742 
r
->
ªsu…
 = 
MSG_PARSE_ERROR
;

743 
r
->
°©e
 = state;

744 
î∫o
 = 
EINVAL
;

746 
	`log_hexdump
(
LOG_INFO
, 
b
->
pos
, 
	`mbuf_Àngth
(b), "∑r£d badÑeq %"
PRIu64
" "

747 "ª†%dÅy≥ %d sèã %d", 
r
->
id
,Ñ->
ªsu…
,Ñ->
ty≥
,

748 
r
->
°©e
);

749 
	}
}

752 
	$memˇche_∑r£_r•
(
msg
 *
r
)

754 
mbuf
 *
b
;

755 
uöt8_t
 *
p
, *
m
;

756 
uöt8_t
 
ch
;

758 
SW_START
,

759 
SW_RSP_NUM
,

760 
SW_RSP_STR
,

761 
SW_SPACES_BEFORE_KEY
,

762 
SW_KEY
,

763 
SW_SPACES_BEFORE_FLAGS
,

764 
SW_FLAGS
,

765 
SW_SPACES_BEFORE_VLEN
,

766 
SW_VLEN
,

767 
SW_RUNTO_VAL
,

768 
SW_VAL
,

769 
SW_VAL_LF
,

770 
SW_END
,

771 
SW_RUNTO_CRLF
,

772 
SW_CRLF
,

773 
SW_ALMOST_DONE
,

774 
SW_SENTINEL


775 } 
°©e
;

777 
°©e
 = 
r
->state;

778 
b
 = 
	`STAILQ_LAST
(&
r
->
mhdr
, 
mbuf
, 
√xt
);

780 
	`ASSERT
(!
r
->
ªque°
);

781 
	`ASSERT
(!
r
->
ªdis
);

782 
	`ASSERT
(
°©e
 >
SW_START
 && sèã < 
SW_SENTINEL
);

783 
	`ASSERT
(
b
 !
NULL
);

784 
	`ASSERT
(
b
->
pos
 <b->
œ°
);

787 
	`ASSERT
(
r
->
pos
 !
NULL
);

788 
	`ASSERT
(
r
->
pos
 >
b
->po†&&Ñ->po†<b->
œ°
);

790 
p
 = 
r
->
pos
;Ö < 
b
->
œ°
;Ö++) {

791 
ch
 = *
p
;

793 
°©e
) {

794 
SW_START
:

795 i‡(
	`isdigô
(
ch
)) {

796 
°©e
 = 
SW_RSP_NUM
;

798 
°©e
 = 
SW_RSP_STR
;

800 
p
 =Ö - 1;

804 
SW_RSP_NUM
:

805 i‡(
r
->
tokí
 =
NULL
) {

807 
r
->
tokí
 = 
p
;

810 i‡(
	`isdigô
(
ch
)) {

813 } i‡(
ch
 =' ' || ch =
CR
) {

815 
r
->
tokí
 = 
NULL
;

816 
r
->
ty≥
 = 
MSG_RSP_MC_NUM
;

817 
p
 =Ö - 1;

818 
°©e
 = 
SW_CRLF
;

820 
îr‹
;

825 
SW_RSP_STR
:

826 i‡(
r
->
tokí
 =
NULL
) {

828 
r
->
tokí
 = 
p
;

831 i‡(
ch
 =' ' || ch =
CR
) {

833 
m
 = 
r
->
tokí
;

835 
r
->
ty≥
 = 
MSG_UNKNOWN
;

837 
p
 - 
m
) {

839 i‡(
	`°r4cmp
(
m
, 'E', 'N', 'D', '\r')) {

840 
r
->
ty≥
 = 
MSG_RSP_MC_END
;

842 
r
->
íd
 = 
m
;

849 i‡(
	`°r5cmp
(
m
, 'V', 'A', 'L', 'U', 'E')) {

854 
r
->
ty≥
 = 
MSG_RSP_MC_VALUE
;

858 i‡(
	`°r5cmp
(
m
, 'E', 'R', 'R', 'O', 'R')) {

859 
r
->
ty≥
 = 
MSG_RSP_MC_ERROR
;

866 i‡(
	`°r6cmp
(
m
, 'S', 'T', 'O', 'R', 'E', 'D')) {

867 
r
->
ty≥
 = 
MSG_RSP_MC_STORED
;

871 i‡(
	`°r6cmp
(
m
, 'E', 'X', 'I', 'S', 'T', 'S')) {

872 
r
->
ty≥
 = 
MSG_RSP_MC_EXISTS
;

879 i‡(
	`°r7cmp
(
m
, 'D', 'E', 'L', 'E', 'T', 'E', 'D')) {

880 
r
->
ty≥
 = 
MSG_RSP_MC_DELETED
;

884 i‡(
	`°r7cmp
(
m
, 'T', 'O', 'U', 'C', 'H', 'E', 'D')) {

885 
r
->
ty≥
 = 
MSG_RSP_MC_TOUCHED
;

892 i‡(
	`°r9cmp
(
m
, 'N', 'O', 'T', '_', 'F', 'O', 'U', 'N', 'D')) {

893 
r
->
ty≥
 = 
MSG_RSP_MC_NOT_FOUND
;

900 i‡(
	`°r10cmp
(
m
, 'N', 'O', 'T', '_', 'S', 'T', 'O', 'R', 'E', 'D')) {

901 
r
->
ty≥
 = 
MSG_RSP_MC_NOT_STORED
;

908 i‡(
	`°r12cmp
(
m
, 'C', 'L', 'I', 'E', 'N', 'T', '_', 'E', 'R', 'R', 'O', 'R')) {

909 
r
->
ty≥
 = 
MSG_RSP_MC_CLIENT_ERROR
;

913 i‡(
	`°r12cmp
(
m
, 'S', 'E', 'R', 'V', 'E', 'R', '_', 'E', 'R', 'R', 'O', 'R')) {

914 
r
->
ty≥
 = 
MSG_RSP_MC_SERVER_ERROR
;

921 
r
->
ty≥
) {

922 
MSG_UNKNOWN
:

923 
îr‹
;

925 
MSG_RSP_MC_STORED
:

926 
MSG_RSP_MC_NOT_STORED
:

927 
MSG_RSP_MC_EXISTS
:

928 
MSG_RSP_MC_NOT_FOUND
:

929 
MSG_RSP_MC_DELETED
:

930 
MSG_RSP_MC_TOUCHED
:

931 
°©e
 = 
SW_CRLF
;

934 
MSG_RSP_MC_END
:

935 
°©e
 = 
SW_CRLF
;

938 
MSG_RSP_MC_VALUE
:

939 
°©e
 = 
SW_SPACES_BEFORE_KEY
;

942 
MSG_RSP_MC_ERROR
:

943 
°©e
 = 
SW_CRLF
;

946 
MSG_RSP_MC_CLIENT_ERROR
:

947 
MSG_RSP_MC_SERVER_ERROR
:

948 
°©e
 = 
SW_RUNTO_CRLF
;

952 
	`NOT_REACHED
();

955 
p
 =Ö - 1;

960 
SW_SPACES_BEFORE_KEY
:

961 i‡(
ch
 != ' ') {

962 
°©e
 = 
SW_KEY
;

963 
p
 =Ö - 1;

968 
SW_KEY
:

969 i‡(
ch
 == ' ') {

971 
°©e
 = 
SW_SPACES_BEFORE_FLAGS
;

976 
SW_SPACES_BEFORE_FLAGS
:

977 i‡(
ch
 != ' ') {

978 i‡(!
	`isdigô
(
ch
)) {

979 
îr‹
;

981 
°©e
 = 
SW_FLAGS
;

982 
p
 =Ö - 1;

987 
SW_FLAGS
:

988 i‡(
r
->
tokí
 =
NULL
) {

993 i‡(
	`isdigô
(
ch
)) {

996 } i‡(
ch
 == ' ') {

999 
°©e
 = 
SW_SPACES_BEFORE_VLEN
;

1001 
îr‹
;

1006 
SW_SPACES_BEFORE_VLEN
:

1007 i‡(
ch
 != ' ') {

1008 i‡(!
	`isdigô
(
ch
)) {

1009 
îr‹
;

1011 
p
 =Ö - 1;

1012 
°©e
 = 
SW_VLEN
;

1013 
r
->
vÀn
 = 0;

1018 
SW_VLEN
:

1019 i‡(
	`isdigô
(
ch
)) {

1020 
r
->
vÀn
 =Ñ->vÀ¿* 10 + (
uöt32_t
)(
ch
 - '0');

1021 } i‡(
ch
 =' ' || ch =
CR
) {

1023 
p
 =Ö - 1;

1025 
°©e
 = 
SW_RUNTO_CRLF
;

1027 
îr‹
;

1032 
SW_RUNTO_VAL
:

1033 
ch
) {

1034 
LF
:

1036 
°©e
 = 
SW_VAL
;

1037 
r
->
tokí
 = 
NULL
;

1041 
îr‹
;

1046 
SW_VAL
:

1047 
m
 = 
p
 + 
r
->
vÀn
;

1048 i‡(
m
 >
b
->
œ°
) {

1049 
	`ASSERT
(
r
->
vÀn
 >(
uöt32_t
)(
b
->
œ°
 - 
p
));

1050 
r
->
vÀn
 -(
uöt32_t
)(
b
->
œ°
 - 
p
);

1051 
m
 = 
b
->
œ°
 - 1;

1052 
p
 = 
m
;

1055 *
m
) {

1056 
CR
:

1058 
p
 = 
m
;

1059 
°©e
 = 
SW_VAL_LF
;

1063 
îr‹
;

1068 
SW_VAL_LF
:

1069 
ch
) {

1070 
LF
:

1072 
°©e
 = 
SW_RSP_STR
;

1076 
îr‹
;

1081 
SW_END
:

1082 i‡(
r
->
tokí
 =
NULL
) {

1083 i‡(
ch
 != 'E') {

1084 
îr‹
;

1087 
r
->
tokí
 = 
p
;

1088 } i‡(
ch
 =
CR
) {

1090 
m
 = 
r
->
tokí
;

1091 
r
->
tokí
 = 
NULL
;

1093 
p
 - 
m
) {

1095 i‡(
	`°r4cmp
(
m
, 'E', 'N', 'D', '\r')) {

1096 
r
->
íd
 = 
m
;

1097 
°©e
 = 
SW_ALMOST_DONE
;

1102 
îr‹
;

1108 
SW_RUNTO_CRLF
:

1109 
ch
) {

1110 
CR
:

1111 i‡(
r
->
ty≥
 =
MSG_RSP_MC_VALUE
) {

1112 
°©e
 = 
SW_RUNTO_VAL
;

1114 
°©e
 = 
SW_ALMOST_DONE
;

1125 
SW_CRLF
:

1126 
ch
) {

1130 
CR
:

1131 
°©e
 = 
SW_ALMOST_DONE
;

1135 
îr‹
;

1140 
SW_ALMOST_DONE
:

1141 
ch
) {

1142 
LF
:

1144 
d⁄e
;

1147 
îr‹
;

1152 
SW_SENTINEL
:

1154 
	`NOT_REACHED
();

1160 
	`ASSERT
(
p
 =
b
->
œ°
);

1161 
r
->
pos
 = 
p
;

1162 
r
->
°©e
 = state;

1164 i‡(
b
->
œ°
 =b->
íd
 && 
r
->
tokí
 !
NULL
) {

1165 i‡(
°©e
 <
SW_RUNTO_VAL
 || sèã =
SW_CRLF
 || sèã =
SW_ALMOST_DONE
) {

1166 
r
->
°©e
 = 
SW_START
;

1168 
r
->
pos
 =Ñ->
tokí
;

1169 
r
->
tokí
 = 
NULL
;

1170 
r
->
ªsu…
 = 
MSG_PARSE_REPAIR
;

1172 
r
->
ªsu…
 = 
MSG_PARSE_AGAIN
;

1175 
	`log_hexdump
(
LOG_VERB
, 
b
->
pos
, 
	`mbuf_Àngth
(b), "∑r£dÑ• %"
PRIu64
"Ñes %d "

1176 "ty≥ %d sèã %dÑpo†%d o‡%d", 
r
->
id
,Ñ->
ªsu…
,Ñ->
ty≥
,

1177 
r
->
°©e
,Ñ->
pos
 - 
b
->pos, b->
œ°
 - b->pos);

1180 
d⁄e
:

1181 
	`ASSERT
(
r
->
ty≥
 > 
MSG_UNKNOWN
 &&Ñ->ty≥ < 
MSG_SENTINEL
);

1182 
r
->
pos
 = 
p
 + 1;

1183 
	`ASSERT
(
r
->
pos
 <
b
->
œ°
);

1184 
r
->
°©e
 = 
SW_START
;

1185 
r
->
tokí
 = 
NULL
;

1186 
r
->
ªsu…
 = 
MSG_PARSE_OK
;

1188 
	`log_hexdump
(
LOG_VERB
, 
b
->
pos
, 
	`mbuf_Àngth
(b), "∑r£dÑ• %"
PRIu64
"Ñes %d "

1189 "ty≥ %d sèã %dÑpo†%d o‡%d", 
r
->
id
,Ñ->
ªsu…
,Ñ->
ty≥
,

1190 
r
->
°©e
,Ñ->
pos
 - 
b
->pos, b->
œ°
 - b->pos);

1193 
îr‹
:

1194 
r
->
ªsu…
 = 
MSG_PARSE_ERROR
;

1195 
r
->
°©e
 = state;

1196 
î∫o
 = 
EINVAL
;

1198 
	`log_hexdump
(
LOG_INFO
, 
b
->
pos
, 
	`mbuf_Àngth
(b), "∑r£d badÑ• %"
PRIu64
" "

1199 "ª†%dÅy≥ %d sèã %d", 
r
->
id
,Ñ->
ªsu…
,Ñ->
ty≥
,

1200 
r
->
°©e
);

1201 
	}
}

1203 
boﬁ


1204 
	$memˇche_Áûuª
(
msg
 *
r
)

1206  
Ál£
;

1207 
	}
}

1209 
r°©us_t


1210 
	$memˇche_≠≥nd_key
(
msg
 *
r
, 
uöt8_t
 *
key
, 
uöt32_t
 
keyÀn
)

1212 
mbuf
 *mbuf;

1213 
keypos
 *
kpos
;

1215 
mbuf
 = 
	`msg_ísuª_mbuf
(
r
, 
keyÀn
 + 2);

1216 i‡(
mbuf
 =
NULL
) {

1217  
NC_ENOMEM
;

1220 
kpos
 = 
	`¨øy_push
(
r
->
keys
);

1221 i‡(
kpos
 =
NULL
) {

1222  
NC_ENOMEM
;

1225 
kpos
->
°¨t
 = 
mbuf
->
œ°
;

1226 
kpos
->
íd
 = 
mbuf
->
œ°
 + 
keyÀn
;

1227 
	`mbuf_c›y
(
mbuf
, 
key
, 
keyÀn
);

1228 
r
->
mÀn
 +
keyÀn
;

1230 
	`mbuf_c›y
(
mbuf
, (
uöt8_t
 *)" ", 1);

1231 
r
->
mÀn
 += 1;

1232  
NC_OK
;

1233 
	}
}

1238 
r°©us_t


1239 
	$memˇche_‰agmít_ªåõvÆ
(
msg
 *
r
, 
uöt32_t
 
nc⁄töuum
,

1240 
msg_tqh
 *
‰ag_msgq
,

1241 
uöt32_t
 
key_°ï
)

1243 
mbuf
 *mbuf;

1244 
msg
 **
sub_msgs
;

1245 
uöt32_t
 
i
;

1246 
r°©us_t
 
°©us
;

1248 
sub_msgs
 = 
	`nc_zÆloc
(
nc⁄töuum
 * (*sub_msgs));

1249 i‡(
sub_msgs
 =
NULL
) {

1250  
NC_ENOMEM
;

1253 
	`ASSERT
(
r
->
‰ag_£q
 =
NULL
);

1254 
r
->
‰ag_£q
 = 
	`nc_Æloc
(
	`¨øy_n
‘->
keys
) * (*r->frag_seq));

1255 i‡(
r
->
‰ag_£q
 =
NULL
) {

1256 
	`nc_‰ì
(
sub_msgs
);

1257  
NC_ENOMEM
;

1260 
mbuf
 = 
	`STAILQ_FIRST
(&
r
->
mhdr
);

1261 
mbuf
->
pos
 = mbuf->
°¨t
;

1269 ; *(
mbuf
->
pos
) != ' ';) {

1270 
mbuf
->
pos
++;

1272 
mbuf
->
pos
++;

1274 
r
->
‰ag_id
 = 
	`msg_gí_‰ag_id
();

1275 
r
->
n‰ag
 = 0;

1276 
r
->
‰ag_ow√r
 =Ñ;

1278 
i
 = 0; i < 
	`¨øy_n
(
r
->
keys
); i++) {

1279 
msg
 *
sub_msg
;

1280 
keypos
 *
kpos
 = 
	`¨øy_gë
(
r
->
keys
, 
i
);

1281 
uöt32_t
 
idx
 = 
	`msg_backíd_idx
(
r
, 
kpos
->
°¨t
, kpos->
íd
 - kpos->start);

1283 i‡(
sub_msgs
[
idx
] =
NULL
) {

1284 
sub_msgs
[
idx
] = 
	`msg_gë
(
r
->
ow√r
,Ñ->
ªque°
,Ñ->
ªdis
);

1285 i‡(
sub_msgs
[
idx
] =
NULL
) {

1286 
	`nc_‰ì
(
sub_msgs
);

1287  
NC_ENOMEM
;

1290 
r
->
‰ag_£q
[
i
] = 
sub_msg
 = 
sub_msgs
[
idx
];

1292 
sub_msg
->
«rg
++;

1293 
°©us
 = 
	`memˇche_≠≥nd_key
(
sub_msg
, 
kpos
->
°¨t
, kpos->
íd
 - kpos->start);

1294 i‡(
°©us
 !
NC_OK
) {

1295 
	`nc_‰ì
(
sub_msgs
);

1296  
°©us
;

1300 
i
 = 0; i < 
nc⁄töuum
; i++) {

1301 
msg
 *
sub_msg
 = 
sub_msgs
[
i
];

1302 i‡(
sub_msg
 =
NULL
) {

1307 i‡(
r
->
ty≥
 =
MSG_REQ_MC_GET
) {

1308 
°©us
 = 
	`msg_¥ïíd
(
sub_msg
, (
uöt8_t
 *)"get ", 4);

1309 } i‡(
r
->
ty≥
 =
MSG_REQ_MC_GETS
) {

1310 
°©us
 = 
	`msg_¥ïíd
(
sub_msg
, (
uöt8_t
 *)"gets ", 5);

1312 i‡(
°©us
 !
NC_OK
) {

1313 
	`nc_‰ì
(
sub_msgs
);

1314  
°©us
;

1318 
°©us
 = 
	`msg_≠≥nd
(
sub_msg
, (
uöt8_t
 *)
CRLF
, 
CRLF_LEN
);

1319 i‡(
°©us
 !
NC_OK
) {

1320 
	`nc_‰ì
(
sub_msgs
);

1321  
°©us
;

1324 
sub_msg
->
ty≥
 = 
r
->type;

1325 
sub_msg
->
‰ag_id
 = 
r
->frag_id;

1326 
sub_msg
->
‰ag_ow√r
 = 
r
->frag_owner;

1328 
	`TAILQ_INSERT_TAIL
(
‰ag_msgq
, 
sub_msg
, 
m_tqe
);

1329 
r
->
n‰ag
++;

1332 
	`nc_‰ì
(
sub_msgs
);

1333  
NC_OK
;

1334 
	}
}

1336 
r°©us_t


1337 
	$memˇche_‰agmít
(
msg
 *
r
, 
uöt32_t
 
nc⁄töuum
, 
msg_tqh
 *
‰ag_msgq
)

1339 i‡(
	`memˇche_ªåõvÆ
(
r
)) {

1340  
	`memˇche_‰agmít_ªåõvÆ
(
r
, 
nc⁄töuum
, 
‰ag_msgq
, 1);

1342  
NC_OK
;

1343 
	}
}

1351 
	$memˇche_¥e_cﬂÀs˚
(
msg
 *
r
)

1353 
msg
 *
¥
 = 
r
->
≥î
;

1354 
mbuf
 *mbuf;

1356 
	`ASSERT
(!
r
->
ªque°
);

1357 
	`ASSERT
(
¥
->
ªque°
);

1359 i‡(
¥
->
‰ag_id
 == 0) {

1364 
¥
->
‰ag_ow√r
->
n‰ag_d⁄e
++;

1365 
r
->
ty≥
) {

1367 
MSG_RSP_MC_VALUE
:

1368 
MSG_RSP_MC_END
:

1375 
	`ASSERT
(
r
->
íd
 !
NULL
);

1378 
mbuf
 = 
	`STAILQ_LAST
(&
r
->
mhdr
, mbuf, 
√xt
);

1379 
	`ASSERT
(
mbuf
 !
NULL
);

1388 i‡(
r
->
íd
 >
mbuf
->
pos
 &&Ñ->íd < mbuf->
œ°
) {

1390 
r
->
mÀn
 -(
uöt32_t
)(
mbuf
->
œ°
 -Ñ->
íd
);

1391 
mbuf
->
œ°
 = 
r
->
íd
;

1396 
r
->
mÀn
 -
	`mbuf_Àngth
(
mbuf
);

1397 
	`mbuf_ªmove
(&
r
->
mhdr
, 
mbuf
);

1398 
	`mbuf_put
(
mbuf
);

1409 
mbuf
 = 
	`STAILQ_FIRST
(&
r
->
mhdr
);

1410 
	`log_hexdump
(
LOG_ERR
, 
mbuf
->
pos
, 
	`mbuf_Àngth
(mbuf), "rsp fragment "

1411 "wôh unknow¿ty≥ %d", 
r
->
ty≥
);

1412 
¥
->
îr‹
 = 1;

1413 
¥
->
îr
 = 
EINVAL
;

1416 
	}
}

1421 
r°©us_t


1422 
	$memˇche_c›y_bulk
(
msg
 *
d°
, msg *
§c
)

1424 
mbuf
 *mbuf, *
nbuf
;

1425 
uöt8_t
 *
p
;

1426 
uöt32_t
 
Àn
 = 0;

1427 
uöt32_t
 
byãs
 = 0;

1428 
uöt32_t
 
i
 = 0;

1430 
mbuf
 = 
	`STAILQ_FIRST
(&
§c
->
mhdr
);

1431 
mbuf
 && 
	`mbuf_em±y
(mbuf);

1432 
mbuf
 = 
	`STAILQ_FIRST
(&
§c
->
mhdr
)) {

1434 
	`mbuf_ªmove
(&
§c
->
mhdr
, 
mbuf
);

1435 
	`mbuf_put
(
mbuf
);

1438 
mbuf
 = 
	`STAILQ_FIRST
(&
§c
->
mhdr
);

1439 i‡(
mbuf
 =
NULL
) {

1440  
NC_OK
;

1442 
p
 = 
mbuf
->
pos
;

1448 
	`ASSERT
(*
p
 == 'V');

1449 
i
 = 0; i < 3; i++) {

1450 ; *
p
 != ' ';) {

1451 
p
++;

1453 
p
++;

1456 
Àn
 = 0;

1457 ; 
p
 < 
mbuf
->
œ°
 && 
	`isdigô
(*p);Ö++) {

1458 
Àn
 =Üí * 10 + (
uöt32_t
)(*
p
 - '0');

1461 ; 
p
 < 
mbuf
->
œ°
 && ('\r' != *p);Ö++) {

1465 
Àn
 +
CRLF_LEN
 * 2;

1466 
Àn
 +(
p
 - 
mbuf
->
pos
);

1468 
byãs
 = 
Àn
;

1471 ; 
mbuf
;) {

1472 i‡(
	`mbuf_Àngth
(
mbuf
Ë<
Àn
) {

1473 
nbuf
 = 
	`STAILQ_NEXT
(
mbuf
, 
√xt
);

1474 
	`mbuf_ªmove
(&
§c
->
mhdr
, 
mbuf
);

1475 
	`mbuf_ö£π
(&
d°
->
mhdr
, 
mbuf
);

1476 
Àn
 -
	`mbuf_Àngth
(
mbuf
);

1477 
mbuf
 = 
nbuf
;

1479 
nbuf
 = 
	`mbuf_gë
();

1480 i‡(
nbuf
 =
NULL
) {

1481  
NC_ENOMEM
;

1483 
	`mbuf_c›y
(
nbuf
, 
mbuf
->
pos
, 
Àn
);

1484 
	`mbuf_ö£π
(&
d°
->
mhdr
, 
nbuf
);

1485 
mbuf
->
pos
 +
Àn
;

1490 
d°
->
mÀn
 +
byãs
;

1491 
§c
->
mÀn
 -
byãs
;

1492 
	`log_debug
(
LOG_VVERB
, "memˇche_c›y_bulk c›y byãs: %d", 
byãs
);

1493  
NC_OK
;

1494 
	}
}

1503 
	$memˇche_po°_cﬂÀs˚
(
msg
 *
ªque°
)

1505 
msg
 *
ª•⁄£
 = 
ªque°
->
≥î
;

1506 
msg
 *
sub_msg
;

1507 
uöt32_t
 
i
;

1508 
r°©us_t
 
°©us
;

1510 
	`ASSERT
(!
ª•⁄£
->
ªque°
);

1511 
	`ASSERT
(
ªque°
->ªque° && (ªque°->
‰ag_ow√r
 ==Ñequest));

1512 i‡(
ªque°
->
îr‹
 ||Ñeque°->
„º‹
) {

1513 
ª•⁄£
->
ow√r
->
îr
 = 1;

1517 
i
 = 0; i < 
	`¨øy_n
(
ªque°
->
keys
); i++) {

1518 
sub_msg
 = 
ªque°
->
‰ag_£q
[
i
]->
≥î
;

1519 i‡(
sub_msg
 =
NULL
) {

1520 
ª•⁄£
->
ow√r
->
îr
 = 1;

1523 
°©us
 = 
	`memˇche_c›y_bulk
(
ª•⁄£
, 
sub_msg
);

1524 i‡(
°©us
 !
NC_OK
) {

1525 
ª•⁄£
->
ow√r
->
îr
 = 1;

1531 
°©us
 = 
	`msg_≠≥nd
(
ª•⁄£
, (
uöt8_t
 *)"END\r\n", 5);

1532 i‡(
°©us
 !
NC_OK
) {

1533 
ª•⁄£
->
ow√r
->
îr
 = 1;

1536 
	}
}

1539 
	$memˇche_po°_c⁄√˘
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
£rvî
 *server)

1541 
	}
}

1544 
	$memˇche_swÆlow_msg
(
c⁄n
 *c⁄n, 
msg
 *
pmsg
, msg *msg)

1546 
	}
}

1548 
r°©us_t


1549 
	$memˇche_add_auth
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *
c_c⁄n
, c⁄¿*
s_c⁄n
)

1551 
	`NOT_REACHED
();

1552  
NC_OK
;

1553 
	}
}

1555 
r°©us_t


1556 
	$memˇche_ª∂y
(
msg
 *
r
)

1558 
	`NOT_REACHED
();

1559  
NC_OK
;

1560 
	}
}

	@src/proto/nc_proto.h

18 #i‚de‡
_NC_PROTO_H_


19 
	#_NC_PROTO_H_


	)

21 
	~<nc_c‹e.h
>

23 #ifde‡
NC_LITTLE_ENDIAN


25 
	#°r4cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
) \

26 (*(
uöt32_t
 *Ë
m
 =((
c3
 << 24Ë| (
c2
 << 16Ë| (
c1
 << 8Ë| 
c0
))

	)

28 
	#°r5cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
) \

29 (
	`°r4cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
Ë&& (m[4] =
c4
))

	)

31 
	#°r6cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
) \

32 (
	`°r4cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
) && \

33 (((
uöt32_t
 *Ë
m
)[1] & 0xffffË=((
c5
 << 8Ë| 
c4
))

	)

35 
	#°r7cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
) \

36 (
	`°r6cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
Ë&& (m[6] =
c6
))

	)

38 
	#°r8cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
) \

39 (
	`°r4cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
) && \

40 (((
uöt32_t
 *Ë
m
)[1] =((
c7
 << 24Ë| (
c6
 << 16Ë| (
c5
 << 8Ë| 
c4
)))

	)

42 
	#°r9cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
) \

43 (
	`°r8cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
Ë&& m[8] =
c8
)

	)

45 
	#°r10cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
) \

46 (
	`°r8cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
) && \

47 (((
uöt32_t
 *Ë
m
)[2] & 0xffffË=((
c9
 << 8Ë| 
c8
))

	)

49 
	#°r11cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
) \

50 (
	`°r10cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
Ë&& (m[10] =
c10
))

	)

52 
	#°r12cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
, 
c11
) \

53 (
	`°r8cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
) && \

54 (((
uöt32_t
 *Ë
m
)[2] =((
c11
 << 24Ë| (
c10
 << 16Ë| (
c9
 << 8Ë| 
c8
)))

	)

58 
	#°r4cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
) \

59 (
m
[0] =
c0
 && m[1] =
c1
 && m[2] =
c2
 && m[3] =
c3
)

	)

61 
	#°r5cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
) \

62 (
	`°r4cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
Ë&& (m[4] =
c4
))

	)

64 
	#°r6cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
) \

65 (
	`°r5cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
Ë&& m[5] =
c5
)

	)

67 
	#°r7cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
) \

68 (
	`°r6cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
Ë&& m[6] =
c6
)

	)

70 
	#°r8cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
) \

71 (
	`°r7cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
Ë&& m[7] =
c7
)

	)

73 
	#°r9cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
) \

74 (
	`°r8cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
Ë&& m[8] =
c8
)

	)

76 
	#°r10cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
) \

77 (
	`°r9cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
Ë&& m[9] =
c9
)

	)

79 
	#°r11cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
) \

80 (
	`°r10cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
Ë&& m[10] =
c10
)

	)

82 
	#°r12cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
, 
c11
) \

83 (
	`°r11cmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
Ë&& m[11] =
c11
)

	)

87 
	#°r3icmp
(
m
, 
c0
, 
c1
, 
c2
) \

88 ((
m
[0] =
c0
 || m[0] == (c0 ^ 0x20)) && \

89 (
m
[1] =
c1
 || m[1] == (c1 ^ 0x20)) && \

90 (
m
[2] =
c2
 || m[2] =(c2 ^ 0x20)))

	)

92 
	#°r4icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
) \

93 (
	`°r3icmp
(
m
, 
c0
, 
c1
, 
c2
Ë&& (m[3] =
c3
 || m[3] =(c3 ^ 0x20)))

	)

95 
	#°r5icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
) \

96 (
	`°r4icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
Ë&& (m[4] =
c4
 || m[4] =(c4 ^ 0x20)))

	)

98 
	#°r6icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
) \

99 (
	`°r5icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
Ë&& (m[5] =
c5
 || m[5] =(c5 ^ 0x20)))

	)

101 
	#°r7icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
) \

102 (
	`°r6icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
) && \

103 (
m
[6] =
c6
 || m[6] =(c6 ^ 0x20)))

	)

105 
	#°r8icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
) \

106 (
	`°r7icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
) && \

107 (
m
[7] =
c7
 || m[7] =(c7 ^ 0x20)))

	)

109 
	#°r9icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
) \

110 (
	`°r8icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
) && \

111 (
m
[8] =
c8
 || m[8] =(c8 ^ 0x20)))

	)

113 
	#°r10icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
) \

114 (
	`°r9icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
) && \

115 (
m
[9] =
c9
 || m[9] =(c9 ^ 0x20)))

	)

117 
	#°r11icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
) \

118 (
	`°r10icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
) && \

119 (
m
[10] =
c10
 || m[10] =(c10 ^ 0x20)))

	)

121 
	#°r12icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
, 
c11
) \

122 (
	`°r11icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
) && \

123 (
m
[11] =
c11
 || m[11] =(c11 ^ 0x20)))

	)

125 
	#°r13icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
, 
c11
, 
c12
) \

126 (
	`°r12icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
, 
c11
) && \

127 (
m
[12] =
c12
 || m[12] =(c12 ^ 0x20)))

	)

129 
	#°r14icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
, 
c11
, 
c12
, 
c13
) \

130 (
	`°r13icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
, 
c11
, 
c12
) && \

131 (
m
[13] =
c13
 || m[13] =(c13 ^ 0x20)))

	)

133 
	#°r15icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
, 
c11
, 
c12
, 
c13
, 
c14
) \

134 (
	`°r14icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
, 
c11
, 
c12
, 
c13
) && \

135 (
m
[14] =
c14
 || m[14] =(c14 ^ 0x20)))

	)

137 
	#°r16icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
, 
c11
, 
c12
, 
c13
, 
c14
, 
c15
) \

138 (
	`°r15icmp
(
m
, 
c0
, 
c1
, 
c2
, 
c3
, 
c4
, 
c5
, 
c6
, 
c7
, 
c8
, 
c9
, 
c10
, 
c11
, 
c12
, 
c13
, 
c14
) && \

139 (
m
[15] =
c15
 || m[15] =(c15 ^ 0x20)))

	)

141 
memˇche_∑r£_ªq
(
msg
 *
r
);

142 
memˇche_∑r£_r•
(
msg
 *
r
);

143 
boﬁ
 
memˇche_Áûuª
(
msg
 *
r
);

144 
memˇche_¥e_cﬂÀs˚
(
msg
 *
r
);

145 
memˇche_po°_cﬂÀs˚
(
msg
 *
r
);

146 
r°©us_t
 
memˇche_add_auth
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *
c_c⁄n
, c⁄¿*
s_c⁄n
);

147 
r°©us_t
 
memˇche_‰agmít
(
msg
 *
r
, 
uöt32_t
 
nc⁄töuum
, 
msg_tqh
 *
‰ag_msgq
);

148 
r°©us_t
 
memˇche_ª∂y
(
msg
 *
r
);

149 
memˇche_po°_c⁄√˘
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
£rvî
 *server);

150 
memˇche_swÆlow_msg
(
c⁄n
 *c⁄n, 
msg
 *
pmsg
, msg *msg);

152 
ªdis_∑r£_ªq
(
msg
 *
r
);

153 
ªdis_∑r£_r•
(
msg
 *
r
);

154 
boﬁ
 
ªdis_Áûuª
(
msg
 *
r
);

155 
ªdis_¥e_cﬂÀs˚
(
msg
 *
r
);

156 
ªdis_po°_cﬂÀs˚
(
msg
 *
r
);

157 
r°©us_t
 
ªdis_add_auth
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *
c_c⁄n
, c⁄¿*
s_c⁄n
);

158 
r°©us_t
 
ªdis_‰agmít
(
msg
 *
r
, 
uöt32_t
 
nc⁄töuum
, 
msg_tqh
 *
‰ag_msgq
);

159 
r°©us_t
 
ªdis_ª∂y
(
msg
 *
r
);

160 
ªdis_po°_c⁄√˘
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
£rvî
 *server);

161 
ªdis_swÆlow_msg
(
c⁄n
 *c⁄n, 
msg
 *
pmsg
, msg *msg);

	@src/proto/nc_redis.c

18 
	~<°dio.h
>

19 
	~<˘y≥.h
>

20 
	~<m©h.h
>

22 
	~<nc_c‹e.h
>

23 
	~<nc_¥Ÿo.h
>

24 
	~<nc_hcd≠i.h
>

26 
	#RSP_STRING
(
ACTION
) \

27 
	`ACTION
–
ok
, "+OK\r\n" ) \

28 
	`ACTION
–
p⁄g
, "+PONG\r\n" ) \

29 
	`ACTION
–
hcd¥oxy
, "+HCDPROXY\r\n" ) \

30 
	`ACTION
–
hcd¥oxy_îr
, "+HCDPROXY ERROR\r\n" ) \

31 
	`ACTION
–
övÆid_∑ssw‹d
, "-ERR invalidÖassword\r\n" ) \

32 
	`ACTION
–
auth_ªquúed
, "-NOAUTH AuthenticationÑequired\r\n" ) \

33 
	`ACTION
–
no_∑ssw‹d
, "-ERR Client sent AUTH, butÇoÖassword is set\r\n" ) \

34 

	)

35 
	#DEFINE_ACTION
(
_v¨
, 
_°r
Ë
°rög
 
r•_
##_v¨ = 
	`°rög
(_°r);

	)

36 
	$RSP_STRING
–
DEFINE_ACTION
 )

37 #unde‡
DEFINE_ACTION


39 
r°©us_t
 
	`ªdis_h™dÀ_auth_ªq
(
msg
 *
ªque°
, msg *
ª•⁄£
);

45 
boﬁ


46 
	$ªdis_¨gz
(
msg
 *
r
)

48 
r
->
ty≥
) {

49 
MSG_REQ_REDIS_PING
:

50 
MSG_REQ_REDIS_QUIT
:

51  
åue
;

57  
Ál£
;

58 
	}
}

64 
boﬁ


65 
	$ªdis_¨g0
(
msg
 *
r
)

67 
r
->
ty≥
) {

68 
MSG_REQ_REDIS_EXISTS
:

69 
MSG_REQ_REDIS_PERSIST
:

70 
MSG_REQ_REDIS_PTTL
:

71 
MSG_REQ_REDIS_TTL
:

72 
MSG_REQ_REDIS_TYPE
:

73 
MSG_REQ_REDIS_DUMP
:

75 
MSG_REQ_REDIS_DECR
:

76 
MSG_REQ_REDIS_GET
:

77 
MSG_REQ_REDIS_INCR
:

78 
MSG_REQ_REDIS_STRLEN
:

80 
MSG_REQ_REDIS_HGETALL
:

81 
MSG_REQ_REDIS_HKEYS
:

82 
MSG_REQ_REDIS_HLEN
:

83 
MSG_REQ_REDIS_HVALS
:

85 
MSG_REQ_REDIS_LLEN
:

86 
MSG_REQ_REDIS_LPOP
:

87 
MSG_REQ_REDIS_RPOP
:

89 
MSG_REQ_REDIS_SCARD
:

90 
MSG_REQ_REDIS_SMEMBERS
:

91 
MSG_REQ_REDIS_SPOP
:

93 
MSG_REQ_REDIS_ZCARD
:

94 
MSG_REQ_REDIS_PFCOUNT
:

95 
MSG_REQ_REDIS_AUTH
:

96 
MSG_REQ_REDIS_HCDGETPROXY
:

97  
åue
;

103  
Ál£
;

104 
	}
}

110 
boﬁ


111 
	$ªdis_¨g1
(
msg
 *
r
)

113 
r
->
ty≥
) {

114 
MSG_REQ_REDIS_EXPIRE
:

115 
MSG_REQ_REDIS_EXPIREAT
:

116 
MSG_REQ_REDIS_PEXPIRE
:

117 
MSG_REQ_REDIS_PEXPIREAT
:

119 
MSG_REQ_REDIS_APPEND
:

120 
MSG_REQ_REDIS_DECRBY
:

121 
MSG_REQ_REDIS_GETBIT
:

122 
MSG_REQ_REDIS_GETSET
:

123 
MSG_REQ_REDIS_INCRBY
:

124 
MSG_REQ_REDIS_INCRBYFLOAT
:

125 
MSG_REQ_REDIS_SETNX
:

127 
MSG_REQ_REDIS_HEXISTS
:

128 
MSG_REQ_REDIS_HGET
:

130 
MSG_REQ_REDIS_LINDEX
:

131 
MSG_REQ_REDIS_LPUSHX
:

132 
MSG_REQ_REDIS_RPOPLPUSH
:

133 
MSG_REQ_REDIS_RPUSHX
:

135 
MSG_REQ_REDIS_SISMEMBER
:

137 
MSG_REQ_REDIS_ZRANK
:

138 
MSG_REQ_REDIS_ZREVRANK
:

139 
MSG_REQ_REDIS_ZSCORE
:

140 
MSG_REQ_REDIS_HCDSETPROXY
:

141  
åue
;

147  
Ál£
;

148 
	}
}

154 
boﬁ


155 
	$ªdis_¨g2
(
msg
 *
r
)

157 
r
->
ty≥
) {

158 
MSG_REQ_REDIS_GETRANGE
:

159 
MSG_REQ_REDIS_PSETEX
:

160 
MSG_REQ_REDIS_SETBIT
:

161 
MSG_REQ_REDIS_SETEX
:

162 
MSG_REQ_REDIS_SETRANGE
:

164 
MSG_REQ_REDIS_HINCRBY
:

165 
MSG_REQ_REDIS_HINCRBYFLOAT
:

166 
MSG_REQ_REDIS_HSET
:

167 
MSG_REQ_REDIS_HSETNX
:

169 
MSG_REQ_REDIS_LRANGE
:

170 
MSG_REQ_REDIS_LREM
:

171 
MSG_REQ_REDIS_LSET
:

172 
MSG_REQ_REDIS_LTRIM
:

174 
MSG_REQ_REDIS_SMOVE
:

176 
MSG_REQ_REDIS_ZCOUNT
:

177 
MSG_REQ_REDIS_ZLEXCOUNT
:

178 
MSG_REQ_REDIS_ZINCRBY
:

179 
MSG_REQ_REDIS_ZREMRANGEBYLEX
:

180 
MSG_REQ_REDIS_ZREMRANGEBYRANK
:

181 
MSG_REQ_REDIS_ZREMRANGEBYSCORE
:

183 
MSG_REQ_REDIS_RESTORE
:

184  
åue
;

190  
Ál£
;

191 
	}
}

197 
boﬁ


198 
	$ªdis_¨g3
(
msg
 *
r
)

200 
r
->
ty≥
) {

201 
MSG_REQ_REDIS_LINSERT
:

202  
åue
;

208  
Ál£
;

209 
	}
}

215 
boﬁ


216 
	$ªdis_¨gn
(
msg
 *
r
)

218 
r
->
ty≥
) {

219 
MSG_REQ_REDIS_SORT
:

221 
MSG_REQ_REDIS_BITCOUNT
:

222 
MSG_REQ_REDIS_BITPOS
:

224 
MSG_REQ_REDIS_SET
:

225 
MSG_REQ_REDIS_HDEL
:

226 
MSG_REQ_REDIS_HMGET
:

227 
MSG_REQ_REDIS_HMSET
:

228 
MSG_REQ_REDIS_HSCAN
:

230 
MSG_REQ_REDIS_LPUSH
:

231 
MSG_REQ_REDIS_RPUSH
:

233 
MSG_REQ_REDIS_SADD
:

234 
MSG_REQ_REDIS_SDIFF
:

235 
MSG_REQ_REDIS_SDIFFSTORE
:

236 
MSG_REQ_REDIS_SINTER
:

237 
MSG_REQ_REDIS_SINTERSTORE
:

238 
MSG_REQ_REDIS_SREM
:

239 
MSG_REQ_REDIS_SUNION
:

240 
MSG_REQ_REDIS_SUNIONSTORE
:

241 
MSG_REQ_REDIS_SRANDMEMBER
:

242 
MSG_REQ_REDIS_SSCAN
:

244 
MSG_REQ_REDIS_PFADD
:

245 
MSG_REQ_REDIS_PFMERGE
:

247 
MSG_REQ_REDIS_ZADD
:

248 
MSG_REQ_REDIS_ZINTERSTORE
:

249 
MSG_REQ_REDIS_ZRANGE
:

250 
MSG_REQ_REDIS_ZRANGEBYSCORE
:

251 
MSG_REQ_REDIS_ZREM
:

252 
MSG_REQ_REDIS_ZREVRANGE
:

253 
MSG_REQ_REDIS_ZRANGEBYLEX
:

254 
MSG_REQ_REDIS_ZREVRANGEBYSCORE
:

255 
MSG_REQ_REDIS_ZUNIONSTORE
:

256 
MSG_REQ_REDIS_ZSCAN
:

257  
åue
;

263  
Ál£
;

264 
	}
}

270 
boﬁ


271 
	$ªdis_¨gx
(
msg
 *
r
)

273 
r
->
ty≥
) {

274 
MSG_REQ_REDIS_MGET
:

275 
MSG_REQ_REDIS_DEL
:

276  
åue
;

282  
Ál£
;

283 
	}
}

289 
boﬁ


290 
	$ªdis_¨gkvx
(
msg
 *
r
)

292 
r
->
ty≥
) {

293 
MSG_REQ_REDIS_MSET
:

294  
åue
;

300  
Ál£
;

301 
	}
}

309 
boﬁ


310 
	$ªdis_¨gevÆ
(
msg
 *
r
)

312 
r
->
ty≥
) {

313 
MSG_REQ_REDIS_EVAL
:

314 
MSG_REQ_REDIS_EVALSHA
:

315  
åue
;

321  
Ál£
;

322 
	}
}

328 
boﬁ


329 
	$ªdis_îr‹
(
msg
 *
r
)

331 
r
->
ty≥
) {

332 
MSG_RSP_REDIS_ERROR
:

333 
MSG_RSP_REDIS_ERROR_ERR
:

334 
MSG_RSP_REDIS_ERROR_OOM
:

335 
MSG_RSP_REDIS_ERROR_BUSY
:

336 
MSG_RSP_REDIS_ERROR_NOAUTH
:

337 
MSG_RSP_REDIS_ERROR_LOADING
:

338 
MSG_RSP_REDIS_ERROR_BUSYKEY
:

339 
MSG_RSP_REDIS_ERROR_MISCONF
:

340 
MSG_RSP_REDIS_ERROR_NOSCRIPT
:

341 
MSG_RSP_REDIS_ERROR_READONLY
:

342 
MSG_RSP_REDIS_ERROR_WRONGTYPE
:

343 
MSG_RSP_REDIS_ERROR_EXECABORT
:

344 
MSG_RSP_REDIS_ERROR_MASTERDOWN
:

345 
MSG_RSP_REDIS_ERROR_NOREPLICAS
:

346  
åue
;

352  
Ál£
;

353 
	}
}

380 
	$ªdis_∑r£_ªq
(
msg
 *
r
)

382 
mbuf
 *
b
;

383 
uöt8_t
 *
p
, *
m
;

384 
uöt8_t
 
ch
;

386 
SW_START
,

387 
SW_NARG
,

388 
SW_NARG_LF
,

389 
SW_REQ_TYPE_LEN
,

390 
SW_REQ_TYPE_LEN_LF
,

391 
SW_REQ_TYPE
,

392 
SW_REQ_TYPE_LF
,

393 
SW_KEY_LEN
,

394 
SW_KEY_LEN_LF
,

395 
SW_KEY
,

396 
SW_KEY_LF
,

397 
SW_ARG1_LEN
,

398 
SW_ARG1_LEN_LF
,

399 
SW_ARG1
,

400 
SW_ARG1_LF
,

401 
SW_ARG2_LEN
,

402 
SW_ARG2_LEN_LF
,

403 
SW_ARG2
,

404 
SW_ARG2_LF
,

405 
SW_ARG3_LEN
,

406 
SW_ARG3_LEN_LF
,

407 
SW_ARG3
,

408 
SW_ARG3_LF
,

409 
SW_ARGN_LEN
,

410 
SW_ARGN_LEN_LF
,

411 
SW_ARGN
,

412 
SW_ARGN_LF
,

413 
SW_SENTINEL


414 } 
°©e
;

416 
°©e
 = 
r
->state;

417 
b
 = 
	`STAILQ_LAST
(&
r
->
mhdr
, 
mbuf
, 
√xt
);

419 
	`ASSERT
(
r
->
ªque°
);

420 
	`ASSERT
(
°©e
 >
SW_START
 && sèã < 
SW_SENTINEL
);

421 
	`ASSERT
(
b
 !
NULL
);

422 
	`ASSERT
(
b
->
pos
 <b->
œ°
);

425 
	`ASSERT
(
r
->
pos
 !
NULL
);

426 
	`ASSERT
(
r
->
pos
 >
b
->po†&&Ñ->po†<b->
œ°
);

428 
p
 = 
r
->
pos
;Ö < 
b
->
œ°
;Ö++) {

429 
ch
 = *
p
;

431 
°©e
) {

433 
SW_START
:

434 
SW_NARG
:

435 i‡(
r
->
tokí
 =
NULL
) {

436 i‡(
ch
 != '*') {

437 
îr‹
;

439 
r
->
tokí
 = 
p
;

441 
r
->
«rg_°¨t
 = 
p
;

442 
r
->
∫¨g
 = 0;

443 
°©e
 = 
SW_NARG
;

444 } i‡(
	`isdigô
(
ch
)) {

445 
r
->
∫¨g
 =Ñ->∫¨g * 10 + (
uöt32_t
)(
ch
 - '0');

446 } i‡(
ch
 =
CR
) {

447 i‡(
r
->
∫¨g
 == 0) {

448 
îr‹
;

450 
r
->
«rg
 =Ñ->
∫¨g
;

451 
r
->
«rg_íd
 = 
p
;

452 
r
->
tokí
 = 
NULL
;

453 
°©e
 = 
SW_NARG_LF
;

455 
îr‹
;

460 
SW_NARG_LF
:

461 
ch
) {

462 
LF
:

463 
°©e
 = 
SW_REQ_TYPE_LEN
;

467 
îr‹
;

472 
SW_REQ_TYPE_LEN
:

473 i‡(
r
->
tokí
 =
NULL
) {

474 i‡(
ch
 != '$') {

475 
îr‹
;

477 
r
->
tokí
 = 
p
;

478 
r
->
æí
 = 0;

479 } i‡(
	`isdigô
(
ch
)) {

480 
r
->
æí
 =Ñ->æí * 10 + (
uöt32_t
)(
ch
 - '0');

481 } i‡(
ch
 =
CR
) {

482 i‡(
r
->
æí
 =0 ||Ñ->
∫¨g
 == 0) {

483 
îr‹
;

485 
r
->
∫¨g
--;

486 
r
->
tokí
 = 
NULL
;

487 
°©e
 = 
SW_REQ_TYPE_LEN_LF
;

489 
îr‹
;

494 
SW_REQ_TYPE_LEN_LF
:

495 
ch
) {

496 
LF
:

497 
°©e
 = 
SW_REQ_TYPE
;

501 
îr‹
;

506 
SW_REQ_TYPE
:

507 i‡(
r
->
tokí
 =
NULL
) {

508 
r
->
tokí
 = 
p
;

511 
m
 = 
r
->
tokí
 +Ñ->
æí
;

512 i‡(
m
 >
b
->
œ°
) {

513 
m
 = 
b
->
œ°
 - 1;

514 
p
 = 
m
;

518 i‡(*
m
 !
CR
) {

519 
îr‹
;

522 
p
 = 
m
;

523 
r
->
æí
 = 0;

524 
m
 = 
r
->
tokí
;

525 
r
->
tokí
 = 
NULL
;

526 
r
->
ty≥
 = 
MSG_UNKNOWN
;

528 
p
 - 
m
) {

531 i‡(
	`°r3icmp
(
m
, 'g', 'e', 't')) {

532 
r
->
ty≥
 = 
MSG_REQ_REDIS_GET
;

536 i‡(
	`°r3icmp
(
m
, 's', 'e', 't')) {

537 
r
->
ty≥
 = 
MSG_REQ_REDIS_SET
;

539 
r
->
is_wrôe
 = 1;

543 i‡(
	`°r3icmp
(
m
, 't', 't', 'l')) {

544 
r
->
ty≥
 = 
MSG_REQ_REDIS_TTL
;

548 i‡(
	`°r3icmp
(
m
, 'd', 'e', 'l')) {

549 
r
->
ty≥
 = 
MSG_REQ_REDIS_DEL
;

556 i‡(
	`°r4icmp
(
m
, 'p', 't', 't', 'l')) {

557 
r
->
ty≥
 = 
MSG_REQ_REDIS_PTTL
;

561 i‡(
	`°r4icmp
(
m
, 'd', 'e', 'c', 'r')) {

562 
r
->
ty≥
 = 
MSG_REQ_REDIS_DECR
;

566 i‡(
	`°r4icmp
(
m
, 'd', 'u', 'm', 'p')) {

567 
r
->
ty≥
 = 
MSG_REQ_REDIS_DUMP
;

571 i‡(
	`°r4icmp
(
m
, 'h', 'd', 'e', 'l')) {

572 
r
->
ty≥
 = 
MSG_REQ_REDIS_HDEL
;

576 i‡(
	`°r4icmp
(
m
, 'h', 'g', 'e', 't')) {

577 
r
->
ty≥
 = 
MSG_REQ_REDIS_HGET
;

581 i‡(
	`°r4icmp
(
m
, 'h', 'l', 'e', 'n')) {

582 
r
->
ty≥
 = 
MSG_REQ_REDIS_HLEN
;

586 i‡(
	`°r4icmp
(
m
, 'h', 's', 'e', 't')) {

587 
r
->
ty≥
 = 
MSG_REQ_REDIS_HSET
;

591 i‡(
	`°r4icmp
(
m
, 'i', 'n', 'c', 'r')) {

592 
r
->
ty≥
 = 
MSG_REQ_REDIS_INCR
;

596 i‡(
	`°r4icmp
(
m
, 'l', 'l', 'e', 'n')) {

597 
r
->
ty≥
 = 
MSG_REQ_REDIS_LLEN
;

601 i‡(
	`°r4icmp
(
m
, 'l', 'p', 'o', 'p')) {

602 
r
->
ty≥
 = 
MSG_REQ_REDIS_LPOP
;

606 i‡(
	`°r4icmp
(
m
, 'l', 'r', 'e', 'm')) {

607 
r
->
ty≥
 = 
MSG_REQ_REDIS_LREM
;

611 i‡(
	`°r4icmp
(
m
, 'l', 's', 'e', 't')) {

612 
r
->
ty≥
 = 
MSG_REQ_REDIS_LSET
;

616 i‡(
	`°r4icmp
(
m
, 'r', 'p', 'o', 'p')) {

617 
r
->
ty≥
 = 
MSG_REQ_REDIS_RPOP
;

621 i‡(
	`°r4icmp
(
m
, 's', 'a', 'd', 'd')) {

622 
r
->
ty≥
 = 
MSG_REQ_REDIS_SADD
;

626 i‡(
	`°r4icmp
(
m
, 's', 'p', 'o', 'p')) {

627 
r
->
ty≥
 = 
MSG_REQ_REDIS_SPOP
;

631 i‡(
	`°r4icmp
(
m
, 's', 'r', 'e', 'm')) {

632 
r
->
ty≥
 = 
MSG_REQ_REDIS_SREM
;

636 i‡(
	`°r4icmp
(
m
, 't', 'y', 'p', 'e')) {

637 
r
->
ty≥
 = 
MSG_REQ_REDIS_TYPE
;

641 i‡(
	`°r4icmp
(
m
, 'm', 'g', 'e', 't')) {

642 
r
->
ty≥
 = 
MSG_REQ_REDIS_MGET
;

645 i‡(
	`°r4icmp
(
m
, 'm', 's', 'e', 't')) {

646 
r
->
ty≥
 = 
MSG_REQ_REDIS_MSET
;

650 i‡(
	`°r4icmp
(
m
, 'z', 'a', 'd', 'd')) {

651 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZADD
;

655 i‡(
	`°r4icmp
(
m
, 'z', 'r', 'e', 'm')) {

656 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZREM
;

660 i‡(
	`°r4icmp
(
m
, 'e', 'v', 'a', 'l')) {

661 
r
->
ty≥
 = 
MSG_REQ_REDIS_EVAL
;

665 i‡(
	`°r4icmp
(
m
, 's', 'o', 'r', 't')) {

666 
r
->
ty≥
 = 
MSG_REQ_REDIS_SORT
;

670 i‡(
	`°r4icmp
(
m
, 'p', 'i', 'n', 'g')) {

671 
r
->
ty≥
 = 
MSG_REQ_REDIS_PING
;

672 
r
->
nof‹w¨d
 = 1;

676 i‡(
	`°r4icmp
(
m
, 'q', 'u', 'i', 't')) {

677 
r
->
ty≥
 = 
MSG_REQ_REDIS_QUIT
;

678 
r
->
quô
 = 1;

682 i‡(
	`°r4icmp
(
m
, 'a', 'u', 't', 'h')) {

683 
r
->
ty≥
 = 
MSG_REQ_REDIS_AUTH
;

684 
r
->
nof‹w¨d
 = 1;

691 i‡(
	`°r5icmp
(
m
, 'h', 'k', 'e', 'y', 's')) {

692 
r
->
ty≥
 = 
MSG_REQ_REDIS_HKEYS
;

696 i‡(
	`°r5icmp
(
m
, 'h', 'm', 'g', 'e', 't')) {

697 
r
->
ty≥
 = 
MSG_REQ_REDIS_HMGET
;

701 i‡(
	`°r5icmp
(
m
, 'h', 'm', 's', 'e', 't')) {

702 
r
->
ty≥
 = 
MSG_REQ_REDIS_HMSET
;

706 i‡(
	`°r5icmp
(
m
, 'h', 'v', 'a', 'l', 's')) {

707 
r
->
ty≥
 = 
MSG_REQ_REDIS_HVALS
;

711 i‡(
	`°r5icmp
(
m
, 'h', 's', 'c', 'a', 'n')) {

712 
r
->
ty≥
 = 
MSG_REQ_REDIS_HSCAN
;

716 i‡(
	`°r5icmp
(
m
, 'l', 'p', 'u', 's', 'h')) {

717 
r
->
ty≥
 = 
MSG_REQ_REDIS_LPUSH
;

721 i‡(
	`°r5icmp
(
m
, 'l', 't', 'r', 'i', 'm')) {

722 
r
->
ty≥
 = 
MSG_REQ_REDIS_LTRIM
;

726 i‡(
	`°r5icmp
(
m
, 'r', 'p', 'u', 's', 'h')) {

727 
r
->
ty≥
 = 
MSG_REQ_REDIS_RPUSH
;

731 i‡(
	`°r5icmp
(
m
, 's', 'c', 'a', 'r', 'd')) {

732 
r
->
ty≥
 = 
MSG_REQ_REDIS_SCARD
;

736 i‡(
	`°r5icmp
(
m
, 's', 'd', 'i', 'f', 'f')) {

737 
r
->
ty≥
 = 
MSG_REQ_REDIS_SDIFF
;

741 i‡(
	`°r5icmp
(
m
, 's', 'e', 't', 'e', 'x')) {

742 
r
->
ty≥
 = 
MSG_REQ_REDIS_SETEX
;

746 i‡(
	`°r5icmp
(
m
, 's', 'e', 't', 'n', 'x')) {

747 
r
->
ty≥
 = 
MSG_REQ_REDIS_SETNX
;

751 i‡(
	`°r5icmp
(
m
, 's', 'm', 'o', 'v', 'e')) {

752 
r
->
ty≥
 = 
MSG_REQ_REDIS_SMOVE
;

756 i‡(
	`°r5icmp
(
m
, 's', 's', 'c', 'a', 'n')) {

757 
r
->
ty≥
 = 
MSG_REQ_REDIS_SSCAN
;

761 i‡(
	`°r5icmp
(
m
, 'z', 'c', 'a', 'r', 'd')) {

762 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZCARD
;

766 i‡(
	`°r5icmp
(
m
, 'z', 'r', 'a', 'n', 'k')) {

767 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZRANK
;

771 i‡(
	`°r5icmp
(
m
, 'z', 's', 'c', 'a', 'n')) {

772 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZSCAN
;

776 i‡(
	`°r5icmp
(
m
, 'p', 'f', 'a', 'd', 'd')) {

777 
r
->
ty≥
 = 
MSG_REQ_REDIS_PFADD
;

784 i‡(
	`°r6icmp
(
m
, 'a', 'p', 'p', 'e', 'n', 'd')) {

785 
r
->
ty≥
 = 
MSG_REQ_REDIS_APPEND
;

789 i‡(
	`°r6icmp
(
m
, 'b', 'i', 't', 'p', 'o', 's')) {

790 
r
->
ty≥
 = 
MSG_REQ_REDIS_BITPOS
;

794 i‡(
	`°r6icmp
(
m
, 'd', 'e', 'c', 'r', 'b', 'y')) {

795 
r
->
ty≥
 = 
MSG_REQ_REDIS_DECRBY
;

799 i‡(
	`°r6icmp
(
m
, 'e', 'x', 'i', 's', 't', 's')) {

800 
r
->
ty≥
 = 
MSG_REQ_REDIS_EXISTS
;

804 i‡(
	`°r6icmp
(
m
, 'e', 'x', 'p', 'i', 'r', 'e')) {

805 
r
->
ty≥
 = 
MSG_REQ_REDIS_EXPIRE
;

809 i‡(
	`°r6icmp
(
m
, 'g', 'e', 't', 'b', 'i', 't')) {

810 
r
->
ty≥
 = 
MSG_REQ_REDIS_GETBIT
;

814 i‡(
	`°r6icmp
(
m
, 'g', 'e', 't', 's', 'e', 't')) {

815 
r
->
ty≥
 = 
MSG_REQ_REDIS_GETSET
;

819 i‡(
	`°r6icmp
(
m
, 'p', 's', 'e', 't', 'e', 'x')) {

820 
r
->
ty≥
 = 
MSG_REQ_REDIS_PSETEX
;

824 i‡(
	`°r6icmp
(
m
, 'h', 's', 'e', 't', 'n', 'x')) {

825 
r
->
ty≥
 = 
MSG_REQ_REDIS_HSETNX
;

829 i‡(
	`°r6icmp
(
m
, 'i', 'n', 'c', 'r', 'b', 'y')) {

830 
r
->
ty≥
 = 
MSG_REQ_REDIS_INCRBY
;

834 i‡(
	`°r6icmp
(
m
, 'l', 'i', 'n', 'd', 'e', 'x')) {

835 
r
->
ty≥
 = 
MSG_REQ_REDIS_LINDEX
;

839 i‡(
	`°r6icmp
(
m
, 'l', 'p', 'u', 's', 'h', 'x')) {

840 
r
->
ty≥
 = 
MSG_REQ_REDIS_LPUSHX
;

844 i‡(
	`°r6icmp
(
m
, 'l', 'r', 'a', 'n', 'g', 'e')) {

845 
r
->
ty≥
 = 
MSG_REQ_REDIS_LRANGE
;

849 i‡(
	`°r6icmp
(
m
, 'r', 'p', 'u', 's', 'h', 'x')) {

850 
r
->
ty≥
 = 
MSG_REQ_REDIS_RPUSHX
;

854 i‡(
	`°r6icmp
(
m
, 's', 'e', 't', 'b', 'i', 't')) {

855 
r
->
ty≥
 = 
MSG_REQ_REDIS_SETBIT
;

859 i‡(
	`°r6icmp
(
m
, 's', 'i', 'n', 't', 'e', 'r')) {

860 
r
->
ty≥
 = 
MSG_REQ_REDIS_SINTER
;

864 i‡(
	`°r6icmp
(
m
, 's', 't', 'r', 'l', 'e', 'n')) {

865 
r
->
ty≥
 = 
MSG_REQ_REDIS_STRLEN
;

869 i‡(
	`°r6icmp
(
m
, 's', 'u', 'n', 'i', 'o', 'n')) {

870 
r
->
ty≥
 = 
MSG_REQ_REDIS_SUNION
;

874 i‡(
	`°r6icmp
(
m
, 'z', 'c', 'o', 'u', 'n', 't')) {

875 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZCOUNT
;

879 i‡(
	`°r6icmp
(
m
, 'z', 'r', 'a', 'n', 'g', 'e')) {

880 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZRANGE
;

884 i‡(
	`°r6icmp
(
m
, 'z', 's', 'c', 'o', 'r', 'e')) {

885 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZSCORE
;

892 i‡(
	`°r7icmp
(
m
, 'p', 'e', 'r', 's', 'i', 's', 't')) {

893 
r
->
ty≥
 = 
MSG_REQ_REDIS_PERSIST
;

897 i‡(
	`°r7icmp
(
m
, 'p', 'e', 'x', 'p', 'i', 'r', 'e')) {

898 
r
->
ty≥
 = 
MSG_REQ_REDIS_PEXPIRE
;

902 i‡(
	`°r7icmp
(
m
, 'h', 'e', 'x', 'i', 's', 't', 's')) {

903 
r
->
ty≥
 = 
MSG_REQ_REDIS_HEXISTS
;

907 i‡(
	`°r7icmp
(
m
, 'h', 'g', 'e', 't', 'a', 'l', 'l')) {

908 
r
->
ty≥
 = 
MSG_REQ_REDIS_HGETALL
;

912 i‡(
	`°r7icmp
(
m
, 'h', 'i', 'n', 'c', 'r', 'b', 'y')) {

913 
r
->
ty≥
 = 
MSG_REQ_REDIS_HINCRBY
;

917 i‡(
	`°r7icmp
(
m
, 'l', 'i', 'n', 's', 'e', 'r', 't')) {

918 
r
->
ty≥
 = 
MSG_REQ_REDIS_LINSERT
;

922 i‡(
	`°r7icmp
(
m
, 'z', 'i', 'n', 'c', 'r', 'b', 'y')) {

923 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZINCRBY
;

927 i‡(
	`°r7icmp
(
m
, 'e', 'v', 'a', 'l', 's', 'h', 'a')) {

928 
r
->
ty≥
 = 
MSG_REQ_REDIS_EVALSHA
;

932 i‡(
	`°r7icmp
(
m
, 'r', 'e', 's', 't', 'o', 'r', 'e')) {

933 
r
->
ty≥
 = 
MSG_REQ_REDIS_RESTORE
;

937 i‡(
	`°r7icmp
(
m
, 'p', 'f', 'c', 'o', 'u', 'n', 't')) {

938 
r
->
ty≥
 = 
MSG_REQ_REDIS_PFCOUNT
;

942 i‡(
	`°r7icmp
(
m
, 'p', 'f', 'm', 'e', 'r', 'g', 'e')) {

943 
r
->
ty≥
 = 
MSG_REQ_REDIS_PFMERGE
;

950 i‡(
	`°r8icmp
(
m
, 'e', 'x', 'p', 'i', 'r', 'e', 'a', 't')) {

951 
r
->
ty≥
 = 
MSG_REQ_REDIS_EXPIREAT
;

955 i‡(
	`°r8icmp
(
m
, 'b', 'i', 't', 'c', 'o', 'u', 'n', 't')) {

956 
r
->
ty≥
 = 
MSG_REQ_REDIS_BITCOUNT
;

960 i‡(
	`°r8icmp
(
m
, 'g', 'e', 't', 'r', 'a', 'n', 'g', 'e')) {

961 
r
->
ty≥
 = 
MSG_REQ_REDIS_GETRANGE
;

965 i‡(
	`°r8icmp
(
m
, 's', 'e', 't', 'r', 'a', 'n', 'g', 'e')) {

966 
r
->
ty≥
 = 
MSG_REQ_REDIS_SETRANGE
;

970 i‡(
	`°r8icmp
(
m
, 's', 'm', 'e', 'm', 'b', 'e', 'r', 's')) {

971 
r
->
ty≥
 = 
MSG_REQ_REDIS_SMEMBERS
;

975 i‡(
	`°r8icmp
(
m
, 'z', 'r', 'e', 'v', 'r', 'a', 'n', 'k')) {

976 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZREVRANK
;

983 i‡(
	`°r9icmp
(
m
, 'p', 'e', 'x', 'p', 'i', 'r', 'e', 'a', 't')) {

984 
r
->
ty≥
 = 
MSG_REQ_REDIS_PEXPIREAT
;

988 i‡(
	`°r9icmp
(
m
, 'r', 'p', 'o', 'p', 'l', 'p', 'u', 's', 'h')) {

989 
r
->
ty≥
 = 
MSG_REQ_REDIS_RPOPLPUSH
;

993 i‡(
	`°r9icmp
(
m
, 's', 'i', 's', 'm', 'e', 'm', 'b', 'e', 'r')) {

994 
r
->
ty≥
 = 
MSG_REQ_REDIS_SISMEMBER
;

998 i‡(
	`°r9icmp
(
m
, 'z', 'r', 'e', 'v', 'r', 'a', 'n', 'g', 'e')) {

999 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZREVRANGE
;

1003 i‡(
	`°r9icmp
(
m
, 'z', 'l', 'e', 'x', 'c', 'o', 'u', 'n', 't')) {

1004 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZLEXCOUNT
;

1011 i‡(
	`°r10icmp
(
m
, 's', 'd', 'i', 'f', 'f', 's', 't', 'o', 'r', 'e')) {

1012 
r
->
ty≥
 = 
MSG_REQ_REDIS_SDIFFSTORE
;

1017 i‡(
	`°r11icmp
(
m
, 'i', 'n', 'c', 'r', 'b', 'y', 'f', 'l', 'o', 'a', 't')) {

1018 
r
->
ty≥
 = 
MSG_REQ_REDIS_INCRBYFLOAT
;

1022 i‡(
	`°r11icmp
(
m
, 's', 'i', 'n', 't', 'e', 'r', 's', 't', 'o', 'r', 'e')) {

1023 
r
->
ty≥
 = 
MSG_REQ_REDIS_SINTERSTORE
;

1027 i‡(
	`°r11icmp
(
m
, 's', 'r', 'a', 'n', 'd', 'm', 'e', 'm', 'b', 'e', 'r')) {

1028 
r
->
ty≥
 = 
MSG_REQ_REDIS_SRANDMEMBER
;

1032 i‡(
	`°r11icmp
(
m
, 's', 'u', 'n', 'i', 'o', 'n', 's', 't', 'o', 'r', 'e')) {

1033 
r
->
ty≥
 = 
MSG_REQ_REDIS_SUNIONSTORE
;

1037 i‡(
	`°r11icmp
(
m
, 'z', 'i', 'n', 't', 'e', 'r', 's', 't', 'o', 'r', 'e')) {

1038 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZINTERSTORE
;

1042 i‡(
	`°r11icmp
(
m
, 'z', 'u', 'n', 'i', 'o', 'n', 's', 't', 'o', 'r', 'e')) {

1043 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZUNIONSTORE
;

1047 i‡(
	`°r11icmp
(
m
, 'z', 'r', 'a', 'n', 'g', 'e', 'b', 'y', 'l', 'e', 'x')) {

1048 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZRANGEBYLEX
;

1052 i‡(
	`°r11icmp
(
m
, 'h', 'c', 'd', 'g', 'e', 't', 'p', 'r', 'o', 'x', 'y')) {

1053 
r
->
ty≥
 = 
MSG_REQ_REDIS_HCDGETPROXY
;

1054 
r
->
nof‹w¨d
 = 1;

1058 i‡(
	`°r11icmp
(
m
, 'h', 'c', 'd', 's', 'e', 't', 'p', 'r', 'o', 'x', 'y')) {

1059 
r
->
ty≥
 = 
MSG_REQ_REDIS_HCDSETPROXY
;

1060 
r
->
nof‹w¨d
 = 1;

1067 i‡(
	`°r12icmp
(
m
, 'h', 'i', 'n', 'c', 'r', 'b', 'y', 'f', 'l', 'o', 'a', 't')) {

1068 
r
->
ty≥
 = 
MSG_REQ_REDIS_HINCRBYFLOAT
;

1076 i‡(
	`°r13icmp
(
m
, 'z', 'r', 'a', 'n', 'g', 'e', 'b', 'y', 's', 'c', 'o', 'r', 'e')) {

1077 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZRANGEBYSCORE
;

1084 i‡(
	`°r14icmp
(
m
, 'z', 'r', 'e', 'm', 'r', 'a', 'n', 'g', 'e', 'b', 'y', 'l', 'e', 'x')) {

1085 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZREMRANGEBYLEX
;

1092 i‡(
	`°r15icmp
(
m
, 'z', 'r', 'e', 'm', 'r', 'a', 'n', 'g', 'e', 'b', 'y', 'r', 'a', 'n', 'k')) {

1093 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZREMRANGEBYRANK
;

1100 i‡(
	`°r16icmp
(
m
, 'z', 'r', 'e', 'm', 'r', 'a', 'n', 'g', 'e', 'b', 'y', 's', 'c', 'o', 'r', 'e')) {

1101 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZREMRANGEBYSCORE
;

1105 i‡(
	`°r16icmp
(
m
, 'z', 'r', 'e', 'v', 'r', 'a', 'n', 'g', 'e', 'b', 'y', 's', 'c', 'o', 'r', 'e')) {

1106 
r
->
ty≥
 = 
MSG_REQ_REDIS_ZREVRANGEBYSCORE
;

1116 i‡(
r
->
ty≥
 =
MSG_UNKNOWN
) {

1117 
	`log_îr‹
("∑r£d unsuµ‹ãd comm™d '%.*s'", 
p
 - 
m
, m);

1118 
îr‹
;

1121 
	`log_debug
(
LOG_VERB
, "∑r£d comm™d '%.*s'", 
p
 - 
m
, m);

1123 
°©e
 = 
SW_REQ_TYPE_LF
;

1126 
SW_REQ_TYPE_LF
:

1127 
ch
) {

1128 
LF
:

1129 i‡(
	`ªdis_¨gz
(
r
)) {

1130 
d⁄e
;

1131 } i‡(
r
->
«rg
 == 1) {

1132 
îr‹
;

1133 } i‡(
	`ªdis_¨gevÆ
(
r
)) {

1134 
°©e
 = 
SW_ARG1_LEN
;

1136 
°©e
 = 
SW_KEY_LEN
;

1141 
îr‹
;

1146 
SW_KEY_LEN
:

1147 i‡(
r
->
tokí
 =
NULL
) {

1148 i‡(
ch
 != '$') {

1149 
îr‹
;

1151 
r
->
tokí
 = 
p
;

1152 
r
->
æí
 = 0;

1153 } i‡(
	`isdigô
(
ch
)) {

1154 
r
->
æí
 =Ñ->æí * 10 + (
uöt32_t
)(
ch
 - '0');

1155 } i‡(
ch
 =
CR
) {

1156 i‡(
r
->
æí
 >
	`mbuf_d©a_size
()) {

1157 
	`log_îr‹
("∑r£d badÑeq %"
PRIu64
" ofÅype %d with key "

1159 "Ñedi†keyÜígth o‡%d", 
r
->
id
,Ñ->
ty≥
,

1160 
r
->
æí
, 
	`mbuf_d©a_size
());

1161 
îr‹
;

1163 i‡(
r
->
∫¨g
 == 0) {

1164 
îr‹
;

1166 
r
->
∫¨g
--;

1167 
r
->
tokí
 = 
NULL
;

1168 
°©e
 = 
SW_KEY_LEN_LF
;

1170 
îr‹
;

1175 
SW_KEY_LEN_LF
:

1176 
ch
) {

1177 
LF
:

1178 
°©e
 = 
SW_KEY
;

1182 
îr‹
;

1187 
SW_KEY
:

1188 i‡(
r
->
tokí
 =
NULL
) {

1189 
r
->
tokí
 = 
p
;

1192 
m
 = 
r
->
tokí
 +Ñ->
æí
;

1193 i‡(
m
 >
b
->
œ°
) {

1194 
m
 = 
b
->
œ°
 - 1;

1195 
p
 = 
m
;

1199 i‡(*
m
 !
CR
) {

1200 
îr‹
;

1202 
keypos
 *
kpos
;

1204 
p
 = 
m
;

1205 
r
->
æí
 = 0;

1206 
m
 = 
r
->
tokí
;

1207 
r
->
tokí
 = 
NULL
;

1209 
kpos
 = 
	`¨øy_push
(
r
->
keys
);

1210 i‡(
kpos
 =
NULL
) {

1211 
íomem
;

1213 
kpos
->
°¨t
 = 
m
;

1214 
kpos
->
íd
 = 
p
;

1216 
°©e
 = 
SW_KEY_LF
;

1221 
SW_KEY_LF
:

1222 
ch
) {

1223 
LF
:

1224 i‡(
	`ªdis_¨g0
(
r
)) {

1225 i‡(
r
->
∫¨g
 != 0) {

1226 
îr‹
;

1228 
d⁄e
;

1229 } i‡(
	`ªdis_¨g1
(
r
)) {

1230 i‡(
r
->
∫¨g
 != 1) {

1231 
îr‹
;

1233 
°©e
 = 
SW_ARG1_LEN
;

1234 } i‡(
	`ªdis_¨g2
(
r
)) {

1235 i‡(
r
->
∫¨g
 != 2) {

1236 
îr‹
;

1238 
°©e
 = 
SW_ARG1_LEN
;

1239 } i‡(
	`ªdis_¨g3
(
r
)) {

1240 i‡(
r
->
∫¨g
 != 3) {

1241 
îr‹
;

1243 
°©e
 = 
SW_ARG1_LEN
;

1244 } i‡(
	`ªdis_¨gn
(
r
)) {

1245 i‡(
r
->
∫¨g
 == 0) {

1246 
d⁄e
;

1248 
°©e
 = 
SW_ARG1_LEN
;

1249 } i‡(
	`ªdis_¨gx
(
r
)) {

1250 i‡(
r
->
∫¨g
 == 0) {

1251 
d⁄e
;

1253 
°©e
 = 
SW_KEY_LEN
;

1254 } i‡(
	`ªdis_¨gkvx
(
r
)) {

1255 i‡(
r
->
«rg
 % 2 == 0) {

1256 
îr‹
;

1258 
°©e
 = 
SW_ARG1_LEN
;

1259 } i‡(
	`ªdis_¨gevÆ
(
r
)) {

1260 i‡(
r
->
∫¨g
 == 0) {

1261 
d⁄e
;

1263 
°©e
 = 
SW_ARGN_LEN
;

1265 
îr‹
;

1271 
îr‹
;

1276 
SW_ARG1_LEN
:

1277 i‡(
r
->
tokí
 =
NULL
) {

1278 i‡(
ch
 != '$') {

1279 
îr‹
;

1281 
r
->
æí
 = 0;

1282 
r
->
tokí
 = 
p
;

1283 } i‡(
	`isdigô
(
ch
)) {

1284 
r
->
æí
 =Ñ->æí * 10 + (
uöt32_t
)(
ch
 - '0');

1285 } i‡(
ch
 =
CR
) {

1286 i‡((
p
 - 
r
->
tokí
Ë<1 ||Ñ->
∫¨g
 == 0) {

1287 
îr‹
;

1289 
r
->
∫¨g
--;

1290 
r
->
tokí
 = 
NULL
;

1291 
°©e
 = 
SW_ARG1_LEN_LF
;

1293 
îr‹
;

1298 
SW_ARG1_LEN_LF
:

1299 
ch
) {

1300 
LF
:

1301 
°©e
 = 
SW_ARG1
;

1305 
îr‹
;

1310 
SW_ARG1
:

1311 
m
 = 
p
 + 
r
->
æí
;

1312 i‡(
m
 >
b
->
œ°
) {

1313 
r
->
æí
 -(
uöt32_t
)(
b
->
œ°
 - 
p
);

1314 
m
 = 
b
->
œ°
 - 1;

1315 
p
 = 
m
;

1319 i‡(*
m
 !
CR
) {

1320 
îr‹
;

1323 
p
 = 
m
;

1324 
r
->
æí
 = 0;

1326 
°©e
 = 
SW_ARG1_LF
;

1330 
SW_ARG1_LF
:

1331 
ch
) {

1332 
LF
:

1333 i‡(
	`ªdis_¨g1
(
r
)) {

1334 i‡(
r
->
∫¨g
 != 0) {

1335 
îr‹
;

1337 
d⁄e
;

1338 } i‡(
	`ªdis_¨g2
(
r
)) {

1339 i‡(
r
->
∫¨g
 != 1) {

1340 
îr‹
;

1342 
°©e
 = 
SW_ARG2_LEN
;

1343 } i‡(
	`ªdis_¨g3
(
r
)) {

1344 i‡(
r
->
∫¨g
 != 2) {

1345 
îr‹
;

1347 
°©e
 = 
SW_ARG2_LEN
;

1348 } i‡(
	`ªdis_¨gn
(
r
)) {

1349 i‡(
r
->
∫¨g
 == 0) {

1350 
d⁄e
;

1352 
°©e
 = 
SW_ARGN_LEN
;

1353 } i‡(
	`ªdis_¨gevÆ
(
r
)) {

1354 i‡(
r
->
∫¨g
 < 2) {

1355 
îr‹
;

1357 
°©e
 = 
SW_ARG2_LEN
;

1358 } i‡(
	`ªdis_¨gkvx
(
r
)) {

1359 i‡(
r
->
∫¨g
 == 0) {

1360 
d⁄e
;

1362 
°©e
 = 
SW_KEY_LEN
;

1364 
îr‹
;

1370 
îr‹
;

1375 
SW_ARG2_LEN
:

1376 i‡(
r
->
tokí
 =
NULL
) {

1377 i‡(
ch
 != '$') {

1378 
îr‹
;

1380 
r
->
æí
 = 0;

1381 
r
->
tokí
 = 
p
;

1382 } i‡(
	`isdigô
(
ch
)) {

1383 
r
->
æí
 =Ñ->æí * 10 + (
uöt32_t
)(
ch
 - '0');

1384 } i‡(
ch
 =
CR
) {

1385 i‡((
p
 - 
r
->
tokí
Ë<1 ||Ñ->
∫¨g
 == 0) {

1386 
îr‹
;

1388 
r
->
∫¨g
--;

1389 
r
->
tokí
 = 
NULL
;

1390 
°©e
 = 
SW_ARG2_LEN_LF
;

1392 
îr‹
;

1397 
SW_ARG2_LEN_LF
:

1398 
ch
) {

1399 
LF
:

1400 
°©e
 = 
SW_ARG2
;

1404 
îr‹
;

1409 
SW_ARG2
:

1410 i‡(
r
->
tokí
 =
NULL
 && 
	`ªdis_¨gevÆ
(r)) {

1415 
r
->
tokí
 = 
p
;

1418 
m
 = 
p
 + 
r
->
æí
;

1419 i‡(
m
 >
b
->
œ°
) {

1420 
r
->
æí
 -(
uöt32_t
)(
b
->
œ°
 - 
p
);

1421 
m
 = 
b
->
œ°
 - 1;

1422 
p
 = 
m
;

1426 i‡(*
m
 !
CR
) {

1427 
îr‹
;

1430 
p
 = 
m
;

1431 
r
->
æí
 = 0;

1433 i‡(
	`ªdis_¨gevÆ
(
r
)) {

1434 
uöt32_t
 
nkey
;

1435 
uöt8_t
 *
chp
;

1444 i‡(
p
 - 
r
->
tokí
 < 1) {

1445 
îr‹
;

1448 
nkey
 = 0, 
chp
 = 
r
->
tokí
; ch∞< 
p
; chp++) {

1449 i‡(
	`isdigô
(*
chp
)) {

1450 
nkey
 =Çkey * 10 + (
uöt32_t
)(*
chp
 - '0');

1452 
îr‹
;

1455 i‡(
nkey
 == 0) {

1456 
îr‹
;

1459 
r
->
tokí
 = 
NULL
;

1462 
°©e
 = 
SW_ARG2_LF
;

1466 
SW_ARG2_LF
:

1467 
ch
) {

1468 
LF
:

1469 i‡(
	`ªdis_¨g2
(
r
)) {

1470 i‡(
r
->
∫¨g
 != 0) {

1471 
îr‹
;

1473 
d⁄e
;

1474 } i‡(
	`ªdis_¨g3
(
r
)) {

1475 i‡(
r
->
∫¨g
 != 1) {

1476 
îr‹
;

1478 
°©e
 = 
SW_ARG3_LEN
;

1479 } i‡(
	`ªdis_¨gn
(
r
)) {

1480 i‡(
r
->
∫¨g
 == 0) {

1481 
d⁄e
;

1483 
°©e
 = 
SW_ARGN_LEN
;

1484 } i‡(
	`ªdis_¨gevÆ
(
r
)) {

1485 i‡(
r
->
∫¨g
 < 1) {

1486 
îr‹
;

1488 
°©e
 = 
SW_KEY_LEN
;

1490 
îr‹
;

1496 
îr‹
;

1501 
SW_ARG3_LEN
:

1502 i‡(
r
->
tokí
 =
NULL
) {

1503 i‡(
ch
 != '$') {

1504 
îr‹
;

1506 
r
->
æí
 = 0;

1507 
r
->
tokí
 = 
p
;

1508 } i‡(
	`isdigô
(
ch
)) {

1509 
r
->
æí
 =Ñ->æí * 10 + (
uöt32_t
)(
ch
 - '0');

1510 } i‡(
ch
 =
CR
) {

1511 i‡((
p
 - 
r
->
tokí
Ë<1 ||Ñ->
∫¨g
 == 0) {

1512 
îr‹
;

1514 
r
->
∫¨g
--;

1515 
r
->
tokí
 = 
NULL
;

1516 
°©e
 = 
SW_ARG3_LEN_LF
;

1518 
îr‹
;

1523 
SW_ARG3_LEN_LF
:

1524 
ch
) {

1525 
LF
:

1526 
°©e
 = 
SW_ARG3
;

1530 
îr‹
;

1535 
SW_ARG3
:

1536 
m
 = 
p
 + 
r
->
æí
;

1537 i‡(
m
 >
b
->
œ°
) {

1538 
r
->
æí
 -(
uöt32_t
)(
b
->
œ°
 - 
p
);

1539 
m
 = 
b
->
œ°
 - 1;

1540 
p
 = 
m
;

1544 i‡(*
m
 !
CR
) {

1545 
îr‹
;

1548 
p
 = 
m
;

1549 
r
->
æí
 = 0;

1550 
°©e
 = 
SW_ARG3_LF
;

1554 
SW_ARG3_LF
:

1555 
ch
) {

1556 
LF
:

1557 i‡(
	`ªdis_¨g3
(
r
)) {

1558 i‡(
r
->
∫¨g
 != 0) {

1559 
îr‹
;

1561 
d⁄e
;

1562 } i‡(
	`ªdis_¨gn
(
r
)) {

1563 i‡(
r
->
∫¨g
 == 0) {

1564 
d⁄e
;

1566 
°©e
 = 
SW_ARGN_LEN
;

1568 
îr‹
;

1574 
îr‹
;

1579 
SW_ARGN_LEN
:

1580 i‡(
r
->
tokí
 =
NULL
) {

1581 i‡(
ch
 != '$') {

1582 
îr‹
;

1584 
r
->
æí
 = 0;

1585 
r
->
tokí
 = 
p
;

1586 } i‡(
	`isdigô
(
ch
)) {

1587 
r
->
æí
 =Ñ->æí * 10 + (
uöt32_t
)(
ch
 - '0');

1588 } i‡(
ch
 =
CR
) {

1589 i‡((
p
 - 
r
->
tokí
Ë<1 ||Ñ->
∫¨g
 == 0) {

1590 
îr‹
;

1592 
r
->
∫¨g
--;

1593 
r
->
tokí
 = 
NULL
;

1594 
°©e
 = 
SW_ARGN_LEN_LF
;

1596 
îr‹
;

1601 
SW_ARGN_LEN_LF
:

1602 
ch
) {

1603 
LF
:

1604 
°©e
 = 
SW_ARGN
;

1608 
îr‹
;

1613 
SW_ARGN
:

1614 
m
 = 
p
 + 
r
->
æí
;

1615 i‡(
m
 >
b
->
œ°
) {

1616 
r
->
æí
 -(
uöt32_t
)(
b
->
œ°
 - 
p
);

1617 
m
 = 
b
->
œ°
 - 1;

1618 
p
 = 
m
;

1622 i‡(*
m
 !
CR
) {

1623 
îr‹
;

1626 
p
 = 
m
;

1627 
r
->
æí
 = 0;

1628 
°©e
 = 
SW_ARGN_LF
;

1632 
SW_ARGN_LF
:

1633 
ch
) {

1634 
LF
:

1635 i‡(
	`ªdis_¨gn
(
r
Ë|| 
	`ªdis_¨gevÆ
(r)) {

1636 i‡(
r
->
∫¨g
 == 0) {

1637 
d⁄e
;

1639 
°©e
 = 
SW_ARGN_LEN
;

1641 
îr‹
;

1647 
îr‹
;

1652 
SW_SENTINEL
:

1654 
	`NOT_REACHED
();

1659 
	`ASSERT
(
p
 =
b
->
œ°
);

1660 
r
->
pos
 = 
p
;

1661 
r
->
°©e
 = state;

1663 i‡(
b
->
œ°
 =b->
íd
 && 
r
->
tokí
 !
NULL
) {

1664 
r
->
pos
 =Ñ->
tokí
;

1665 
r
->
tokí
 = 
NULL
;

1666 
r
->
ªsu…
 = 
MSG_PARSE_REPAIR
;

1668 
r
->
ªsu…
 = 
MSG_PARSE_AGAIN
;

1671 
	`log_hexdump
(
LOG_VERB
, 
b
->
pos
, 
	`mbuf_Àngth
(b), "∑r£dÑeq %"
PRIu64
"Ñes %d "

1672 "ty≥ %d sèã %dÑpo†%d o‡%d", 
r
->
id
,Ñ->
ªsu…
,Ñ->
ty≥
,

1673 
r
->
°©e
,Ñ->
pos
 - 
b
->pos, b->
œ°
 - b->pos);

1676 
d⁄e
:

1677 
	`ASSERT
(
r
->
ty≥
 > 
MSG_UNKNOWN
 &&Ñ->ty≥ < 
MSG_SENTINEL
);

1678 
r
->
pos
 = 
p
 + 1;

1679 
	`ASSERT
(
r
->
pos
 <
b
->
œ°
);

1680 
r
->
°©e
 = 
SW_START
;

1681 
r
->
tokí
 = 
NULL
;

1682 
r
->
ªsu…
 = 
MSG_PARSE_OK
;

1684 
	`log_hexdump
(
LOG_VERB
, 
b
->
pos
, 
	`mbuf_Àngth
(b), "∑r£dÑeq %"
PRIu64
"Ñes %d "

1685 "ty≥ %d sèã %dÑpo†%d o‡%d", 
r
->
id
,Ñ->
ªsu…
,Ñ->
ty≥
,

1686 
r
->
°©e
,Ñ->
pos
 - 
b
->pos, b->
œ°
 - b->pos);

1689 
íomem
:

1690 
r
->
ªsu…
 = 
MSG_PARSE_ERROR
;

1691 
r
->
°©e
 = state;

1693 
	`log_hexdump
(
LOG_INFO
, 
b
->
pos
, 
	`mbuf_Àngth
(b), "ouào‡mem‹y o¿∑r£Ñeq %"
PRIu64
" "

1694 "ª†%dÅy≥ %d sèã %d", 
r
->
id
,Ñ->
ªsu…
,Ñ->
ty≥
,Ñ->
°©e
);

1698 
îr‹
:

1699 
r
->
ªsu…
 = 
MSG_PARSE_ERROR
;

1700 
r
->
°©e
 = state;

1701 
î∫o
 = 
EINVAL
;

1703 
	`log_hexdump
(
LOG_INFO
, 
b
->
pos
, 
	`mbuf_Àngth
(b), "∑r£d badÑeq %"
PRIu64
" "

1704 "ª†%dÅy≥ %d sèã %d", 
r
->
id
,Ñ->
ªsu…
,Ñ->
ty≥
,

1705 
r
->
°©e
);

1706 
	}
}

1737 
	$ªdis_∑r£_r•
(
msg
 *
r
)

1739 
mbuf
 *
b
;

1740 
uöt8_t
 *
p
, *
m
;

1741 
uöt8_t
 
ch
;

1744 
SW_START
,

1745 
SW_STATUS
,

1746 
SW_ERROR
,

1747 
SW_INTEGER
,

1748 
SW_INTEGER_START
,

1749 
SW_SIMPLE
,

1750 
SW_BULK
,

1751 
SW_BULK_LF
,

1752 
SW_BULK_ARG
,

1753 
SW_BULK_ARG_LF
,

1754 
SW_MULTIBULK
,

1755 
SW_MULTIBULK_NARG_LF
,

1756 
SW_MULTIBULK_ARGN_LEN
,

1757 
SW_MULTIBULK_ARGN_LEN_LF
,

1758 
SW_MULTIBULK_ARGN
,

1759 
SW_MULTIBULK_ARGN_LF
,

1760 
SW_RUNTO_CRLF
,

1761 
SW_ALMOST_DONE
,

1762 
SW_SENTINEL


1763 } 
°©e
;

1765 
°©e
 = 
r
->state;

1766 
b
 = 
	`STAILQ_LAST
(&
r
->
mhdr
, 
mbuf
, 
√xt
);

1768 
	`ASSERT
(!
r
->
ªque°
);

1769 
	`ASSERT
(
°©e
 >
SW_START
 && sèã < 
SW_SENTINEL
);

1770 
	`ASSERT
(
b
 !
NULL
);

1771 
	`ASSERT
(
b
->
pos
 <b->
œ°
);

1774 
	`ASSERT
(
r
->
pos
 !
NULL
);

1775 
	`ASSERT
(
r
->
pos
 >
b
->po†&&Ñ->po†<b->
œ°
);

1777 
p
 = 
r
->
pos
;Ö < 
b
->
œ°
;Ö++) {

1778 
ch
 = *
p
;

1780 
°©e
) {

1781 
SW_START
:

1782 
r
->
ty≥
 = 
MSG_UNKNOWN
;

1783 
ch
) {

1785 
p
 =Ö - 1;

1786 
r
->
ty≥
 = 
MSG_RSP_REDIS_STATUS
;

1787 
°©e
 = 
SW_STATUS
;

1791 
r
->
ty≥
 = 
MSG_RSP_REDIS_ERROR
;

1792 
p
 =Ö - 1;

1793 
°©e
 = 
SW_ERROR
;

1797 
r
->
ty≥
 = 
MSG_RSP_REDIS_INTEGER
;

1798 
p
 =Ö - 1;

1799 
°©e
 = 
SW_INTEGER
;

1803 
r
->
ty≥
 = 
MSG_RSP_REDIS_BULK
;

1804 
p
 =Ö - 1;

1805 
°©e
 = 
SW_BULK
;

1809 
r
->
ty≥
 = 
MSG_RSP_REDIS_MULTIBULK
;

1810 
p
 =Ö - 1;

1811 
°©e
 = 
SW_MULTIBULK
;

1815 
îr‹
;

1820 
SW_STATUS
:

1822 
°©e
 = 
SW_RUNTO_CRLF
;

1825 
SW_ERROR
:

1826 i‡(
r
->
tokí
 =
NULL
) {

1827 i‡(
ch
 != '-') {

1828 
îr‹
;

1831 
r
->
tokí
 = 
p
;

1833 i‡(
ch
 =' ' || ch =
CR
) {

1834 
m
 = 
r
->
tokí
;

1835 
r
->
tokí
 = 
NULL
;

1836 
p
 - 
m
) {

1845 i‡(
	`°r4cmp
(
m
, '-', 'E', 'R', 'R')) {

1846 
r
->
ty≥
 = 
MSG_RSP_REDIS_ERROR_ERR
;

1851 i‡(
	`°r4cmp
(
m
, '-', 'O', 'O', 'M')) {

1852 
r
->
ty≥
 = 
MSG_RSP_REDIS_ERROR_OOM
;

1860 i‡(
	`°r5cmp
(
m
, '-', 'B', 'U', 'S', 'Y')) {

1861 
r
->
ty≥
 = 
MSG_RSP_REDIS_ERROR_BUSY
;

1869 i‡(
	`°r7cmp
(
m
, '-', 'N', 'O', 'A', 'U', 'T', 'H')) {

1870 
r
->
ty≥
 = 
MSG_RSP_REDIS_ERROR_NOAUTH
;

1878 i‡(
	`°r8cmp
(
m
, '-', 'L', 'O', 'A', 'D', 'I', 'N', 'G')) {

1879 
r
->
ty≥
 = 
MSG_RSP_REDIS_ERROR_LOADING
;

1884 i‡(
	`°r8cmp
(
m
, '-', 'B', 'U', 'S', 'Y', 'K', 'E', 'Y')) {

1885 
r
->
ty≥
 = 
MSG_RSP_REDIS_ERROR_BUSYKEY
;

1890 i‡(
	`°r8cmp
(
m
, '-', 'M', 'I', 'S', 'C', 'O', 'N', 'F')) {

1891 
r
->
ty≥
 = 
MSG_RSP_REDIS_ERROR_MISCONF
;

1899 i‡(
	`°r9cmp
(
m
, '-', 'N', 'O', 'S', 'C', 'R', 'I', 'P', 'T')) {

1900 
r
->
ty≥
 = 
MSG_RSP_REDIS_ERROR_NOSCRIPT
;

1905 i‡(
	`°r9cmp
(
m
, '-', 'R', 'E', 'A', 'D', 'O', 'N', 'L', 'Y')) {

1906 
r
->
ty≥
 = 
MSG_RSP_REDIS_ERROR_READONLY
;

1914 i‡(
	`°r10cmp
(
m
, '-', 'W', 'R', 'O', 'N', 'G', 'T', 'Y', 'P', 'E')) {

1915 
r
->
ty≥
 = 
MSG_RSP_REDIS_ERROR_WRONGTYPE
;

1920 i‡(
	`°r10cmp
(
m
, '-', 'E', 'X', 'E', 'C', 'A', 'B', 'O', 'R', 'T')) {

1921 
r
->
ty≥
 = 
MSG_RSP_REDIS_ERROR_EXECABORT
;

1929 i‡(
	`°r11cmp
(
m
, '-', 'M', 'A', 'S', 'T', 'E', 'R', 'D', 'O', 'W', 'N')) {

1930 
r
->
ty≥
 = 
MSG_RSP_REDIS_ERROR_MASTERDOWN
;

1935 i‡(
	`°r11cmp
(
m
, '-', 'N', 'O', 'R', 'E', 'P', 'L', 'I', 'C', 'A', 'S')) {

1936 
r
->
ty≥
 = 
MSG_RSP_REDIS_ERROR_NOREPLICAS
;

1942 
°©e
 = 
SW_RUNTO_CRLF
;

1947 
SW_INTEGER
:

1949 
°©e
 = 
SW_INTEGER_START
;

1950 
r
->
öãgî
 = 0;

1953 
SW_SIMPLE
:

1954 i‡(
ch
 =
CR
) {

1955 
°©e
 = 
SW_MULTIBULK_ARGN_LF
;

1956 
r
->
∫¨g
--;

1960 
SW_INTEGER_START
:

1961 i‡(
ch
 =
CR
) {

1962 
°©e
 = 
SW_ALMOST_DONE
;

1963 } i‡(
ch
 == '-') {

1965 } i‡(
	`isdigô
(
ch
)) {

1966 
r
->
öãgî
 =Ñ->öãgî * 10 + (
uöt32_t
)(
ch
 - '0');

1968 
îr‹
;

1972 
SW_RUNTO_CRLF
:

1973 
ch
) {

1974 
CR
:

1975 
°©e
 = 
SW_ALMOST_DONE
;

1984 
SW_ALMOST_DONE
:

1985 
ch
) {

1986 
LF
:

1988 
d⁄e
;

1991 
îr‹
;

1996 
SW_BULK
:

1997 i‡(
r
->
tokí
 =
NULL
) {

1998 i‡(
ch
 != '$') {

1999 
îr‹
;

2002 
r
->
tokí
 = 
p
;

2003 
r
->
æí
 = 0;

2004 } i‡(
ch
 == '-') {

2006 
°©e
 = 
SW_RUNTO_CRLF
;

2007 } i‡(
	`isdigô
(
ch
)) {

2008 
r
->
æí
 =Ñ->æí * 10 + (
uöt32_t
)(
ch
 - '0');

2009 } i‡(
ch
 =
CR
) {

2010 i‡((
p
 - 
r
->
tokí
) <= 1) {

2011 
îr‹
;

2013 
r
->
tokí
 = 
NULL
;

2014 
°©e
 = 
SW_BULK_LF
;

2016 
îr‹
;

2021 
SW_BULK_LF
:

2022 
ch
) {

2023 
LF
:

2024 
°©e
 = 
SW_BULK_ARG
;

2028 
îr‹
;

2033 
SW_BULK_ARG
:

2034 
m
 = 
p
 + 
r
->
æí
;

2035 i‡(
m
 >
b
->
œ°
) {

2036 
r
->
æí
 -(
uöt32_t
)(
b
->
œ°
 - 
p
);

2037 
m
 = 
b
->
œ°
 - 1;

2038 
p
 = 
m
;

2042 i‡(*
m
 !
CR
) {

2043 
îr‹
;

2046 
p
 = 
m
;

2047 
r
->
æí
 = 0;

2049 
°©e
 = 
SW_BULK_ARG_LF
;

2053 
SW_BULK_ARG_LF
:

2054 
ch
) {

2055 
LF
:

2056 
d⁄e
;

2059 
îr‹
;

2064 
SW_MULTIBULK
:

2065 i‡(
r
->
tokí
 =
NULL
) {

2066 i‡(
ch
 != '*') {

2067 
îr‹
;

2069 
r
->
tokí
 = 
p
;

2071 
r
->
«rg_°¨t
 = 
p
;

2072 
r
->
∫¨g
 = 0;

2073 } i‡(
ch
 == '-') {

2074 
°©e
 = 
SW_RUNTO_CRLF
;

2075 } i‡(
	`isdigô
(
ch
)) {

2076 
r
->
∫¨g
 =Ñ->∫¨g * 10 + (
uöt32_t
)(
ch
 - '0');

2077 } i‡(
ch
 =
CR
) {

2078 i‡((
p
 - 
r
->
tokí
) <= 1) {

2079 
îr‹
;

2082 
r
->
«rg
 =Ñ->
∫¨g
;

2083 
r
->
«rg_íd
 = 
p
;

2084 
r
->
tokí
 = 
NULL
;

2085 
°©e
 = 
SW_MULTIBULK_NARG_LF
;

2087 
îr‹
;

2092 
SW_MULTIBULK_NARG_LF
:

2093 
ch
) {

2094 
LF
:

2095 i‡(
r
->
∫¨g
 == 0) {

2097 
d⁄e
;

2100 
°©e
 = 
SW_MULTIBULK_ARGN_LEN
;

2104 
îr‹
;

2109 
SW_MULTIBULK_ARGN_LEN
:

2110 i‡(
r
->
tokí
 =
NULL
) {

2135 i‡(
ch
 == '*') {

2136 
p
 =Ö - 1;

2137 
°©e
 = 
SW_MULTIBULK
;

2141 i‡(
ch
 == ':' || ch == '+' || ch == '-') {

2144 
°©e
 = 
SW_SIMPLE
;

2148 i‡(
ch
 != '$') {

2149 
îr‹
;

2152 
r
->
tokí
 = 
p
;

2153 
r
->
æí
 = 0;

2154 } i‡(
	`isdigô
(
ch
)) {

2155 
r
->
æí
 =Ñ->æí * 10 + (
uöt32_t
)(
ch
 - '0');

2156 } i‡(
ch
 == '-') {

2158 } i‡(
ch
 =
CR
) {

2159 i‡((
p
 - 
r
->
tokí
Ë<1 ||Ñ->
∫¨g
 == 0) {

2160 
îr‹
;

2163 i‡((
r
->
æí
 =1 && (
p
 -Ñ->
tokí
) == 3)) {

2164 
r
->
æí
 = 0;

2165 
°©e
 = 
SW_MULTIBULK_ARGN_LF
;

2167 
°©e
 = 
SW_MULTIBULK_ARGN_LEN_LF
;

2169 
r
->
∫¨g
--;

2170 
r
->
tokí
 = 
NULL
;

2172 
îr‹
;

2177 
SW_MULTIBULK_ARGN_LEN_LF
:

2178 
ch
) {

2179 
LF
:

2180 
°©e
 = 
SW_MULTIBULK_ARGN
;

2184 
îr‹
;

2189 
SW_MULTIBULK_ARGN
:

2190 
m
 = 
p
 + 
r
->
æí
;

2191 i‡(
m
 >
b
->
œ°
) {

2192 
r
->
æí
 -(
uöt32_t
)(
b
->
œ°
 - 
p
);

2193 
m
 = 
b
->
œ°
 - 1;

2194 
p
 = 
m
;

2198 i‡(*
m
 !
CR
) {

2199 
îr‹
;

2202 
p
 +
r
->
æí
;

2203 
r
->
æí
 = 0;

2205 
°©e
 = 
SW_MULTIBULK_ARGN_LF
;

2209 
SW_MULTIBULK_ARGN_LF
:

2210 
ch
) {

2211 
LF
:

2212 i‡(
r
->
∫¨g
 == 0) {

2213 
d⁄e
;

2216 
°©e
 = 
SW_MULTIBULK_ARGN_LEN
;

2220 
îr‹
;

2225 
SW_SENTINEL
:

2227 
	`NOT_REACHED
();

2232 
	`ASSERT
(
p
 =
b
->
œ°
);

2233 
r
->
pos
 = 
p
;

2234 
r
->
°©e
 = state;

2236 i‡(
b
->
œ°
 =b->
íd
 && 
r
->
tokí
 !
NULL
) {

2237 
r
->
pos
 =Ñ->
tokí
;

2238 
r
->
tokí
 = 
NULL
;

2239 
r
->
ªsu…
 = 
MSG_PARSE_REPAIR
;

2241 
r
->
ªsu…
 = 
MSG_PARSE_AGAIN
;

2244 
	`log_hexdump
(
LOG_VERB
, 
b
->
pos
, 
	`mbuf_Àngth
(b), "∑r£dÑ• %"
PRIu64
"Ñes %d "

2245 "ty≥ %d sèã %dÑpo†%d o‡%d", 
r
->
id
,Ñ->
ªsu…
,Ñ->
ty≥
,

2246 
r
->
°©e
,Ñ->
pos
 - 
b
->pos, b->
œ°
 - b->pos);

2249 
d⁄e
:

2250 
	`ASSERT
(
r
->
ty≥
 > 
MSG_UNKNOWN
 &&Ñ->ty≥ < 
MSG_SENTINEL
);

2251 
r
->
pos
 = 
p
 + 1;

2252 
	`ASSERT
(
r
->
pos
 <
b
->
œ°
);

2253 
r
->
°©e
 = 
SW_START
;

2254 
r
->
tokí
 = 
NULL
;

2255 
r
->
ªsu…
 = 
MSG_PARSE_OK
;

2257 
	`log_hexdump
(
LOG_VERB
, 
b
->
pos
, 
	`mbuf_Àngth
(b), "∑r£dÑ• %"
PRIu64
"Ñes %d "

2258 "ty≥ %d sèã %dÑpo†%d o‡%d", 
r
->
id
,Ñ->
ªsu…
,Ñ->
ty≥
,

2259 
r
->
°©e
,Ñ->
pos
 - 
b
->pos, b->
œ°
 - b->pos);

2262 
îr‹
:

2263 
r
->
ªsu…
 = 
MSG_PARSE_ERROR
;

2264 
r
->
°©e
 = state;

2265 
î∫o
 = 
EINVAL
;

2267 
	`log_hexdump
(
LOG_INFO
, 
b
->
pos
, 
	`mbuf_Àngth
(b), "∑r£d badÑ• %"
PRIu64
" "

2268 "ª†%dÅy≥ %d sèã %d", 
r
->
id
,Ñ->
ªsu…
,Ñ->
ty≥
,

2269 
r
->
°©e
);

2270 
	}
}

2285 
boﬁ


2286 
	$ªdis_Áûuª
(
msg
 *
r
)

2288 
	`ASSERT
(!
r
->
ªque°
);

2290 
r
->
ty≥
) {

2291 
MSG_RSP_REDIS_ERROR_OOM
:

2292 
MSG_RSP_REDIS_ERROR_BUSY
:

2293 
MSG_RSP_REDIS_ERROR_LOADING
:

2294  
åue
;

2300  
Ál£
;

2301 
	}
}

2309 
r°©us_t


2310 
	$ªdis_c›y_bulk
(
msg
 *
d°
, msg *
§c
)

2312 
mbuf
 *mbuf, *
nbuf
;

2313 
uöt8_t
 *
p
;

2314 
uöt32_t
 
Àn
 = 0;

2315 
uöt32_t
 
byãs
 = 0;

2316 
r°©us_t
 
°©us
;

2318 
mbuf
 = 
	`STAILQ_FIRST
(&
§c
->
mhdr
);

2319 
mbuf
 && 
	`mbuf_em±y
(mbuf);

2320 
mbuf
 = 
	`STAILQ_FIRST
(&
§c
->
mhdr
)) {

2322 
	`mbuf_ªmove
(&
§c
->
mhdr
, 
mbuf
);

2323 
	`mbuf_put
(
mbuf
);

2326 
mbuf
 = 
	`STAILQ_FIRST
(&
§c
->
mhdr
);

2327 i‡(
mbuf
 =
NULL
) {

2328  
NC_ERROR
;

2331 
p
 = 
mbuf
->
pos
;

2332 
	`ASSERT
(*
p
 == '$');

2333 
p
++;

2335 i‡(
p
[0] == '-' &&Ö[1] == '1') {

2336 
Àn
 = 1 + 2 + 
CRLF_LEN
;

2337 
p
 = 
mbuf
->
pos
 + 
Àn
;

2339 
Àn
 = 0;

2340 ; 
p
 < 
mbuf
->
œ°
 && 
	`isdigô
(*p);Ö++) {

2341 
Àn
 =Üí * 10 + (
uöt32_t
)(*
p
 - '0');

2343 
Àn
 +
CRLF_LEN
 * 2;

2344 
Àn
 +(
p
 - 
mbuf
->
pos
);

2346 
byãs
 = 
Àn
;

2349 ; 
mbuf
;) {

2350 i‡(
	`mbuf_Àngth
(
mbuf
Ë<
Àn
) {

2351 
nbuf
 = 
	`STAILQ_NEXT
(
mbuf
, 
√xt
);

2352 
	`mbuf_ªmove
(&
§c
->
mhdr
, 
mbuf
);

2353 i‡(
d°
 !
NULL
) {

2354 
	`mbuf_ö£π
(&
d°
->
mhdr
, 
mbuf
);

2356 
Àn
 -
	`mbuf_Àngth
(
mbuf
);

2357 
mbuf
 = 
nbuf
;

2359 i‡(
d°
 !
NULL
) {

2360 
°©us
 = 
	`msg_≠≥nd
(
d°
, 
mbuf
->
pos
, 
Àn
);

2361 i‡(
°©us
 !
NC_OK
) {

2362  
°©us
;

2365 
mbuf
->
pos
 +
Àn
;

2370 i‡(
d°
 !
NULL
) {

2371 
d°
->
mÀn
 +
byãs
;

2373 
§c
->
mÀn
 -
byãs
;

2374 
	`log_debug
(
LOG_VVERB
, "ªdis_c›y_bulk c›y byãs: %d", 
byãs
);

2375  
NC_OK
;

2376 
	}
}

2384 
	$ªdis_¥e_cﬂÀs˚
(
msg
 *
r
)

2386 
msg
 *
¥
 = 
r
->
≥î
;

2387 
mbuf
 *mbuf;

2389 
	`ASSERT
(!
r
->
ªque°
);

2390 
	`ASSERT
(
¥
->
ªque°
);

2392 i‡(
¥
->
‰ag_id
 == 0) {

2396 
¥
->
‰ag_ow√r
->
n‰ag_d⁄e
++;

2398 
r
->
ty≥
) {

2399 
MSG_RSP_REDIS_INTEGER
:

2401 
	`ASSERT
(
¥
->
ty≥
 =
MSG_REQ_REDIS_DEL
);

2403 
mbuf
 = 
	`STAILQ_FIRST
(&
r
->
mhdr
);

2410 
	`ASSERT
(
mbuf
 =
	`STAILQ_LAST
(&
r
->
mhdr
, mbuf, 
√xt
));

2411 
	`ASSERT
(
r
->
mÀn
 =
	`mbuf_Àngth
(
mbuf
));

2413 
r
->
mÀn
 -
	`mbuf_Àngth
(
mbuf
);

2414 
	`mbuf_ªwöd
(
mbuf
);

2417 
¥
->
‰ag_ow√r
->
öãgî
 +
r
->integer;

2420 
MSG_RSP_REDIS_MULTIBULK
:

2422 
	`ASSERT
(
¥
->
ty≥
 =
MSG_REQ_REDIS_MGET
);

2424 
mbuf
 = 
	`STAILQ_FIRST
(&
r
->
mhdr
);

2431 
	`ASSERT
(
r
->
«rg_°¨t
 =
mbuf
->
pos
);

2432 
	`ASSERT
(
r
->
«rg_°¨t
 <Ñ->
«rg_íd
);

2434 
r
->
«rg_íd
 +
CRLF_LEN
;

2435 
r
->
mÀn
 -(
uöt32_t
)‘->
«rg_íd
 -Ñ->
«rg_°¨t
);

2436 
mbuf
->
pos
 = 
r
->
«rg_íd
;

2440 
MSG_RSP_REDIS_STATUS
:

2441 i‡(
¥
->
ty≥
 =
MSG_REQ_REDIS_MSET
) {

2442 
mbuf
 = 
	`STAILQ_FIRST
(&
r
->
mhdr
);

2443 
r
->
mÀn
 -
	`mbuf_Àngth
(
mbuf
);

2444 
	`mbuf_ªwöd
(
mbuf
);

2454 
mbuf
 = 
	`STAILQ_FIRST
(&
r
->
mhdr
);

2455 
	`log_hexdump
(
LOG_ERR
, 
mbuf
->
pos
, 
	`mbuf_Àngth
(mbuf), "rsp fragment "

2456 "wôh unknow¿ty≥ %d", 
r
->
ty≥
);

2457 
¥
->
îr‹
 = 1;

2458 
¥
->
îr
 = 
EINVAL
;

2461 
	}
}

2463 
r°©us_t


2464 
	$ªdis_≠≥nd_key
(
msg
 *
r
, 
uöt8_t
 *
key
, 
uöt32_t
 
keyÀn
)

2466 
uöt32_t
 
Àn
;

2467 
mbuf
 *mbuf;

2468 
uöt8_t
 
¥ötbuf
[32];

2469 
keypos
 *
kpos
;

2472 
Àn
 = (
uöt32_t
)
	`nc_¢¥ötf
(
¥ötbuf
, ’rötbuf), "$%d\r\n", 
keyÀn
);

2473 
mbuf
 = 
	`msg_ísuª_mbuf
(
r
, 
Àn
);

2474 i‡(
mbuf
 =
NULL
) {

2475  
NC_ENOMEM
;

2477 
	`mbuf_c›y
(
mbuf
, 
¥ötbuf
, 
Àn
);

2478 
r
->
mÀn
 +
Àn
;

2481 
mbuf
 = 
	`msg_ísuª_mbuf
(
r
, 
keyÀn
);

2482 i‡(
mbuf
 =
NULL
) {

2483  
NC_ENOMEM
;

2486 
kpos
 = 
	`¨øy_push
(
r
->
keys
);

2487 i‡(
kpos
 =
NULL
) {

2488  
NC_ENOMEM
;

2491 
kpos
->
°¨t
 = 
mbuf
->
œ°
;

2492 
kpos
->
íd
 = 
mbuf
->
œ°
 + 
keyÀn
;

2493 
	`mbuf_c›y
(
mbuf
, 
key
, 
keyÀn
);

2494 
r
->
mÀn
 +
keyÀn
;

2497 
mbuf
 = 
	`msg_ísuª_mbuf
(
r
, 
CRLF_LEN
);

2498 i‡(
mbuf
 =
NULL
) {

2499  
NC_ENOMEM
;

2501 
	`mbuf_c›y
(
mbuf
, (
uöt8_t
 *)
CRLF
, 
CRLF_LEN
);

2502 
r
->
mÀn
 +(
uöt32_t
)
CRLF_LEN
;

2504  
NC_OK
;

2505 
	}
}

2559 
r°©us_t


2560 
	$ªdis_‰agmít_¨gx
(
msg
 *
r
, 
uöt32_t
 
nc⁄töuum
, 
msg_tqh
 *
‰ag_msgq
,

2561 
uöt32_t
 
key_°ï
)

2563 
mbuf
 *mbuf;

2564 
msg
 **
sub_msgs
;

2565 
uöt32_t
 
i
;

2566 
r°©us_t
 
°©us
;

2568 
	`ASSERT
(
	`¨øy_n
(
r
->
keys
Ë=‘->
«rg
 - 1Ë/ 
key_°ï
);

2572 
c⁄n
 *c⁄¿
r
->
ow√r
;

2573 
£rvî_poﬁ
 *
poﬁ
 = 
c⁄n
->
ow√r
;

2574 
nc⁄töuum
 = 
	`¨øy_n
(&
poﬁ
->
sh¨ds
);

2575 i‡(
nc⁄töuum
 == 0) {

2576  
NC_ENOMEM
;

2579 
sub_msgs
 = 
	`nc_zÆloc
(
nc⁄töuum
 * (*sub_msgs));

2580 i‡(
sub_msgs
 =
NULL
) {

2581  
NC_ENOMEM
;

2584 
	`ASSERT
(
r
->
‰ag_£q
 =
NULL
);

2585 
r
->
‰ag_£q
 = 
	`nc_Æloc
(
	`¨øy_n
‘->
keys
) * (*r->frag_seq));

2586 i‡(
r
->
‰ag_£q
 =
NULL
) {

2587 
	`nc_‰ì
(
sub_msgs
);

2588  
NC_ENOMEM
;

2591 
mbuf
 = 
	`STAILQ_FIRST
(&
r
->
mhdr
);

2592 
mbuf
->
pos
 = mbuf->
°¨t
;

2600 
i
 = 0; i < 3; i++) {

2601 ; *(
mbuf
->
pos
) != '\n';) {

2602 
mbuf
->
pos
++;

2604 
mbuf
->
pos
++;

2607 
r
->
‰ag_id
 = 
	`msg_gí_‰ag_id
();

2608 
r
->
n‰ag
 = 0;

2609 
r
->
‰ag_ow√r
 =Ñ;

2611 
i
 = 0; i < 
	`¨øy_n
(
r
->
keys
); i++) {

2612 
msg
 *
sub_msg
;

2613 
keypos
 *
kpos
 = 
	`¨øy_gë
(
r
->
keys
, 
i
);

2614 
uöt32_t
 
idx
 = 
	`msg_backíd_idx
(
r
, 
kpos
->
°¨t
, kpos->
íd
 - kpos->start);

2616 i‡(
sub_msgs
[
idx
] =
NULL
) {

2617 
sub_msgs
[
idx
] = 
	`msg_gë
(
r
->
ow√r
,Ñ->
ªque°
,Ñ->
ªdis
);

2618 i‡(
sub_msgs
[
idx
] =
NULL
) {

2619 
	`nc_‰ì
(
sub_msgs
);

2620  
NC_ENOMEM
;

2623 
r
->
‰ag_£q
[
i
] = 
sub_msg
 = 
sub_msgs
[
idx
];

2625 
sub_msg
->
«rg
++;

2626 
°©us
 = 
	`ªdis_≠≥nd_key
(
sub_msg
, 
kpos
->
°¨t
, kpos->
íd
 - kpos->start);

2627 i‡(
°©us
 !
NC_OK
) {

2628 
	`nc_‰ì
(
sub_msgs
);

2629  
°©us
;

2632 i‡(
key_°ï
 == 1) {

2635 
°©us
 = 
	`ªdis_c›y_bulk
(
NULL
, 
r
);

2636 i‡(
°©us
 !
NC_OK
) {

2637 
	`nc_‰ì
(
sub_msgs
);

2638  
°©us
;

2641 
°©us
 = 
	`ªdis_c›y_bulk
(
sub_msg
, 
r
);

2642 i‡(
°©us
 !
NC_OK
) {

2643 
	`nc_‰ì
(
sub_msgs
);

2644  
°©us
;

2647 
sub_msg
->
«rg
++;

2651 
i
 = 0; i < 
nc⁄töuum
; i++) {

2652 
msg
 *
sub_msg
 = 
sub_msgs
[
i
];

2653 i‡(
sub_msg
 =
NULL
) {

2657 i‡(
r
->
ty≥
 =
MSG_REQ_REDIS_MGET
) {

2658 
°©us
 = 
	`msg_¥ïíd_f‹m©
(
sub_msg
, "*%d\r\n$4\r\nmget\r\n",

2659 
sub_msg
->
«rg
 + 1);

2660 } i‡(
r
->
ty≥
 =
MSG_REQ_REDIS_DEL
) {

2661 
°©us
 = 
	`msg_¥ïíd_f‹m©
(
sub_msg
, "*%d\r\n$3\r\ndel\r\n",

2662 
sub_msg
->
«rg
 + 1);

2663 } i‡(
r
->
ty≥
 =
MSG_REQ_REDIS_MSET
) {

2664 
°©us
 = 
	`msg_¥ïíd_f‹m©
(
sub_msg
, "*%d\r\n$4\r\nmset\r\n",

2665 
sub_msg
->
«rg
 + 1);

2667 
	`NOT_REACHED
();

2669 i‡(
°©us
 !
NC_OK
) {

2670 
	`nc_‰ì
(
sub_msgs
);

2671  
°©us
;

2674 
sub_msg
->
ty≥
 = 
r
->type;

2675 
sub_msg
->
‰ag_id
 = 
r
->frag_id;

2676 
sub_msg
->
‰ag_ow√r
 = 
r
->frag_owner;

2678 
	`TAILQ_INSERT_TAIL
(
‰ag_msgq
, 
sub_msg
, 
m_tqe
);

2679 
r
->
n‰ag
++;

2682 
	`nc_‰ì
(
sub_msgs
);

2683  
NC_OK
;

2684 
	}
}

2686 
r°©us_t


2687 
	$ªdis_‰agmít
(
msg
 *
r
, 
uöt32_t
 
nc⁄töuum
, 
msg_tqh
 *
‰ag_msgq
)

2689 i‡(1 =
	`¨øy_n
(
r
->
keys
)){

2690  
NC_OK
;

2693 
r
->
ty≥
) {

2694 
MSG_REQ_REDIS_MGET
:

2695 
MSG_REQ_REDIS_DEL
:

2696  
	`ªdis_‰agmít_¨gx
(
r
, 
nc⁄töuum
, 
‰ag_msgq
, 1);

2698 
MSG_REQ_REDIS_MSET
:

2699  
	`ªdis_‰agmít_¨gx
(
r
, 
nc⁄töuum
, 
‰ag_msgq
, 2);

2702  
NC_OK
;

2704 
	}
}

2706 
r°©us_t


2707 
	$ªdis_ª∂y
(
msg
 *
r
)

2709 
c⁄n
 *
c_c⁄n
;

2710 
msg
 *
ª•⁄£
 = 
r
->
≥î
;

2711 
buÊí
=0;

2713 
	`ASSERT
(
ª•⁄£
 !
NULL
 &&Ñe•⁄£->
ow√r
 != NULL);

2715 
c_c⁄n
 = 
ª•⁄£
->
ow√r
;

2716 i‡(
r
->
ty≥
 =
MSG_REQ_REDIS_AUTH
) {

2717  
	`ªdis_h™dÀ_auth_ªq
(
r
, 
ª•⁄£
);

2720 i‡(!
	`c⁄n_authítiˇãd
(
c_c⁄n
)) {

2721  
	`msg_≠≥nd
(
ª•⁄£
, 
r•_auth_ªquúed
.
d©a
,Ñ•_auth_ªquúed.
Àn
);

2724 
r
->
ty≥
) {

2725 
MSG_REQ_REDIS_PING
:

2726  
	`msg_≠≥nd
(
ª•⁄£
, 
r•_p⁄g
.
d©a
,Ñ•_p⁄g.
Àn
);

2727 
MSG_REQ_REDIS_HCDGETPROXY
:

2728  
	`msg_≠≥nd
(
ª•⁄£
, 
r•_hcd¥oxy
.
d©a
,Ñ•_hcd¥oxy.
Àn
);

2729 
MSG_REQ_REDIS_HCDSETPROXY
:

2730 
buÊí
 = (
	`STAILQ_FIRST
(&
r
->
mhdr
))->
œ°
-(STAILQ_FIRST(&r->mhdr))->
pos
;

2731 i‡(
	`hcd£t
((
	`STAILQ_FIRST
(&
r
->
mhdr
))->
pos
, 
buÊí
, 
c_c⁄n
->
ow√r
))

2732  
	`msg_≠≥nd
(
ª•⁄£
, 
r•_hcd¥oxy
.
d©a
,Ñ•_hcd¥oxy.
Àn
);

2734  
	`msg_≠≥nd
(
ª•⁄£
, 
r•_hcd¥oxy_îr
.
d©a
,Ñ•_hcd¥oxy_îr.
Àn
);

2737 
	`NOT_REACHED
();

2738  
NC_ERROR
;

2740 
	}
}

2743 
	$ªdis_po°_cﬂÀs˚_m£t
(
msg
 *
ªque°
)

2745 
r°©us_t
 
°©us
;

2746 
msg
 *
ª•⁄£
 = 
ªque°
->
≥î
;

2748 
°©us
 = 
	`msg_≠≥nd
(
ª•⁄£
, 
r•_ok
.
d©a
,Ñ•_ok.
Àn
);

2749 i‡(
°©us
 !
NC_OK
) {

2750 
ª•⁄£
->
îr‹
 = 1;

2751 
ª•⁄£
->
îr
 = 
î∫o
;

2753 
	}
}

2756 
	$ªdis_po°_cﬂÀs˚_dñ
(
msg
 *
ªque°
)

2758 
msg
 *
ª•⁄£
 = 
ªque°
->
≥î
;

2759 
r°©us_t
 
°©us
;

2761 
°©us
 = 
	`msg_¥ïíd_f‹m©
(
ª•⁄£
, ":%d\r\n", 
ªque°
->
öãgî
);

2762 i‡(
°©us
 !
NC_OK
) {

2763 
ª•⁄£
->
îr‹
 = 1;

2764 
ª•⁄£
->
îr
 = 
î∫o
;

2766 
	}
}

2769 
	$ªdis_po°_cﬂÀs˚_mgë
(
msg
 *
ªque°
)

2771 
msg
 *
ª•⁄£
 = 
ªque°
->
≥î
;

2772 
msg
 *
sub_msg
;

2773 
r°©us_t
 
°©us
;

2774 
uöt32_t
 
i
;

2776 
°©us
 = 
	`msg_¥ïíd_f‹m©
(
ª•⁄£
, "*%d\r\n", 
ªque°
->
«rg
 - 1);

2777 i‡(
°©us
 !
NC_OK
) {

2782 
ª•⁄£
->
ow√r
->
îr
 = 1;

2786 
i
 = 0; i < 
	`¨øy_n
(
ªque°
->
keys
); i++) {

2787 
sub_msg
 = 
ªque°
->
‰ag_£q
[
i
]->
≥î
;

2788 i‡(
sub_msg
 =
NULL
) {

2789 
ª•⁄£
->
ow√r
->
îr
 = 1;

2792 
°©us
 = 
	`ªdis_c›y_bulk
(
ª•⁄£
, 
sub_msg
);

2793 i‡(
°©us
 !
NC_OK
) {

2794 
ª•⁄£
->
ow√r
->
îr
 = 1;

2798 
	}
}

2807 
	$ªdis_po°_cﬂÀs˚
(
msg
 *
r
)

2809 
msg
 *
¥
 = 
r
->
≥î
;

2811 
	`ASSERT
(!
¥
->
ªque°
);

2812 
	`ASSERT
(
r
->
ªque°
 && (r->
‰ag_ow√r
 ==Ñ));

2813 i‡(
r
->
îr‹
 ||Ñ->
„º‹
) {

2818 
r
->
ty≥
) {

2819 
MSG_REQ_REDIS_MGET
:

2820  
	`ªdis_po°_cﬂÀs˚_mgë
(
r
);

2822 
MSG_REQ_REDIS_DEL
:

2823  
	`ªdis_po°_cﬂÀs˚_dñ
(
r
);

2825 
MSG_REQ_REDIS_MSET
:

2826  
	`ªdis_po°_cﬂÀs˚_m£t
(
r
);

2829 
	`NOT_REACHED
();

2831 
	}
}

2833 
r°©us_t


2834 
	$ªdis_h™dÀ_auth_ªq
(
msg
 *
ªq
, msg *
r•
)

2836 
c⁄n
 *c⁄¿(c⁄¿*)
r•
->
ow√r
;

2837 
£rvî_poﬁ
 *
poﬁ
;

2838 
keypos
 *
kpos
;

2839 
uöt8_t
 *
key
;

2840 
uöt32_t
 
keyÀn
;

2841 
boﬁ
 
vÆid
;

2843 
	`ASSERT
(
c⁄n
->
˛õ¡
 && !c⁄n->
¥oxy
);

2845 
poﬁ
 = (
£rvî_poﬁ
 *)
c⁄n
->
ow√r
;

2847 i‡(!
poﬁ
->
ªquúe_auth
) {

2852  
	`msg_≠≥nd
(
r•
, 
r•_no_∑ssw‹d
.
d©a
,Ñ•_no_∑ssw‹d.
Àn
);

2855 
kpos
 = 
	`¨øy_gë
(
ªq
->
keys
, 0);

2856 
key
 = 
kpos
->
°¨t
;

2857 
keyÀn
 = (
uöt32_t
)(
kpos
->
íd
 - kpos->
°¨t
);

2858 
vÆid
 = (
keyÀn
 =
poﬁ
->
ªdis_auth
.
Àn
) &&

2859 (
	`memcmp
(
poﬁ
->
ªdis_auth
.
d©a
, 
key
, 
keyÀn
Ë=0Ë? 
åue
 : 
Ál£
;

2860 i‡(
vÆid
) {

2861 
c⁄n
->
authítiˇãd
 = 1;

2862  
	`msg_≠≥nd
(
r•
, 
r•_ok
.
d©a
,Ñ•_ok.
Àn
);

2872 
c⁄n
->
authítiˇãd
 = 0;

2873  
	`msg_≠≥nd
(
r•
, 
r•_övÆid_∑ssw‹d
.
d©a
,Ñ•_övÆid_∑ssw‹d.
Àn
);

2874 
	}
}

2876 
r°©us_t


2877 
	$ªdis_add_auth
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *
c_c⁄n
, c⁄¿*
s_c⁄n
)

2879 
r°©us_t
 
°©us
;

2880 
msg
 *msg;

2881 
£rvî_poﬁ
 *
poﬁ
;

2883 
	`ASSERT
(!
s_c⁄n
->
˛õ¡
 && !s_c⁄n->
¥oxy
);

2884 
	`ASSERT
(!
	`c⁄n_authítiˇãd
(
s_c⁄n
));

2886 
poﬁ
 = 
c_c⁄n
->
ow√r
;

2888 
msg
 = 
	`msg_gë
(
c_c⁄n
, 
åue
, c_c⁄n->
ªdis
);

2889 i‡(
msg
 =
NULL
) {

2890 
c_c⁄n
->
îr
 = 
î∫o
;

2891  
NC_ENOMEM
;

2894 
°©us
 = 
	`msg_¥ïíd_f‹m©
(
msg
, "*2\r\n$4\r\nAUTH\r\n$%d\r\n%s\r\n",

2895 
poﬁ
->
ªdis_auth
.
Àn
,Öoﬁ->ªdis_auth.
d©a
);

2896 i‡(
°©us
 !
NC_OK
) {

2897 
	`msg_put
(
msg
);

2898  
°©us
;

2901 
msg
->
swÆlow
 = 1;

2902 
s_c⁄n
->
	`íqueue_öq
(
˘x
, s_c⁄n, 
msg
);

2903 
s_c⁄n
->
authítiˇãd
 = 1;

2905  
NC_OK
;

2906 
	}
}

2909 
	$ªdis_po°_c⁄√˘
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
£rvî
 *server)

2911 
r°©us_t
 
°©us
;

2912 
£rvî_poﬁ
 *
poﬁ
 = 
£rvî
->
ow√r
;

2913 
msg
 *msg;

2914 
digôs
;

2916 
	`ASSERT
(!
c⁄n
->
˛õ¡
 && c⁄n->
c⁄√˘ed
);

2917 
	`ASSERT
(
c⁄n
->
ªdis
);

2925 i‡(
poﬁ
->
ªdis_db
 <= 0) {

2934 
msg
 = 
	`msg_gë
(
c⁄n
, 
åue
, c⁄n->
ªdis
);

2935 i‡(
msg
 =
NULL
) {

2939 
digôs
 = (
poﬁ
->
ªdis_db
 >10Ë? ()
	`log10
(pool->redis_db) + 1 : 1;

2940 
°©us
 = 
	`msg_¥ïíd_f‹m©
(
msg
, "*2\r\n$6\r\nSELECT\r\n$%d\r\n%d\r\n", 
digôs
, 
poﬁ
->
ªdis_db
);

2941 i‡(
°©us
 !
NC_OK
) {

2942 
	`msg_put
(
msg
);

2945 
msg
->
ty≥
 = 
MSG_REQ_REDIS_SELECT
;

2946 
msg
->
ªsu…
 = 
MSG_PARSE_OK
;

2947 
msg
->
swÆlow
 = 1;

2948 
msg
->
ow√r
 = 
NULL
;

2951 
	`ªq_£rvî_íqueue_imsgq_hód
(
˘x
, 
c⁄n
, 
msg
);

2952 
	`msg_£nd
(
˘x
, 
c⁄n
);

2954 
	`log_debug
(
LOG_NOTICE
, "£¡ 'SELECT %d'Åÿ%†| %s", 
poﬁ
->
ªdis_db
,

2955 
poﬁ
->
«me
.
d©a
, 
£rvî
->name.data);

2956 
	}
}

2959 
	$ªdis_swÆlow_msg
(
c⁄n
 *c⁄n, 
msg
 *
pmsg
, msg *msg)

2961 i‡(
pmsg
 !
NULL
 &&Ömsg->
ty≥
 =
MSG_REQ_REDIS_SELECT
 &&

2962 
msg
 !
NULL
 && 
	`ªdis_îr‹
(msg)) {

2963 
£rvî
* 
c⁄n_£rvî
;

2964 
£rvî_poﬁ
* 
c⁄n_poﬁ
;

2965 
mbuf
* 
r•_buf„r
;

2966 
uöt8_t
 
mesßge
[128];

2967 
size_t
 
c›y_Àn
;

2973 
c⁄n_£rvî
 = (
£rvî
*)
c⁄n
->
ow√r
;

2974 
c⁄n_poﬁ
 = 
c⁄n_£rvî
->
ow√r
;

2975 
r•_buf„r
 = 
	`STAILQ_LAST
(&
msg
->
mhdr
, 
mbuf
, 
√xt
);

2976 
c›y_Àn
 = 
	`MIN
(
	`mbuf_Àngth
(
r•_buf„r
Ë- 3, (
mesßge
) - 1);

2978 
	`nc_mem˝y
(
mesßge
, &
r•_buf„r
->
°¨t
[1], 
c›y_Àn
);

2979 
mesßge
[
c›y_Àn
] = 0;

2981 
	`log_w¨n
("SELECT %d failed on %s | %s: %s",

2982 
c⁄n_poﬁ
->
ªdis_db
, c⁄n_poﬁ->
«me
.
d©a
,

2983 
c⁄n_£rvî
->
«me
.
d©a
, 
mesßge
);

2985 
	}
}

	@src/zkutil.c

1 
	~<zookì≥r/zookì≥r.h
>

4 
	~<±hªad.h
>

5 
	~<°dlib.h
>

6 
	~<°dio.h
>

7 
	~<°rög.h
>

10 
	~<sys/time.h
>

11 
	~<uni°d.h
>

12 
	~<sys/£À˘.h
>

14 
	~<time.h
>

15 
	~<î∫o.h
>

16 
	~<as£π.h
>

18 
	~"zkutû.h
"

21 
	gc⁄√˘ed
 = 0;

22 
	gexpúed
 = 0;

25 c⁄° * 
	$Sèã2Såög
(
°©e
){

26 i‡(
°©e
 == 0)

28 i‡(
°©e
 =
ZOO_CONNECTING_STATE
)

30 i‡(
°©e
 =
ZOO_ASSOCIATING_STATE
)

32 i‡(
°©e
 =
ZOO_CONNECTED_STATE
)

34 i‡(
°©e
 =
ZOO_EXPIRED_SESSION_STATE
)

36 i‡(
°©e
 =
ZOO_AUTH_FAILED_STATE
)

40 
	}
}

43 c⁄° * 
	$Ty≥2Såög
(
ty≥
){

44 i‡(
ty≥
 =
ZOO_CREATED_EVENT
)

46 i‡(
ty≥
 =
ZOO_DELETED_EVENT
)

48 i‡(
ty≥
 =
ZOO_CHANGED_EVENT
)

50 i‡(
ty≥
 =
ZOO_CHILD_EVENT
)

52 i‡(
ty≥
 =
ZOO_SESSION_EVENT
)

54 i‡(
ty≥
 =
ZOO_NOTWATCHING_EVENT
)

58 
	}
}

61 
	$GlobÆW©chî
(
zh™dÀ_t
 *
zh
,

62 
ty≥
,

63 
°©e
,

64 c⁄° *
∑th
,

65 * 
˘x
) {

66 
	`Ârötf
(
°dîr
, "global_watcher:ÉventÅype %s, state = %s",

67 
	`Ty≥2Såög
(
ty≥
), 
	`Sèã2Såög
(
°©e
));

68 i‡(
∑th
 && 
	`°æí
(path) > 0) {

69 
	`Ârötf
(
°dîr
, " f‹Ö©h %s", 
∑th
);

71 
	`Ârötf
(
°dîr
, "\n");

72 i‡(
ty≥
 =
ZOO_SESSION_EVENT
) {

73 i‡(
°©e
 =
ZOO_CONNECTED_STATE
) {

74 
c⁄√˘ed
 = 1;

75 } i‡(
°©e
 =
ZOO_AUTH_FAILED_STATE
) {

76 
	`zookì≥r_˛o£
(
zh
);

77 } i‡(
°©e
 =
ZOO_EXPIRED_SESSION_STATE
) {

78 
c⁄√˘ed
 = 0;

79 
expúed
 = 1;

80 
	`zookì≥r_˛o£
(
zh
);

82 
	`Ârötf
(
°dîr
, "SESSIONÉvent: ignore state: %s\n",

83 
	`Sèã2Såög
(
°©e
));

86 
	`Ârötf
(
°dîr
, "IgnoreÅype %s, state %s\n",

87 
	`Ty≥2Såög
(
ty≥
), 
	`Sèã2Såög
(
°©e
));

89 
	}
}

91 
	$DeÁu…GëCom∂ëi⁄
(
rc
,

92 c⁄° *
vÆue
,

93 
vÆue_Àn
,

94 c⁄° 
Sèt
 *
°©
,

95 c⁄° *
d©a
) {

96 i‡(
d©a
 =
NULL
) {

99 
C⁄ãxtGë
* 
˘x
 = (C⁄ãxtGë*)
d©a
;

100 
˘x
->
rc
 =Ñc;

102 
rc
) {

103 
ZOK
:

104 i‡(
vÆue_Àn
 > 
˘x
->
buf_Àn
 - 1) {

105 
˘x
->
ªt_buf_Àn
 = ctx->
buf_Àn
 - 1;

107 
˘x
->
ªt_buf_Àn
 = 
vÆue_Àn
;

109 
	`mem˝y
(
˘x
->
buf
, 
vÆue
, (
size_t
)˘x->
ªt_buf_Àn
);

110 
˘x
->
buf
[˘x->
ªt_buf_Àn
] = 0;

113 
ZCONNECTIONLOSS
:

114 
ZOPERATIONTIMEOUT
:

115 
	`Ârötf
(
°dîr
, "Get completion:Öath %s:Érror = %d\n",

116 
˘x
->
∑th
, 
rc
);

123 
	`±hªad_muãx_u∆ock
(&
˘x
->
lock
);

124 
	}
}

126 
	$DeÁu…Exi°sW©chî
(
zh™dÀ_t
 *
zkh
,

127 
ty≥
,

128 
°©e
,

129 c⁄° *
∑th
,

130 *
˘x
) {

131 
C⁄ãxtExi°s
* 
˚
 = (C⁄ãxtExi°s*)
˘x
;

133 
	`Ârötf
(
°dîr
, "exists_watcher: gotÉvent %s, state %sátÖath %s, ctx=%p\n",

134 
	`Ty≥2Såög
(
ty≥
), 
	`Sèã2Såög
(
°©e
), 
∑th
, 
˚
);

135 i‡(
ty≥
 =
ZOO_CREATED_EVENT
) {

138 i‡(
ty≥
 =
ZOO_CHANGED_EVENT
) {

141 i‡(
ty≥
 =
ZOO_DELETED_EVENT
) {

144 i‡(
˚
) {

145 
	`ZKSëExi°sW©ch
(
zkh
, (*)
∑th
, 
˚
->
w©chî
, ce->
˘x
);

147 
	`ZKSëExi°sW©ch
(
zkh
, (*)
∑th
, 
DeÁu…Exi°sW©chî
, 
˘x
);

149 
	}
}

152 
	$DeÁu…GëW©chî
(
zh™dÀ_t
 *
zkh
,

153 
ty≥
,

154 
°©e
,

155 c⁄° *
∑th
,

156 *
˘x
) {

157 
C⁄ãxtGë
 *
cg
 = (C⁄ãxtGë*)
˘x
;

158 
	`Ârötf
(
°dîr
, "get_watcher: gotÉvent %s, state %sátÖath %s, ctx=%p\n",

159 
	`Ty≥2Såög
(
ty≥
), 
	`Sèã2Såög
(
°©e
), 
∑th
, 
cg
);

162 i‡(
ty≥
 =
ZOO_CHANGED_EVENT
) {

164 
buf
[4000];

165 
w©ch
 = 0;

166 
sync
 = 1;

167 
	`ZKGë
(
zkh
, 
∑th
, 
buf
, (buf), 
w©ch
, 
sync
);

170 i‡(
cg
) {

171 
	`ZKSëGëW©ch
(
zkh
, (*)
∑th
, 
cg
->
w©chî
, cg->
˘x
);

173 
	`ZKSëGëW©ch
(
zkh
, (*)
∑th
, 
DeÁu…GëW©chî
, 
˘x
);

177 i‡(
ty≥
 =
ZOO_DELETED_EVENT
) {

182 i‡(
ty≥
 =
ZOO_SESSION_EVENT
) {

187 i‡(
ty≥
 =
ZOO_NOTWATCHING_EVENT
) {

193 
	}
}

195 
	$ZKCª©e
(
zh™dÀ_t
 *
zkh
, * 
∑th
, *
vÆue
, 
vÆue_Àn
, 
Êags
) {

196 
rc
 = 
	`zoo_¸óã
(
zkh
,

197 
∑th
,

198 
vÆue
,

199 
vÆue_Àn
,

200 &
ZOO_OPEN_ACL_UNSAFE
,

201 
Êags
,

202 
NULL
,

204 
	`Ârötf
(
°dîr
, "create znode \"%s\",Ñet %d\n",

205 
∑th
, 
rc
);

206  
rc
;

207 
	}
}

209 
	$ZKDñëe
(
zh™dÀ_t
 *
zkh
, * 
∑th
) {

210 
rc
 = 
	`zoo_dñëe
(
zkh
, 
∑th
, -1);

211 
	`Ârötf
(
°dîr
, "delete znode \"%s\",Ñet %d\n",

212 
∑th
, 
rc
);

214  
rc
;

215 
	}
}

217 
	$ZKSë
(
zh™dÀ_t
 *
zkh
, * 
∑th
, *
vÆue
, 
vÆue_Àn
) {

218 
rc
 = 
	`zoo_£t
(
zkh
, 
∑th
, 
vÆue
, 
vÆue_Àn
, -1);

219 
	`Ârötf
(
°dîr
, "Set znode \"%s\" value \"%s\",Ñet %d\n",

220 
∑th
, 
vÆue
, 
rc
);

221  
rc
;

222 
	}
}

229 
	$ZKGë
(
zh™dÀ_t
 *
zkh
,

230 c⁄° *
∑th
,

231 *
buf
,

232 
buf_Àn
,

233 
w©ch
,

234 
sync
) {

236 
Sèt
 
°©
;

237 
C⁄ãxtGë
 
˘x
;

238 
ªt_buf_Àn
;

240 
rc
;

241 i‡(
sync
) {

242 
ªt_buf_Àn
 = 
buf_Àn
;

243 
rc
 = 
	`zoo_gë
(
zkh
, 
∑th
, 
w©ch
, 
buf
, &
ªt_buf_Àn
, &
°©
);

245 
˘x
.
∑th
 = (*)path;

246 
˘x
.
buf
 = buf;

247 
˘x
.
buf_Àn
 = buf_len;

248 
˘x
.
ªt_buf_Àn
 = 0;

249 
˘x
.
w©chî
 = 
DeÁu…GëW©chî
;

250 
˘x
.ctx = &ctx;

252 
	`±hªad_muãx_öô
(&
˘x
.
lock
, 
NULL
);

253 
	`±hªad_muãx_lock
(&
˘x
.
lock
);

255 
rc
 = 
	`zoo_awgë
(
zkh
,

256 
∑th
,

257 
w©ch
 ? 
DeÁu…GëW©chî
 : 
NULL
,

258 
w©ch
 ? &
˘x
: 
NULL
,

259 
DeÁu…GëCom∂ëi⁄
,

260 &
˘x
);

262 
ªt_buf_Àn
 = 
˘x
.ret_buf_len;

264 i‡(
rc
 !
ZOK
) {

268 i‡(
sync
) {

269 
	`Ârötf
(
°dîr
, "ZKGet() sync:Öath %s:Ñet value \"%s\"(%d)\n",

270 
∑th
, 
buf
, 
ªt_buf_Àn
);

272 
	`±hªad_muãx_lock
(&
˘x
.
lock
);

273 
	`Ârötf
(
°dîr
, "ZKGet()ásync:Öath %s:Ñet value \"%s\"(%d)\n",

274 
∑th
, 
buf
, 
˘x
.
ªt_buf_Àn
);

277  
ªt_buf_Àn
;

278 
	}
}

286 
	$ZKSëGëW©ch
(
zh™dÀ_t
 *
zkh
, *
∑th
, 
w©chî_‚
 
w©chî
, * 
˘x
) {

287 
rc
 = 
	`zoo_awgë
(
zkh
,

288 
∑th
,

289 
w©chî
,

290 
˘x
,

291 
DeÁu…GëCom∂ëi⁄
,

292 
NULL
);

293  
rc
;

294 
	}
}

303 
	$ZKSëExi°sW©ch
(
zh™dÀ_t
 *
zkh
, *
∑th
, 
w©chî_‚
 
w©chî
, * 
˘x
) {

304 
Sèt
 
°©
;

305 
rc
 = 
	`zoo_wexi°s
(
zkh
,

306 
∑th
,

307 
w©chî
,

308 
˘x
,

309 &
°©
);

310  
rc
;

311 
	}
}

316 
zh™dÀ_t
* 
	$ZKC⁄√˘
(* 
zk_ho°s
) {

317 i‡(
c⁄√˘ed
) {

318 
	`Ârötf
(
°dîr
, "zk %†Æªady c⁄√˘ed\n", 
zk_ho°s
);

319  
NULL
;

322 
zh™dÀ_t
* 
zkh
 = 
NULL
;

323 
zkh
 = 
	`zookì≥r_öô
(
zk_ho°s
,

324 
GlobÆW©chî
,

326 
NULL
,

330 !
c⁄√˘ed
) {

331 
	`¶ìp
(1);

334  
zkh
;

335 
	}
}

339 
	$ZKClo£
(
zh™dÀ_t
* 
zkh
) {

340 
	`zookì≥r_˛o£
(
zkh
);

341 
c⁄√˘ed
 = 0;

342 
	`Ârötf
(
°dîr
, "have closed zk...\n");

343 
	}
}

349 
	$ZKExi°s
(
zh™dÀ_t
 *
zkh
, * 
∑th
) {

350 
Sèt
 
°©
;

351 
w©ch
 = 0;

352 
rc
 = 
	`zoo_exi°s
(
zkh
, 
∑th
, 
w©ch
, &
°©
);

353 i‡(
rc
 =
ZOK
) {

358 
	}
}

	@src/zkutil.h

1 #i‚de‡
_ZK_UTIL_H_


2 
	#_ZK_UTIL_H_


	)

4 
	~<zookì≥r/zookì≥r.h
>

7 
	~<±hªad.h
>

8 
	~<°dlib.h
>

9 
	~<°dio.h
>

10 
	~<°rög.h
>

13 
	~<sys/time.h
>

14 
	~<uni°d.h
>

15 
	~<sys/£À˘.h
>

17 
	~<time.h
>

18 
	~<î∫o.h
>

19 
	~<as£π.h
>

23 
	sC⁄ãxtGë_s
 {

26 *
	m∑th
;

28 *
	mbuf
;

30 
	mbuf_Àn
;

33 
	mrc
;

35 
	mªt_buf_Àn
;

38 
±hªad_muãx_t
 
	mlock
;

42 
w©chî_‚
 
	mw©chî
;

44 *
	m˘x
;

46 } 
	tC⁄ãxtGë
;

50 
	sC⁄ãxtExi°s_s
 {

52 *
	m∑th
;

55 
w©chî_‚
 
	mw©chî
;

57 *
	m˘x
;

59 } 
	tC⁄ãxtExi°s
;

63 
zh™dÀ_t
* 
ZKC⁄√˘
(* 
zk_ho°s
);

66 
ZKClo£
(
zh™dÀ_t
* 
zkh
);

69 
ZKCª©e
(
zh™dÀ_t
 *
zkh
, * 
∑th
, *
vÆue
, 
vÆue_Àn
, 
Êags
);

72 
ZKGë
(
zh™dÀ_t
 *
zkh
, c⁄° *
∑th
, *
buf
, 
buf_Àn
, 
w©ch
, 
sync
);

75 
ZKSë
(
zh™dÀ_t
 *
zkh
, * 
∑th
, *
vÆue
, 
vÆue_Àn
);

78 
ZKDñëe
(
zh™dÀ_t
 *
zkh
, * 
∑th
);

81 
ZKExi°s
(
zh™dÀ_t
 *
zkh
, * 
∑th
);

84 
ZKSëGëW©ch
(
zh™dÀ_t
 *
zkh
, *
∑th
, 
w©chî_‚
 
w©chî
, * 
˘x
);

87 
ZKSëExi°sW©ch
(
zh™dÀ_t
 *
zkh
, *
∑th
, 
w©chî_‚
 
w©chî
, * 
˘x
);

89 
DeÁu…GëCom∂ëi⁄
(
rc
,

90 c⁄° *
vÆue
,

91 
vÆue_Àn
,

92 c⁄° 
Sèt
 *
°©
,

93 c⁄° *
d©a
);

95 
DeÁu…GëW©chî
(
zh™dÀ_t
 *
zkh
,

96 
ty≥
,

97 
°©e
,

98 c⁄° *
∑th
,

99 *
˘x
);

101 
DeÁu…Exi°sW©chî
(
zh™dÀ_t
 *
zkh
,

102 
ty≥
,

103 
°©e
,

104 c⁄° *
∑th
,

105 *
˘x
);

108 
GlobÆW©chî
(
zh™dÀ_t
 *
zh
,

109 
ty≥
,

110 
°©e
,

111 c⁄° *
∑th
,

112 * 
˘x
);

114 c⁄° * 
Sèã2Såög
(
°©e
);

116 c⁄° * 
Ty≥2Såög
(
ty≥
);

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


120 #unde‡
°©ic_as£π


121 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/execinfo.h

18 #i‚de‡
_EXECINFO_H


19 
	#_EXECINFO_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


27 
	$backåa˚
 (**
__¨øy
, 
__size
Ë
	`__n⁄nuŒ
 ((1));

32 **
	$backåa˚_symbﬁs
 (*c⁄° *
__¨øy
, 
__size
)

33 
__THROW
 
	`__n⁄nuŒ
 ((1));

38 
	$backåa˚_symbﬁs_fd
 (*c⁄° *
__¨øy
, 
__size
, 
__fd
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1));

41 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/huge_vÆ.h
>

33 #ifde‡
__USE_ISOC99


34 
	~<bôs/huge_vÆf.h
>

35 
	~<bôs/huge_vÆl.h
>

38 
	~<bôs/öf.h
>

41 
	~<bôs/«n.h
>

45 
	~<bôs/m©hdef.h
>

52 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

53 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

54 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

56 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

57 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

58 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

59 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

61 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

62 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

63 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

65 
	#_MdoubÀ_
 

	)

66 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

67 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

68 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

69 
	~<bôs/m©hˇŒs.h
>

70 #unde‡
_MdoubÀ_


71 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


72 #unde‡
_MdoubÀ_END_NAMESPACE


73 #unde‡
__MATH_PRECNAME


75 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


81 #i‚de‡
_MÊﬂt_


82 
	#_MÊﬂt_
 

	)

84 
	#_MdoubÀ_
 
_MÊﬂt_


	)

85 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

95 || 
deföed
 
__LDBL_COMPAT


96 #ifde‡
__LDBL_COMPAT


98 #ifde‡
__USE_ISOC99


99 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

100 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

101 #ifde‡
__REDIRECT_NTH


102 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

103 
__∆dbl_√xâow¨df
)

104 
	`__©åibuã__
 ((
__c⁄°__
));

105 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

106 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

107 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

108 (
__x
, 
__y
),

109 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 #unde‡
__MATHDECL_1


114 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

115 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

116 
¨gs
, 
Æüs
)

	)

117 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

118 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

124 #i‚de‡
_Ml⁄g_doubÀ_


125 
	#_Ml⁄g_doubÀ_
 

	)

127 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

128 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

129 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

130 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

131 
	#__MATH_DECLARE_LDOUBLE
 1

	)

132 
	~<bôs/m©hˇŒs.h
>

133 #unde‡
_MdoubÀ_


134 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


135 #unde‡
_MdoubÀ_END_NAMESPACE


136 #unde‡
__MATH_PRECNAME


141 #unde‡
__MATHDECL_1


142 #unde‡
__MATHDECL


143 #unde‡
__MATHCALL


146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


148 
signgam
;

153 #ifde‡
__USE_ISOC99


191 
FP_NAN
 =

192 
	#FP_NAN
 0

	)

193 
FP_NAN
,

194 
FP_INFINITE
 =

195 
	#FP_INFINITE
 1

	)

196 
FP_INFINITE
,

197 
FP_ZERO
 =

198 
	#FP_ZERO
 2

	)

199 
FP_ZERO
,

200 
FP_SUBNORMAL
 =

201 
	#FP_SUBNORMAL
 3

	)

202 
FP_SUBNORMAL
,

203 
FP_NORMAL
 =

204 
	#FP_NORMAL
 4

	)

205 
FP_NORMAL


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
	#Â˛assify
(
x
) \

211 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

213 
	#Â˛assify
(
x
) \

214 ( (
x
) ==  () \

215 ? 
	`__Â˛assifyf
 (
x
) \

216 :  (
x
) ==  () \

217 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

221 #ifde‡
__NO_LONG_DOUBLE_MATH


222 
	#signbô
(
x
) \

223 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

225 
	#signbô
(
x
) \

226 ( (
x
) ==  () \

227 ? 
	`__signbôf
 (
x
) \

228 :  (
x
) ==  () \

229 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

233 #ifde‡
__NO_LONG_DOUBLE_MATH


234 
	#isföôe
(
x
) \

235 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

237 
	#isföôe
(
x
) \

238 ( (
x
) ==  () \

239 ? 
	`__föôef
 (
x
) \

240 :  (
x
) ==  () \

241 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

245 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

249 #ifde‡
__NO_LONG_DOUBLE_MATH


250 
	#i¢™
(
x
) \

251 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

253 
	#i¢™
(
x
) \

254 ( (
x
) ==  () \

255 ? 
	`__i¢™f
 (
x
) \

256 :  (
x
) ==  () \

257 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

261 #ifde‡
__NO_LONG_DOUBLE_MATH


262 
	#isöf
(
x
) \

263 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

265 
	#isöf
(
x
) \

266 ( (
x
) ==  () \

267 ? 
	`__isöff
 (
x
) \

268 :  (
x
) ==  () \

269 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

273 
	#MATH_ERRNO
 1

	)

274 
	#MATH_ERREXCEPT
 2

	)

279 #i‚de‡
__FAST_MATH__


280 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

285 #ifde‡
__USE_GNU


287 #ifde‡
__NO_LONG_DOUBLE_MATH


288 
	#issig«lög
(
x
) \

289 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

291 
	#issig«lög
(
x
) \

292 ( (
x
) ==  () \

293 ? 
	`__issig«lögf
 (
x
) \

294 :  (
x
) ==  () \

295 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

299 #ifdef 
__USE_MISC


303 
_IEEE_
 = -1,

304 
_SVID_
,

305 
_XOPEN_
,

306 
_POSIX_
,

307 
_ISOC_


308 } 
	t_LIB_VERSION_TYPE
;

313 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

317 #ifde‡
__USE_SVID


323 #ifde‡
__˝lu•lus


324 
__ex˚±i⁄


326 
ex˚±i⁄


329 
ty≥
;

330 *
«me
;

331 
¨g1
;

332 
¨g2
;

333 
ªtvÆ
;

334 
	}
};

336 #ifde‡
__˝lu•lus


337 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

339 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

342 
	#X_TLOSS
 1.41484755040568800000e+16

	)

345 
	#DOMAIN
 1

	)

346 
	#SING
 2

	)

347 
	#OVERFLOW
 3

	)

348 
	#UNDERFLOW
 4

	)

349 
	#TLOSS
 5

	)

350 
	#PLOSS
 6

	)

353 
	#HUGE
 3.40282347e+38F

	)

357 #ifde‡
__USE_XOPEN


359 
	#MAXFLOAT
 3.40282347e+38F

	)

366 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


367 
	#M_E
 2.7182818284590452354

	)

368 
	#M_LOG2E
 1.4426950408889634074

	)

369 
	#M_LOG10E
 0.43429448190325182765

	)

370 
	#M_LN2
 0.69314718055994530942

	)

371 
	#M_LN10
 2.30258509299404568402

	)

372 
	#M_PI
 3.14159265358979323846

	)

373 
	#M_PI_2
 1.57079632679489661923

	)

374 
	#M_PI_4
 0.78539816339744830962

	)

375 
	#M_1_PI
 0.31830988618379067154

	)

376 
	#M_2_PI
 0.63661977236758134308

	)

377 
	#M_2_SQRTPI
 1.12837916709551257390

	)

378 
	#M_SQRT2
 1.41421356237309504880

	)

379 
	#M_SQRT1_2
 0.70710678118654752440

	)

385 #ifde‡
__USE_GNU


386 
	#M_El
 2.718281828459045235360287471352662498L

	)

387 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

388 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

389 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

390 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

391 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

392 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

393 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

394 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

395 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

396 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

397 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

398 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

405 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


406 
	#__NO_MATH_INLINES
 1

	)

409 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

416 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

417 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

418 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

419 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

420 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

421 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

425 #ifde‡
__USE_EXTERN_INLINES


426 
	~<bôs/m©hölöe.h
>

431 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

432 
	~<bôs/m©h-föôe.h
>

435 #ifde‡
__USE_ISOC99


439 #i‚de‡
isgª©î


440 
	#isgª©î
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

447 #i‚de‡
isgª©îequÆ


448 
	#isgª©îequÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

455 #i‚de‡
i¶ess


456 
	#i¶ess
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

463 #i‚de‡
i¶es£quÆ


464 
	#i¶es£quÆ
(
x
, 
y
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

467 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

471 #i‚de‡
i¶essgª©î


472 
	#i¶essgª©î
(
x
, 
y
) \

473 (
__exãnsi⁄__
 \

474 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

475 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

479 #i‚de‡
isun‹dîed


480 
	#isun‹dîed
(
u
, 
v
) \

481 (
__exãnsi⁄__
 \

482 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

483 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

488 
	g__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_BSD


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifdef 
__USE_POSIX


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__glibc_ª£rved
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_RAW
 = 255,

89 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

90 
	mIPPROTO_MAX


96 #i‚de‡
__USE_KERNEL_IPV6_DEFS


99 
	mIPPROTO_HOPOPTS
 = 0,

100 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

101 
	mIPPROTO_ROUTING
 = 43,

102 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

103 
	mIPPROTO_FRAGMENT
 = 44,

104 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

105 
	mIPPROTO_ICMPV6
 = 58,

106 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

107 
	mIPPROTO_NONE
 = 59,

108 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

109 
	mIPPROTO_DSTOPTS
 = 60,

110 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

111 
	mIPPROTO_MH
 = 135

112 
	#IPPROTO_MH
 
IPPROTO_MH


	)

117 
uöt16_t
 
	tö_p‹t_t
;

122 
	mIPPORT_ECHO
 = 7,

123 
	mIPPORT_DISCARD
 = 9,

124 
	mIPPORT_SYSTAT
 = 11,

125 
	mIPPORT_DAYTIME
 = 13,

126 
	mIPPORT_NETSTAT
 = 15,

127 
	mIPPORT_FTP
 = 21,

128 
	mIPPORT_TELNET
 = 23,

129 
	mIPPORT_SMTP
 = 25,

130 
	mIPPORT_TIMESERVER
 = 37,

131 
	mIPPORT_NAMESERVER
 = 42,

132 
	mIPPORT_WHOIS
 = 43,

133 
	mIPPORT_MTP
 = 57,

135 
	mIPPORT_TFTP
 = 69,

136 
	mIPPORT_RJE
 = 77,

137 
	mIPPORT_FINGER
 = 79,

138 
	mIPPORT_TTYLINK
 = 87,

139 
	mIPPORT_SUPDUP
 = 95,

142 
	mIPPORT_EXECSERVER
 = 512,

143 
	mIPPORT_LOGINSERVER
 = 513,

144 
	mIPPORT_CMDSERVER
 = 514,

145 
	mIPPORT_EFSSERVER
 = 520,

148 
	mIPPORT_BIFFUDP
 = 512,

149 
	mIPPORT_WHOSERVER
 = 513,

150 
	mIPPORT_ROUTESERVER
 = 520,

153 
	mIPPORT_RESERVED
 = 1024,

156 
	mIPPORT_USERRESERVED
 = 5000

164 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

165 
	#IN_CLASSA_NET
 0xff000000

	)

166 
	#IN_CLASSA_NSHIFT
 24

	)

167 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

168 
	#IN_CLASSA_MAX
 128

	)

170 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

171 
	#IN_CLASSB_NET
 0xffff0000

	)

172 
	#IN_CLASSB_NSHIFT
 16

	)

173 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

174 
	#IN_CLASSB_MAX
 65536

	)

176 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

177 
	#IN_CLASSC_NET
 0xffffff00

	)

178 
	#IN_CLASSC_NSHIFT
 8

	)

179 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

181 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

182 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

184 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

185 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

188 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

190 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

192 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

195 
	#IN_LOOPBACKNET
 127

	)

197 #i‚de‡
INADDR_LOOPBACK


198 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

202 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

203 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

204 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

205 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

207 #i‚de‡
__USE_KERNEL_IPV6_DEFS


209 
	sö6_addr


213 
uöt8_t
 
	m__u6_addr8
[16];

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


215 
uöt16_t
 
	m__u6_addr16
[8];

216 
uöt32_t
 
	m__u6_addr32
[4];

218 } 
	m__ö6_u
;

219 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

220 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


221 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

222 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

227 c⁄° 
ö6_addr
 
ö6addr_™y
;

228 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

229 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

230 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

232 
	#INET_ADDRSTRLEN
 16

	)

233 
	#INET6_ADDRSTRLEN
 46

	)

237 
	ssockaddr_ö


239 
__SOCKADDR_COMMON
 (
sö_
);

240 
ö_p‹t_t
 
	msö_p‹t
;

241 
ö_addr
 
	msö_addr
;

244 
	msö_zîo
[ (
sockaddr
) -

245 
__SOCKADDR_COMMON_SIZE
 -

246  (
ö_p‹t_t
) -

247  (
ö_addr
)];

250 #i‚de‡
__USE_KERNEL_IPV6_DEFS


252 
	ssockaddr_ö6


254 
__SOCKADDR_COMMON
 (
sö6_
);

255 
ö_p‹t_t
 
	msö6_p‹t
;

256 
uöt32_t
 
	msö6_Êowöfo
;

257 
ö6_addr
 
	msö6_addr
;

258 
uöt32_t
 
	msö6_sc›e_id
;

262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


264 
	sù_mªq


267 
ö_addr
 
	mimr_mu…üddr
;

270 
ö_addr
 
	mimr_öãrÁ˚
;

273 
	sù_mªq_sour˚


276 
ö_addr
 
	mimr_mu…üddr
;

279 
ö_addr
 
	mimr_öãrÁ˚
;

282 
ö_addr
 
	mimr_sour˚addr
;

286 #i‚de‡
__USE_KERNEL_IPV6_DEFS


288 
	sùv6_mªq


291 
ö6_addr
 
	mùv6mr_mu…üddr
;

294 
	mùv6mr_öãrÁ˚
;

298 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


300 
	sgroup_ªq


303 
uöt32_t
 
	mgr_öãrÁ˚
;

306 
sockaddr_°‹age
 
	mgr_group
;

309 
	sgroup_sour˚_ªq


312 
uöt32_t
 
	mg§_öãrÁ˚
;

315 
sockaddr_°‹age
 
	mg§_group
;

318 
sockaddr_°‹age
 
	mg§_sour˚
;

323 
	sù_msfûãr


326 
ö_addr
 
	mimsf_mu…üddr
;

329 
ö_addr
 
	mimsf_öãrÁ˚
;

332 
uöt32_t
 
	mimsf_fmode
;

335 
uöt32_t
 
	mimsf_num§c
;

337 
ö_addr
 
	mimsf_¶i°
[1];

340 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

341 -  (
ö_addr
) \

342 + (
num§c
Ë*  (
ö_addr
))

	)

344 
	sgroup_fûãr


347 
uöt32_t
 
	mgf_öãrÁ˚
;

350 
sockaddr_°‹age
 
	mgf_group
;

353 
uöt32_t
 
	mgf_fmode
;

356 
uöt32_t
 
	mgf_num§c
;

358 
sockaddr_°‹age
 
	mgf_¶i°
[1];

361 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

362 -  (
sockaddr_°‹age
) \

363 + ((
num§c
) \

364 *  (
sockaddr_°‹age
)))

	)

374 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

375 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

376 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

382 
	~<ídün.h
>

385 
	~<bôs/byãsw≠.h
>

387 #ifde‡
__OPTIMIZE__


391 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


394 
	#¡ohl
(
x
Ë(x)

	)

395 
	#¡ohs
(
x
Ë(x)

	)

396 
	#ht⁄l
(
x
Ë(x)

	)

397 
	#ht⁄s
(
x
Ë(x)

	)

399 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


400 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

401 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

402 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

408 #ifde‡
__GNUC__


409 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

410 (
__exãnsi⁄__
 \

411 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

412 
__a
->
s6_addr32
[0] == 0 \

413 && 
__a
->
s6_addr32
[1] == 0 \

414 && 
__a
->
s6_addr32
[2] == 0 \

415 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

417 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

418 (
__exãnsi⁄__
 \

419 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

420 
__a
->
s6_addr32
[0] == 0 \

421 && 
__a
->
s6_addr32
[1] == 0 \

422 && 
__a
->
s6_addr32
[2] == 0 \

423 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

425 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

426 (
__exãnsi⁄__
 \

427 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

428 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

430 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

431 (
__exãnsi⁄__
 \

432 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

433 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

435 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

436 (
__exãnsi⁄__
 \

437 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

438 
__a
->
s6_addr32
[0] == 0 \

439 && 
__a
->
s6_addr32
[1] == 0 \

440 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

442 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

443 (
__exãnsi⁄__
 \

444 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

445 
__a
->
s6_addr32
[0] == 0 \

446 && 
__a
->
s6_addr32
[1] == 0 \

447 && 
__a
->
s6_addr32
[2] == 0 \

448 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

450 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

451 (
__exãnsi⁄__
 \

452 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

453 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

454 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

455 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

456 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

457 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

459 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

460 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

461 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

462 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

465 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

466 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

467 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

468 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

471 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

472 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

473 =
	`ht⁄l
 (0x„800000))

	)

475 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

476 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

477 =
	`ht⁄l
 (0x„c00000))

	)

479 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

480 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

481 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

482 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

484 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

485 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

486 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

487 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

488 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

490 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

491 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

492 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

493 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

497 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

499 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


501 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

504 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

505 
__THROW
;

509 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

510 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

511 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

513 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

514 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

515 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

517 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

518 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

519 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

521 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

522 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

523 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

525 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

526 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

527 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

530 #ifde‡
__USE_GNU


531 
cmsghdr
;

534 
	sö6_pktöfo


536 
ö6_addr
 
ùi6_addr
;

537 
ùi6_ifödex
;

541 
	sù6_mtuöfo


543 
sockaddr_ö6
 
ù6m_addr
;

544 
uöt32_t
 
ù6m_mtu
;

549 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

552 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

553 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

554 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

555 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

557 
__mu…x
, 
__∂usy
)

558 
__THROW
 
__©åibuã_dïªˇãd__
;

559 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

560 
uöt8_t
 **
__çåp
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
, 
__ty≥
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

568 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

569 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

570 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

571 **
__d©abuÂ
Ë
__THROW
;

572 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

573 
__THROW
;

574 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

575 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

577 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

578 **
__d©abuÂ
Ë
__THROW
;

579 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

583 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

587 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

588 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

589 
__£gmíts
Ë
__THROW
;

590 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

591 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

592 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

593 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

594 
__THROW
;

600 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

601 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

602 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

603 
__THROW
;

606 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

607 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

608 
uöt32_t
 
__num§c
,

609 c⁄° 
ö_addr
 *
__¶i°
)

610 
__THROW
;

614 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

615 c⁄° 
sockaddr
 *
__group
,

616 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

617 
uöt32_t
 *
__num§c
,

618 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

621 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

622 c⁄° 
sockaddr
 *
__group
,

623 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

624 
uöt32_t
 
__num§c
,

625 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

628 
__END_DECLS


	@/usr/include/netinet/tcp.h

32 #i‚de‡
_NETINET_TCP_H


33 
	#_NETINET_TCP_H
 1

	)

35 
	~<„©uªs.h
>

40 
	#TCP_NODELAY
 1

	)

41 
	#TCP_MAXSEG
 2

	)

42 
	#TCP_CORK
 3

	)

43 
	#TCP_KEEPIDLE
 4

	)

44 
	#TCP_KEEPINTVL
 5

	)

45 
	#TCP_KEEPCNT
 6

	)

46 
	#TCP_SYNCNT
 7

	)

47 
	#TCP_LINGER2
 8

	)

48 
	#TCP_DEFER_ACCEPT
 9

	)

49 
	#TCP_WINDOW_CLAMP
 10

	)

50 
	#TCP_INFO
 11

	)

51 
	#TCP_QUICKACK
 12

	)

52 
	#TCP_CONGESTION
 13

	)

53 
	#TCP_MD5SIG
 14

	)

54 
	#TCP_COOKIE_TRANSACTIONS
 15

	)

55 
	#TCP_THIN_LINEAR_TIMEOUTS
 16

	)

56 
	#TCP_THIN_DUPACK
 17

	)

57 
	#TCP_USER_TIMEOUT
 18

	)

58 
	#TCP_REPAIR
 19

	)

59 
	#TCP_REPAIR_QUEUE
 20

	)

60 
	#TCP_QUEUE_SEQ
 21

	)

61 
	#TCP_REPAIR_OPTIONS
 22

	)

62 
	#TCP_FASTOPEN
 23

	)

63 
	#TCP_TIMESTAMP
 24

	)

65 #ifde‡
__USE_MISC


66 
	~<sys/ty≥s.h
>

67 
	~<sys/sockë.h
>

69 
u_öt32_t
 
	tt˝_£q
;

74 
	st˝hdr


76 
__exãnsi⁄__
 union

80 
u_öt16_t
 
	mth_•‹t
;

81 
u_öt16_t
 
	mth_dp‹t
;

82 
t˝_£q
 
	mth_£q
;

83 
t˝_£q
 
	mth_ack
;

84 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


85 
u_öt8_t
 
	mth_x2
:4;

86 
u_öt8_t
 
	mth_off
:4;

88 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


89 
u_öt8_t
 
	mth_off
:4;

90 
u_öt8_t
 
	mth_x2
:4;

92 
u_öt8_t
 
	mth_Êags
;

93 
	#TH_FIN
 0x01

	)

94 
	#TH_SYN
 0x02

	)

95 
	#TH_RST
 0x04

	)

96 
	#TH_PUSH
 0x08

	)

97 
	#TH_ACK
 0x10

	)

98 
	#TH_URG
 0x20

	)

99 
u_öt16_t
 
	mth_wö
;

100 
u_öt16_t
 
	mth_sum
;

101 
u_öt16_t
 
	mth_uΩ
;

105 
u_öt16_t
 
	msour˚
;

106 
u_öt16_t
 
	mde°
;

107 
u_öt32_t
 
	m£q
;

108 
u_öt32_t
 
	mack_£q
;

109 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


110 
u_öt16_t
 
	mªs1
:4;

111 
u_öt16_t
 
	mdoff
:4;

112 
u_öt16_t
 
	mfö
:1;

113 
u_öt16_t
 
	msyn
:1;

114 
u_öt16_t
 
	mr°
:1;

115 
u_öt16_t
 
	mpsh
:1;

116 
u_öt16_t
 
	mack
:1;

117 
u_öt16_t
 
	murg
:1;

118 
u_öt16_t
 
	mªs2
:2;

119 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


120 
u_öt16_t
 
	mdoff
:4;

121 
u_öt16_t
 
	mªs1
:4;

122 
u_öt16_t
 
	mªs2
:2;

123 
u_öt16_t
 
	murg
:1;

124 
u_öt16_t
 
	mack
:1;

125 
u_öt16_t
 
	mpsh
:1;

126 
u_öt16_t
 
	mr°
:1;

127 
u_öt16_t
 
	msyn
:1;

128 
u_öt16_t
 
	mfö
:1;

132 
u_öt16_t
 
	mwödow
;

133 
u_öt16_t
 
	mcheck
;

134 
u_öt16_t
 
	murg_±r
;

141 
	mTCP_ESTABLISHED
 = 1,

142 
	mTCP_SYN_SENT
,

143 
	mTCP_SYN_RECV
,

144 
	mTCP_FIN_WAIT1
,

145 
	mTCP_FIN_WAIT2
,

146 
	mTCP_TIME_WAIT
,

147 
	mTCP_CLOSE
,

148 
	mTCP_CLOSE_WAIT
,

149 
	mTCP_LAST_ACK
,

150 
	mTCP_LISTEN
,

151 
	mTCP_CLOSING


154 
	#TCPOPT_EOL
 0

	)

155 
	#TCPOPT_NOP
 1

	)

156 
	#TCPOPT_MAXSEG
 2

	)

157 
	#TCPOLEN_MAXSEG
 4

	)

158 
	#TCPOPT_WINDOW
 3

	)

159 
	#TCPOLEN_WINDOW
 3

	)

160 
	#TCPOPT_SACK_PERMITTED
 4

	)

161 
	#TCPOLEN_SACK_PERMITTED
 2

	)

162 
	#TCPOPT_SACK
 5

	)

163 
	#TCPOPT_TIMESTAMP
 8

	)

164 
	#TCPOLEN_TIMESTAMP
 10

	)

165 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

167 
	#TCPOPT_TSTAMP_HDR
 \

168 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

176 
	#TCP_MSS
 512

	)

178 
	#TCP_MAXWIN
 65535

	)

180 
	#TCP_MAX_WINSHIFT
 14

	)

182 
	#SOL_TCP
 6

	)

185 
	#TCPI_OPT_TIMESTAMPS
 1

	)

186 
	#TCPI_OPT_SACK
 2

	)

187 
	#TCPI_OPT_WSCALE
 4

	)

188 
	#TCPI_OPT_ECN
 8

	)

189 
	#TCPI_OPT_ECN_SEEN
 16

	)

190 
	#TCPI_OPT_SYN_DATA
 32

	)

193 
	et˝_ˇ_°©e


195 
	mTCP_CA_O≥n
 = 0,

196 
	mTCP_CA_Dis‹dî
 = 1,

197 
	mTCP_CA_CWR
 = 2,

198 
	mTCP_CA_Recovîy
 = 3,

199 
	mTCP_CA_Loss
 = 4

202 
	st˝_öfo


204 
u_öt8_t
 
	mt˝i_°©e
;

205 
u_öt8_t
 
	mt˝i_ˇ_°©e
;

206 
u_öt8_t
 
	mt˝i_ªå™smôs
;

207 
u_öt8_t
 
	mt˝i_¥obes
;

208 
u_öt8_t
 
	mt˝i_backoff
;

209 
u_öt8_t
 
	mt˝i_›ti⁄s
;

210 
u_öt8_t
 
	mt˝i_¢d_wsˇÀ
 : 4, 
	mt˝i_rcv_wsˇÀ
 : 4;

212 
u_öt32_t
 
	mt˝i_πo
;

213 
u_öt32_t
 
	mt˝i_©o
;

214 
u_öt32_t
 
	mt˝i_¢d_mss
;

215 
u_öt32_t
 
	mt˝i_rcv_mss
;

217 
u_öt32_t
 
	mt˝i_u«cked
;

218 
u_öt32_t
 
	mt˝i_ßcked
;

219 
u_öt32_t
 
	mt˝i_lo°
;

220 
u_öt32_t
 
	mt˝i_ªå™s
;

221 
u_öt32_t
 
	mt˝i_Áckës
;

224 
u_öt32_t
 
	mt˝i_œ°_d©a_£¡
;

225 
u_öt32_t
 
	mt˝i_œ°_ack_£¡
;

226 
u_öt32_t
 
	mt˝i_œ°_d©a_ªcv
;

227 
u_öt32_t
 
	mt˝i_œ°_ack_ªcv
;

230 
u_öt32_t
 
	mt˝i_pmtu
;

231 
u_öt32_t
 
	mt˝i_rcv_s°hªsh
;

232 
u_öt32_t
 
	mt˝i_πt
;

233 
u_öt32_t
 
	mt˝i_πtv¨
;

234 
u_öt32_t
 
	mt˝i_¢d_s°hªsh
;

235 
u_öt32_t
 
	mt˝i_¢d_cwnd
;

236 
u_öt32_t
 
	mt˝i_advmss
;

237 
u_öt32_t
 
	mt˝i_ª‹dîög
;

239 
u_öt32_t
 
	mt˝i_rcv_πt
;

240 
u_öt32_t
 
	mt˝i_rcv_•a˚
;

242 
u_öt32_t
 
	mt˝i_tŸÆ_ªå™s
;

247 
	#TCP_MD5SIG_MAXKEYLEN
 80

	)

249 
	st˝_md5sig


251 
sockaddr_°‹age
 
	mt˝m_addr
;

252 
u_öt16_t
 
	m__t˝m_∑d1
;

253 
u_öt16_t
 
	mt˝m_keyÀn
;

254 
u_öt32_t
 
	m__t˝m_∑d2
;

255 
u_öt8_t
 
	mt˝m_key
[
TCP_MD5SIG_MAXKEYLEN
];

259 
	st˝_ª∑ú_›t


261 
u_öt32_t
 
	m›t_code
;

262 
u_öt32_t
 
	m›t_vÆ
;

268 
	mTCP_NO_QUEUE
,

269 
	mTCP_RECV_QUEUE
,

270 
	mTCP_SEND_QUEUE
,

271 
	mTCP_QUEUES_NR
,

275 
	#TCP_COOKIE_MIN
 8

	)

276 
	#TCP_COOKIE_MAX
 16

	)

277 
	#TCP_COOKIE_PAIR_SIZE
 (2*
TCP_COOKIE_MAX
)

	)

280 
	#TCP_COOKIE_IN_ALWAYS
 (1 << 0Ë

	)

281 
	#TCP_COOKIE_OUT_NEVER
 (1 << 1Ë

	)

285 
	#TCP_S_DATA_IN
 (1 << 2Ë

	)

286 
	#TCP_S_DATA_OUT
 (1 << 3Ë

	)

288 
	#TCP_MSS_DEFAULT
 536U

	)

289 
	#TCP_MSS_DESIRED
 1220U

	)

291 
	st˝_cookõ_å™ß˘i⁄s


293 
u_öt16_t
 
	mt˝˘_Êags
;

294 
u_öt8_t
 
	m__t˝˘_∑d1
;

295 
u_öt8_t
 
	mt˝˘_cookõ_desúed
;

296 
u_öt16_t
 
	mt˝˘_s_d©a_desúed
;

297 
u_öt16_t
 
	mt˝˘_u£d
;

298 
u_öt8_t
 
	mt˝˘_vÆue
[
TCP_MSS_DEFAULT
];

	@/usr/include/poll.h

1 
	~<sys/pﬁl.h
>

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 1

87 
	#__PTHREAD_SPINS
 0, 0

	)

88 #ñi‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 2

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

91 
	#__PTHREAD_SPINS
 0

	)

94 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


95 
	#PTHREAD_MUTEX_INITIALIZER
 \

96 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

97 #ifde‡
__USE_GNU


98 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

101 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

102 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

104 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

109 
	#PTHREAD_MUTEX_INITIALIZER
 \

110 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

111 #ifde‡
__USE_GNU


112 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

113 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

115 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

116 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

117 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


127 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

128 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

129 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

130 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


136 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 #i‡
__WORDSIZE
 == 64

138 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

143 
	#PTHREAD_RWLOCK_INITIALIZER
 \

144 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

145 #ifde‡
__USE_GNU


146 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

149 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

151 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


152 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

153 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

154 0, 0, 0, 0 } }

	)

156 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

157 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

158 0 } }

	)

168 
	mPTHREAD_INHERIT_SCHED
,

169 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

170 
	mPTHREAD_EXPLICIT_SCHED


171 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

178 
	mPTHREAD_SCOPE_SYSTEM
,

179 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

180 
	mPTHREAD_SCOPE_PROCESS


181 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

188 
	mPTHREAD_PROCESS_PRIVATE
,

189 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

190 
	mPTHREAD_PROCESS_SHARED


191 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

197 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

201 
	s_±hªad_˛ónup_buf„r


203 (*
	m__routöe
) (*);

204 *
	m__¨g
;

205 
	m__ˇn˚…y≥
;

206 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

212 
	mPTHREAD_CANCEL_ENABLE
,

213 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

214 
	mPTHREAD_CANCEL_DISABLE


215 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

219 
	mPTHREAD_CANCEL_DEFERRED
,

220 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

221 
	mPTHREAD_CANCEL_ASYNCHRONOUS


222 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

224 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

228 
	#PTHREAD_ONCE_INIT
 0

	)

231 #ifde‡
__USE_XOPEN2K


235 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

239 
__BEGIN_DECLS


244 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

245 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

246 *(*
__°¨t_routöe
) (*),

247 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

253 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

261 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

263 #ifde‡
__USE_GNU


266 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

274 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

275 c⁄° 
time•ec
 *
__ab°ime
);

282 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

286 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

290 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

298 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

301 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 *
__dëach°©e
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

311 
__dëach°©e
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

317 
size_t
 *
__gu¨dsize
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

322 
size_t
 
__gu¨dsize
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

328 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

333 c⁄° 
sched_∑øm
 *
__ª°ri˘


334 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

337 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, *
__ª°ri˘
 
__öhîô
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

352 
__öhîô
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 *
__ª°ri˘
 
__sc›e
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1));

366 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

374 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

375 *
__°ackaddr
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

379 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


380 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

387 
size_t
 
__°acksize
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 #ifde‡
__USE_XOPEN2K


392 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

393 **
__ª°ri˘
 
__°ackaddr
,

394 
size_t
 *
__ª°ri˘
 
__°acksize
)

395 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

400 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

401 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

404 #ifde‡
__USE_GNU


407 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

408 
size_t
 
__˝u£tsize
,

409 c⁄° 
˝u_£t_t
 *
__˝u£t
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

415 
size_t
 
__˝u£tsize
,

416 
˝u_£t_t
 *
__˝u£t
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

420 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1));

425 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1));

431 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

441 c⁄° 
sched_∑øm
 *
__∑øm
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3));

445 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

446 *
__ª°ri˘
 
__pﬁicy
,

447 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

451 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

452 
__THROW
;

455 #ifde‡
__USE_GNU


457 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

458 
size_t
 
__buÊí
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2));

462 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

463 
__THROW
 
	`__n⁄nuŒ
 ((2));

467 #ifde‡
__USE_UNIX98


469 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

472 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

475 #ifde‡
__USE_GNU


480 
	$±hªad_yõld
 (Ë
__THROW
;

485 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

486 c⁄° 
˝u_£t_t
 *
__˝u£t
)

487 
__THROW
 
	`__n⁄nuŒ
 ((3));

490 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

491 
˝u_£t_t
 *
__˝u£t
)

492 
__THROW
 
	`__n⁄nuŒ
 ((3));

505 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

506 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

517 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

521 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

524 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

529 
	`±hªad_ã°ˇn˚l
 ();

538 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

539 
__mask_was_ßved
;

540 } 
__ˇn˚l_jmp_buf
[1];

541 *
__∑d
[4];

542 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

545 #i‚de‡
__˛ónup_f˘_©åibuã


546 
	#__˛ónup_f˘_©åibuã


	)

551 
	s__±hªad_˛ónup_‰ame


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

559 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


560 #ifde‡
__˝lu•lus


562 ˛as†
	c__±hªad_˛ónup_˛ass


564 (*
__ˇn˚l_routöe
) (*);

565 *
__ˇn˚l_¨g
;

566 
__do_ô
;

567 
__ˇn˚l_ty≥
;

569 
public
:

570 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

571 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

572 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

573 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

574 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

575 &
__ˇn˚l_ty≥
); 
	}
}

576 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

586 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

588 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

592 
	#±hªad_˛ónup_p›
(
execuã
) \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

596 #ifde‡
__USE_GNU


600 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

602 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

603 
__˛‰ame
.
	`__de„r
 ()

	)

608 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

609 
__˛‰ame
.
	`__ª°‹e
 (); \

610 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

611 } 0)

	)

618 
__exã∫_ölöe
 

619 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

621 i‡(
__‰ame
->
__do_ô
)

622 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

623 
	}
}

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 };

	)

641 
	#±hªad_˛ónup_p›
(
execuã
) \

642 
__˛‰ame
.
__do_ô
 = (
execuã
); \

643 } 0)

	)

645 #ifde‡
__USE_GNU


649 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

651 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

652 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

653 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

654 .
__do_ô
 = 1 }; \

655 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

656 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

661 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

662 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

663 
__˛‰ame
.
__do_ô
 = (
execuã
); \

664 } 0)

	)

675 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

696 
	#±hªad_˛ónup_p›
(
execuã
) \

699 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

700 i‡(
execuã
) \

701 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

702 } 0)

	)

703 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
;

706 #ifde‡
__USE_GNU


710 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

712 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

713 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

714 *
__ˇn˚l_¨g
 = (
¨g
); \

715 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

716 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

717 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

719 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

720 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

724 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

725 dÿ{

	)

726 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

727 
__˛ónup_f˘_©åibuã
;

732 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

735 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

736 i‡(
execuã
) \

737 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

738 
	}
} 0)

	)

739 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

740 
__˛ónup_f˘_©åibuã
;

744 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

745 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

746 #i‚de‡
SHARED


747 
	`__©åibuã__
 ((
__wók__
))

753 
__jmp_buf_èg
;

754 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

760 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

761 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

765 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

776 #ifde‡
__USE_XOPEN2K


778 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

779 c⁄° 
time•ec
 *
__ª°ri˘


780 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

790 
__ª°ri˘
 
__muãx
,

791 *
__ª°ri˘
 
__¥io˚ûög
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

797 
__¥io˚ûög
,

798 *
__ª°ri˘
 
__ﬁd_˚ûög
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

802 #ifde‡
__USE_XOPEN2K8


804 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_GNU


807 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__psh¨ed
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__psh¨ed
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

835 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


837 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


838 
__©å
, *
__ª°ri˘
 
__köd
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

844 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

845 
__THROW
 
	`__n⁄nuŒ
 ((1));

849 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

850 
__ª°ri˘
 
__©å
,

851 *
__ª°ri˘
 
__¥Ÿocﬁ
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥Ÿocﬁ
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

862 
__ª°ri˘
 
__©å
,

863 *
__ª°ri˘
 
__¥io˚ûög
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__¥io˚ûög
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

871 #ifde‡
__USE_XOPEN2K


873 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

874 *
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

878 *
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

883 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

884 
__robu°√ss
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_GNU


887 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

888 
__robu°√ss
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


899 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

900 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


901 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

904 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1));

908 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

909 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

912 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

915 #ifde‡
__USE_XOPEN2K


917 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 c⁄° 
time•ec
 *
__ª°ri˘


919 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

923 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

924 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

930 #ifde‡
__USE_XOPEN2K


932 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

933 c⁄° 
time•ec
 *
__ª°ri˘


934 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

938 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

939 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

945 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__psh¨ed
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__psh¨ed
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

965 
__ª°ri˘
 
__©å
,

966 *
__ª°ri˘
 
__¥ef
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

970 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

971 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

980 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

981 
__THROW
 
	`__n⁄nuŒ
 ((1));

984 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

989 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

993 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1002 
	`__n⁄nuŒ
 ((1, 2));

1011 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1012 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 3));

1019 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 *
__ª°ri˘
 
__psh¨ed
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1039 
__ª°ri˘
 
__©å
,

1040 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1044 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1045 
__˛ockid_t
 
__˛ock_id
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 #ifde‡
__USE_XOPEN2K


1055 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1064 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1068 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1080 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1081 
__©å
, 
__cou¡
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1090 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1094 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1));

1098 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1103 
__ª°ri˘
 
__©å
,

1104 *
__ª°ri˘
 
__psh¨ed
)

1105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1108 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1109 
__psh¨ed
)

1110 
__THROW
 
	`__n⁄nuŒ
 ((1));

1122 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1123 (*
__de°r_fun˘i⁄
) (*))

1124 
__THROW
 
	`__n⁄nuŒ
 ((1));

1127 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1130 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1133 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1134 c⁄° *
__poöãr
Ë
__THROW
 ;

1137 #ifde‡
__USE_XOPEN2K


1139 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1140 
__˛ockid_t
 *
__˛ock_id
)

1141 
__THROW
 
	`__n⁄nuŒ
 ((2));

1156 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1157 (*
__∑ª¡
) (),

1158 (*
__chûd
Ë()Ë
__THROW
;

1161 #ifde‡
__USE_EXTERN_INLINES


1163 
__exã∫_ölöe
 

1164 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1166  
__thªad1
 =
__thªad2
;

1167 
	}
}

1170 
	g__END_DECLS


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	#__√ed_time_t


	)

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

41 
	~<bôs/sched.h
>

43 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

46 
__BEGIN_DECLS


49 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

50 
__THROW
;

53 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

56 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

57 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

60 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

63 
	$sched_yõld
 (Ë
__THROW
;

66 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

69 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

72 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

75 #ifde‡
__USE_GNU


77 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

78 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

81 
˝u£ç
)

	)

82 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

83 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

86 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

88 
˝u£ç
)

	)

89 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

90 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

93 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

94 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

97 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

103 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

105 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

107 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

110 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

111 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

112 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

116 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

117 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

120 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

121 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

124 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

167 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

169 #ifde‡
__USE_XOPEN


170 #ifde‡
__GNUC__


171 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

174 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

179 #ifde‡
__USE_BSD


186 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

189 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

192 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

195 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 #ifde‡
__USE_MISC


200 
	#NSIG
 
_NSIG


	)

203 #ifde‡
__USE_GNU


204 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

208 #ifde‡
__USE_BSD


209 
__sigh™dÀr_t
 
	tsig_t
;

212 #ifde‡
__USE_POSIX


215 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

224 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

228 
__THROW
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__USE_GNU


232 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

236 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

239 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

240 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

245 
	~<bôs/siga˘i⁄.h
>

248 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

249 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

256 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

259 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

260 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

263 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

270 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 #ifde‡
__USE_POSIX199309


278 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

279 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

286 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

288 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

289 
	`__n⁄nuŒ
 ((1));

293 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

294 
__THROW
;

299 #ifde‡
__USE_BSD


303 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

304 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

307 
	ssigvec


309 
__sigh™dÀr_t
 
sv_h™dÀr
;

310 
sv_mask
;

312 
sv_Êags
;

313 
	#sv_⁄°ack
 
sv_Êags


	)

317 
	#SV_ONSTACK
 (1 << 0)

	)

318 
	#SV_INTERRUPT
 (1 << 1)

	)

319 
	#SV_RESETHAND
 (1 << 2)

	)

327 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

328 
sigvec
 *
__ovec
Ë
__THROW
;

332 
	~<bôs/sigc⁄ãxt.h
>

335 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

340 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


341 
	#__√ed_size_t


	)

342 
	~<°ddef.h
>

347 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

349 
	~<bôs/sig°ack.h
>

350 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


352 
	~<sys/uc⁄ãxt.h
>

358 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

359 
__THROW
 
__©åibuã_dïªˇãd__
;

363 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

364 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

368 #ifde‡
__USE_XOPEN_EXTENDED


372 
	$sighﬁd
 (
__sig
Ë
__THROW
;

375 
	$sigªl£
 (
__sig
Ë
__THROW
;

378 
	$sigign‹e
 (
__sig
Ë
__THROW
;

381 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

384 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


387 
	~<bôs/±hªadty≥s.h
>

388 
	~<bôs/sigthªad.h
>

395 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

397 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

401 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/sys/epoll.h

18 #i‚def 
_SYS_EPOLL_H


19 
	#_SYS_EPOLL_H
 1

	)

21 
	~<°döt.h
>

22 
	~<sys/ty≥s.h
>

25 
	~<bôs/sig£t.h
>

27 #i‚de‡
__sig£t_t_deföed


28 
	#__sig£t_t_deföed


	)

29 
__sig£t_t
 
	tsig£t_t
;

33 
	~<bôs/ïﬁl.h
>

35 #i‚de‡
__EPOLL_PACKED


36 
	#__EPOLL_PACKED


	)

40 
	eEPOLL_EVENTS


42 
	mEPOLLIN
 = 0x001,

43 
	#EPOLLIN
 
EPOLLIN


	)

44 
	mEPOLLPRI
 = 0x002,

45 
	#EPOLLPRI
 
EPOLLPRI


	)

46 
	mEPOLLOUT
 = 0x004,

47 
	#EPOLLOUT
 
EPOLLOUT


	)

48 
	mEPOLLRDNORM
 = 0x040,

49 
	#EPOLLRDNORM
 
EPOLLRDNORM


	)

50 
	mEPOLLRDBAND
 = 0x080,

51 
	#EPOLLRDBAND
 
EPOLLRDBAND


	)

52 
	mEPOLLWRNORM
 = 0x100,

53 
	#EPOLLWRNORM
 
EPOLLWRNORM


	)

54 
	mEPOLLWRBAND
 = 0x200,

55 
	#EPOLLWRBAND
 
EPOLLWRBAND


	)

56 
	mEPOLLMSG
 = 0x400,

57 
	#EPOLLMSG
 
EPOLLMSG


	)

58 
	mEPOLLERR
 = 0x008,

59 
	#EPOLLERR
 
EPOLLERR


	)

60 
	mEPOLLHUP
 = 0x010,

61 
	#EPOLLHUP
 
EPOLLHUP


	)

62 
	mEPOLLRDHUP
 = 0x2000,

63 
	#EPOLLRDHUP
 
EPOLLRDHUP


	)

64 
	mEPOLLWAKEUP
 = 1u << 29,

65 
	#EPOLLWAKEUP
 
EPOLLWAKEUP


	)

66 
	mEPOLLONESHOT
 = 1u << 30,

67 
	#EPOLLONESHOT
 
EPOLLONESHOT


	)

68 
	mEPOLLET
 = 1u << 31

69 
	#EPOLLET
 
EPOLLET


	)

74 
	#EPOLL_CTL_ADD
 1

	)

75 
	#EPOLL_CTL_DEL
 2

	)

76 
	#EPOLL_CTL_MOD
 3

	)

79 
	uïﬁl_d©a


81 *
	m±r
;

82 
	mfd
;

83 
uöt32_t
 
	mu32
;

84 
uöt64_t
 
	mu64
;

85 } 
	tïﬁl_d©a_t
;

87 
	sïﬁl_evít


89 
uöt32_t
 
	mevíts
;

90 
ïﬁl_d©a_t
 
	md©a
;

91 } 
	g__EPOLL_PACKED
;

94 
__BEGIN_DECLS


100 
	$ïﬁl_¸óã
 (
__size
Ë
__THROW
;

104 
	$ïﬁl_¸óã1
 (
__Êags
Ë
__THROW
;

113 
	$ïﬁl_˘l
 (
__ïfd
, 
__›
, 
__fd
,

114 
ïﬁl_evít
 *
__evít
Ë
__THROW
;

127 
	`ïﬁl_waô
 (
__ïfd
, 
ïﬁl_evít
 *
__evíts
,

128 
__maxevíts
, 
__timeout
);

136 
	`ïﬁl_pwaô
 (
__ïfd
, 
ïﬁl_evít
 *
__evíts
,

137 
__maxevíts
, 
__timeout
,

138 c⁄° 
__sig£t_t
 *
__ss
);

140 
__END_DECLS


	@/usr/include/sys/ioctl.h

18 #i‚def 
_SYS_IOCTL_H


19 
	#_SYS_IOCTL_H
 1

	)

21 
	~<„©uªs.h
>

23 
	g__BEGIN_DECLS


26 
	~<bôs/io˘ls.h
>

29 
	~<bôs/io˘l-ty≥s.h
>

36 
	~<sys/âydeÁu…s.h
>

41 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

43 
__END_DECLS


	@/usr/include/sys/resource.h

18 #i‚def 
_SYS_RESOURCE_H


19 
	#_SYS_RESOURCE_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ªsour˚.h
>

26 #i‚de‡
__id_t_deföed


27 
__id_t
 
	tid_t
;

28 
	#__id_t_deföed


	)

31 
	g__BEGIN_DECLS


37 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


38 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

39 
__rußge_who
 
	t__rußge_who_t
;

40 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

42 
	t__æimô_ªsour˚_t
;

43 
	t__rußge_who_t
;

44 
	t__¥i‹ôy_which_t
;

49 #i‚de‡
__USE_FILE_OFFSET64


50 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

51 
æimô
 *
__æimôs
Ë
__THROW
;

53 #ifde‡
__REDIRECT_NTH


54 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

55 
æimô
 *
__æimôs
), 
gëæimô64
);

57 
	#gëæimô
 
gëæimô64


	)

60 #ifde‡
__USE_LARGEFILE64


61 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

62 
æimô64
 *
__æimôs
Ë
__THROW
;

68 #i‚de‡
__USE_FILE_OFFSET64


69 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

70 c⁄° 
æimô
 *
__æimôs
Ë
__THROW
;

72 #ifde‡
__REDIRECT_NTH


73 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

74 c⁄° 
æimô
 *
__æimôs
),

75 
£ålimô64
);

77 
	#£ålimô
 
£ålimô64


	)

80 #ifde‡
__USE_LARGEFILE64


81 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

82 c⁄° 
æimô64
 *
__æimôs
Ë
__THROW
;

87 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

93 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

97 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

98 
__THROW
;

100 
__END_DECLS


	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/socket.h

19 #i‚def 
_SYS_SOCKET_H


20 
	#_SYS_SOCKET_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


26 
	~<sys/uio.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

29 #ifde‡
__USE_GNU


31 
	~<bôs/sig£t.h
>

38 
	~<bôs/sockë.h
>

40 #ifde‡
__USE_BSD


43 
	sosockaddr


45 
	mß_Ámûy
;

46 
	mß_d©a
[14];

54 
	mSHUT_RD
 = 0,

55 
	#SHUT_RD
 
SHUT_RD


	)

56 
	mSHUT_WR
,

57 
	#SHUT_WR
 
SHUT_WR


	)

58 
	mSHUT_RDWR


59 
	#SHUT_RDWR
 
SHUT_RDWR


	)

68 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


69 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

70 
	#__CONST_SOCKADDR_ARG
 c⁄° 
sockaddr
 *

	)

74 
	#__SOCKADDR_ALLTYPES
 \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

89 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

90 uni⁄ { 
	m__SOCKADDR_ALLTYPES


91 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

92 #unde‡
__SOCKADDR_ONETYPE


93 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëc⁄° ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

94 uni⁄ { 
	m__SOCKADDR_ALLTYPES


95 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

96 #unde‡
__SOCKADDR_ONETYPE


99 #ifde‡
__USE_GNU


101 
	smmsghdr


103 
msghdr
 
	mmsg_hdr
;

104 
	mmsg_Àn
;

113 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

119 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

120 
__fds
[2]Ë
__THROW
;

123 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

124 
__THROW
;

127 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

128 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

137 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

141 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

142 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

149 
ssize_t
 
	`£nd
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
, 
__Êags
);

156 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

163 
ssize_t
 
	`£ndto
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

164 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

165 
sockÀn_t
 
__addr_Àn
);

174 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

175 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

176 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

184 
ssize_t
 
	`£ndmsg
 (
__fd
, c⁄° 
msghdr
 *
__mesßge
,

185 
__Êags
);

187 #ifde‡
__USE_GNU


193 
	`£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

194 
__vÀn
, 
__Êags
);

202 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

204 #ifde‡
__USE_GNU


210 
	`ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

211 
__vÀn
, 
__Êags
,

212 c⁄° 
time•ec
 *
__tmo
);

219 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

220 *
__ª°ri˘
 
__›tvÆ
,

221 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

226 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

227 c⁄° *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

233 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

243 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

244 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

246 #ifde‡
__USE_GNU


251 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

252 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

261 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

264 #ifde‡
__USE_XOPEN2K


266 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

270 #ifde‡
__USE_MISC


274 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

279 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


280 
	~<bôs/sockë2.h
>

283 
__END_DECLS


	@/usr/include/sys/stat.h

22 #i‚def 
_SYS_STAT_H


23 
	#_SYS_STAT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

30 || 
deföed
 
	g__USE_ATFILE


31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


32 
	#__√ed_time_t


	)

34 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


35 
	#__√ed_time•ec


	)

37 
	~<time.h
>

40 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


43 #i‚de‡
__dev_t_deföed


44 
__dev_t
 
	tdev_t
;

45 
	#__dev_t_deföed


	)

48 #i‚de‡
__gid_t_deföed


49 
__gid_t
 
	tgid_t
;

50 
	#__gid_t_deföed


	)

53 #i‚de‡
__öo_t_deföed


54 #i‚de‡
__USE_FILE_OFFSET64


55 
__öo_t
 
	töo_t
;

57 
__öo64_t
 
	töo_t
;

59 
	#__öo_t_deföed


	)

62 #i‚de‡
__mode_t_deföed


63 
__mode_t
 
	tmode_t
;

64 
	#__mode_t_deföed


	)

67 #i‚de‡
__∆ök_t_deföed


68 
__∆ök_t
 
	t∆ök_t
;

69 
	#__∆ök_t_deföed


	)

72 #i‚de‡
__off_t_deföed


73 #i‚de‡
__USE_FILE_OFFSET64


74 
__off_t
 
	toff_t
;

76 
__off64_t
 
	toff_t
;

78 
	#__off_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

87 #ifde‡
__USE_UNIX98


88 #i‚de‡
__blk˙t_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__blk˙t_t
 
	tblk˙t_t
;

92 
__blk˙t64_t
 
	tblk˙t_t
;

94 
	#__blk˙t_t_deföed


	)

97 #i‚de‡
__blksize_t_deföed


98 
__blksize_t
 
	tblksize_t
;

99 
	#__blksize_t_deföed


	)

103 
	g__BEGIN_DECLS


105 
	~<bôs/°©.h
>

107 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


108 
	#S_IFMT
 
__S_IFMT


	)

109 
	#S_IFDIR
 
__S_IFDIR


	)

110 
	#S_IFCHR
 
__S_IFCHR


	)

111 
	#S_IFBLK
 
__S_IFBLK


	)

112 
	#S_IFREG
 
__S_IFREG


	)

113 #ifde‡
__S_IFIFO


114 
	#S_IFIFO
 
__S_IFIFO


	)

116 #ifde‡
__S_IFLNK


117 
	#S_IFLNK
 
__S_IFLNK


	)

119 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

120 && 
deföed
 
	g__S_IFSOCK


121 
	#S_IFSOCK
 
__S_IFSOCK


	)

127 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

129 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

130 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

131 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

132 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

133 #ifde‡
__S_IFIFO


134 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

136 #ifde‡
__S_IFLNK


137 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

140 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


141 
	#S_ISLNK
(
mode
Ë0

	)

144 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

145 && 
deföed
 
	g__S_IFSOCK


146 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

147 #ñi‡
deföed
 
__USE_XOPEN2K


148 
	#S_ISSOCK
(
mode
Ë0

	)

155 #ifdef 
__USE_POSIX199309


156 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

157 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

158 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

164 
	#S_ISUID
 
__S_ISUID


	)

165 
	#S_ISGID
 
__S_ISGID


	)

167 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


169 
	#S_ISVTX
 
__S_ISVTX


	)

172 
	#S_IRUSR
 
__S_IREAD


	)

173 
	#S_IWUSR
 
__S_IWRITE


	)

174 
	#S_IXUSR
 
__S_IEXEC


	)

176 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

178 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


179 
	#S_IREAD
 
S_IRUSR


	)

180 
	#S_IWRITE
 
S_IWUSR


	)

181 
	#S_IEXEC
 
S_IXUSR


	)

184 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

185 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

186 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

188 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

190 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

191 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

192 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

194 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

197 #ifdef 
__USE_BSD


199 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

200 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

201 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

203 
	#S_BLKSIZE
 512

	)

207 #i‚de‡
__USE_FILE_OFFSET64


209 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

214 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

216 #ifde‡
__REDIRECT_NTH


217 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

218 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

219 
	`__n⁄nuŒ
 ((1, 2));

220 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

221 
	`__n⁄nuŒ
 ((2));

223 
	#°©
 
°©64


	)

224 
	#f°©
 
f°©64


	)

227 #ifde‡
__USE_LARGEFILE64


228 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

229 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

230 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

233 #ifde‡
__USE_ATFILE


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

239 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

242 #ifde‡
__REDIRECT_NTH


243 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

244 
°©
 *
__ª°ri˘
 
__buf
,

245 
__Êag
),

246 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

248 
	#f°©©
 
f°©©64


	)

252 #ifde‡
__USE_LARGEFILE64


253 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

254 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

255 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

259 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


260 #i‚de‡
__USE_FILE_OFFSET64


263 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

264 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

266 #ifde‡
__REDIRECT_NTH


267 
	`__REDIRECT_NTH
 (
l°©
,

268 (c⁄° *
__ª°ri˘
 
__fûe
,

269 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

270 
	`__n⁄nuŒ
 ((1, 2));

272 
	#l°©
 
l°©64


	)

275 #ifde‡
__USE_LARGEFILE64


276 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

277 
°©64
 *
__ª°ri˘
 
__buf
)

278 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

284 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

285 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 #ifde‡
__USE_BSD


291 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX


297 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

300 #ifde‡
__USE_ATFILE


303 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

304 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

312 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

314 #ifdef 
__USE_GNU


317 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

321 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1));

324 #ifde‡
__USE_ATFILE


328 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

329 
__THROW
 
	`__n⁄nuŒ
 ((2));

335 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


336 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1));

339 #ifde‡
__USE_ATFILE


343 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

344 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

353 #ifde‡
__USE_ATFILE


357 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 #ifde‡
__USE_ATFILE


364 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

365 c⁄° 
time•ec
 
__times
[2],

366 
__Êags
)

367 
__THROW
 
	`__n⁄nuŒ
 ((2));

370 #ifde‡
__USE_XOPEN2K8


372 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

390 #i‚de‡
_STAT_VER


391 
	#_STAT_VER
 0

	)

393 #i‚de‡
_MKNOD_VER


394 
	#_MKNOD_VER
 0

	)

398 #i‚de‡
__USE_FILE_OFFSET64


399 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

400 
__THROW
 
	`__n⁄nuŒ
 ((3));

401 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

402 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

403 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

406 
°©
 *
__°©_buf
, 
__Êag
)

407 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

411 
°©
 *
__°©_buf
), 
__fx°©64
)

412 
	`__n⁄nuŒ
 ((3));

413 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

414 
°©
 *
__°©_buf
), 
__x°©64
)

415 
	`__n⁄nuŒ
 ((2, 3));

416 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

417 
°©
 *
__°©_buf
), 
__lx°©64
)

418 
	`__n⁄nuŒ
 ((2, 3));

419 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

420 c⁄° *
__fûíame
,

421 
°©
 *
__°©_buf
, 
__Êag
),

422 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

425 
	#__fx°©
 
__fx°©64


	)

426 
	#__x°©
 
__x°©64


	)

427 
	#__lx°©
 
__lx°©64


	)

431 #ifde‡
__USE_LARGEFILE64


432 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

433 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

435 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

436 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

439 
°©64
 *
__°©_buf
, 
__Êag
)

440 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

442 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

443 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

446 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

447 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

449 #ifde‡
__USE_EXTERN_INLINES


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/time.h

18 #i‚de‡
_SYS_TIME_H


19 
	#_SYS_TIME_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_time_t


	)

25 
	~<time.h
>

26 
	#__√ed_timevÆ


	)

27 
	~<bôs/time.h
>

29 
	~<sys/£À˘.h
>

31 #i‚de‡
__su£c⁄ds_t_deföed


32 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

33 
	#__su£c⁄ds_t_deföed


	)

37 
	g__BEGIN_DECLS


39 #ifde‡
__USE_GNU


41 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

42 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

43 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

44 }

	)

45 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

46 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

47 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

48 }

	)

52 #ifde‡
__USE_BSD


55 
	stimez⁄e


57 
	mtz_möuãswe°
;

58 
	mtz_d°time
;

61 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

63 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

71 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

72 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

74 #ifde‡
__USE_BSD


77 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

78 c⁄° 
timez⁄e
 *
__tz
)

79 
__THROW
;

85 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

86 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

91 
	e__ôimî_which


94 
ITIMER_REAL
 = 0,

95 
	#ITIMER_REAL
 
ITIMER_REAL


	)

97 
ITIMER_VIRTUAL
 = 1,

98 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

101 
ITIMER_PROF
 = 2

102 
	#ITIMER_PROF
 
ITIMER_PROF


	)

107 
	sôimîvÆ


110 
timevÆ
 
ô_öãrvÆ
;

112 
timevÆ
 
ô_vÆue
;

115 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


118 
__ôimî_which
 
	t__ôimî_which_t
;

120 
	t__ôimî_which_t
;

125 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

126 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

131 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

132 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

133 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

138 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

139 
__THROW
 
	`__n⁄nuŒ
 ((1));

141 #ifde‡
__USE_BSD


143 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

144 
__THROW
 
	`__n⁄nuŒ
 ((1));

147 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

150 #ifde‡
__USE_GNU


154 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

155 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

159 #ifde‡
__USE_BSD


162 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

163 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

164 
	#timîcmp
(
a
, 
b
, 
CMP
) \

165 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

166 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

167 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

168 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

170 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

171 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

172 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

174 ++(
ªsu…
)->
tv_£c
; \

175 (
ªsu…
)->
tv_u£c
 -= 1000000; \

177 
	}
} 0)

	)

178 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

180 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

181 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

182 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

183 --(
ªsu…
)->
tv_£c
; \

184 (
ªsu…
)->
tv_u£c
 += 1000000; \

186 } 0)

	)

189 
	g__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_BSD


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_BSD


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/uio.h

18 #i‚de‡
_SYS_UIO_H


19 
	#_SYS_UIO_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

25 
	g__BEGIN_DECLS


28 
	~<bôs/uio.h
>

39 
ssize_t
 
	$ªadv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

40 
__wur
;

50 
ssize_t
 
	$wrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

51 
__wur
;

54 #ifde‡
__USE_BSD


55 #i‚de‡
__USE_FILE_OFFSET64


65 
ssize_t
 
	$¥ódv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

66 
__off_t
 
__off£t
Ë
__wur
;

77 
ssize_t
 
	$pwrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

78 
__off_t
 
__off£t
Ë
__wur
;

80 #ifde‡
__REDIRECT


81 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

82 
__cou¡
, 
__off64_t
 
__off£t
),

83 
¥ódv64
Ë
__wur
;

84 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

85 
__cou¡
, 
__off64_t
 
__off£t
),

86 
pwrôev64
Ë
__wur
;

88 
	#¥ódv
 
¥ódv64


	)

89 
	#pwrôev
 
pwrôev64


	)

93 #ifde‡
__USE_LARGEFILE64


103 
ssize_t
 
	$¥ódv64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

104 
__off64_t
 
__off£t
Ë
__wur
;

115 
ssize_t
 
	$pwrôev64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

116 
__off64_t
 
__off£t
Ë
__wur
;

120 
__END_DECLS


	@/usr/include/sys/un.h

18 #i‚def 
_SYS_UN_H


19 
	#_SYS_UN_H
 1

	)

21 
	~<sys/cdefs.h
>

24 
	~<bôs/sockaddr.h
>

26 
__BEGIN_DECLS


29 
	ssockaddr_un


31 
__SOCKADDR_COMMON
 (
sun_
);

32 
	msun_∑th
[108];

36 #ifde‡
__USE_MISC


37 
	~<°rög.h
>

40 
	#SUN_LEN
(
±r
Ë((
size_t
Ë(((
sockaddr_un
 *Ë0)->
sun_∑th
) \

41 + 
	`°æí
 ((
±r
)->
sun_∑th
))

	)

44 
	g__END_DECLS


	@/usr/include/sys/utsname.h

22 #i‚def 
_SYS_UTSNAME_H


23 
	#_SYS_UTSNAME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ut¢ame.h
>

31 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


32 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

34 #i‚de‡
_UTSNAME_NODENAME_LENGTH


35 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

37 #i‚de‡
_UTSNAME_RELEASE_LENGTH


38 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

40 #i‚de‡
_UTSNAME_VERSION_LENGTH


41 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

43 #i‚de‡
_UTSNAME_MACHINE_LENGTH


44 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

48 
	sut¢ame


51 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

54 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

57 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

59 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

62 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

64 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

66 #ifde‡
__USE_GNU


67 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

69 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

74 #ifde‡
__USE_SVID


76 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

81 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/zlib.h

31 #i‚de‡
ZLIB_H


32 
	#ZLIB_H


	)

34 
	~"zc⁄f.h
"

36 #ifde‡
__˝lu•lus


40 
	#ZLIB_VERSION
 "1.2.8"

	)

41 
	#ZLIB_VERNUM
 0x1280

	)

42 
	#ZLIB_VER_MAJOR
 1

	)

43 
	#ZLIB_VER_MINOR
 2

	)

44 
	#ZLIB_VER_REVISION
 8

	)

45 
	#ZLIB_VER_SUBREVISION
 0

	)

80 
voidpf
 (*
	tÆloc_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, 
	tuI¡
 
	tôems
, uI¡ 
	tsize
));

81 (*
‰ì_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, voidp‡
	taddªss
));

83 
öã∫Æ_°©e
;

85 
	sz_°ªam_s
 {

86 
z_c⁄°
 
Byãf
 *
√xt_ö
;

87 
uI¡
 
avaû_ö
;

88 
uL⁄g
 
tŸÆ_ö
;

90 
Byãf
 *
√xt_out
;

91 
uI¡
 
avaû_out
;

92 
uL⁄g
 
tŸÆ_out
;

94 
z_c⁄°
 *
msg
;

95 
öã∫Æ_°©e
 
FAR
 *
°©e
;

97 
Æloc_func
 
zÆloc
;

98 
‰ì_func
 
z‰ì
;

99 
voidpf
 
›aque
;

101 
d©a_ty≥
;

102 
uL⁄g
 
adÀr
;

103 
uL⁄g
 
ª£rved
;

104 } 
	tz_°ªam
;

106 
z_°ªam
 
	tFAR
 *
	tz_°ªamp
;

112 
	sgz_hódî_s
 {

113 
ãxt
;

114 
uL⁄g
 
time
;

115 
xÊags
;

116 
os
;

117 
Byãf
 *
exåa
;

118 
uI¡
 
exåa_Àn
;

119 
uI¡
 
exåa_max
;

120 
Byãf
 *
«me
;

121 
uI¡
 
«me_max
;

122 
Byãf
 *
commít
;

123 
uI¡
 
comm_max
;

124 
h¸c
;

125 
d⁄e
;

127 } 
	tgz_hódî
;

129 
gz_hódî
 
	tFAR
 *
	tgz_hódîp
;

164 
	#Z_NO_FLUSH
 0

	)

165 
	#Z_PARTIAL_FLUSH
 1

	)

166 
	#Z_SYNC_FLUSH
 2

	)

167 
	#Z_FULL_FLUSH
 3

	)

168 
	#Z_FINISH
 4

	)

169 
	#Z_BLOCK
 5

	)

170 
	#Z_TREES
 6

	)

173 
	#Z_OK
 0

	)

174 
	#Z_STREAM_END
 1

	)

175 
	#Z_NEED_DICT
 2

	)

176 
	#Z_ERRNO
 (-1)

	)

177 
	#Z_STREAM_ERROR
 (-2)

	)

178 
	#Z_DATA_ERROR
 (-3)

	)

179 
	#Z_MEM_ERROR
 (-4)

	)

180 
	#Z_BUF_ERROR
 (-5)

	)

181 
	#Z_VERSION_ERROR
 (-6)

	)

186 
	#Z_NO_COMPRESSION
 0

	)

187 
	#Z_BEST_SPEED
 1

	)

188 
	#Z_BEST_COMPRESSION
 9

	)

189 
	#Z_DEFAULT_COMPRESSION
 (-1)

	)

192 
	#Z_FILTERED
 1

	)

193 
	#Z_HUFFMAN_ONLY
 2

	)

194 
	#Z_RLE
 3

	)

195 
	#Z_FIXED
 4

	)

196 
	#Z_DEFAULT_STRATEGY
 0

	)

199 
	#Z_BINARY
 0

	)

200 
	#Z_TEXT
 1

	)

201 
	#Z_ASCII
 
Z_TEXT


	)

202 
	#Z_UNKNOWN
 2

	)

205 
	#Z_DEFLATED
 8

	)

208 
	#Z_NULL
 0

	)

210 
	#zlib_vîsi⁄
 
	`zlibVîsi⁄
()

	)

216 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zlibVîsi⁄
 
OF
(());

246 
ZEXTERN
 
ZEXPORT
 
deÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

353 
ZEXTERN
 
ZEXPORT
 
deÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

392 
ZEXTERN
 
ZEXPORT
 
öÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

508 
ZEXTERN
 
ZEXPORT
 
öÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

587 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

588 c⁄° 
Byãf
 *
di˘i⁄¨y
,

589 
uI¡
 
di˘Lígth
));

631 
ZEXTERN
 
ZEXPORT
 
deÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

632 
z_°ªamp
 
sour˚
));

649 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

660 
ZEXTERN
 
ZEXPORT
 
deÊ©eP¨ams
 
OF
((
z_°ªamp
 
°rm
,

661 
Àvñ
,

662 
°øãgy
));

681 
ZEXTERN
 
ZEXPORT
 
deÊ©eTu√
 
OF
((
z_°ªamp
 
°rm
,

682 
good_Àngth
,

683 
max_œzy
,

684 
ni˚_Àngth
,

685 
max_chaö
));

698 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
deÊ©eBound
 
OF
((
z_°ªamp
 
°rm
,

699 
uL⁄g
 
sour˚Lí
));

713 
ZEXTERN
 
ZEXPORT
 
deÊ©ePídög
 
OF
((
z_°ªamp
 
°rm
,

714 *
≥ndög
,

715 *
bôs
));

728 
ZEXTERN
 
ZEXPORT
 
deÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

729 
bôs
,

730 
vÆue
));

745 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëHódî
 
OF
((
z_°ªamp
 
°rm
,

746 
gz_hódîp
 
hód
));

819 
ZEXTERN
 
ZEXPORT
 
öÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

820 c⁄° 
Byãf
 *
di˘i⁄¨y
,

821 
uI¡
 
di˘Lígth
));

842 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

843 
Byãf
 *
di˘i⁄¨y
,

844 
uI¡
 *
di˘Lígth
));

857 
ZEXTERN
 
ZEXPORT
 
öÊ©eSync
 
OF
((
z_°ªamp
 
°rm
));

876 
ZEXTERN
 
ZEXPORT
 
öÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

877 
z_°ªamp
 
sour˚
));

892 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

902 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t2
 
OF
((
z_°ªamp
 
°rm
,

903 
wödowBôs
));

914 
ZEXTERN
 
ZEXPORT
 
öÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

915 
bôs
,

916 
vÆue
));

935 
ZEXTERN
 
ZEXPORT
 
öÊ©eM¨k
 
OF
((
z_°ªamp
 
°rm
));

963 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëHódî
 
OF
((
z_°ªamp
 
°rm
,

964 
gz_hódîp
 
hód
));

1025 (*
ö_func
Ë
	tOF
((
	tFAR
 *,

1026 
	tz_c⁄°
 
	tFAR
 * FAR *));

1027 (*
out_func
Ë
	tOF
((
	tFAR
 *, FAR *, ));

1029 
ZEXTERN
 
ZEXPORT
 
öÊ©eBack
 
OF
((
z_°ªamp
 
°rm
,

1030 
ö_func
 
ö
, 
FAR
 *
ö_desc
,

1031 
out_func
 
out
, 
FAR
 *
out_desc
));

1099 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackEnd
 
OF
((
z_°ªamp
 
°rm
));

1107 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
zlibCompûeFœgs
 
OF
(());

1148 #i‚de‡
Z_SOLO


1160 
ZEXTERN
 
ZEXPORT
 
com¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1161 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1174 
ZEXTERN
 
ZEXPORT
 
com¥ess2
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1175 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
,

1176 
Àvñ
));

1190 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
com¥essBound
 
OF
((uL⁄g 
sour˚Lí
));

1197 
ZEXTERN
 
ZEXPORT
 
uncom¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1198 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1224 
gzFûe_s
 *
	tgzFûe
;

1264 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gzd›í
 
OF
((
fd
, c⁄° *
mode
));

1287 
ZEXTERN
 
ZEXPORT
 
gzbuf„r
 
OF
((
gzFûe
 
fûe
, 
size
));

1304 
ZEXTERN
 
ZEXPORT
 
gz£ç¨ams
 
OF
((
gzFûe
 
fûe
, 
Àvñ
, 
°øãgy
));

1313 
ZEXTERN
 
ZEXPORT
 
gzªad
 
OF
((
gzFûe
 
fûe
, 
voidp
 
buf
, 
Àn
));

1341 
ZEXTERN
 
ZEXPORT
 
gzwrôe
 
OF
((
gzFûe
 
fûe
,

1342 
voidpc
 
buf
, 
Àn
));

1349 
ZEXTERN
 
ZEXPORTVA
 
gz¥ötf
 
Z_ARG
((
gzFûe
 
fûe
, c⁄° *
f‹m©
, ...));

1364 
ZEXTERN
 
ZEXPORT
 
gzputs
 
OF
((
gzFûe
 
fûe
, c⁄° *
s
));

1372 
ZEXTERN
 * 
ZEXPORT
 
gzgës
 
OF
((
gzFûe
 
fûe
, *
buf
, 
Àn
));

1385 
ZEXTERN
 
ZEXPORT
 
gzputc
 
OF
((
gzFûe
 
fûe
, 
c
));

1391 
ZEXTERN
 
ZEXPORT
 
gzgëc
 
OF
((
gzFûe
 
fûe
));

1400 
ZEXTERN
 
ZEXPORT
 
gzungëc
 
OF
((
c
, 
gzFûe
 
fûe
));

1412 
ZEXTERN
 
ZEXPORT
 
gzÊush
 
OF
((
gzFûe
 
fûe
, 
Êush
));

1447 
ZEXTERN
 
ZEXPORT
 
gzªwöd
 
OF
((
gzFûe
 
fûe
));

1475 
ZEXTERN
 
ZEXPORT
 
gzeof
 
OF
((
gzFûe
 
fûe
));

1490 
ZEXTERN
 
ZEXPORT
 
gzdúe˘
 
OF
((
gzFûe
 
fûe
));

1511 
ZEXTERN
 
ZEXPORT
 
gz˛o£
 
OF
((
gzFûe
 
fûe
));

1524 
ZEXTERN
 
ZEXPORT
 
gz˛o£_r
 
OF
((
gzFûe
 
fûe
));

1525 
ZEXTERN
 
ZEXPORT
 
gz˛o£_w
 
OF
((
gzFûe
 
fûe
));

1536 
ZEXTERN
 c⁄° * 
ZEXPORT
 
gzîr‹
 
OF
((
gzFûe
 
fûe
, *
î∫um
));

1552 
ZEXTERN
 
ZEXPORT
 
gz˛óªº
 
OF
((
gzFûe
 
fûe
));

1569 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32
 
OF
((uL⁄g 
adÀr
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1600 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32
 
OF
((uL⁄g 
¸c
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1633 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
,

1634 c⁄° *
vîsi⁄
, 
°ªam_size
));

1635 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
,

1636 c⁄° *
vîsi⁄
, 
°ªam_size
));

1637 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
, 
mëhod
,

1638 
wödowBôs
, 
memLevñ
,

1639 
°øãgy
, c⁄° *
vîsi⁄
,

1640 
°ªam_size
));

1641 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1642 c⁄° *
vîsi⁄
, 
°ªam_size
));

1643 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackInô_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1644 
FAR
 *
wödow
,

1645 c⁄° *
vîsi⁄
,

1646 
°ªam_size
));

1647 
	#deÊ©eInô
(
°rm
, 
Àvñ
) \

1648 
	`deÊ©eInô_
((
°rm
), (
Àvñ
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1649 
	#öÊ©eInô
(
°rm
) \

1650 
	`öÊ©eInô_
((
°rm
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1651 
	#deÊ©eInô2
(
°rm
, 
Àvñ
, 
mëhod
, 
wödowBôs
, 
memLevñ
, 
°øãgy
) \

1652 
	`deÊ©eInô2_
((
°rm
),(
Àvñ
),(
mëhod
),(
wödowBôs
),(
memLevñ
),\

1653 (
°øãgy
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1654 
	#öÊ©eInô2
(
°rm
, 
wödowBôs
) \

1655 
	`öÊ©eInô2_
((
°rm
), (
wödowBôs
), 
ZLIB_VERSION
, \

1656 ()(
z_°ªam
))

	)

1657 
	#öÊ©eBackInô
(
°rm
, 
wödowBôs
, 
wödow
) \

1658 
	`öÊ©eBackInô_
((
°rm
), (
wödowBôs
), (
wödow
), \

1659 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1661 #i‚de‡
Z_SOLO


1670 
	sgzFûe_s
 {

1671 
have
;

1672 *
√xt
;

1673 
z_off64_t
 
pos
;

1675 
ZEXTERN
 
ZEXPORT
 
gzgëc_
 
OF
((
gzFûe
 
fûe
));

1676 #ifde‡
Z_PREFIX_SET


1677 #unde‡
z_gzgëc


1678 
	#z_gzgëc
(
g
) \

1679 ((
g
)->
have
 ? ((g)->have--, (g)->
pos
++, *((g)->
√xt
)++Ë: 
	`gzgëc
(g))

	)

1681 
	#gzgëc
(
g
) \

1682 ((
g
)->
have
 ? ((g)->have--, (g)->
pos
++, *((g)->
√xt
)++Ë: 
	`gzgëc
(g))

	)

1691 #ifde‡
Z_LARGE64


1692 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1693 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off64_t, ));

1694 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1695 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1696 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1697 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1700 #i‡!
deföed
(
ZLIB_INTERNAL
Ë&& deföed(
Z_WANT64
)

1701 #ifde‡
Z_PREFIX_SET


1702 
	#z_gz›í
 
z_gz›í64


	)

1703 
	#z_gz£ek
 
z_gz£ek64


	)

1704 
	#z_gzãŒ
 
z_gzãŒ64


	)

1705 
	#z_gzoff£t
 
z_gzoff£t64


	)

1706 
	#z_adÀr32_comböe
 
z_adÀr32_comböe64


	)

1707 
	#z_¸c32_comböe
 
z_¸c32_comböe64


	)

1709 
	#gz›í
 
gz›í64


	)

1710 
	#gz£ek
 
gz£ek64


	)

1711 
	#gzãŒ
 
gzãŒ64


	)

1712 
	#gzoff£t
 
gzoff£t64


	)

1713 
	#adÀr32_comböe
 
adÀr32_comböe64


	)

1714 
	#¸c32_comböe
 
¸c32_comböe64


	)

1716 #i‚de‡
Z_LARGE64


1717 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1718 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off_t, ));

1719 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1720 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1721 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1722 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1725 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í
 
OF
((const *, const *));

1726 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek
 
OF
((
gzFûe
, z_off_t, ));

1727 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ
 
OF
((
gzFûe
));

1728 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t
 
OF
((
gzFûe
));

1729 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1730 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1735 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1736 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1741 #i‡!
deföed
(
ZUTIL_H
Ë&& !deföed(
NO_DUMMY_DECL
)

1742 
	söã∫Æ_°©e
 {
dummy
;};

1746 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zEº‹
 
OF
(());

1747 
ZEXTERN
 
ZEXPORT
 
öÊ©eSyncPoöt
 
OF
((
z_°ªamp
));

1748 
ZEXTERN
 c⁄° 
z_¸c_t
 
FAR
 * 
ZEXPORT
 
gë_¸c_èbÀ
 
OF
(());

1749 
ZEXTERN
 
ZEXPORT
 
öÊ©eUndîmöe
 
OF
((
z_°ªamp
, ));

1750 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£tKìp
 
OF
((
z_°ªamp
));

1751 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£tKìp
 
OF
((
z_°ªamp
));

1752 #i‡
deföed
(
_WIN32
Ë&& !deföed(
Z_SOLO
)

1753 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í_w
 
OF
((c⁄° 
wch¨_t
 *
∑th
,

1754 c⁄° *
mode
));

1756 #i‡
deföed
(
STDC
Ë|| deföed(
Z_HAVE_STDARG_H
)

1757 #i‚de‡
Z_SOLO


1758 
ZEXTERN
 
ZEXPORTVA
 
gzv¥ötf
 
Z_ARG
((
gzFûe
 
fûe
,

1759 c⁄° *
f‹m©
,

1760 
va_li°
 
va
));

1764 #ifde‡
__˝lu•lus


	@/usr/include/zookeeper/zookeeper.h

19 #i‚de‡
ZOOKEEPER_H_


20 
	#ZOOKEEPER_H_


	)

22 
	~<°dlib.h
>

23 #i‚de‡
WIN32


24 
	~<sys/sockë.h
>

25 
	~<sys/time.h
>

27 
	~"wöc⁄fig.h
"

29 
	~<°dio.h
>

30 
	~<˘y≥.h
>

32 
	~"¥Ÿo.h
"

33 
	~"zookì≥r_vîsi⁄.h
"

34 
	~"ªc‹dio.h
"

35 
	~"zookì≥r.juã.h
"

68 #ifde‡
DLL_EXPORT


69 
	#ZOOAPI
 
	`__de˛•ec
(
dŒexp‹t
)

	)

71 #i‡(
deföed
(
__CYGWIN__
Ë|| deföed(
WIN32
)Ë&& !deföed(
USE_STATIC_LIB
)

72 
	#ZOOAPI
 
	`__de˛•ec
(
dŒimp‹t
)

	)

74 
	#ZOOAPI


	)

80 
	eZOO_ERRORS
 {

81 
	mZOK
 = 0,

87 
	mZSYSTEMERROR
 = -1,

88 
	mZRUNTIMEINCONSISTENCY
 = -2,

89 
	mZDATAINCONSISTENCY
 = -3,

90 
	mZCONNECTIONLOSS
 = -4,

91 
	mZMARSHALLINGERROR
 = -5,

92 
	mZUNIMPLEMENTED
 = -6,

93 
	mZOPERATIONTIMEOUT
 = -7,

94 
	mZBADARGUMENTS
 = -8,

95 
	mZINVALIDSTATE
 = -9,

103 
	mZAPIERROR
 = -100,

104 
	mZNONODE
 = -101,

105 
	mZNOAUTH
 = -102,

106 
	mZBADVERSION
 = -103,

107 
	mZNOCHILDRENFOREPHEMERALS
 = -108,

108 
	mZNODEEXISTS
 = -110,

109 
	mZNOTEMPTY
 = -111,

110 
	mZSESSIONEXPIRED
 = -112,

111 
	mZINVALIDCALLBACK
 = -113,

112 
	mZINVALIDACL
 = -114,

113 
	mZAUTHFAILED
 = -115,

114 
	mZCLOSING
 = -116,

115 
	mZNOTHING
 = -117,

116 
	mZSESSIONMOVED
 = -118

119 #ifde‡
__˝lu•lus


126 íum {
ZOO_LOG_LEVEL_ERROR
=1,
ZOO_LOG_LEVEL_WARN
=2,
ZOO_LOG_LEVEL_INFO
=3,
ZOO_LOG_LEVEL_DEBUG
=4} 
	tZooLogLevñ
;

131 
ZOOAPI
 c⁄° 
ZOO_PERM_READ
;

132 
ZOOAPI
 c⁄° 
ZOO_PERM_WRITE
;

133 
ZOOAPI
 c⁄° 
ZOO_PERM_CREATE
;

134 
ZOOAPI
 c⁄° 
ZOO_PERM_DELETE
;

135 
ZOOAPI
 c⁄° 
ZOO_PERM_ADMIN
;

136 
ZOOAPI
 c⁄° 
ZOO_PERM_ALL
;

139 
ZOOAPI
 
Id
 
ZOO_ANYONE_ID_UNSAFE
;

143 
ZOOAPI
 
Id
 
ZOO_AUTH_IDS
;

146 
ZOOAPI
 
ACL_ve˘‹
 
ZOO_OPEN_ACL_UNSAFE
;

148 
ZOOAPI
 
ACL_ve˘‹
 
ZOO_READ_ACL_UNSAFE
;

150 
ZOOAPI
 
ACL_ve˘‹
 
ZOO_CREATOR_ALL_ACL
;

161 
ZOOAPI
 c⁄° 
ZOOKEEPER_WRITE
;

162 
ZOOAPI
 c⁄° 
ZOOKEEPER_READ
;

172 
ZOOAPI
 c⁄° 
ZOO_EPHEMERAL
;

173 
ZOOAPI
 c⁄° 
ZOO_SEQUENCE
;

182 
ZOOAPI
 c⁄° 
ZOO_EXPIRED_SESSION_STATE
;

183 
ZOOAPI
 c⁄° 
ZOO_AUTH_FAILED_STATE
;

184 
ZOOAPI
 c⁄° 
ZOO_CONNECTING_STATE
;

185 
ZOOAPI
 c⁄° 
ZOO_ASSOCIATING_STATE
;

186 
ZOOAPI
 c⁄° 
ZOO_CONNECTED_STATE
;

201 
ZOOAPI
 c⁄° 
ZOO_CREATED_EVENT
;

208 
ZOOAPI
 c⁄° 
ZOO_DELETED_EVENT
;

215 
ZOOAPI
 c⁄° 
ZOO_CHANGED_EVENT
;

222 
ZOOAPI
 c⁄° 
ZOO_CHILD_EVENT
;

228 
ZOOAPI
 c⁄° 
ZOO_SESSION_EVENT
;

236 
ZOOAPI
 c⁄° 
ZOO_NOTWATCHING_EVENT
;

246 
_zh™dÀ
 
	tzh™dÀ_t
;

256 
öt64_t
 
	g˛õ¡_id
;

257 
	g∑sswd
[16];

258 } 
	t˛õ¡id_t
;

269 
	szoo_›
 {

270 
	gty≥
;

274 c⁄° *
	g∑th
;

275 c⁄° *
	gd©a
;

276 
	gd©Æí
;

277 *
	gbuf
;

278 
	gbuÊí
;

279 c⁄° 
ACL_ve˘‹
 *
	ga˛
;

280 
	gÊags
;

281 } 
	g¸óã_›
;

285 c⁄° *
	g∑th
;

286 
	gvîsi⁄
;

287 } 
	gdñëe_›
;

291 c⁄° *
	g∑th
;

292 c⁄° *
	gd©a
;

293 
	gd©Æí
;

294 
	gvîsi⁄
;

295 
Sèt
 *
	g°©
;

296 } 
	g£t_›
;

300 c⁄° *
	g∑th
;

301 
	gvîsi⁄
;

302 } 
	gcheck_›
;

304 } 
	tzoo_›_t
;

330 
zoo_¸óã_›_öô
(
zoo_›_t
 *
›
, c⁄° *
∑th
, c⁄° *
vÆue
,

331 
vÆuñí
, c⁄° 
ACL_ve˘‹
 *
a˛
, 
Êags
,

332 *
∑th_buf„r
, 
∑th_buf„r_Àn
);

346 
zoo_dñëe_›_öô
(
zoo_›_t
 *
›
, c⁄° *
∑th
, 
vîsi⁄
);

363 
zoo_£t_›_öô
(
zoo_›_t
 *
›
, c⁄° *
∑th
, c⁄° *
buf„r
,

364 
buÊí
, 
vîsi⁄
, 
Sèt
 *
°©
);

377 
zoo_check_›_öô
(
zoo_›_t
 *
›
, c⁄° *
∑th
, 
vîsi⁄
);

385 
	szoo_›_ªsu…
 {

386 
	gîr
;

387 *
	gvÆue
;

388 
	gvÆuñí
;

389 
Sèt
 *
	g°©
;

390 } 
	tzoo_›_ªsu…_t
;

418 (*
	gw©chî_‚
)(
	tzh™dÀ_t
 *
	tzh
, 
	tty≥
,

419 
	t°©e
, c⁄° *
	t∑th
,*
	tw©chîCtx
);

449 
ZOOAPI
 
zh™dÀ_t
 *
zookì≥r_öô
(c⁄° *
ho°
, 
w©chî_‚
 
‚
,

450 
ªcv_timeout
, c⁄° 
˛õ¡id_t
 *
˛õ¡id
, *
c⁄ãxt
, 
Êags
);

474 
ZOOAPI
 
zookì≥r_˛o£
(
zh™dÀ_t
 *
zh
);

480 
ZOOAPI
 c⁄° 
˛õ¡id_t
 *
zoo_˛õ¡_id
(
zh™dÀ_t
 *
zh
);

487 
ZOOAPI
 
zoo_ªcv_timeout
(
zh™dÀ_t
 *
zh
);

492 
ZOOAPI
 c⁄° *
zoo_gë_c⁄ãxt
(
zh™dÀ_t
 *
zh
);

497 
ZOOAPI
 
zoo_£t_c⁄ãxt
(
zh™dÀ_t
 *
zh
, *
c⁄ãxt
);

503 
ZOOAPI
 
w©chî_‚
 
zoo_£t_w©chî
(
zh™dÀ_t
 *
zh
,w©chî_‚ 
√wFn
);

510 
ZOOAPI
 
sockaddr
* 
zookì≥r_gë_c⁄√˘ed_ho°
(
zh™dÀ_t
 *
zh
,

511 
sockaddr
 *
addr
, 
sockÀn_t
 *
addr_Àn
);

513 #i‚de‡
THREADED


533 #ifde‡
WIN32


534 
ZOOAPI
 
zookì≥r_öãª°
(
zh™dÀ_t
 *
zh
, 
SOCKET
 *
fd
, *
öãª°
,

535 
timevÆ
 *
tv
);

537 
ZOOAPI
 
zookì≥r_öãª°
(
zh™dÀ_t
 *
zh
, *
fd
, *
öãª°
,

538 
timevÆ
 *
tv
);

558 
ZOOAPI
 
zookì≥r_¥o˚ss
(
zh™dÀ_t
 *
zh
, 
evíts
);

578 (*
	gvoid_com∂ëi⁄_t
)(
	trc
, c⁄° *
	td©a
);

600 (*
	g°©_com∂ëi⁄_t
)(
	trc
, c⁄° 
	tSèt
 *
	t°©
,

601 c⁄° *
	td©a
);

627 (*
	gd©a_com∂ëi⁄_t
)(
	trc
, c⁄° *
	tvÆue
, 
	tvÆue_Àn
,

628 c⁄° 
	tSèt
 *
	t°©
, c⁄° *
	td©a
);

651 (*
	g°rögs_com∂ëi⁄_t
)(
	trc
,

652 c⁄° 
	tSåög_ve˘‹
 *
	t°rögs
, c⁄° *
	td©a
);

679 (*
	g°rögs_°©_com∂ëi⁄_t
)(
	trc
,

680 c⁄° 
	tSåög_ve˘‹
 *
	t°rögs
, c⁄° 
	tSèt
 *
	t°©
,

681 c⁄° *
	td©a
);

702 (*
	t°rög_com∂ëi⁄_t
)(
	trc
, c⁄° *
	tvÆue
, c⁄° *
	td©a
);

727 (*
	ga˛_com∂ëi⁄_t
)(
	trc
, 
	tACL_ve˘‹
 *
	ta˛
,

728 
	tSèt
 *
	t°©
, c⁄° *
	td©a
);

735 
ZOOAPI
 
zoo_°©e
(
zh™dÀ_t
 *
zh
);

769 
ZOOAPI
 
zoo_a¸óã
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
vÆue
,

770 
vÆuñí
, c⁄° 
ACL_ve˘‹
 *
a˛
, 
Êags
,

771 
°rög_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

796 
ZOOAPI
 
zoo_adñëe
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
vîsi⁄
,

797 
void_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

820 
ZOOAPI
 
zoo_´xi°s
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

821 
°©_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

852 
ZOOAPI
 
zoo_awexi°s
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

853 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

854 
°©_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

876 
ZOOAPI
 
zoo_agë
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

877 
d©a_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

905 
ZOOAPI
 
zoo_awgë
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

906 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

907 
d©a_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

935 
ZOOAPI
 
zoo_a£t
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
buf„r
, 
buÊí
,

936 
vîsi⁄
, 
°©_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

958 
ZOOAPI
 
zoo_agë_chûdªn
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

959 
°rögs_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

987 
ZOOAPI
 
zoo_awgë_chûdªn
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

988 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

989 
°rögs_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

1013 
ZOOAPI
 
zoo_agë_chûdªn2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

1014 
°rögs_°©_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

1044 
ZOOAPI
 
zoo_awgë_chûdªn2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

1045 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

1046 
°rögs_°©_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

1067 
ZOOAPI
 
zoo_async
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

1068 
°rög_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

1089 
ZOOAPI
 
zoo_agë_a˛
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
a˛_com∂ëi⁄_t
 
com∂ëi⁄
,

1090 c⁄° *
d©a
);

1114 
ZOOAPI
 
zoo_a£t_a˛
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
vîsi⁄
,

1115 
ACL_ve˘‹
 *
a˛
, 
void_com∂ëi⁄_t
, c⁄° *
d©a
);

1133 
ZOOAPI
 
zoo_amu…i
(
zh™dÀ_t
 *
zh
, 
cou¡
, c⁄° 
zoo_›_t
 *
›s
,

1134 
zoo_›_ªsu…_t
 *
ªsu…s
, 
void_com∂ëi⁄_t
, c⁄° *
d©a
);

1142 
ZOOAPI
 c⁄° * 
zîr‹
(
c
);

1171 
ZOOAPI
 
zoo_add_auth
(
zh™dÀ_t
 *
zh
,c⁄° * 
scheme
,c⁄° * 
˚π
,

1172 
˚πLí
, 
void_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

1182 
ZOOAPI
 
is_uƒecovîabÀ
(
zh™dÀ_t
 *
zh
);

1187 
ZOOAPI
 
zoo_£t_debug_Àvñ
(
ZooLogLevñ
 
logLevñ
);

1196 
ZOOAPI
 
zoo_£t_log_°ªam
(
FILE
* 
logSåóm
);

1209 
ZOOAPI
 
zoo_dëîmöi°ic_c⁄n_‹dî
(
yesOrNo
);

1248 
ZOOAPI
 
zoo_¸óã
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
vÆue
,

1249 
vÆuñí
, c⁄° 
ACL_ve˘‹
 *
a˛
, 
Êags
,

1250 *
∑th_buf„r
, 
∑th_buf„r_Àn
);

1271 
ZOOAPI
 
zoo_dñëe
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
vîsi⁄
);

1292 
ZOOAPI
 
zoo_exi°s
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
, 
Sèt
 *
°©
);

1318 
ZOOAPI
 
zoo_wexi°s
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

1319 
w©chî_‚
 
w©chî
, * 
w©chîCtx
, 
Sèt
 *
°©
);

1341 
ZOOAPI
 
zoo_gë
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
, *
buf„r
,

1342 * 
buf„r_Àn
, 
Sèt
 *
°©
);

1370 
ZOOAPI
 
zoo_wgë
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

1371 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

1372 *
buf„r
, * 
buf„r_Àn
, 
Sèt
 *
°©
);

1396 
ZOOAPI
 
zoo_£t
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
buf„r
,

1397 
buÊí
, 
vîsi⁄
);

1423 
ZOOAPI
 
zoo_£t2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
buf„r
,

1424 
buÊí
, 
vîsi⁄
, 
Sèt
 *
°©
);

1443 
ZOOAPI
 
zoo_gë_chûdªn
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

1444 
Såög_ve˘‹
 *
°rögs
);

1469 
ZOOAPI
 
zoo_wgë_chûdªn
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

1470 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

1471 
Såög_ve˘‹
 *
°rögs
);

1493 
ZOOAPI
 
zoo_gë_chûdªn2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

1494 
Såög_ve˘‹
 *
°rögs
, 
Sèt
 *
°©
);

1522 
ZOOAPI
 
zoo_wgë_chûdªn2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

1523 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

1524 
Såög_ve˘‹
 *
°rögs
, 
Sèt
 *
°©
);

1542 
ZOOAPI
 
zoo_gë_a˛
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
ACL_ve˘‹
 *
a˛
,

1543 
Sèt
 *
°©
);

1563 
ZOOAPI
 
zoo_£t_a˛
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
vîsi⁄
,

1564 c⁄° 
ACL_ve˘‹
 *
a˛
);

1577 
ZOOAPI
 
zoo_mu…i
(
zh™dÀ_t
 *
zh
, 
cou¡
, c⁄° 
zoo_›_t
 *
›s
, 
zoo_›_ªsu…_t
 *
ªsu…s
);

1579 #ifde‡
__˝lu•lus


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/epoll.h

18 #i‚def 
_SYS_EPOLL_H


25 
	mEPOLL_CLOEXEC
 = 02000000

26 
	#EPOLL_CLOEXEC
 
EPOLL_CLOEXEC


	)

29 
	#__EPOLL_PACKED
 
	`__©åibuã__
 ((
__∑cked__
))

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/huge_val.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VAL
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

35 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

39 
	~<ídün.h
>

41 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

50 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

51 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VALF
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7f800000UL }).
__d
)

	)

39 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

48 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

49 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

20 #i‚de‡
_MATH_H


24 #i‡
__GNUC_PREREQ
(3,3)

25 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

26 #ñi‡
__GNUC_PREREQ
(2,96)

27 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

30 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

32 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

33 #ifde‡
__GNUC__


34 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

35 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

37 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

38 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/in.h

20 #i‚de‡
_NETINET_IN_H


29 #ifde‡
_UAPI_LINUX_IN6_H


33 
	#__USE_KERNEL_IPV6_DEFS


	)

39 
	#IP_OPTIONS
 4

	)

40 
	#IP_HDRINCL
 3

	)

41 
	#IP_TOS
 1

	)

42 
	#IP_TTL
 2

	)

43 
	#IP_RECVOPTS
 6

	)

45 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

46 
	#IP_RETOPTS
 7

	)

47 
	#IP_MULTICAST_IF
 32

	)

48 
	#IP_MULTICAST_TTL
 33

	)

49 
	#IP_MULTICAST_LOOP
 34

	)

50 
	#IP_ADD_MEMBERSHIP
 35

	)

51 
	#IP_DROP_MEMBERSHIP
 36

	)

52 
	#IP_UNBLOCK_SOURCE
 37

	)

53 
	#IP_BLOCK_SOURCE
 38

	)

54 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

55 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

56 
	#IP_MSFILTER
 41

	)

57 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


58 
	#MCAST_JOIN_GROUP
 42

	)

59 
	#MCAST_BLOCK_SOURCE
 43

	)

60 
	#MCAST_UNBLOCK_SOURCE
 44

	)

61 
	#MCAST_LEAVE_GROUP
 45

	)

62 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

63 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

64 
	#MCAST_MSFILTER
 48

	)

65 
	#IP_MULTICAST_ALL
 49

	)

66 
	#IP_UNICAST_IF
 50

	)

68 
	#MCAST_EXCLUDE
 0

	)

69 
	#MCAST_INCLUDE
 1

	)

72 
	#IP_ROUTER_ALERT
 5

	)

73 
	#IP_PKTINFO
 8

	)

74 
	#IP_PKTOPTIONS
 9

	)

75 
	#IP_PMTUDISC
 10

	)

76 
	#IP_MTU_DISCOVER
 10

	)

77 
	#IP_RECVERR
 11

	)

78 
	#IP_RECVTTL
 12

	)

79 
	#IP_RECVTOS
 13

	)

80 
	#IP_MTU
 14

	)

81 
	#IP_FREEBIND
 15

	)

82 
	#IP_IPSEC_POLICY
 16

	)

83 
	#IP_XFRM_POLICY
 17

	)

84 
	#IP_PASSSEC
 18

	)

85 
	#IP_TRANSPARENT
 19

	)

86 
	#IP_MULTICAST_ALL
 49

	)

89 
	#IP_ORIGDSTADDR
 20

	)

90 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

92 
	#IP_MINTTL
 21

	)

96 
	#IP_PMTUDISC_DONT
 0

	)

97 
	#IP_PMTUDISC_WANT
 1

	)

98 
	#IP_PMTUDISC_DO
 2

	)

99 
	#IP_PMTUDISC_PROBE
 3

	)

102 
	#SOL_IP
 0

	)

104 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

105 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

106 
	#IP_MAX_MEMBERSHIPS
 20

	)

108 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


112 
	sù_›ts


114 
ö_addr
 
	mù_d°
;

115 
	mù_›ts
[40];

119 
	sù_mªqn


121 
ö_addr
 
	mimr_mu…üddr
;

122 
ö_addr
 
	mimr_addªss
;

123 
	mimr_ifödex
;

127 
	sö_pktöfo


129 
	mùi_ifödex
;

130 
ö_addr
 
	mùi_•ec_d°
;

131 
ö_addr
 
	mùi_addr
;

138 
	#IPV6_ADDRFORM
 1

	)

139 
	#IPV6_2292PKTINFO
 2

	)

140 
	#IPV6_2292HOPOPTS
 3

	)

141 
	#IPV6_2292DSTOPTS
 4

	)

142 
	#IPV6_2292RTHDR
 5

	)

143 
	#IPV6_2292PKTOPTIONS
 6

	)

144 
	#IPV6_CHECKSUM
 7

	)

145 
	#IPV6_2292HOPLIMIT
 8

	)

147 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

149 
	#IPV6_NEXTHOP
 9

	)

150 
	#IPV6_AUTHHDR
 10

	)

151 
	#IPV6_UNICAST_HOPS
 16

	)

152 
	#IPV6_MULTICAST_IF
 17

	)

153 
	#IPV6_MULTICAST_HOPS
 18

	)

154 
	#IPV6_MULTICAST_LOOP
 19

	)

155 
	#IPV6_JOIN_GROUP
 20

	)

156 
	#IPV6_LEAVE_GROUP
 21

	)

157 
	#IPV6_ROUTER_ALERT
 22

	)

158 
	#IPV6_MTU_DISCOVER
 23

	)

159 
	#IPV6_MTU
 24

	)

160 
	#IPV6_RECVERR
 25

	)

161 
	#IPV6_V6ONLY
 26

	)

162 
	#IPV6_JOIN_ANYCAST
 27

	)

163 
	#IPV6_LEAVE_ANYCAST
 28

	)

164 
	#IPV6_IPSEC_POLICY
 34

	)

165 
	#IPV6_XFRM_POLICY
 35

	)

167 
	#IPV6_RECVPKTINFO
 49

	)

168 
	#IPV6_PKTINFO
 50

	)

169 
	#IPV6_RECVHOPLIMIT
 51

	)

170 
	#IPV6_HOPLIMIT
 52

	)

171 
	#IPV6_RECVHOPOPTS
 53

	)

172 
	#IPV6_HOPOPTS
 54

	)

173 
	#IPV6_RTHDRDSTOPTS
 55

	)

174 
	#IPV6_RECVRTHDR
 56

	)

175 
	#IPV6_RTHDR
 57

	)

176 
	#IPV6_RECVDSTOPTS
 58

	)

177 
	#IPV6_DSTOPTS
 59

	)

179 
	#IPV6_RECVTCLASS
 66

	)

180 
	#IPV6_TCLASS
 67

	)

183 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

184 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

185 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

186 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

189 
	#IPV6_PMTUDISC_DONT
 0

	)

190 
	#IPV6_PMTUDISC_WANT
 1

	)

191 
	#IPV6_PMTUDISC_DO
 2

	)

192 
	#IPV6_PMTUDISC_PROBE
 3

	)

195 
	#SOL_IPV6
 41

	)

196 
	#SOL_ICMPV6
 58

	)

199 
	#IPV6_RTHDR_LOOSE
 0

	)

200 
	#IPV6_RTHDR_STRICT
 1

	)

202 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

19 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#INFINITY
 (
	`__buûtö_öff
())

	)

28 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/ioctl-types.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	swösize


29 
	mws_row
;

30 
	mws_cﬁ
;

31 
	mws_xpixñ
;

32 
	mws_ypixñ
;

35 
	#NCC
 8

	)

36 
	sãrmio


38 
	mc_iÊag
;

39 
	mc_oÊag
;

40 
	mc_cÊag
;

41 
	mc_lÊag
;

42 
	mc_löe
;

43 
	mc_cc
[
NCC
];

47 
	#TIOCM_LE
 0x001

	)

48 
	#TIOCM_DTR
 0x002

	)

49 
	#TIOCM_RTS
 0x004

	)

50 
	#TIOCM_ST
 0x008

	)

51 
	#TIOCM_SR
 0x010

	)

52 
	#TIOCM_CTS
 0x020

	)

53 
	#TIOCM_CAR
 0x040

	)

54 
	#TIOCM_RNG
 0x080

	)

55 
	#TIOCM_DSR
 0x100

	)

56 
	#TIOCM_CD
 
TIOCM_CAR


	)

57 
	#TIOCM_RI
 
TIOCM_RNG


	)

62 
	#N_TTY
 0

	)

63 
	#N_SLIP
 1

	)

64 
	#N_MOUSE
 2

	)

65 
	#N_PPP
 3

	)

66 
	#N_STRIP
 4

	)

67 
	#N_AX25
 5

	)

68 
	#N_X25
 6

	)

69 
	#N_6PACK
 7

	)

70 
	#N_MASC
 8

	)

71 
	#N_R3964
 9

	)

72 
	#N_PROFIBUS_FDL
 10

	)

73 
	#N_IRDA
 11

	)

74 
	#N_SMSBLOCK
 12

	)

75 
	#N_HDLC
 13

	)

76 
	#N_SYNC_PPP
 14

	)

77 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

18 #i‚de‡
_SYS_IOCTL_H


23 
	~<asm/io˘ls.h
>

26 
	#SIOCADDRT
 0x890B

	)

27 
	#SIOCDELRT
 0x890C

	)

28 
	#SIOCRTMSG
 0x890D

	)

31 
	#SIOCGIFNAME
 0x8910

	)

32 
	#SIOCSIFLINK
 0x8911

	)

33 
	#SIOCGIFCONF
 0x8912

	)

34 
	#SIOCGIFFLAGS
 0x8913

	)

35 
	#SIOCSIFFLAGS
 0x8914

	)

36 
	#SIOCGIFADDR
 0x8915

	)

37 
	#SIOCSIFADDR
 0x8916

	)

38 
	#SIOCGIFDSTADDR
 0x8917

	)

39 
	#SIOCSIFDSTADDR
 0x8918

	)

40 
	#SIOCGIFBRDADDR
 0x8919

	)

41 
	#SIOCSIFBRDADDR
 0x891®

	)

42 
	#SIOCGIFNETMASK
 0x891b

	)

43 
	#SIOCSIFNETMASK
 0x891¯

	)

44 
	#SIOCGIFMETRIC
 0x891d

	)

45 
	#SIOCSIFMETRIC
 0x891ê

	)

46 
	#SIOCGIFMEM
 0x891‡

	)

47 
	#SIOCSIFMEM
 0x8920

	)

48 
	#SIOCGIFMTU
 0x8921

	)

49 
	#SIOCSIFMTU
 0x8922

	)

50 
	#SIOCSIFNAME
 0x8923

	)

51 
	#SIOCSIFHWADDR
 0x8924

	)

52 
	#SIOCGIFENCAP
 0x8925

	)

53 
	#SIOCSIFENCAP
 0x8926

	)

54 
	#SIOCGIFHWADDR
 0x8927

	)

55 
	#SIOCGIFSLAVE
 0x8929

	)

56 
	#SIOCSIFSLAVE
 0x8930

	)

57 
	#SIOCADDMULTI
 0x8931

	)

58 
	#SIOCDELMULTI
 0x8932

	)

59 
	#SIOCGIFINDEX
 0x8933

	)

60 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

61 
	#SIOCSIFPFLAGS
 0x8934

	)

62 
	#SIOCGIFPFLAGS
 0x8935

	)

63 
	#SIOCDIFADDR
 0x8936

	)

64 
	#SIOCSIFHWBROADCAST
 0x8937

	)

65 
	#SIOCGIFCOUNT
 0x8938

	)

67 
	#SIOCGIFBR
 0x8940

	)

68 
	#SIOCSIFBR
 0x8941

	)

70 
	#SIOCGIFTXQLEN
 0x8942

	)

71 
	#SIOCSIFTXQLEN
 0x8943

	)

76 
	#SIOCDARP
 0x8953

	)

77 
	#SIOCGARP
 0x8954

	)

78 
	#SIOCSARP
 0x8955

	)

81 
	#SIOCDRARP
 0x8960

	)

82 
	#SIOCGRARP
 0x8961

	)

83 
	#SIOCSRARP
 0x8962

	)

87 
	#SIOCGIFMAP
 0x8970

	)

88 
	#SIOCSIFMAP
 0x8971

	)

92 
	#SIOCADDDLCI
 0x8980

	)

93 
	#SIOCDELDLCI
 0x8981

	)

102 
	#SIOCDEVPRIVATE
 0x89F0

	)

108 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


24 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

25 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

26 #ifde‡
__MATH_DECLARE_LDOUBLE


27 #ifde‡
__NO_LONG_DOUBLE_MATH


28 
__REDIRECT_NTH
 (
aco¶
, (), 
__acos_föôe
);

30 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

34 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


36 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

37 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

38 #ifde‡
__MATH_DECLARE_LDOUBLE


39 #ifde‡
__NO_LONG_DOUBLE_MATH


40 
__REDIRECT_NTH
 (
acoshl
, (), 
__acosh_föôe
);

42 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

48 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

49 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

50 #ifde‡
__MATH_DECLARE_LDOUBLE


51 #ifde‡
__NO_LONG_DOUBLE_MATH


52 
__REDIRECT_NTH
 (
asöl
, (), 
__asö_föôe
);

54 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

59 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

60 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

61 #ifde‡
__MATH_DECLARE_LDOUBLE


62 #ifde‡
__NO_LONG_DOUBLE_MATH


63 
__REDIRECT_NTH
 (
©™2l
, (, ),

64 
__©™2_föôe
);

66 
__REDIRECT_NTH
 (
©™2l
, (, ),

67 
__©™2l_föôe
);

71 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


73 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

74 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

75 #ifde‡
__MATH_DECLARE_LDOUBLE


76 #ifde‡
__NO_LONG_DOUBLE_MATH


77 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™h_föôe
);

79 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

85 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

86 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

87 #ifde‡
__MATH_DECLARE_LDOUBLE


88 #ifde‡
__NO_LONG_DOUBLE_MATH


89 
__REDIRECT_NTH
 (
coshl
, (), 
__cosh_föôe
);

91 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

96 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

97 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
__REDIRECT_NTH
 (
ex∂
, (), 
__exp_föôe
);

102 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

106 #ifde‡
__USE_GNU


108 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

109 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

110 #ifde‡
__MATH_DECLARE_LDOUBLE


111 #ifde‡
__NO_LONG_DOUBLE_MATH


112 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10_föôe
);

114 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

119 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

120 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

121 #ifde‡
__MATH_DECLARE_LDOUBLE


122 #ifde‡
__NO_LONG_DOUBLE_MATH


123 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10_föôe
);

125 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

130 #ifde‡
__USE_ISOC99


132 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

133 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

134 #ifde‡
__MATH_DECLARE_LDOUBLE


135 #ifde‡
__NO_LONG_DOUBLE_MATH


136 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2_föôe
);

138 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

144 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

145 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

146 #ifde‡
__MATH_DECLARE_LDOUBLE


147 #ifde‡
__NO_LONG_DOUBLE_MATH


148 
__REDIRECT_NTH
 (
fmodl
, (, ),

149 
__fmod_föôe
);

151 
__REDIRECT_NTH
 (
fmodl
, (, ),

152 
__fmodl_föôe
);

156 #ifde‡
__USE_ISOC99


158 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

159 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

160 #ifde‡
__MATH_DECLARE_LDOUBLE


161 #ifde‡
__NO_LONG_DOUBLE_MATH


162 
__REDIRECT_NTH
 (
hypŸl
, (, ),

163 
__hypŸ_föôe
);

165 
__REDIRECT_NTH
 (
hypŸl
, (, ),

166 
__hypŸl_föôe
);

171 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


173 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

174 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

175 #ifde‡
__MATH_DECLARE_LDOUBLE


176 #ifde‡
__NO_LONG_DOUBLE_MATH


177 
__REDIRECT_NTH
 (
j0l
, (), 
__j0_föôe
);

179 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

184 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

185 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

186 #ifde‡
__MATH_DECLARE_LDOUBLE


187 #ifde‡
__NO_LONG_DOUBLE_MATH


188 
__REDIRECT_NTH
 (
y0l
, (), 
__y0_föôe
);

190 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

195 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

196 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

197 #ifde‡
__MATH_DECLARE_LDOUBLE


198 #ifde‡
__NO_LONG_DOUBLE_MATH


199 
__REDIRECT_NTH
 (
j1l
, (), 
__j1_föôe
);

201 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

206 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

207 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

208 #ifde‡
__MATH_DECLARE_LDOUBLE


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
__REDIRECT_NTH
 (
y1l
, (), 
__y1_föôe
);

212 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

217 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

218 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

219 #ifde‡
__MATH_DECLARE_LDOUBLE


220 #ifde‡
__NO_LONG_DOUBLE_MATH


221 
__REDIRECT_NTH
 (
j∆
, (, ), 
__jn_föôe
);

223 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

228 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

229 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

230 #ifde‡
__MATH_DECLARE_LDOUBLE


231 #ifde‡
__NO_LONG_DOUBLE_MATH


232 
__REDIRECT_NTH
 (
y∆
, (, ), 
__yn_föôe
);

234 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

239 #ifde‡
__USE_MISC


241 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

242 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

243 #ifde‡
__MATH_DECLARE_LDOUBLE


244 #ifde‡
__NO_LONG_DOUBLE_MATH


245 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

246 
__lgamma_r_föôe
);

248 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

249 
__lgammÆ_r_föôe
);

254 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


256 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

258 #ifde‡
__USE_ISOC99


259 
__loˇl_signgam
 = 0;

260  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

262  
	`lgamma_r
 (
__d
, &
signgam
);

264 
	}
}

265 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

267 #ifde‡
__USE_ISOC99


268 
__loˇl_signgam
 = 0;

269  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

271  
	`lgammaf_r
 (
__d
, &
signgam
);

273 
	}
}

274 #ifde‡
__MATH_DECLARE_LDOUBLE


275 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

277 #ifde‡
__USE_ISOC99


278 
__loˇl_signgam
 = 0;

279  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

281  
	`lgammÆ_r
 (
__d
, &
signgam
);

283 
	}
}

287 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


289 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

291 #ifde‡
__USE_ISOC99


292 
__loˇl_signgam
 = 0;

293  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

295  
	`lgamma_r
 (
__d
, &
signgam
);

297 
	}
}

298 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

300 #ifde‡
__USE_ISOC99


301 
__loˇl_signgam
 = 0;

302  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

304  
	`lgammaf_r
 (
__d
, &
signgam
);

306 
	}
}

307 #ifde‡
__MATH_DECLARE_LDOUBLE


308 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

310 #ifde‡
__USE_ISOC99


311 
__loˇl_signgam
 = 0;

312  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

314  
	`lgammÆ_r
 (
__d
, &
signgam
);

316 
	}
}

321 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

322 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

323 #ifde‡
__MATH_DECLARE_LDOUBLE


324 #ifde‡
__NO_LONG_DOUBLE_MATH


325 
__REDIRECT_NTH
 (
logl
, (), 
__log_föôe
);

327 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

332 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

333 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

334 #ifde‡
__MATH_DECLARE_LDOUBLE


335 #ifde‡
__NO_LONG_DOUBLE_MATH


336 
__REDIRECT_NTH
 (
log10l
, (), 
__log10_föôe
);

338 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

342 #ifde‡
__USE_ISOC99


344 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

345 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

346 #ifde‡
__MATH_DECLARE_LDOUBLE


347 #ifde‡
__NO_LONG_DOUBLE_MATH


348 
__REDIRECT_NTH
 (
log2l
, (), 
__log2_föôe
);

350 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

356 
__REDIRECT_NTH
 (
ldexp
, (, ), 
sˇlbn
);

357 
__REDIRECT_NTH
 (
ldexpf
, (, ), 
sˇlbnf
);

358 #ifde‡
__MATH_DECLARE_LDOUBLE


359 
__REDIRECT_NTH
 (
ldex∂
, (, ), 
sˇlb∆
);

363 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

364 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

365 #ifde‡
__MATH_DECLARE_LDOUBLE


366 #ifde‡
__NO_LONG_DOUBLE_MATH


367 
__REDIRECT_NTH
 (
powl
, (, ),

368 
__pow_föôe
);

370 
__REDIRECT_NTH
 (
powl
, (, ),

371 
__powl_föôe
);

376 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

377 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

378 #ifde‡
__MATH_DECLARE_LDOUBLE


379 #ifde‡
__NO_LONG_DOUBLE_MATH


380 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

381 
__ªmaödî_föôe
);

383 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

384 
__ªmaödîl_föôe
);

388 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


390 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

391 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

392 #ifde‡
__MATH_DECLARE_LDOUBLE


393 #ifde‡
__NO_LONG_DOUBLE_MATH


394 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

395 
__sˇlb_föôe
);

397 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

398 
__sˇlbl_föôe
);

404 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

405 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

406 #ifde‡
__MATH_DECLARE_LDOUBLE


407 #ifde‡
__NO_LONG_DOUBLE_MATH


408 
__REDIRECT_NTH
 (
söhl
, (), 
__söh_föôe
);

410 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

415 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

416 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

417 #ifde‡
__MATH_DECLARE_LDOUBLE


418 #ifde‡
__NO_LONG_DOUBLE_MATH


419 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπ_föôe
);

421 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

425 #ifde‡
__USE_ISOC99


427 
__gamma_r_föôe
 (, *);

428 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

430 
__loˇl_signgam
 = 0;

431 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

432  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

433 
	}
}

434 
__gammaf_r_föôe
 (, *);

435 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

437 
__loˇl_signgam
 = 0;

438 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

439  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

440 
	}
}

441 #ifde‡
__MATH_DECLARE_LDOUBLE


442 
__gammÆ_r_föôe
 (, *);

443 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

445 
__loˇl_signgam
 = 0;

446 #ifde‡
__NO_LONG_DOUBLE_MATH


447 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

449 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

451  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

452 
	}
}

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


52 
_MdoubÀ_BEGIN_NAMESPACE


54 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

56 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

58 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

60 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

63 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

65 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

67 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

72 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

74 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

76 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 
	g_MdoubÀ_END_NAMESPACE


79 #ifde‡
__USE_GNU


81 
__MATHDECL
 (,
söcos
,,

82 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

85 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


86 
__BEGIN_NAMESPACE_C99


88 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

90 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

92 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

93 
	g__END_NAMESPACE_C99


98 
_MdoubÀ_BEGIN_NAMESPACE


100 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

103 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

106 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

109 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

112 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

115 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

116 
	g_MdoubÀ_END_NAMESPACE


118 #ifde‡
__USE_GNU


120 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

125 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

131 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

134 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

135 
	g__END_NAMESPACE_C99


138 #ifde‡
__USE_ISOC99


139 
__BEGIN_NAMESPACE_C99


141 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

144 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

145 
	g__END_NAMESPACE_C99


151 
_MdoubÀ_BEGIN_NAMESPACE


153 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

156 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

157 
	g_MdoubÀ_END_NAMESPACE


159 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


160 
__BEGIN_NAMESPACE_C99


162 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

163 
	g__END_NAMESPACE_C99


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


167 
__BEGIN_NAMESPACE_C99


169 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

170 
	g__END_NAMESPACE_C99


176 
_MdoubÀ_BEGIN_NAMESPACE


178 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

181 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

184 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

187 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

192 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

195 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
	g_MdoubÀ_END_NAMESPACE


198 #ifde‡
__USE_MISC


201 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

204 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

207 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

211 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


215 
__BEGIN_NAMESPACE_C99


217 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

218 
	g__END_NAMESPACE_C99


221 #ifde‡
__USE_ISOC99


222 
__BEGIN_NAMESPACE_C99


224 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

225 
	g__END_NAMESPACE_C99


230 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

237 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

238 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

240 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

241 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

246 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


247 
__BEGIN_NAMESPACE_C99


249 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

250 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

252 
	g__END_NAMESPACE_C99


255 #ifde‡
__USE_ISOC99


256 
__BEGIN_NAMESPACE_C99


258 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

259 
	g__END_NAMESPACE_C99


262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


264 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

267 #ifde‡
__USE_MISC


271 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


276 
__BEGIN_NAMESPACE_C99


279 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

282 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

283 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


284 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

288 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

290 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


292 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

296 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

299 #ifde‡
__USE_ISOC99


301 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

305 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

309 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

313 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

318 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

325 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

326 
__exãnsi⁄__


327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__exãnsi⁄__


333 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

337 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

340 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

343 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

347 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

348 
__©åibuã__
 ((
__c⁄°__
));

351 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

352 
__©åibuã__
 ((
__c⁄°__
));

356 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

359 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


360 
	g__END_NAMESPACE_C99


363 #ifde‡
__USE_GNU


365 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

366 
__©åibuã__
 ((
__c⁄°__
));

369 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


371 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

18 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


22 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


23 
	#_MATH_H_MATHDEF
 1

	)

25 #i‡
deföed
 
__x86_64__
 || (deföed 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

28 
	tÊﬂt_t
;

29 
	tdoubÀ_t
;

35 
	tÊﬂt_t
;

37 
	tdoubÀ_t
;

42 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

43 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

47 #i‡
__FP_FAST_FMA


48 
	#FP_FAST_FMA
 1

	)

51 #i‡
__FP_FAST_FMAF


52 
	#FP_FAST_FMAF
 1

	)

55 #i‡
__FP_FAST_FMAL


56 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

30 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

32 #i‡!
__GNUC_PREREQ
 (2,97)

37 #unde‡
isgª©î


38 #unde‡
isgª©îequÆ


39 #unde‡
i¶ess


40 #unde‡
i¶es£quÆ


41 #unde‡
i¶essgª©î


42 #unde‡
isun‹dîed


43 #ifde‡
__i686__


46 
	#isgª©î
(
x
, 
y
) \

47 ({ 
__ªsu…
; \

48 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

49 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

50 
__ªsu…
; })

	)

51 
	#isgª©îequÆ
(
x
, 
y
) \

52 ({ 
__ªsu…
; \

53 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

54 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

55 
__ªsu…
; })

	)

57 
	#i¶ess
(
x
, 
y
) \

58 ({ 
__ªsu…
; \

59 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

60 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

61 
__ªsu…
; })

	)

63 
	#i¶es£quÆ
(
x
, 
y
) \

64 ({ 
__ªsu…
; \

65 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

66 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

67 
__ªsu…
; })

	)

69 
	#i¶essgª©î
(
x
, 
y
) \

70 ({ 
__ªsu…
; \

71 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

72 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

73 
__ªsu…
; })

	)

75 
	#isun‹dîed
(
x
, 
y
) \

76 ({ 
__ªsu…
; \

77 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

78 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

79 
__ªsu…
; })

	)

82 
	#isgª©î
(
x
, 
y
) \

83 ({ 
__ªsu…
; \

84 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

85 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

86 
__ªsu…
; })

	)

88 
	#isgª©îequÆ
(
x
, 
y
) \

89 ({ 
__ªsu…
; \

90 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

91 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

92 
__ªsu…
; })

	)

94 
	#i¶ess
(
x
, 
y
) \

95 ({ 
__ªsu…
; \

96 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

97 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

98 
__ªsu…
; })

	)

100 
	#i¶es£quÆ
(
x
, 
y
) \

101 ({ 
__ªsu…
; \

102 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

103 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

104 
__ªsu…
; })

	)

106 
	#i¶essgª©î
(
x
, 
y
) \

107 ({ 
__ªsu…
; \

108 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

109 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

110 
__ªsu…
; })

	)

112 
	#isun‹dîed
(
x
, 
y
) \

113 ({ 
__ªsu…
; \

114 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

115 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

116 
__ªsu…
; })

	)

122 #i‡
__GNUC_PREREQ
 (2, 8)

123 
__BEGIN_NAMESPACE_C99


126 
__MATH_INLINE
 

127 
__NTH
 (
	$__signbôf
 (
__x
))

129 #ifde‡
__SSE2_MATH__


130 
__m
;

131 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

132  (
__m
 & 0x8) != 0;

134 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

135  
__u
.
__i
 < 0;

137 
	}
}

138 
__MATH_INLINE
 

139 
__NTH
 (
	$__signbô
 (
__x
))

141 #ifde‡
__SSE2_MATH__


142 
__m
;

143 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

144  (
__m
 & 0x80) != 0;

146 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

147  
__u
.
__i
[1] < 0;

149 
	}
}

150 
__MATH_INLINE
 

151 
__NTH
 (
	$__signbôl
 (
__x
))

153 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

154  (
__u
.
__i
[2] & 0x8000) != 0;

155 
	}
}

157 
	g__END_NAMESPACE_C99


164 #i‡
__GNUC_PREREQ
 (2, 8)

165 #i‡!
__GNUC_PREREQ
 (3, 4Ë&& !
deföed
 
__NO_MATH_INLINES
 \

166 && 
deföed
 
	g__OPTIMIZE__


170 #ifde‡
__USE_ISOC99


171 
	g__BEGIN_NAMESPACE_C99


174 #ifde‡
__SSE_MATH__


175 
__MATH_INLINE
 

176 
__NTH
 (
	$Ãötf
 (
__x
))

178 
__ªs
;

183 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

187 #ifde‡
__SSE2_MATH__


188 
__MATH_INLINE
 

189 
__NTH
 (
	$Ãöt
 (
__x
))

191 
__ªs
;

196 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

197  
__ªs
;

198 
	}
}

200 #ifde‡
__x86_64__


201 
__exãnsi⁄__


202 
__MATH_INLINE
 

203 
__NTH
 (
	$Œrötf
 (
__x
))

205 
__ªs
;

210 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

211  
__ªs
;

212 
	}
}

213 
__exãnsi⁄__


214 
__MATH_INLINE
 

215 
__NTH
 (
	$Œröt
 (
__x
))

217 
__ªs
;

222 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

223  
__ªs
;

224 
	}
}

227 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

228 && 
deföed
 
__SSE2_MATH__


230 
__MATH_INLINE
 

231 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

233 #ifde‡
__AVX__


234 
__ªs
;

235 
	`__asm
 ("vmaxs†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

236  
__ªs
;

238 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

239  
__x
;

241 
	}
}

242 
__MATH_INLINE
 

243 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

245 #ifde‡
__AVX__


246 
__ªs
;

247 
	`__asm
 ("vmaxsd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

248  
__ªs
;

250 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

251  
__x
;

253 
	}
}

256 
__MATH_INLINE
 

257 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

259 #ifde‡
__AVX__


260 
__ªs
;

261 
	`__asm
 ("vmös†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

262  
__ªs
;

264 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

265  
__x
;

267 
	}
}

268 
__MATH_INLINE
 

269 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

271 #ifde‡
__AVX__


272 
__ªs
;

273 
	`__asm
 ("vmösd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

274  
__ªs
;

276 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

277  
__x
;

279 
	}
}

282 
	g__END_NAMESPACE_C99


285 #i‡
deföed
 
__SSE4_1__
 && deföed 
__SSE2_MATH__


286 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


287 
__BEGIN_NAMESPACE_C99


290 
__MATH_INLINE
 

291 
__NTH
 (
	$röt
 (
__x
))

293 
__ªs
;

298 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

299  
__ªs
;

300 
	}
}

301 
__MATH_INLINE
 

302 
__NTH
 (
	$rötf
 (
__x
))

304 
__ªs
;

309 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

310  
__ªs
;

311 
	}
}

313 #ifde‡
__USE_ISOC99


315 
__MATH_INLINE
 

316 
__NTH
 (
	$√¨byöt
 (
__x
))

318 
__ªs
;

323 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

324  
__ªs
;

325 
	}
}

326 
__MATH_INLINE
 

327 
__NTH
 (
	$√¨byötf
 (
__x
))

329 
__ªs
;

334 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

335  
__ªs
;

336 
	}
}

339 
	g__END_NAMESPACE_C99


342 
__BEGIN_NAMESPACE_STD


344 
__MATH_INLINE
 

345 
__NTH
 (
	$˚û
 (
__x
))

347 
__ªs
;

348 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

349  
__ªs
;

350 
	}
}

351 
__END_NAMESPACE_STD


353 
__BEGIN_NAMESPACE_C99


354 
__MATH_INLINE
 

355 
__NTH
 (
	$˚ûf
 (
__x
))

357 
__ªs
;

358 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

359  
__ªs
;

360 
	}
}

361 
__END_NAMESPACE_C99


363 
__BEGIN_NAMESPACE_STD


365 
__MATH_INLINE
 

366 
__NTH
 (
	$Êo‹
 (
__x
))

368 
__ªs
;

369 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

370  
__ªs
;

371 
	}
}

372 
__END_NAMESPACE_STD


374 
__BEGIN_NAMESPACE_C99


375 
__MATH_INLINE
 

376 
__NTH
 (
	$Êo‹f
 (
__x
))

378 
__ªs
;

379 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

380  
__ªs
;

381 
	}
}

382 
	g__END_NAMESPACE_C99


387 #i‚de‡
__SSE2_MATH__


388 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

389 && 
deföed
 
	g__OPTIMIZE__
)

393 #unde‡
m©h_îrh™dlög


402 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


403 
	#__ölöe_m©h›
(
func
, 
›
) \

404 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

405 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

406 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

407 
	#__ölöe_m©h›NP
(
func
, 
›
) \

408 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

409 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

410 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

412 
	#__ölöe_m©h›
(
func
, 
›
) \

413 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

414 
	#__ölöe_m©h›NP
(
func
, 
›
) \

415 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

418 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

419 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

420 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

421 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

424 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


425 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

426 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

427 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

428 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

429 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

430 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

431 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

432 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

434 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

435 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

436 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

437 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

440 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

441 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

442 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

444 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

445 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

447 
Êﬂt_ty≥
 
__ªsu…
; \

448 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

449  
__ªsu…
; \

450 }

	)

453 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


454 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

455 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

456 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

457 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

458 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

459 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

460 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

461 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

462 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

463 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

464 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

465 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

466 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

467 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

468 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

469 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

470 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

471 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

472 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

473 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

474 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

475 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

476 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

477 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

479 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

480 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

481 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

482 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

483 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

484 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

485 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

486 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

487 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

488 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

489 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

490 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

493 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

494 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

495 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

497 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

498 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

500 
code
; \

501 }

	)

504 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

505 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

506 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

508 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

509 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

511 
code
; \

512 }

	)

514 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

515 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

516 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

518 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

519 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

520 
Êﬂt_ty≥
 
¨g3
)) \

522 
code
; \

523 }

	)

527 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


531 #ifde‡
__FAST_MATH__


532 #ifde‡
__USE_GNU


533 
	#__söcos_code
 \

534 
__co§
; \

535 
__sör
; \

536 
__swtmp
; \

537 
__asm
 
__vﬁ©ûe__
 \

552 : "Ò" (
__co§
), "=u" (
__sör
), "˜" (
__swtmp
Ë: "0" (
__x
)); \

553 *
__söx
 = 
__sör
; \

554 *
__cosx
 = 
__co§


	)

556 
__MATH_INLINE
 

557 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

559 
__söcos_code
;

560 
	}
}

562 
__MATH_INLINE
 

563 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

565 
__söcos_code
;

566 
	}
}

568 
__MATH_INLINE
 

569 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

571 
__söcos_code
;

572 
	}
}

579 #i‡
__GNUC_PREREQ
 (3, 5)

580 
	#__expm1_code
 \

581 
__ãmp
; \

582 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

583  
__ãmp
 ? __ãm∞: 
__x


	)

585 
	#__expm1_code
 \

586 
__vÆue
; \

587 
__exp⁄ít
; \

588 
__ãmp
; \

589 
__asm
 
__vﬁ©ûe__
 \

598 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

599 
__asm
 
__vﬁ©ûe__
 \

601 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

602 
__ãmp
 -= 1.0; \

603 
__ãmp
 +
__vÆue
; \

604  
__ãmp
 ? __ãm∞: 
__x


	)

606 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

608 #i‡
	`__GNUC_PREREQ
 (3, 4)

609 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

611 
	#__exp_code
 \

612 
__vÆue
; \

613 
__exp⁄ít
; \

614 
__asm
 
__vﬁ©ûe__
 \

622 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

623 
__vÆue
 += 1.0; \

624 
__asm
 
__vﬁ©ûe__
 \

626 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

627  
__vÆue


	)

628 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

629 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

633 #i‡!
	`__GNUC_PREREQ
 (3, 5)

634 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

635 
__vÆue
; \

636 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

637 
__asm
 
__vﬁ©ûe__
 \

639 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

640  
__vÆue
)

645 #i‡
	`__GNUC_PREREQ
 (3, 4)

646 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

647  
	$__buûtö_©™2l
 (
__y
, 
__x
))

649 
	#__©™2_code
 \

650 
__vÆue
; \

651 
__asm
 
__vﬁ©ûe__
 \

653 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

654  
__vÆue


	)

655 #ifde‡
__FAST_MATH__


656 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

658 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

662 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

663 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

664 
__vÆue
; \

665 
__asm
 
__vﬁ©ûe__
 \

670 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

671  
__vÆue
)

675 #ifde‡
__FAST_MATH__


676 #i‡!
	`__GNUC_PREREQ
 (3,3)

677 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

678 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

679 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

681 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

685 #i‡
	`__GNUC_PREREQ
 (2, 8)

686 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

687 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


688 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

689 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

691 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

693 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

694 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

697 #ifde‡
__FAST_MATH__


698 #i‡!
	`__GNUC_PREREQ
 (3, 4)

700 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

702 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

704 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

707 #i‡!
	`__GNUC_PREREQ
 (3, 5)

708 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

710 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

711 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

714 #i‡!
	`__GNUC_PREREQ
 (3, 4)

715 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

719 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

720 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

721 { 
__xld
: 
__x
 
	}
}; \

722 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

723 
	g__n
.
	g__xi
[1] = 0x80000000; \

724 
	g__n
.
	g__xi
[0] = 0; \

725  
	g__n
.
	g__xld
)

728 #ifde‡
__FAST_MATH__


730 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

731 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

732  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

734 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

735 
__ex
 = 
	`__ex∂
 (
__x
); \

736  0.5 * (
__ex
 + 1.0 / __ex))

738 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

739 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

740  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

743 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

744 
__vÆue
; \

745 
__ign‹e
; \

746 
__cw
; \

747 
__cwtmp
; \

748 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

756 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

757 "=m" (
__cw
) \

758 : "0" (
__x
)); \

759  
__vÆue
)

761 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

762 
__vÆue
; \

763 
__ign‹e
; \

764 
__cw
; \

765 
__cwtmp
; \

766 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

774 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

775 "=m" (
__cw
) \

776 : "0" (
__x
)); \

777  
__vÆue
)

779 #ifde‡
__FAST_MATH__


780 
	#__ldexp_code
 \

781 
__vÆue
; \

782 
__asm
 
__vﬁ©ûe__
 \

784 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

785  
__vÆue


	)

787 
__MATH_INLINE
 

788 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

790 
__ldexp_code
;

791 
	}
}

796 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


798 #ifde‡
__FAST_MATH__


799 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

803 
	#__M_SQRT2
 1.41421356237309504880L

	)

805 #i‡!
	`__GNUC_PREREQ
 (3, 5)

806 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

807 
__vÆue
; \

808 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

809 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

811 
__asm
 
__vﬁ©ûe__
 \

815 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

816  
__vÆue
)

821 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

822 
__y
 = 
	`__Áb¶
 (
__x
); \

823  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

824 * 
	$__sgn1l
 (
__x
)))

826 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

827  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

829 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

830 
__y
 = 
	`__Áb¶
 (
__x
); \

831  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

834 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

835  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

837 #i‡!
	`__GNUC_PREREQ
 (3, 5)

838 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

839 
__vÆue
; \

840 
__junk
; \

841 
__asm
 
__vﬁ©ûe__
 \

843 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

844  
__vÆue
)

850 #ifde‡
__USE_ISOC99


851 #ifde‡
__FAST_MATH__


853 #i‡!
	`__GNUC_PREREQ
 (3, 5)

854 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

857 
__MATH_INLINE
 

858 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

860 
__ldexp_code
;

861 
	}
}

863 
__MATH_INLINE
 

864 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

866 
__ldexp_code
;

867 
	}
}

869 
__ölöe_m©h›NP
 (
röt
, "frndint")

872 
	#__Ãöt_code
 \

873 
__Ãöåes
; \

874 
__asm__
 
__vﬁ©ûe__
 \

876 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

877  
__Ãöåes


	)

878 
__MATH_INLINE
 

879 
__NTH
 (
	$Ãötf
 (
__x
))

881 
__Ãöt_code
;

882 
	}
}

883 
__MATH_INLINE
 

884 
__NTH
 (
	$Ãöt
 (
__x
))

886 
__Ãöt_code
;

887 
	}
}

888 
__MATH_INLINE
 

889 
__NTH
 (
	$Ãöé
 (
__x
))

891 
__Ãöt_code
;

892 
	}
}

893 #unde‡
__Ãöt_code


895 
	#__Œröt_code
 \

896 
__Œröåes
; \

897 
__asm__
 
__vﬁ©ûe__
 \

899 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

900  
__Œröåes


	)

901 
__exãnsi⁄__


902 
__MATH_INLINE
 

903 
__NTH
 (
	$Œrötf
 (
__x
))

905 
__Œröt_code
;

906 
	}
}

907 
__exãnsi⁄__


908 
__MATH_INLINE
 

909 
__NTH
 (
	$Œröt
 (
__x
))

911 
__Œröt_code
;

912 
	}
}

913 
__exãnsi⁄__


914 
__MATH_INLINE
 

915 
__NTH
 (
	$Œröé
 (
__x
))

917 
__Œröt_code
;

918 
	}
}

919 #unde‡
__Œröt_code


924 #ifde‡
__USE_MISC


926 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

927 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

928 
__vÆue
; \

929 
__˛obbîed
; \

930 
__asm
 
__vﬁ©ûe__
 \

935 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

936  
__vÆue
)

941 
__MATH_INLINE
 

942 
__NTH
 (
	$__föôe
 (
__x
))

944  (
__exãnsi⁄__


945 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

947 
	}
}

952 #unde‡
__©™2_code


953 #ifde‡
__FAST_MATH__


954 #unde‡
__expm1_code


955 #unde‡
__exp_code


956 #unde‡
__söcos_code


963 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


964 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

965 
__ölöe_m©hcode2
 (
__õì754_©™2
, 
__y
, 
__x
,

966 
__vÆue
;

967 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

968 : "Ò" (
__vÆue
)

969 : "0" (
__x
), "u" (
__y
) : "st(1)");

970  
__vÆue
;)

	@/usr/include/bits/nan.h

19 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

28 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#NAN
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7fc00000UL }).
__d
)

	)

39 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__q«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__q«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

48 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__q«n_uni⁄


49 
__©åibuã__
 ((
__unu£d__
)Ë{ 
__q«n_byãs
 };

50 
	#NAN
 (
__q«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/netdb.h

18 #i‚de‡
_NETDB_H


26 
	s√ã¡


28 *
	mn_«me
;

29 **
	mn_Æü£s
;

30 
	mn_addπy≥
;

31 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

108 
	#__PTHREAD_MUTEX_HAVE_ELISION
 1

	)

110 
	m__nu£rs
;

111 
__exãnsi⁄__
 union

115 
	m__e•ös
;

116 
	m__ñisi⁄
;

117 
	#__•ös
 
d
.
__e•ös


	)

118 
	#__ñisi⁄
 
d
.
__ñisi⁄


	)

119 
	#__PTHREAD_MUTEX_HAVE_ELISION
 2

	)

120 } 
	md
;

121 
__±hªad_¶i°_t
 
	m__li°
;

124 } 
	m__d©a
;

125 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

126 
	m__Æign
;

127 } 
	t±hªad_muãx_t
;

131 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

132 
	m__Æign
;

133 } 
	t±hªad_muãx©å_t
;

142 
	m__lock
;

143 
	m__fuãx
;

144 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

145 
__exãnsi⁄__
 
	m__wakeup_£q
;

146 
__exãnsi⁄__
 
	m__wokí_£q
;

147 *
	m__muãx
;

148 
	m__nwaôîs
;

149 
	m__brﬂdˇ°_£q
;

150 } 
	m__d©a
;

151 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

152 
__exãnsi⁄__
 
	m__Æign
;

153 } 
	t±hªad_c⁄d_t
;

157 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

158 
	m__Æign
;

159 } 
	t±hªad_c⁄d©å_t
;

163 
	t±hªad_key_t
;

167 
	t±hªad_⁄˚_t
;

170 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


175 #ifde‡
__x86_64__


178 
	m__lock
;

179 
	m__ƒ_ªadîs
;

180 
	m__ªadîs_wakeup
;

181 
	m__wrôî_wakeup
;

182 
	m__ƒ_ªadîs_queued
;

183 
	m__ƒ_wrôîs_queued
;

184 
	m__wrôî
;

185 
	m__sh¨ed
;

186 
	m__∑d1
;

187 
	m__∑d2
;

190 
	m__Êags
;

191 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

192 } 
	m__d©a
;

196 
	m__lock
;

197 
	m__ƒ_ªadîs
;

198 
	m__ªadîs_wakeup
;

199 
	m__wrôî_wakeup
;

200 
	m__ƒ_ªadîs_queued
;

201 
	m__ƒ_wrôîs_queued
;

204 
	m__Êags
;

205 
	m__sh¨ed
;

206 
	m__∑d1
;

207 
	m__∑d2
;

208 
	m__wrôî
;

209 } 
	m__d©a
;

211 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

212 
	m__Æign
;

213 } 
	t±hªad_rwlock_t
;

217 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

218 
	m__Æign
;

219 } 
	t±hªad_rwlock©å_t
;

223 #ifde‡
__USE_XOPEN2K


225 vﬁ©ûê
	t±hªad_•ölock_t
;

232 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

233 
	m__Æign
;

234 } 
	t±hªad_b¨rõr_t
;

238 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

239 
	m__Æign
;

240 } 
	t±hªad_b¨rõøâr_t
;

244 #i‚de‡
__x86_64__


246 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/resource.h

19 #i‚de‡
_SYS_RESOURCE_H


23 
	~<bôs/ty≥s.h
>

31 
	e__æimô_ªsour˚


34 
	mRLIMIT_CPU
 = 0,

35 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

38 
	mRLIMIT_FSIZE
 = 1,

39 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

42 
	mRLIMIT_DATA
 = 2,

43 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

46 
	mRLIMIT_STACK
 = 3,

47 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

50 
	mRLIMIT_CORE
 = 4,

51 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

57 
	m__RLIMIT_RSS
 = 5,

58 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

61 
	mRLIMIT_NOFILE
 = 7,

62 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

63 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

64 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

67 
	mRLIMIT_AS
 = 9,

68 
	#RLIMIT_AS
 
RLIMIT_AS


	)

71 
	m__RLIMIT_NPROC
 = 6,

72 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

75 
	m__RLIMIT_MEMLOCK
 = 8,

76 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

79 
	m__RLIMIT_LOCKS
 = 10,

80 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

83 
	m__RLIMIT_SIGPENDING
 = 11,

84 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

87 
	m__RLIMIT_MSGQUEUE
 = 12,

88 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

93 
	m__RLIMIT_NICE
 = 13,

94 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

98 
	m__RLIMIT_RTPRIO
 = 14,

99 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

104 
	m__RLIMIT_RTTIME
 = 15,

105 
	#RLIMIT_RTTIME
 
__RLIMIT_RTTIME


	)

107 
	m__RLIMIT_NLIMITS
 = 16,

108 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


109 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

110 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

114 #i‚de‡
__USE_FILE_OFFSET64


115 
	#RLIM_INFINITY
 ((
__æim_t
Ë-1)

	)

117 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

125 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

126 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

130 #i‚de‡
__USE_FILE_OFFSET64


131 
__æim_t
 
	tæim_t
;

133 
__æim64_t
 
	tæim_t
;

135 #ifde‡
__USE_LARGEFILE64


136 
__æim64_t
 
	tæim64_t
;

139 
	sæimô


142 
æim_t
 
	mæim_cur
;

144 
æim_t
 
	mæim_max
;

147 #ifde‡
__USE_LARGEFILE64


148 
	sæimô64


151 
æim64_t
 
	mæim_cur
;

153 
æim64_t
 
	mæim_max
;

158 
	e__rußge_who


161 
	mRUSAGE_SELF
 = 0,

162 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

165 
	mRUSAGE_CHILDREN
 = -1

166 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

168 #ifde‡
__USE_GNU


171 
	mRUSAGE_THREAD
 = 1

172 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

174 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

178 
	#__√ed_timevÆ


	)

179 
	~<bôs/time.h
>

187 
	srußge


190 
timevÆ
 
	mru_utime
;

192 
timevÆ
 
	mru_°ime
;

194 
__exãnsi⁄__
 union

196 
	mru_maxrss
;

197 
__sysˇŒ_¶⁄g_t
 
	m__ru_maxrss_w‹d
;

202 
__exãnsi⁄__
 union

204 
	mru_ixrss
;

205 
__sysˇŒ_¶⁄g_t
 
	m__ru_ixrss_w‹d
;

208 
__exãnsi⁄__
 union

210 
	mru_idrss
;

211 
__sysˇŒ_¶⁄g_t
 
	m__ru_idrss_w‹d
;

214 
__exãnsi⁄__
 union

216 
	mru_i§ss
;

217 
__sysˇŒ_¶⁄g_t
 
	m__ru_i§ss_w‹d
;

221 
__exãnsi⁄__
 union

223 
	mru_möÊt
;

224 
__sysˇŒ_¶⁄g_t
 
	m__ru_möÊt_w‹d
;

227 
__exãnsi⁄__
 union

229 
	mru_majÊt
;

230 
__sysˇŒ_¶⁄g_t
 
	m__ru_majÊt_w‹d
;

233 
__exãnsi⁄__
 union

235 
	mru_nsw≠
;

236 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsw≠_w‹d
;

240 
__exãnsi⁄__
 union

242 
	mru_öblock
;

243 
__sysˇŒ_¶⁄g_t
 
	m__ru_öblock_w‹d
;

246 
__exãnsi⁄__
 union

248 
	mru_oublock
;

249 
__sysˇŒ_¶⁄g_t
 
	m__ru_oublock_w‹d
;

252 
__exãnsi⁄__
 union

254 
	mru_msg¢d
;

255 
__sysˇŒ_¶⁄g_t
 
	m__ru_msg¢d_w‹d
;

258 
__exãnsi⁄__
 union

260 
	mru_msgrcv
;

261 
__sysˇŒ_¶⁄g_t
 
	m__ru_msgrcv_w‹d
;

264 
__exãnsi⁄__
 union

266 
	mru_nsig«ls
;

267 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsig«ls_w‹d
;

272 
__exãnsi⁄__
 union

274 
	mru_nvcsw
;

275 
__sysˇŒ_¶⁄g_t
 
	m__ru_nvcsw_w‹d
;

279 
__exãnsi⁄__
 union

281 
	mru_nivcsw
;

282 
__sysˇŒ_¶⁄g_t
 
	m__ru_nivcsw_w‹d
;

287 
	#PRIO_MIN
 -20

	)

288 
	#PRIO_MAX
 20

	)

292 
	e__¥i‹ôy_which


294 
	mPRIO_PROCESS
 = 0,

295 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

296 
	mPRIO_PGRP
 = 1,

297 
	#PRIO_PGRP
 
PRIO_PGRP


	)

298 
	mPRIO_USER
 = 2

299 
	#PRIO_USER
 
PRIO_USER


	)

303 
	g__BEGIN_DECLS


305 #ifde‡
__USE_GNU


307 #i‚de‡
__USE_FILE_OFFSET64


308 
	$¥limô
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

309 c⁄° 
æimô
 *
__√w_limô
,

310 
æimô
 *
__ﬁd_limô
Ë
__THROW
;

312 #ifde‡
__REDIRECT_NTH


313 
	`__REDIRECT_NTH
 (
¥limô
, (
__pid_t
 
__pid
,

314 
__æimô_ªsour˚
 
__ªsour˚
,

315 c⁄° 
æimô
 *
__√w_limô
,

316 
æimô
 *
__ﬁd_limô
), 
¥limô64
);

318 
	#¥limô
 
¥limô64


	)

321 #ifde‡
__USE_LARGEFILE64


322 
	$¥limô64
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

323 c⁄° 
æimô64
 *
__√w_limô
,

324 
æimô64
 *
__ﬁd_limô
Ë
__THROW
;

328 
__END_DECLS


	@/usr/include/bits/sched.h

20 #i‚de‡
__√ed_sched∑øm


22 #i‚de‡
_SCHED_H


28 
	#SCHED_OTHER
 0

	)

29 
	#SCHED_FIFO
 1

	)

30 
	#SCHED_RR
 2

	)

31 #ifde‡
__USE_GNU


32 
	#SCHED_BATCH
 3

	)

33 
	#SCHED_IDLE
 5

	)

35 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

38 #ifde‡
__USE_GNU


40 
	#CSIGNAL
 0x000000f‡

	)

41 
	#CLONE_VM
 0x00000100

	)

42 
	#CLONE_FS
 0x00000200

	)

43 
	#CLONE_FILES
 0x00000400

	)

44 
	#CLONE_SIGHAND
 0x00000800

	)

45 
	#CLONE_PTRACE
 0x00002000

	)

46 
	#CLONE_VFORK
 0x00004000

	)

48 
	#CLONE_PARENT
 0x00008000

	)

50 
	#CLONE_THREAD
 0x00010000

	)

51 
	#CLONE_NEWNS
 0x00020000

	)

52 
	#CLONE_SYSVSEM
 0x00040000

	)

53 
	#CLONE_SETTLS
 0x00080000

	)

54 
	#CLONE_PARENT_SETTID
 0x00100000

	)

56 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

58 
	#CLONE_DETACHED
 0x00400000

	)

59 
	#CLONE_UNTRACED
 0x00800000

	)

61 
	#CLONE_CHILD_SETTID
 0x01000000

	)

63 
	#CLONE_NEWUTS
 0x04000000

	)

64 
	#CLONE_NEWIPC
 0x08000000

	)

65 
	#CLONE_NEWUSER
 0x10000000

	)

66 
	#CLONE_NEWPID
 0x20000000

	)

67 
	#CLONE_NEWNET
 0x40000000

	)

68 
	#CLONE_IO
 0x80000000

	)

72 
	ssched_∑øm


74 
	m__sched_¥i‹ôy
;

77 
	g__BEGIN_DECLS


79 #ifde‡
__USE_GNU


81 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

82 
__Êags
, *
__¨g
, ...Ë
__THROW
;

85 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

88 
	$sched_gë˝u
 (Ë
__THROW
;

91 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

95 
__END_DECLS


99 #i‡!
deföed
 
__deföed_sched∑øm
 \

100 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

101 
	#__deföed_sched∑øm
 1

	)

103 
	s__sched_∑øm


105 
__sched_¥i‹ôy
;

107 #unde‡
__√ed_sched∑øm


111 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


112 
	#__˝u_£t_t_deföed


	)

114 
	#__CPU_SETSIZE
 1024

	)

115 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

118 
	t__˝u_mask
;

121 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

122 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

127 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

128 } 
	t˝u_£t_t
;

131 #i‡
	`__GNUC_PREREQ
 (2, 91)

132 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

133 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

135 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

137 
size_t
 
__i
; \

138 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

139 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

140 
__i
 = 0; __ò< 
__imax
; ++__i) \

141 
__bôs
[
__i
] = 0; \

142 
	}
} 0)

	)

144 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

145 (
__exãnsi⁄__
 \

146 ({ 
size_t
 
__˝u
 = (
˝u
); \

147 
__˝u
 / 8 < (
£tsize
) \

148 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

149 |
	`__CPUMASK
 (
__˝u
)) \

150 : 0; }))

	)

151 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

152 (
__exãnsi⁄__
 \

153 ({ 
size_t
 
__˝u
 = (
˝u
); \

154 
__˝u
 / 8 < (
£tsize
) \

155 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

156 &~
	`__CPUMASK
 (
__˝u
)) \

157 : 0; }))

	)

158 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

159 (
__exãnsi⁄__
 \

160 ({ 
size_t
 
__˝u
 = (
˝u
); \

161 
__˝u
 / 8 < (
£tsize
) \

162 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

163 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

164 : 0; }))

	)

166 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

167 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

169 #i‡
__GNUC_PREREQ
 (2, 91)

170 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

171 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

173 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

174 (
__exãnsi⁄__
 \

175 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

176 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

177 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

178 
size_t
 
__i
; \

179 
__i
 = 0; __ò< 
__imax
; ++__i) \

180 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

182 
__i
 =
__imax
; }))

	)

185 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

186 (
__exãnsi⁄__
 \

187 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

188 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

189 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

190 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

191 
size_t
 
__i
; \

192 
__i
 = 0; __ò< 
__imax
; ++__i) \

193 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

194 
__de°
; }))

	)

196 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

197 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

198 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

199 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

201 
__BEGIN_DECLS


203 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

204 
__THROW
;

205 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

206 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

208 
__END_DECLS


	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
__exãnsi⁄__
 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/bits/sigaction.h

19 #i‚de‡
_SIGNAL_H


24 
	ssiga˘i⁄


27 #ifde‡
__USE_POSIX199309


31 
__sigh™dÀr_t
 
	mß_h™dÀr
;

33 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

35 
	m__siga˘i⁄_h™dÀr
;

36 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

37 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

39 
__sigh™dÀr_t
 
	mß_h™dÀr
;

43 
__sig£t_t
 
	mß_mask
;

46 
	mß_Êags
;

49 (*
	mß_ª°‹î
) ();

53 
	#SA_NOCLDSTOP
 1

	)

54 
	#SA_NOCLDWAIT
 2

	)

55 
	#SA_SIGINFO
 4

	)

57 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


58 
	#SA_ONSTACK
 0x08000000

	)

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


61 
	#SA_RESTART
 0x10000000

	)

62 
	#SA_NODEFER
 0x40000000

	)

64 
	#SA_RESETHAND
 0x80000000

	)

66 #ifde‡
__USE_MISC


67 
	#SA_INTERRUPT
 0x20000000

	)

70 
	#SA_NOMASK
 
SA_NODEFER


	)

71 
	#SA_ONESHOT
 
SA_RESETHAND


	)

72 
	#SA_STACK
 
SA_ONSTACK


	)

76 
	#SIG_BLOCK
 0

	)

77 
	#SIG_UNBLOCK
 1

	)

78 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‚de‡
_BITS_SIGCONTEXT_H


19 
	#_BITS_SIGCONTEXT_H
 1

	)

21 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


25 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

26 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

27 
	#FP_XSTATE_MAGIC2_SIZE
 (
FP_XSTATE_MAGIC2
)

	)

29 
	s_Âx_sw_byãs


31 
__uöt32_t
 
	mmagic1
;

32 
__uöt32_t
 
	mexãnded_size
;

33 
__uöt64_t
 
	mx°©e_bv
;

34 
__uöt32_t
 
	mx°©e_size
;

35 
__uöt32_t
 
	m∑ddög
[7];

38 
	s_Âªg


40 
	msignifiˇnd
[4];

41 
	mexp⁄ít
;

44 
	s_Âxªg


46 
	msignifiˇnd
[4];

47 
	mexp⁄ít
;

48 
	m∑ddög
[3];

51 
	s_xmmªg


53 
__uöt32_t
 
	mñemít
[4];

58 #i‚de‡
__x86_64__


60 
	s_Â°©e


63 
__uöt32_t
 
	mcw
;

64 
__uöt32_t
 
	msw
;

65 
__uöt32_t
 
	mèg
;

66 
__uöt32_t
 
	mùoff
;

67 
__uöt32_t
 
	mcs£l
;

68 
__uöt32_t
 
	md©aoff
;

69 
__uöt32_t
 
	md©a£l
;

70 
_Âªg
 
	m_°
[8];

71 
	m°©us
;

72 
	mmagic
;

75 
__uöt32_t
 
	m_fx§_ív
[6];

76 
__uöt32_t
 
	mmxc§
;

77 
__uöt32_t
 
	mª£rved
;

78 
_Âxªg
 
	m_fx§_°
[8];

79 
_xmmªg
 
	m_xmm
[8];

80 
__uöt32_t
 
	m∑ddög
[56];

83 #i‚de‡
sigc⁄ãxt_°ru˘


88 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

91 
	#X86_FXSR_MAGIC
 0x0000

	)

93 
	ssigc⁄ãxt


95 
	mgs
, 
	m__gsh
;

96 
	mfs
, 
	m__fsh
;

97 
	mes
, 
	m__esh
;

98 
	mds
, 
	m__dsh
;

99 
	medi
;

100 
	mesi
;

101 
	mebp
;

102 
	me•
;

103 
	mebx
;

104 
	medx
;

105 
	mecx
;

106 
	móx
;

107 
	må≠no
;

108 
	mîr
;

109 
	meù
;

110 
	mcs
, 
	m__csh
;

111 
	meÊags
;

112 
	me•_©_sig«l
;

113 
	mss
, 
	m__ssh
;

114 
_Â°©e
 * 
	mÂ°©e
;

115 
	mﬁdmask
;

116 
	m¸2
;

121 
	s_Â°©e


124 
__uöt16_t
 
	mcwd
;

125 
__uöt16_t
 
	mswd
;

126 
__uöt16_t
 
	m·w
;

127 
__uöt16_t
 
	mf›
;

128 
__uöt64_t
 
	mrù
;

129 
__uöt64_t
 
	mrdp
;

130 
__uöt32_t
 
	mmxc§
;

131 
__uöt32_t
 
	mmx¸_mask
;

132 
_Âxªg
 
	m_°
[8];

133 
_xmmªg
 
	m_xmm
[16];

134 
__uöt32_t
 
	m∑ddög
[24];

137 
	ssigc⁄ãxt


139 
__uöt64_t
 
	mr8
;

140 
__uöt64_t
 
	mr9
;

141 
__uöt64_t
 
	mr10
;

142 
__uöt64_t
 
	mr11
;

143 
__uöt64_t
 
	mr12
;

144 
__uöt64_t
 
	mr13
;

145 
__uöt64_t
 
	mr14
;

146 
__uöt64_t
 
	mr15
;

147 
__uöt64_t
 
	mrdi
;

148 
__uöt64_t
 
	mrsi
;

149 
__uöt64_t
 
	mrbp
;

150 
__uöt64_t
 
	mrbx
;

151 
__uöt64_t
 
	mrdx
;

152 
__uöt64_t
 
	møx
;

153 
__uöt64_t
 
	mrcx
;

154 
__uöt64_t
 
	mr•
;

155 
__uöt64_t
 
	mrù
;

156 
__uöt64_t
 
	meÊags
;

157 
	mcs
;

158 
	mgs
;

159 
	mfs
;

160 
	m__∑d0
;

161 
__uöt64_t
 
	mîr
;

162 
__uöt64_t
 
	må≠no
;

163 
__uöt64_t
 
	mﬁdmask
;

164 
__uöt64_t
 
	m¸2
;

165 
__exãnsi⁄__
 union

167 
_Â°©e
 * 
	mÂ°©e
;

168 
__uöt64_t
 
	m__Â°©e_w‹d
;

170 
__uöt64_t
 
	m__ª£rved1
 [8];

175 
	s_xßve_hdr


177 
__uöt64_t
 
	mx°©e_bv
;

178 
__uöt64_t
 
	mª£rved1
[2];

179 
__uöt64_t
 
	mª£rved2
[5];

182 
	s_ymmh_°©e


184 
__uöt32_t
 
	mymmh_•a˚
[64];

187 
	s_x°©e


189 
_Â°©e
 
	mÂ°©e
;

190 
_xßve_hdr
 
	mx°©e_hdr
;

191 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/siginfo.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

20 && !
deföed
 
	g__√ed_sigevít_t


24 
	~<bôs/w‹dsize.h
>

26 #i‡(!
deföed
 
__have_sigvÆ_t
 \

27 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

28 || 
deföed
 
	g__√ed_sigevít_t
))

29 
	#__have_sigvÆ_t
 1

	)

32 
	usigvÆ


34 
	msivÆ_öt
;

35 *
	msivÆ_±r
;

36 } 
	tsigvÆ_t
;

39 #i‡(!
deföed
 
__have_sigöfo_t
 \

40 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

41 
	#__have_sigöfo_t
 1

	)

43 
	#__SI_MAX_SIZE
 128

	)

44 #i‡
__WORDSIZE
 == 64

45 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

47 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

50 #i‡
deföed
 
__x86_64__
 && 
__WORDSIZE
 == 32

55 
__˛ock_t
 
	t__©åibuã__
 ((
	t__Æig√d__
 (4))Ë
	t__sigchld_˛ock_t
;

56 
	#__SI_ALIGNMENT
 
	`__©åibuã__
 ((
	`__Æig√d__
 (8)))

	)

58 
__˛ock_t
 
	t__sigchld_˛ock_t
;

59 
	#__SI_ALIGNMENT


	)

64 
si_signo
;

65 
si_î∫o
;

67 
si_code
;

71 
_∑d
[
__SI_PAD_SIZE
];

76 
__pid_t
 
si_pid
;

77 
__uid_t
 
si_uid
;

78 } 
_kûl
;

83 
si_tid
;

84 
si_ovîrun
;

85 
sigvÆ_t
 
si_sigvÆ
;

86 } 
_timî
;

91 
__pid_t
 
si_pid
;

92 
__uid_t
 
si_uid
;

93 
sigvÆ_t
 
si_sigvÆ
;

94 } 
_π
;

99 
__pid_t
 
si_pid
;

100 
__uid_t
 
si_uid
;

101 
si_°©us
;

102 
__sigchld_˛ock_t
 
si_utime
;

103 
__sigchld_˛ock_t
 
si_°ime
;

104 } 
_sigchld
;

109 *
si_addr
;

110 
si_addr_lsb
;

111 } 
_sigÁu…
;

116 
si_b™d
;

117 
si_fd
;

118 } 
_sigpﬁl
;

123 *
_ˇŒ_addr
;

124 
_sysˇŒ
;

125 
_¨ch
;

126 } 
_sigsys
;

127 } 
_sifõlds
;

128 } 
	tsigöfo_t
 
	t__SI_ALIGNMENT
;

132 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

133 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

134 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

135 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

136 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

137 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

138 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

139 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

140 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

141 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

142 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

143 
	#si_addr_lsb
 
_sifõlds
.
_sigÁu…
.
si_addr_lsb


	)

144 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

145 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

146 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

147 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

148 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

155 
SI_ASYNCNL
 = -60,

156 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

157 
SI_TKILL
 = -6,

158 
	#SI_TKILL
 
SI_TKILL


	)

159 
SI_SIGIO
,

160 
	#SI_SIGIO
 
SI_SIGIO


	)

161 
SI_ASYNCIO
,

162 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

163 
SI_MESGQ
,

164 
	#SI_MESGQ
 
SI_MESGQ


	)

165 
SI_TIMER
,

166 
	#SI_TIMER
 
SI_TIMER


	)

167 
SI_QUEUE
,

168 
	#SI_QUEUE
 
SI_QUEUE


	)

169 
SI_USER
,

170 
	#SI_USER
 
SI_USER


	)

171 
SI_KERNEL
 = 0x80

172 
	#SI_KERNEL
 
SI_KERNEL


	)

179 
ILL_ILLOPC
 = 1,

180 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

181 
ILL_ILLOPN
,

182 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

183 
ILL_ILLADR
,

184 
	#ILL_ILLADR
 
ILL_ILLADR


	)

185 
ILL_ILLTRP
,

186 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

187 
ILL_PRVOPC
,

188 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

189 
ILL_PRVREG
,

190 
	#ILL_PRVREG
 
ILL_PRVREG


	)

191 
ILL_COPROC
,

192 
	#ILL_COPROC
 
ILL_COPROC


	)

193 
ILL_BADSTK


194 
	#ILL_BADSTK
 
ILL_BADSTK


	)

200 
FPE_INTDIV
 = 1,

201 
	#FPE_INTDIV
 
FPE_INTDIV


	)

202 
FPE_INTOVF
,

203 
	#FPE_INTOVF
 
FPE_INTOVF


	)

204 
FPE_FLTDIV
,

205 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

206 
FPE_FLTOVF
,

207 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

208 
FPE_FLTUND
,

209 
	#FPE_FLTUND
 
FPE_FLTUND


	)

210 
FPE_FLTRES
,

211 
	#FPE_FLTRES
 
FPE_FLTRES


	)

212 
FPE_FLTINV
,

213 
	#FPE_FLTINV
 
FPE_FLTINV


	)

214 
FPE_FLTSUB


215 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

221 
SEGV_MAPERR
 = 1,

222 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

223 
SEGV_ACCERR


224 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

230 
BUS_ADRALN
 = 1,

231 
	#BUS_ADRALN
 
BUS_ADRALN


	)

232 
BUS_ADRERR
,

233 
	#BUS_ADRERR
 
BUS_ADRERR


	)

234 
BUS_OBJERR
,

235 
	#BUS_OBJERR
 
BUS_OBJERR


	)

236 
BUS_MCEERR_AR
,

237 
	#BUS_MCEERR_AR
 
BUS_MCEERR_AR


	)

238 
BUS_MCEERR_AO


239 
	#BUS_MCEERR_AO
 
BUS_MCEERR_AO


	)

245 
TRAP_BRKPT
 = 1,

246 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

247 
TRAP_TRACE


248 
	#TRAP_TRACE
 
TRAP_TRACE


	)

254 
CLD_EXITED
 = 1,

255 
	#CLD_EXITED
 
CLD_EXITED


	)

256 
CLD_KILLED
,

257 
	#CLD_KILLED
 
CLD_KILLED


	)

258 
CLD_DUMPED
,

259 
	#CLD_DUMPED
 
CLD_DUMPED


	)

260 
CLD_TRAPPED
,

261 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

262 
CLD_STOPPED
,

263 
	#CLD_STOPPED
 
CLD_STOPPED


	)

264 
CLD_CONTINUED


265 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

271 
POLL_IN
 = 1,

272 
	#POLL_IN
 
POLL_IN


	)

273 
POLL_OUT
,

274 
	#POLL_OUT
 
POLL_OUT


	)

275 
POLL_MSG
,

276 
	#POLL_MSG
 
POLL_MSG


	)

277 
POLL_ERR
,

278 
	#POLL_ERR
 
POLL_ERR


	)

279 
POLL_PRI
,

280 
	#POLL_PRI
 
POLL_PRI


	)

281 
POLL_HUP


282 
	#POLL_HUP
 
POLL_HUP


	)

285 #unde‡
__√ed_sigöfo_t


289 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

290 && !
deföed
 
__have_sigevít_t


291 
	#__have_sigevít_t
 1

	)

294 
	#__SIGEV_MAX_SIZE
 64

	)

295 #i‡
__WORDSIZE
 == 64

296 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

298 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

302 #i‚de‡
__have_±hªad_©å_t


303 
±hªad_©å_t
 
	t±hªad_©å_t
;

304 
	#__have_±hªad_©å_t
 1

	)

307 
	ssigevít


309 
sigvÆ_t
 
sigev_vÆue
;

310 
sigev_signo
;

311 
sigev_nŸify
;

315 
_∑d
[
__SIGEV_PAD_SIZE
];

319 
__pid_t
 
_tid
;

323 (*
_fun˘i⁄
Ë(
sigvÆ_t
);

324 
±hªad_©å_t
 *
_©åibuã
;

325 } 
_sigev_thªad
;

326 } 
_sigev_un
;

327 } 
	tsigevít_t
;

330 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

331 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

336 
SIGEV_SIGNAL
 = 0,

337 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

338 
SIGEV_NONE
,

339 
	#SIGEV_NONE
 
SIGEV_NONE


	)

340 
SIGEV_THREAD
,

341 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

343 
SIGEV_THREAD_ID
 = 4

344 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

19 #ifdef 
_SIGNAL_H


22 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

23 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

24 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

26 #ifde‡
__USE_UNIX98


27 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

32 
	#SIGHUP
 1

	)

33 
	#SIGINT
 2

	)

34 
	#SIGQUIT
 3

	)

35 
	#SIGILL
 4

	)

36 
	#SIGTRAP
 5

	)

37 
	#SIGABRT
 6

	)

38 
	#SIGIOT
 6

	)

39 
	#SIGBUS
 7

	)

40 
	#SIGFPE
 8

	)

41 
	#SIGKILL
 9

	)

42 
	#SIGUSR1
 10

	)

43 
	#SIGSEGV
 11

	)

44 
	#SIGUSR2
 12

	)

45 
	#SIGPIPE
 13

	)

46 
	#SIGALRM
 14

	)

47 
	#SIGTERM
 15

	)

48 
	#SIGSTKFLT
 16

	)

49 
	#SIGCLD
 
SIGCHLD


	)

50 
	#SIGCHLD
 17

	)

51 
	#SIGCONT
 18

	)

52 
	#SIGSTOP
 19

	)

53 
	#SIGTSTP
 20

	)

54 
	#SIGTTIN
 21

	)

55 
	#SIGTTOU
 22

	)

56 
	#SIGURG
 23

	)

57 
	#SIGXCPU
 24

	)

58 
	#SIGXFSZ
 25

	)

59 
	#SIGVTALRM
 26

	)

60 
	#SIGPROF
 27

	)

61 
	#SIGWINCH
 28

	)

62 
	#SIGPOLL
 
SIGIO


	)

63 
	#SIGIO
 29

	)

64 
	#SIGPWR
 30

	)

65 
	#SIGSYS
 31

	)

66 
	#SIGUNUSED
 31

	)

68 
	#_NSIG
 65

	)

71 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

72 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

76 
	#__SIGRTMIN
 32

	)

77 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

19 #i‚de‡
_SIGNAL_H


25 
	ssig°ack


27 *
	mss_•
;

28 
	mss_⁄°ack
;

35 
	mSS_ONSTACK
 = 1,

36 
	#SS_ONSTACK
 
SS_ONSTACK


	)

37 
	mSS_DISABLE


38 
	#SS_DISABLE
 
SS_DISABLE


	)

42 
	#MINSIGSTKSZ
 2048

	)

45 
	#SIGSTKSZ
 8192

	)

49 
	ssigÆt°ack


51 *
	mss_•
;

52 
	mss_Êags
;

53 
size_t
 
	mss_size
;

54 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


30 
	$±hªad_sigmask
 (
__how
,

31 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

32 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

35 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

37 #ifde‡
__USE_GNU


39 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

40 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/sockaddr.h

23 #i‚de‡
_BITS_SOCKADDR_H


24 
	#_BITS_SOCKADDR_H
 1

	)

28 
	tß_Ámûy_t
;

34 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

35 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

37 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/socket.h

19 #i‚de‡
__BITS_SOCKET_H


20 
	#__BITS_SOCKET_H


	)

22 #i‚de‡
_SYS_SOCKET_H


26 
	#__√ed_size_t


	)

27 
	~<°ddef.h
>

29 
	~<sys/ty≥s.h
>

32 #i‚de‡
__sockÀn_t_deföed


33 
__sockÀn_t
 
	tsockÀn_t
;

34 
	#__sockÀn_t_deföed


	)

38 
	~<bôs/sockë_ty≥.h
>

41 
	#PF_UNSPEC
 0

	)

42 
	#PF_LOCAL
 1

	)

43 
	#PF_UNIX
 
PF_LOCAL


	)

44 
	#PF_FILE
 
PF_LOCAL


	)

45 
	#PF_INET
 2

	)

46 
	#PF_AX25
 3

	)

47 
	#PF_IPX
 4

	)

48 
	#PF_APPLETALK
 5

	)

49 
	#PF_NETROM
 6

	)

50 
	#PF_BRIDGE
 7

	)

51 
	#PF_ATMPVC
 8

	)

52 
	#PF_X25
 9

	)

53 
	#PF_INET6
 10

	)

54 
	#PF_ROSE
 11

	)

55 
	#PF_DEC√t
 12

	)

56 
	#PF_NETBEUI
 13

	)

57 
	#PF_SECURITY
 14

	)

58 
	#PF_KEY
 15

	)

59 
	#PF_NETLINK
 16

	)

60 
	#PF_ROUTE
 
PF_NETLINK


	)

61 
	#PF_PACKET
 17

	)

62 
	#PF_ASH
 18

	)

63 
	#PF_ECONET
 19

	)

64 
	#PF_ATMSVC
 20

	)

65 
	#PF_RDS
 21

	)

66 
	#PF_SNA
 22

	)

67 
	#PF_IRDA
 23

	)

68 
	#PF_PPPOX
 24

	)

69 
	#PF_WANPIPE
 25

	)

70 
	#PF_LLC
 26

	)

71 
	#PF_CAN
 29

	)

72 
	#PF_TIPC
 30

	)

73 
	#PF_BLUETOOTH
 31

	)

74 
	#PF_IUCV
 32

	)

75 
	#PF_RXRPC
 33

	)

76 
	#PF_ISDN
 34

	)

77 
	#PF_PHONET
 35

	)

78 
	#PF_IEEE802154
 36

	)

79 
	#PF_CAIF
 37

	)

80 
	#PF_ALG
 38

	)

81 
	#PF_NFC
 39

	)

82 
	#PF_VSOCK
 40

	)

83 
	#PF_MAX
 41

	)

86 
	#AF_UNSPEC
 
PF_UNSPEC


	)

87 
	#AF_LOCAL
 
PF_LOCAL


	)

88 
	#AF_UNIX
 
PF_UNIX


	)

89 
	#AF_FILE
 
PF_FILE


	)

90 
	#AF_INET
 
PF_INET


	)

91 
	#AF_AX25
 
PF_AX25


	)

92 
	#AF_IPX
 
PF_IPX


	)

93 
	#AF_APPLETALK
 
PF_APPLETALK


	)

94 
	#AF_NETROM
 
PF_NETROM


	)

95 
	#AF_BRIDGE
 
PF_BRIDGE


	)

96 
	#AF_ATMPVC
 
PF_ATMPVC


	)

97 
	#AF_X25
 
PF_X25


	)

98 
	#AF_INET6
 
PF_INET6


	)

99 
	#AF_ROSE
 
PF_ROSE


	)

100 
	#AF_DEC√t
 
PF_DEC√t


	)

101 
	#AF_NETBEUI
 
PF_NETBEUI


	)

102 
	#AF_SECURITY
 
PF_SECURITY


	)

103 
	#AF_KEY
 
PF_KEY


	)

104 
	#AF_NETLINK
 
PF_NETLINK


	)

105 
	#AF_ROUTE
 
PF_ROUTE


	)

106 
	#AF_PACKET
 
PF_PACKET


	)

107 
	#AF_ASH
 
PF_ASH


	)

108 
	#AF_ECONET
 
PF_ECONET


	)

109 
	#AF_ATMSVC
 
PF_ATMSVC


	)

110 
	#AF_RDS
 
PF_RDS


	)

111 
	#AF_SNA
 
PF_SNA


	)

112 
	#AF_IRDA
 
PF_IRDA


	)

113 
	#AF_PPPOX
 
PF_PPPOX


	)

114 
	#AF_WANPIPE
 
PF_WANPIPE


	)

115 
	#AF_LLC
 
PF_LLC


	)

116 
	#AF_CAN
 
PF_CAN


	)

117 
	#AF_TIPC
 
PF_TIPC


	)

118 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

119 
	#AF_IUCV
 
PF_IUCV


	)

120 
	#AF_RXRPC
 
PF_RXRPC


	)

121 
	#AF_ISDN
 
PF_ISDN


	)

122 
	#AF_PHONET
 
PF_PHONET


	)

123 
	#AF_IEEE802154
 
PF_IEEE802154


	)

124 
	#AF_CAIF
 
PF_CAIF


	)

125 
	#AF_ALG
 
PF_ALG


	)

126 
	#AF_NFC
 
PF_NFC


	)

127 
	#AF_VSOCK
 
PF_VSOCK


	)

128 
	#AF_MAX
 
PF_MAX


	)

134 
	#SOL_RAW
 255

	)

135 
	#SOL_DECNET
 261

	)

136 
	#SOL_X25
 262

	)

137 
	#SOL_PACKET
 263

	)

138 
	#SOL_ATM
 264

	)

139 
	#SOL_AAL
 265

	)

140 
	#SOL_IRDA
 266

	)

143 
	#SOMAXCONN
 128

	)

146 
	~<bôs/sockaddr.h
>

149 
	ssockaddr


151 
__SOCKADDR_COMMON
 (
ß_
);

152 
	mß_d©a
[14];

158 
	#__ss_Æig¡y≥
 

	)

159 
	#_SS_SIZE
 128

	)

160 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

162 
	ssockaddr_°‹age


164 
__SOCKADDR_COMMON
 (
ss_
);

165 
__ss_Æig¡y≥
 
	m__ss_Æign
;

166 
	m__ss_∑ddög
[
_SS_PADSIZE
];

173 
	mMSG_OOB
 = 0x01,

174 
	#MSG_OOB
 
MSG_OOB


	)

175 
	mMSG_PEEK
 = 0x02,

176 
	#MSG_PEEK
 
MSG_PEEK


	)

177 
	mMSG_DONTROUTE
 = 0x04,

178 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

179 #ifde‡
__USE_GNU


181 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

182 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

184 
	mMSG_CTRUNC
 = 0x08,

185 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

186 
	mMSG_PROXY
 = 0x10,

187 
	#MSG_PROXY
 
MSG_PROXY


	)

188 
	mMSG_TRUNC
 = 0x20,

189 
	#MSG_TRUNC
 
MSG_TRUNC


	)

190 
	mMSG_DONTWAIT
 = 0x40,

191 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

192 
	mMSG_EOR
 = 0x80,

193 
	#MSG_EOR
 
MSG_EOR


	)

194 
	mMSG_WAITALL
 = 0x100,

195 
	#MSG_WAITALL
 
MSG_WAITALL


	)

196 
	mMSG_FIN
 = 0x200,

197 
	#MSG_FIN
 
MSG_FIN


	)

198 
	mMSG_SYN
 = 0x400,

199 
	#MSG_SYN
 
MSG_SYN


	)

200 
	mMSG_CONFIRM
 = 0x800,

201 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

202 
	mMSG_RST
 = 0x1000,

203 
	#MSG_RST
 
MSG_RST


	)

204 
	mMSG_ERRQUEUE
 = 0x2000,

205 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

206 
	mMSG_NOSIGNAL
 = 0x4000,

207 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

208 
	mMSG_MORE
 = 0x8000,

209 
	#MSG_MORE
 
MSG_MORE


	)

210 
	mMSG_WAITFORONE
 = 0x10000,

211 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

212 
	mMSG_FASTOPEN
 = 0x20000000,

213 
	#MSG_FASTOPEN
 
MSG_FASTOPEN


	)

215 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

218 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

224 
	smsghdr


226 *
	mmsg_«me
;

227 
sockÀn_t
 
	mmsg_«mñí
;

229 
iovec
 *
	mmsg_iov
;

230 
size_t
 
	mmsg_iovÀn
;

232 *
	mmsg_c⁄åﬁ
;

233 
size_t
 
	mmsg_c⁄åﬁÀn
;

238 
	mmsg_Êags
;

242 
	scmsghdr


244 
size_t
 
	mcmsg_Àn
;

249 
	mcmsg_Àvñ
;

250 
	mcmsg_ty≥
;

251 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

252 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

257 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

258 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

260 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

262 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

263 
	#CMSG_FIRSTHDR
(
mhdr
) \

264 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

265 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

266 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

267 & (
size_t
Ë~( (size_tË- 1))

	)

268 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

269 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

270 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

272 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

273 
cmsghdr
 *
__cmsg
Ë
__THROW
;

274 #ifde‡
__USE_EXTERN_INLINES


275 #i‚de‡
_EXTERN_INLINE


276 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

278 
_EXTERN_INLINE
 
cmsghdr
 *

279 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

281 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

283  (
cmsghdr
 *) 0;

285 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

286 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

287 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


288 + 
__mhdr
->
msg_c⁄åﬁÀn
)

289 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

290 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

292  (
cmsghdr
 *) 0;

293  
__cmsg
;

294 
	}
}

301 
	mSCM_RIGHTS
 = 0x01

302 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

303 #ifde‡
__USE_GNU


304 , 
	mSCM_CREDENTIALS
 = 0x02

305 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

309 #ifde‡
__USE_GNU


311 
	su¸ed


313 
pid_t
 
	mpid
;

314 
uid_t
 
	muid
;

315 
gid_t
 
	mgid
;

320 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


321 #i‚de‡
FIOGETOWN


322 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

324 #i‚de‡
FIOSETOWN


325 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

327 #i‚de‡
SIOCATMARK


328 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

330 #i‚de‡
SIOCGPGRP


331 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

333 #i‚de‡
SIOCGSTAMP


334 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

336 #i‚de‡
SIOCGSTAMPNS


337 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

339 #i‚de‡
SIOCSPGRP


340 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

345 
	~<asm/sockë.h
>

347 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


348 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


349 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


350 #unde‡
FIOGETOWN


352 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


353 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


354 #unde‡
FIOSETOWN


356 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


357 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


358 #unde‡
SIOCATMARK


360 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


361 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


362 #unde‡
SIOCGPGRP


364 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


365 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


366 #unde‡
SIOCGSTAMP


368 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


369 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


370 #unde‡
SIOCGSTAMPNS


372 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


373 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


374 #unde‡
SIOCSPGRP


379 
	slögî


381 
	ml_⁄off
;

382 
	ml_lögî
;

	@/usr/include/bits/socket2.h

19 #i‚de‡
_SYS_SOCKET_H


23 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

24 
__Êags
);

25 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

26 
__Êags
), 
ªcv
);

27 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

29 
__Êags
), 
__ªcv_chk
)

30 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

33 
__f‹tify_fun˘i⁄
 
ssize_t


34 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

39  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

41 i‡(
__n
 > 
	`__bos0
 (
__buf
))

42  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

44  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

45 
	}
}

47 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

48 
size_t
 
__buÊí
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
,

50 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

51 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

52 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

53 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

54 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

55 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

56 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

57 
size_t
 
__buÊí
, 
__Êags
,

58 
__SOCKADDR_ARG
 
__addr
,

59 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

60 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

63 
__f‹tify_fun˘i⁄
 
ssize_t


64 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

65 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

67 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

70  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

71 
__addr
, 
__addr_Àn
);

72 i‡(
__n
 > 
	`__bos0
 (
__buf
))

73  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

74 
__addr
, 
__addr_Àn
);

76  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

77 
	}
}

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__glibc_ª£rved4
;

110 
	m__glibc_ª£rved5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_ARCH_u«lig√d
 1

	)

28 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

29 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

30 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

31 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

32 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

33 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

34 || 
deföed
 
	g__amdÁm10__
)

38 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

39 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

41 #i‚de‡
__STRING_INLINE


42 #i‚de‡
__exã∫_ölöe


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

51 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

52 | ((c⁄° *Ë(
§c
))[
idx
])

	)

53 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

54 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

55 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

56 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

57 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

62 
	#mem˝y
(
de°
, 
§c
, 
n
) \

63 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

64 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

65 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

66 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

67 ((
n
) == 0 \

68 ? (
de°
) \

69 : (((
n
) % 4 == 0) \

70 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

71 : (((
n
) % 2 == 0) \

72 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

73 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

75 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

76 
size_t
 
__n
);

78 
__STRING_INLINE
 *

79 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

81 
__d0
, 
__d1
;

82 *
__tmp
 = 
__de°
;

83 
__asm__
 
__vﬁ©ûe__


91 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

92 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

94  
__de°
;

95 
	}
}

97 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

98 
size_t
 
__n
);

100 
__STRING_INLINE
 *

101 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

103 
__d0
, 
__d1
;

104 *
__tmp
 = 
__de°
;

105 
__asm__
 
__vﬁ©ûe__


118 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

119 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

121  
__de°
;

122 
	}
}

124 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

126 
__STRING_INLINE
 *

127 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

129 
__d0
, 
__d1
, 
__d2
;

130 *
__tmp
 = 
__de°
;

131 
__asm__
 
__vﬁ©ûe__


142 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

143 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

144 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

145 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

147  
__de°
;

148 
	}
}

150 
	#_HAVE_STRING_ARCH_memmove
 1

	)

151 #i‚de‡
_FORCE_INLINES


154 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

156 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

157 
	`__asm__
 ("memmove");

159 
__STRING_INLINE
 *

160 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

162 
__d0
, 
__d1
, 
__d2
;

163 *
__tmp
 = 
__de°
;

164 i‡(
__de°
 < 
__§c
)

165 
__asm__
 
__vﬁ©ûe__


168 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

169 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

170 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

171 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

173 
__asm__
 
__vﬁ©ûe__


177 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

178 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

179 : "0" (
__n
), "1" (__¿- 1 + (c⁄° *Ë
__§c
),

180 "2" (
__n
 - 1 + (*Ë
__tmp
),

181 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

182  
__de°
;

183 
	}
}

187 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

188 #i‚de‡
_FORCE_INLINES


189 #i‚de‡
__PIC__


191 
__STRING_INLINE
 

192 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

194 
__d0
, 
__d1
, 
__d2
;

195 
__ªs
;

196 
__asm__
 
__vﬁ©ûe__


204 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

205 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

206 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

207 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

209  
__ªs
;

210 
	}
}

215 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

216 
	#_USE_STRING_ARCH_mem£t
 1

	)

217 
	#mem£t
(
s
, 
c
, 
n
) \

218 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

219 ? ((
n
) == 1 \

220 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

221 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

222 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

223 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

224 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

225 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

226 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

227 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

228 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

230 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

231 *((*Ë
__s
Ë(Ë(
c
); \

232 
__s
; })

	)

234 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

235 ({ *
__s
 = (
s
); \

237 
__ui
; \

238 
__usi
; \

239 
__uc
; \

240 } *
__u
 = 
__s
; \

241 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

247 i‡((
n
) == 3 || (n) >= 5) \

248 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

251 
n
) \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__ui
 = 
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

260 
__u
->
__ui
 = 
__c
; \

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

263 
__u
->
__usi
 = (Ë
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

265 
__u
->
__uc
 = (Ë
__c
; \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__ui
 = 
__c
; \

273 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

275 
__u
->
__ui
 = 
__c
; \

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

278 
__u
->
__usi
 = (Ë
__c
; \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__ui
 = 
__c
; \

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

291 
__u
->
__uc
 = (Ë
__c
; \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__ui
 = 
__c
; \

302 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

304 
__u
->
__ui
 = 
__c
; \

309 
__s
; })

	)

311 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

312 (((
n
) % 4 == 0) \

313 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

314 
n
) \

315 : (((
n
) % 2 == 0) \

316 ? 
	`__mem£t_c˙_by2
 (
s
, \

317 ((Ë((Ë(
c
))) * 0x01010101,\

318 
n
) \

319 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

321 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

322 
size_t
 
__n
);

324 
__STRING_INLINE
 *

325 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

327 *
__tmp
 = 
__s
;

328 
__d0
;

329 #ifde‡
__i686__


330 
__asm__
 
__vﬁ©ûe__


333 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338 
__asm__
 
__vﬁ©ûe__


344 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

345 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

346 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

349  
__s
;

350 
	}
}

352 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

353 
size_t
 
__n
);

355 
__STRING_INLINE
 *

356 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

358 
__d0
, 
__d1
;

359 *
__tmp
 = 
__s
;

360 #ifde‡
__i686__


361 
__asm__
 
__vﬁ©ûe__


365 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370 
__asm__
 
__vﬁ©ûe__


376 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

377 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

378 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

381  
__s
;

382 
	}
}

384 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

385 (((
n
) % 4 == 0) \

386 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

387 : (((
n
) % 2 == 0) \

388 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

389 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

391 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

393 
__STRING_INLINE
 *

394 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

396 *
__tmp
 = 
__s
;

397 
__d0
;

398 
__asm__
 
__vﬁ©ûe__


408 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

409 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

410 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

412  
__s
;

413 
	}
}

415 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

417 
__STRING_INLINE
 *

418 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

420 
__d0
, 
__d1
;

421 *
__tmp
 = 
__s
;

422 
__asm__
 
__vﬁ©ûe__


433 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

434 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

435 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

437  
__s
;

438 
	}
}

442 
	#_HAVE_STRING_ARCH_memchr
 1

	)

443 #i‚de‡
_FORCE_INLINES


444 
__STRING_INLINE
 *

445 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

447 
__d0
;

448 #ifde‡
__i686__


449 
__d1
;

451 *
__ªs
;

452 i‡(
__n
 == 0)

453  
NULL
;

454 #ifde‡
__i686__


455 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464 
__asm__
 
__vﬁ©ûe__


470 : "=D" (
__ªs
), "=&c" (
__d0
)

471 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

472 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

475  
__ªs
 - 1;

476 
	}
}

479 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

480 #i‚de‡
_FORCE_INLINES


481 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

483 
__STRING_INLINE
 *

484 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

486 
__d0
;

487 #ifde‡
__i686__


488 
__d1
;

490 *
__ªs
;

491 i‡(
__n
 == 0)

492  
NULL
;

493 #ifde‡
__i686__


494 
__asm__
 
__vﬁ©ûe__


500 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

501 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

502 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

505 
__asm__
 
__vﬁ©ûe__


512 : "=D" (
__ªs
), "=&c" (
__d0
)

513 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

514 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

517  
__ªs
;

518 
	}
}

519 #ifde‡
__USE_GNU


520 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

525 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

526 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

528 #i‚de‡
_FORCE_INLINES


529 
__STRING_INLINE
 *

530 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

532 
__d0
;

533 *
__ªs
;

534 
__asm__
 
__vﬁ©ûe__


537 : "=D" (
__ªs
), "=&c" (
__d0
)

538 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

539 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

541  
__ªs
 - 1;

542 
	}
}

543 #ifde‡
__USE_GNU


544 
__STRING_INLINE
 *

545 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

547  
	`__øwmemchr
 (
__s
, 
__c
);

548 
	}
}

554 
	#_HAVE_STRING_ARCH_°æí
 1

	)

555 
	#°æí
(
°r
) \

556 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

557 ? 
	`__buûtö_°æí
 (
°r
) \

558 : 
	`__°æí_g
 (
°r
)))

	)

559 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

561 
__STRING_INLINE
 
size_t


562 
	$__°æí_g
 (c⁄° *
__°r
)

564 
__dummy
;

565 c⁄° *
__tmp
 = 
__°r
;

566 
__asm__
 
__vﬁ©ûe__


572 : "Ù" (
__tmp
), "=&q" (
__dummy
)

573 : "0" (
__°r
),

574 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

576  
__tmp
 - 
__°r
 - 1;

577 
	}
}

581 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

582 
	#°r˝y
(
de°
, 
§c
) \

583 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

584 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

585 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

586 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

587 (c⁄° *Ë(
§c
), \

588 
	`°æí
 (
§c
) + 1)) \

589 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

591 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

592 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

594 
__ui
; \

595 
__usi
; \

596 
__uc
; \

597 
__c
; \

598 } *
__u
 = (*Ë
__de°
; \

599 
§˛í
) \

602 
__u
->
__uc
 = '\0'; \

605 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

608 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

609 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

610 
__u
->
__uc
 = '\0'; \

613 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

617 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

618 
__u
->
__uc
 = '\0'; \

621 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

622 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

623 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

629 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

630 
__u
->
__uc
 = '\0'; \

633 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

635 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

638 (*Ë
__de°
; }))

	)

640 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

642 
__STRING_INLINE
 *

643 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

645 *
__tmp
 = 
__de°
;

646 
__dummy
;

647 
__asm__
 
__vﬁ©ûe__


656 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

657 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

658 : "0" (
__§c
), "1" (
__tmp
),

659 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

661  
__de°
;

662 
	}
}

665 #ifde‡
__USE_GNU


666 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

668 
	#__°p˝y
(
de°
, 
§c
) \

669 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

670 ? (
	`°æí
 (
§c
) + 1 <= 8 \

671 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

672 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

673 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

674 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

675 ((
§˛í
) % 4 == 0 \

676 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

677 : ((
§˛í
) % 2 == 0 \

678 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

679 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

682 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

684 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

685 (
	`__exãnsi⁄__
 ({ union { \

686 
__ui
; \

687 
__usi
; \

688 
__uc
; \

689 
__c
; \

690 } *
__u
 = (*Ë(
de°
); \

691 
§˛í
) \

694 
__u
->
__uc
 = '\0'; \

697 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

698 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

701 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

702 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

703 
__u
->
__uc
 = '\0'; \

706 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__uc
 = '\0'; \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

721 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

722 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

723 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

724 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

725 
__u
->
__uc
 = '\0'; \

728 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

729 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

730 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

731 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

734 (*Ë
__u
; }))

	)

736 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

737 
size_t
 
__§˛í
);

739 
__STRING_INLINE
 *

740 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

742 *
__tmp
 = 
__de°
;

743 
__d0
, 
__d1
;

744 
__asm__
 
__vﬁ©ûe__


752 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

753 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

755  
__tmp
;

756 
	}
}

758 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

759 
size_t
 
__§˛í
);

761 
__STRING_INLINE
 *

762 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

764 *
__tmp
 = 
__de°
;

765 
__d0
, 
__d1
;

766 
__asm__
 
__vﬁ©ûe__


779 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

780 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

781 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

782 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

784  
__tmp
 + 2;

785 
	}
}

787 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

788 
size_t
 
__§˛í
);

790 
__STRING_INLINE
 *

791 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

793 
__d0
, 
__d1
;

794 *
__tmp
 = 
__de°
;

795 
__asm__
 
__vﬁ©ûe__


806 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

807 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

808 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

809 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

811  
__tmp
;

812 
	}
}

814 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

816 
__STRING_INLINE
 *

817 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

819 *
__tmp
 = 
__de°
;

820 
__dummy
;

821 
__asm__
 
__vﬁ©ûe__


830 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

831 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

832 : "0" (
__§c
), "1" (
__tmp
),

833 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

835  
__tmp
 - 1;

836 
	}
}

841 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

842 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

843 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

844 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

845 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

846 (c⁄° *Ë(
§c
), 
n
) \

847 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

848 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

849 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

850 (((
§˛í
) % 4 == 0) \

851 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

852 : (((
§˛í
) % 2 == 0) \

853 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

854 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

856 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

857 
size_t
 
__§˛í
, size_à
__n
);

859 
__STRING_INLINE
 *

860 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

862 *
__tmp
 = 
__de°
;

863 
__dummy1
, 
__dummy2
;

864 
__asm__
 
__vﬁ©ûe__


872 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

873 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

874 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

875 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

877 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

878  
__de°
;

879 
	}
}

881 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

882 
size_t
 
__§˛í
, size_à
__n
);

884 
__STRING_INLINE
 *

885 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

887 *
__tmp
 = 
__de°
;

888 
__dummy1
, 
__dummy2
;

889 
__asm__
 
__vﬁ©ûe__


902 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

903 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

904 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

905 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

907 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

908  
__de°
;

909 
	}
}

911 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

912 
size_t
 
__§˛í
, size_à
__n
);

914 
__STRING_INLINE
 *

915 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

917 
__d0
, 
__d1
;

918 *
__tmp
 = 
__de°
;

919 
__asm__
 
__vﬁ©ûe__


930 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

931 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

932 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

933 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

935 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

936  
__de°
;

937 
	}
}

939 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

940 
size_t
 
__n
);

942 
__STRING_INLINE
 *

943 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

945 *
__tmp
 = 
__de°
;

946 
__dummy
;

947 i‡(
__n
 > 0)

948 
__asm__
 
__vﬁ©ûe__


964 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

965 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

968  
__de°
;

969 
	}
}

973 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

974 
	#°rˇt
(
de°
, 
§c
) \

975 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

976 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

977 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

979 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

980 
size_t
 
__§˛í
);

982 
__STRING_INLINE
 *

983 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

985 #ifde‡
__i686__


986 
__d0
;

987 *
__tmp
;

988 
__asm__
 
__vﬁ©ûe__


990 : "=D" (
__tmp
), "=&c" (
__d0
),

991 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

992 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

993 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

995 --
__tmp
;

997 *
__tmp
 = 
__de°
 - 1;

998 
__asm__
 
__vﬁ©ûe__


1003 : "Ù" (
__tmp
),

1004 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1005 : "0" (
__tmp
),

1006 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1009 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1010  
__de°
;

1011 
	}
}

1013 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1015 
__STRING_INLINE
 *

1016 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1018 *
__tmp
 = 
__de°
 - 1;

1019 
__dummy
;

1020 
__asm__
 
__vﬁ©ûe__


1032 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1033 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1034 : "1" (
__tmp
), "2" (
__§c
),

1035 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1037  
__de°
;

1038 
	}
}

1042 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1043 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1044 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1045 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1046 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1047 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1048 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1049 (c⁄° *Ë(
§c
), \

1050 (
n
)Ë0, 
__de°
)) \

1051 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1053 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1054 
size_t
 
__n
);

1056 
__STRING_INLINE
 *

1057 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1059 *
__tmp
 = 
__de°
;

1060 
__dummy
;

1061 #ifde‡
__i686__


1062 
__asm__
 
__vﬁ©ûe__


1076 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1077 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1080 --
__tmp
;

1081 
__asm__
 
__vﬁ©ûe__


1098 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1099 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1102  
__de°
;

1103 
	}
}

1107 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1108 
	#°rcmp
(
s1
, 
s2
) \

1109 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1110 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1111 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1112 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1113 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1114 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1115 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1116 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1117 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1118 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1119 (c⁄° *Ë(
s2
), \

1120 
	`°æí
 (
s1
)) \

1121 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1122 (c⁄° *Ë(
s2
), \

1123 
	`°æí
 (
s1
))) \

1124 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1125 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1126 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1127 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1128 (c⁄° *Ë(
s2
), \

1129 
	`°æí
 (
s2
)) \

1130 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1131 (c⁄° *Ë(
s2
), \

1132 
	`°æí
 (
s2
))) \

1133 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1135 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1136 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1137 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1139 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1140 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1142 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1143 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1144 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1147 
__ªsu…
; }))

	)

1149 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1150 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1151 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1152 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1154 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1155 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1157 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1158 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1159 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1162 
__ªsu…
; }))

	)

1164 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1165 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1166 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1167 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1169 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1170 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1172 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1173 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1174 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1177 
__ªsu…
; }))

	)

1179 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1181 
__STRING_INLINE
 

1182 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1184 
__ªs
;

1185 
__asm__
 
__vﬁ©ûe__


1201 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1202 : "1" (
__s1
), "2" (
__s2
),

1203 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1204 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1206  
__ªs
;

1207 
	}
}

1211 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1212 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1213 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1214 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1215 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1216 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1217 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1219 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1220 
size_t
 
__n
);

1222 
__STRING_INLINE
 

1223 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1225 
__ªs
;

1226 
__asm__
 
__vﬁ©ûe__


1245 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1246 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1247 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1248 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1250  
__ªs
;

1251 
	}
}

1255 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1256 
	#_USE_STRING_ARCH_°rchr
 1

	)

1257 
	#°rchr
(
s
, 
c
) \

1258 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1259 ? ((
c
) == '\0' \

1260 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1261 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1262 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1264 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1266 
__STRING_INLINE
 *

1267 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1269 
__d0
;

1270 *
__ªs
;

1271 
__asm__
 
__vﬁ©ûe__


1281 : "Ù" (
__ªs
), "=&a" (
__d0
)

1282 : "0" (
__s
), "1" (
__c
),

1283 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1285  
__ªs
;

1286 
	}
}

1288 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1290 
__STRING_INLINE
 *

1291 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1293 
__d0
;

1294 *
__ªs
;

1295 
__asm__
 
__vﬁ©ûe__


1306 : "Ù" (
__ªs
), "=&a" (
__d0
)

1307 : "0" (
__s
), "1" (
__c
),

1308 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1310  
__ªs
;

1311 
	}
}

1315 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1316 
	#__°rch∫ul
(
s
, 
c
) \

1317 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1318 ? ((
c
) == '\0' \

1319 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1320 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1321 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1323 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1325 
__STRING_INLINE
 *

1326 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1328 
__d0
;

1329 *
__ªs
;

1330 
__asm__
 
__vﬁ©ûe__


1340 : "Ù" (
__ªs
), "=&a" (
__d0
)

1341 : "0" (
__s
), "1" (
__c
),

1342 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1344  
__ªs
;

1345 
	}
}

1347 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1349 
__STRING_INLINE
 *

1350 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1352 
__d0
;

1353 *
__ªs
;

1354 
__asm__
 
__vﬁ©ûe__


1365 : "Ù" (
__ªs
), "=&a" (
__d0
)

1366 : "0" (
__s
), "1" (
__c
),

1367 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1369  
__ªs
;

1370 
	}
}

1371 #ifde‡
__USE_GNU


1372 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1376 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1378 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1379 
	#ödex
(
s
, 
c
) \

1380 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1381 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1382 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1387 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1388 
	#°ºchr
(
s
, 
c
) \

1389 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1390 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1391 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1393 #ifde‡
__i686__


1394 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1396 
__STRING_INLINE
 *

1397 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1399 
__d0
, 
__d1
;

1400 *
__ªs
;

1401 
__asm__
 
__vﬁ©ûe__


1409 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1410 : "0" (1), "1" (
__s
), "2" (
__c
),

1411 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1413  
__ªs
 - 1;

1414 
	}
}

1416 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1418 
__STRING_INLINE
 *

1419 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1421 
__d0
, 
__d1
;

1422 *
__ªs
;

1423 
__asm__
 
__vﬁ©ûe__


1432 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1433 : "0" (1), "1" (
__s
), "2" (
__c
),

1434 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1436  
__ªs
 - 1;

1437 
	}
}

1439 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1441 
__STRING_INLINE
 *

1442 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1444 
__d0
, 
__d1
;

1445 *
__ªs
;

1446 
__asm__
 
__vﬁ©ûe__


1456 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1457 : "0" (0), "1" (
__s
), "2" (
__c
),

1458 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1460  
__ªs
;

1461 
	}
}

1463 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1465 
__STRING_INLINE
 *

1466 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1468 
__d0
, 
__d1
;

1469 *
__ªs
;

1470 
__asm__
 
__vﬁ©ûe__


1481 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1482 : "0" (0), "1" (
__s
), "2" (
__c
),

1483 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1485  
__ªs
;

1486 
	}
}

1490 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1492 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1493 
	#rödex
(
s
, 
c
) \

1494 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1495 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1496 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1502 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1503 
	#°rc•n
(
s
, 
ªje˘
) \

1504 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1505 ? ((
ªje˘
)[0] == '\0' \

1506 ? 
	`°æí
 (
s
) \

1507 : ((
ªje˘
)[1] == '\0' \

1508 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1509 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1510 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1512 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1514 #i‚de‡
_FORCE_INLINES


1515 
__STRING_INLINE
 
size_t


1516 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1518 
__d0
;

1519 *
__ªs
;

1520 
__asm__
 
__vﬁ©ûe__


1529 : "Ù" (
__ªs
), "=&a" (
__d0
)

1530 : "0" (
__s
), "1" (
__ªje˘
),

1531 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1533  (
__ªs
 - 1Ë- 
__s
;

1534 
	}
}

1537 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1538 
size_t
 
__ªje˘_Àn
);

1540 
__STRING_INLINE
 
size_t


1541 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1543 
__d0
, 
__d1
, 
__d2
;

1544 c⁄° *
__ªs
;

1545 
__asm__
 
__vﬁ©ûe__


1556 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1557 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1559  (
__ªs
 - 1Ë- 
__s
;

1560 
	}
}

1562 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1563 #ifde‡
__PIC__


1565 
__STRING_INLINE
 
size_t


1566 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1568 
__d0
, 
__d1
, 
__d2
;

1569 c⁄° *
__ªs
;

1570 
__asm__
 
__vﬁ©ûe__


1587 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1588 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1590  (
__ªs
 - 1Ë- 
__s
;

1591 
	}
}

1593 
__STRING_INLINE
 
size_t


1594 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1596 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1597 c⁄° *
__ªs
;

1598 
__asm__
 
__vﬁ©ûe__


1612 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1613 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1616  (
__ªs
 - 1Ë- 
__s
;

1617 
	}
}

1623 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1624 
	#°r•n
(
s
, 
ac˚±
) \

1625 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1626 ? ((
ac˚±
)[0] == '\0' \

1627 ? ((Ë(
s
), 0) \

1628 : ((
ac˚±
)[1] == '\0' \

1629 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1630 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1631 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1633 #i‚de‡
_FORCE_INLINES


1634 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1636 
__STRING_INLINE
 
size_t


1637 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1639 
__d0
;

1640 *
__ªs
;

1642 
__asm__
 
__vﬁ©ûe__


1648 : "Ù" (
__ªs
), "=&q" (
__d0
)

1649 : "0" (
__s
), "1" (
__ac˚±
),

1650 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1652  (
__ªs
 - 1Ë- 
__s
;

1653 
	}
}

1656 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1657 
size_t
 
__ac˚±_Àn
);

1659 
__STRING_INLINE
 
size_t


1660 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1662 
__d0
, 
__d1
, 
__d2
;

1663 c⁄° *
__ªs
;

1664 
__asm__
 
__vﬁ©ûe__


1675 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1676 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1679 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1680 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1682  (
__ªs
 - 1Ë- 
__s
;

1683 
	}
}

1685 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1686 #ifde‡
__PIC__


1688 
__STRING_INLINE
 
size_t


1689 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1691 
__d0
, 
__d1
, 
__d2
;

1692 c⁄° *
__ªs
;

1693 
__asm__
 
__vﬁ©ûe__


1709 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1710 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1712  (
__ªs
 - 1Ë- 
__s
;

1713 
	}
}

1715 
__STRING_INLINE
 
size_t


1716 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1718 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1719 c⁄° *
__ªs
;

1720 
__asm__
 
__vﬁ©ûe__


1734 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1735 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1737  (
__ªs
 - 1Ë- 
__s
;

1738 
	}
}

1743 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1744 
	#°Ωbrk
(
s
, 
ac˚±
) \

1745 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1746 ? ((
ac˚±
)[0] == '\0' \

1747 ? ((Ë(
s
), (*) 0) \

1748 : ((
ac˚±
)[1] == '\0' \

1749 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1750 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1751 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1753 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1754 
size_t
 
__ac˚±_Àn
);

1756 
__STRING_INLINE
 *

1757 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1759 
__d0
, 
__d1
, 
__d2
;

1760 *
__ªs
;

1761 
__asm__
 
__vﬁ©ûe__


1776 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1777 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1779  
__ªs
;

1780 
	}
}

1782 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1783 #ifde‡
__PIC__


1785 
__STRING_INLINE
 *

1786 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1788 
__d0
, 
__d1
, 
__d2
;

1789 *
__ªs
;

1790 
__asm__
 
__vﬁ©ûe__


1811 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1812 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1814  
__ªs
;

1815 
	}
}

1817 
__STRING_INLINE
 *

1818 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1820 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1821 *
__ªs
;

1822 
__asm__
 
__vﬁ©ûe__


1841 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1842 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1844  
__ªs
;

1845 
	}
}

1850 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1851 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1852 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1853 ? ((
√edÀ
)[0] == '\0' \

1854 ? (
hay°ack
) \

1855 : ((
√edÀ
)[1] == '\0' \

1856 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1857 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1858 
	`°æí
 (
√edÀ
)))) \

1859 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1863 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1864 c⁄° 
__√edÀ
[],

1865 
size_t
 
__√edÀ_Àn
);

1867 
__STRING_INLINE
 *

1868 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1869 
size_t
 
__√edÀ_Àn
)

1871 
__d0
, 
__d1
, 
__d2
;

1872 *
__ªs
;

1873 
__asm__
 
__vﬁ©ûe__


1886 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1887 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1889  
__ªs
;

1890 
	}
}

1892 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1893 c⁄° *
__√edÀ
);

1894 #ifde‡
__PIC__


1896 
__STRING_INLINE
 *

1897 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1899 
__d0
, 
__d1
, 
__d2
;

1900 *
__ªs
;

1901 
__asm__
 
__vﬁ©ûe__


1920 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1921 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1922 "d" (
__√edÀ
)

1924  
__ªs
;

1925 
	}
}

1927 
__STRING_INLINE
 *

1928 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1930 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1931 *
__ªs
;

1932 
__asm__
 
__vﬁ©ûe__


1949 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1950 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1951 "b" (
__√edÀ
)

1953  
__ªs
;

1954 
	}
}

1960 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1961 #ifde‡
__i686__


1962 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1963 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1964 ? 
	`__buûtö_ffs
 (
w‹d
) \

1965 : ({ 
__˙t
, 
__tmp
; \

1966 
__asm__
 
__vﬁ©ûe__
 \

1969 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1970 : "rm" (
w‹d
), "1" (-1)); \

1971 
__˙t
 + 1; }))

	)

1973 #i‚de‡
ff¶


1974 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1979 #i‚de‡
_FORCE_INLINES


1980 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_ARCH_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_ARCH_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_ARCH_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_ARCH_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
Ë(- 
	`__°rcmp_cg
 (s2, s1,Ü2))

	)

895 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


896 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

897 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

898 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

899 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

900 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

901 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

902 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

908 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


909 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


910 #i‡
__GNUC_PREREQ
 (3, 2)

911 
	#°rc•n
(
s
, 
ªje˘
) \

912 
__exãnsi⁄__
 \

913 ({ 
__r0
, 
__r1
, 
__r2
; \

914 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

915 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

916 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

917 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

918 ? 
	`°æí
 (
s
) \

919 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

920 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

921 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

922 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

923 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

924 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

925 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

926 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

928 
	#°rc•n
(
s
, 
ªje˘
) \

929 
__exãnsi⁄__
 \

930 ({ 
__r0
, 
__r1
, 
__r2
; \

931 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

932 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

933 ? 
	`°æí
 (
s
) \

934 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

935 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

936 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

937 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

938 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

939 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

940 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

941 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

945 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

946 
__STRING_INLINE
 
size_t


947 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

949 
size_t
 
__ªsu…
 = 0;

950 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

951 ++
__ªsu…
;

952  
__ªsu…
;

953 
	}
}

955 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

956 
__ªje˘2
);

957 
__STRING_INLINE
 
size_t


958 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

960 
size_t
 
__ªsu…
 = 0;

961 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


962 && 
__s
[
__ªsu…
] !
__ªje˘2
)

963 ++
__ªsu…
;

964  
__ªsu…
;

965 
	}
}

967 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

968 
__ªje˘2
, 
__ªje˘3
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

971 
__ªje˘3
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


975 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

976 ++
__ªsu…
;

977  
__ªsu…
;

978 
	}
}

984 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


985 #i‚de‡
_HAVE_STRING_ARCH_°r•n


986 #i‡
__GNUC_PREREQ
 (3, 2)

987 
	#°r•n
(
s
, 
ac˚±
) \

988 
__exãnsi⁄__
 \

989 ({ 
__a0
, 
__a1
, 
__a2
; \

990 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

991 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

992 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

993 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

994 ? ((Ë(
s
), (
size_t
) 0) \

995 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

996 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

997 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

998 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

999 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1000 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1001 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1002 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1004 
	#°r•n
(
s
, 
ac˚±
) \

1005 
__exãnsi⁄__
 \

1006 ({ 
__a0
, 
__a1
, 
__a2
; \

1007 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1008 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1009 ? ((Ë(
s
), (
size_t
) 0) \

1010 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1011 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1012 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1013 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1014 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1015 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1016 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1017 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1021 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1022 
__STRING_INLINE
 
size_t


1023 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1025 
size_t
 
__ªsu…
 = 0;

1027 
__s
[
__ªsu…
] =
__ac˚±
)

1028 ++
__ªsu…
;

1029  
__ªsu…
;

1030 
	}
}

1032 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1033 
__ac˚±2
);

1034 
__STRING_INLINE
 
size_t


1035 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1037 
size_t
 
__ªsu…
 = 0;

1039 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1040 ++
__ªsu…
;

1041  
__ªsu…
;

1042 
	}
}

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1045 
__ac˚±2
, 
__ac˚±3
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1052 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1053 ++
__ªsu…
;

1054  
__ªsu…
;

1055 
	}
}

1060 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1061 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1062 #i‡
__GNUC_PREREQ
 (3, 2)

1063 
	#°Ωbrk
(
s
, 
ac˚±
) \

1064 
__exãnsi⁄__
 \

1065 ({ 
__a0
, 
__a1
, 
__a2
; \

1066 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1067 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1068 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1069 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1070 ? ((Ë(
s
), (*Ë
NULL
) \

1071 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1072 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1073 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1074 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1075 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1076 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1077 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1078 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1080 
	#°Ωbrk
(
s
, 
ac˚±
) \

1081 
__exãnsi⁄__
 \

1082 ({ 
__a0
, 
__a1
, 
__a2
; \

1083 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1084 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1085 ? ((Ë(
s
), (*Ë
NULL
) \

1086 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1087 ? 
	`°rchr
 (
s
, 
__a0
) \

1088 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1089 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1090 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1091 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1092 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1093 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1097 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1098 
__ac˚±2
);

1099 
__STRING_INLINE
 *

1100 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1103 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1104 ++
__s
;

1105  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1106 
	}
}

1108 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1109 
__ac˚±2
, 
__ac˚±3
);

1110 
__STRING_INLINE
 *

1111 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1114 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1115 && *
__s
 !
__ac˚±3
)

1116 ++
__s
;

1117  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1118 
	}
}

1124 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1125 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1126 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1127 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1128 ? (*Ë(
size_t
Ë(
hay°ack
) \

1129 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1130 ? 
	`°rchr
 (
hay°ack
, \

1131 ((c⁄° *Ë(
√edÀ
))[0]) \

1132 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1133 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1137 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1138 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1139 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1140 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1141 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1142 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1143 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1144 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1147 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1148 
__STRING_INLINE
 *

1149 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1151 *
__ªsu…
;

1152 i‡(
__s
 =
NULL
)

1153 
__s
 = *
__√xç
;

1154 *
__s
 =
__£p
)

1155 ++
__s
;

1156 
__ªsu…
 = 
NULL
;

1157 i‡(*
__s
 != '\0')

1159 
__ªsu…
 = 
__s
++;

1160 *
__s
 != '\0')

1161 i‡(*
__s
++ =
__£p
)

1163 
__s
[-1] = '\0';

1167 *
__√xç
 = 
__s
;

1168  
__ªsu…
;

1169 
	}
}

1170 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1171 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1176 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1177 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1179 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1180 
	#__°r£p
(
s
, 
ªje˘
) \

1181 
__exãnsi⁄__
 \

1182 ({ 
__r0
, 
__r1
, 
__r2
; \

1183 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1184 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1185 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1186 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1187 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1188 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1189 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1190 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1191 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1192 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1193 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1194 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1197 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1198 
__STRING_INLINE
 *

1199 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1201 *
__ªtvÆ
 = *
__s
;

1202 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1203 *(*
__s
)++ = '\0';

1204  
__ªtvÆ
;

1205 
	}
}

1207 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1208 
__STRING_INLINE
 *

1209 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1211 *
__ªtvÆ
 = *
__s
;

1212 i‡(
__ªtvÆ
 !
NULL
)

1214 *
__˝
 = 
__ªtvÆ
;

1217 i‡(*
__˝
 == '\0')

1219 
__˝
 = 
NULL
;

1222 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1224 *
__˝
++ = '\0';

1227 ++
__˝
;

1229 *
__s
 = 
__˝
;

1231  
__ªtvÆ
;

1232 
	}
}

1234 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1235 
__ªje˘3
);

1236 
__STRING_INLINE
 *

1237 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1239 *
__ªtvÆ
 = *
__s
;

1240 i‡(
__ªtvÆ
 !
NULL
)

1242 *
__˝
 = 
__ªtvÆ
;

1245 i‡(*
__˝
 == '\0')

1247 
__˝
 = 
NULL
;

1250 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1252 *
__˝
++ = '\0';

1255 ++
__˝
;

1257 *
__s
 = 
__˝
;

1259  
__ªtvÆ
;

1260 
	}
}

1261 #ifde‡
__USE_BSD


1262 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1269 #ifde‡
__USE_MISC


1271 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1272 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1273 
	~<°dlib.h
>

1276 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1278 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1279 
	#__°rdup
(
s
) \

1280 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1281 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1282 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1283 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1284 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1285 i‡(
__ªtvÆ
 !
NULL
) \

1286 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1287 
__ªtvÆ
; 
	}
})) \

1288 : 
	`__°rdup
 (
s
)))

	)

1290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1291 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1295 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1297 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1298 
__THROW
 
__©åibuã_mÆloc__
;

1299 
	#__°∫dup
(
s
, 
n
) \

1300 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1301 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1302 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1303 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1304 
size_t
 
__n
 = (
n
); \

1305 *
__ªtvÆ
; \

1306 i‡(
__n
 < 
__Àn
) \

1307 
__Àn
 = 
__n
 + 1; \

1308 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1309 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1313 
__Àn
 - 1); \

1315 
__ªtvÆ
; 
	}
})) \

1316 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1318 #ifde‡
__USE_GNU


1319 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1325 #i‚de‡
_FORCE_INLINES


1326 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

25 #i‚de‡
__˝lu•lus


29 #unde‡
mem˝y


30 #unde‡
memmove


31 #unde‡
mem£t


32 #unde‡
°rˇt


33 #unde‡
°r˝y


34 #unde‡
°∫ˇt


35 #unde‡
°∫˝y


36 #ifde‡
__USE_GNU


37 #unde‡
memp˝y


38 #unde‡
°p˝y


40 #ifde‡
__USE_BSD


41 #unde‡
bc›y


42 #unde‡
bzîo


47 
__f‹tify_fun˘i⁄
 *

48 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

54 
__f‹tify_fun˘i⁄
 *

55 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

57  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

58 
	}
}

60 #ifde‡
__USE_GNU


61 
__f‹tify_fun˘i⁄
 *

62 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

63 
size_t
 
__Àn
))

65  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

66 
	}
}

75 
__f‹tify_fun˘i⁄
 *

76 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

79 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

81 
	`__w¨n_mem£t_zîo_Àn
 ();

82  
__de°
;

84  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

85 
	}
}

87 #ifde‡
__USE_BSD


88 
__f‹tify_fun˘i⁄
 

89 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

91 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

92 
	}
}

94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

104  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

105 
	}
}

107 #ifde‡
__USE_GNU


108 
__f‹tify_fun˘i⁄
 *

109 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

111  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

112 
	}
}

116 
__f‹tify_fun˘i⁄
 *

117 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

118 
size_t
 
__Àn
))

120  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

121 
	}
}

124 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

125 
size_t
 
__de°Àn
Ë
__THROW
;

126 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

127 
size_t
 
__n
), 
°≤˝y
);

129 
__f‹tify_fun˘i⁄
 *

130 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

132 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

133 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

134  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

135  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

136 
	}
}

139 
__f‹tify_fun˘i⁄
 *

140 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

142  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

143 
	}
}

146 
__f‹tify_fun˘i⁄
 *

147 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

148 
size_t
 
__Àn
))

150  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

151 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_BSD


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 1000000l

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/bits/uio.h

18 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_UIO_H


23 
	#_BITS_UIO_H
 1

	)

25 
	~<sys/ty≥s.h
>

39 
	#UIO_MAXIOV
 1024

	)

43 
	siovec


45 *
	miov_ba£
;

46 
size_t
 
	miov_Àn
;

52 #ifde‡
__USE_GNU


53 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


54 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

56 
__BEGIN_DECLS


59 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

60 
__liov˙t
,

61 c⁄° 
iovec
 *
__rvec
,

62 
__riov˙t
,

63 
__Êags
)

64 
__THROW
;

67 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

68 
__liov˙t
,

69 c⁄° 
iovec
 *
__rvec
,

70 
__riov˙t
,

71 
__Êags
)

72 
__THROW
;

74 
__END_DECLS


	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/utsname.h

18 #i‚de‡
_SYS_UTSNAME_H


23 
	#_UTSNAME_LENGTH
 65

	)

28 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

40 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


41 #i‚de‡
__ENUM_IDTYPE_T


42 
	#__ENUM_IDTYPE_T
 1

	)

46 #unde‡
P_ALL


47 #unde‡
P_PID


48 #unde‡
P_PGID


52 
	mP_ALL
,

53 
	mP_PID
,

54 
	mP_PGID


55 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_BSD


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

32 
	#__√ed_IOV_MAX


	)

33 
	~<bôs/°dio_lim.h
>

65 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

70 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

73 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

76 
	#NL_MSGMAX
 
INT_MAX


	)

80 
	#NL_NMAX
 
INT_MAX


	)

83 
	#NL_SETMAX
 
INT_MAX


	)

86 
	#NL_TEXTMAX
 
INT_MAX


	)

89 
	#NZERO
 20

	)

93 #ifde‡
INT_MAX


94 #i‡
INT_MAX
 == 32767

95 
	#WORD_BIT
 16

	)

97 #i‡
INT_MAX
 == 2147483647

98 
	#WORD_BIT
 32

	)

101 
	#WORD_BIT
 64

	)

104 #ñi‡
deföed
 
__INT_MAX__


105 #i‡
__INT_MAX__
 == 32767

106 
	#WORD_BIT
 16

	)

108 #i‡
__INT_MAX__
 == 2147483647

109 
	#WORD_BIT
 32

	)

112 
	#WORD_BIT
 64

	)

116 
	#WORD_BIT
 32

	)

120 #ifde‡
LONG_MAX


121 #i‡
LONG_MAX
 == 2147483647

122 
	#LONG_BIT
 32

	)

125 
	#LONG_BIT
 64

	)

127 #ñi‡
deföed
 
__LONG_MAX__


128 #i‡
__LONG_MAX__
 == 2147483647

129 
	#LONG_BIT
 32

	)

132 
	#LONG_BIT
 64

	)

135 
	~<bôs/w‹dsize.h
>

136 #i‡
__WORDSIZE
 == 64

137 
	#LONG_BIT
 64

	)

139 
	#LONG_BIT
 32

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

134 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

136 #i‡
__GNUC_PREREQ
 (4,3)

137 
	#__w¨nde˛
(
«me
, 
msg
) \

138 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

139 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

140 
	#__îr‹de˛
(
«me
, 
msg
) \

141 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

143 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

144 
	#__w¨«âr
(
msg
)

	)

145 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

149 #i‡
__GNUC_PREREQ
 (2,97)

151 
	#__Êex¨r
 []

	)

153 #ifde‡
__GNUC__


154 
	#__Êex¨r
 [0]

	)

156 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

157 
	#__Êex¨r
 []

	)

160 
	#__Êex¨r
 [1]

	)

176 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

178 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

179 #ifde‡
__˝lu•lus


180 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

181 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

187 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

188 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

190 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

191 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

204 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

205 
	#__©åibuã__
(
xyz
Ë

	)

211 #i‡
__GNUC_PREREQ
 (2,96)

212 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

214 
	#__©åibuã_mÆloc__


	)

219 #i‡
__GNUC_PREREQ
 (4, 3)

220 
	#__©åibuã_Æloc_size__
(
∑øms
) \

221 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

223 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

229 #i‡
__GNUC_PREREQ
 (2,96)

230 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

232 
	#__©åibuã_puª__


	)

236 #i‡
__GNUC_PREREQ
 (2,5)

237 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

239 
	#__©åibuã_c⁄°__


	)

245 #i‡
__GNUC_PREREQ
 (3,1)

246 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

247 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

249 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

250 
	#__©åibuã_noölöe__


	)

254 #i‡
__GNUC_PREREQ
 (3,2)

255 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

257 
	#__©åibuã_dïªˇãd__


	)

266 #i‡
__GNUC_PREREQ
 (2,8)

267 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

269 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

276 #i‡
__GNUC_PREREQ
 (2,97)

277 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

278 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

280 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

285 #i‡
__GNUC_PREREQ
 (3,3)

286 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

288 
	#__n⁄nuŒ
(
∑øms
)

	)

293 #i‡
__GNUC_PREREQ
 (3,4)

294 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

295 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

296 #i‡
__USE_FORTIFY_LEVEL
 > 0

297 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

300 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

302 #i‚de‡
__wur


303 
	#__wur


	)

307 #i‡
__GNUC_PREREQ
 (3,2)

308 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

310 
	#__Æways_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

318 
	#__©åibuã_¨tificül__


	)

321 #ifde‡
__GNUC__


326 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__GNUC_GNU_INLINE__


327 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

328 
	#__exã∫_Æways_ölöe
 \

329 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

331 
	#__exã∫_ölöe
 
__ölöe


	)

332 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

335 
	#__exã∫_ölöe


	)

336 
	#__exã∫_Æways_ölöe


	)

341 #i‡
__GNUC_PREREQ
 (4,3)

342 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

343 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

350 #i‡!
__GNUC_PREREQ
 (2,8)

351 
	#__exãnsi⁄__


	)

355 #i‡!
__GNUC_PREREQ
 (2,92)

356 
	#__ª°ri˘


	)

362 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


363 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

365 #ifde‡
__GNUC__


366 
	#__ª°ri˘_¨r


	)

368 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

369 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

372 
	#__ª°ri˘_¨r


	)

377 #i‡
__GNUC__
 >= 3

378 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

379 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

381 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

382 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

385 
	~<bôs/w‹dsize.h
>

387 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


388 
	#__LDBL_COMPAT
 1

	)

389 #ifde‡
__REDIRECT


390 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

391 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

392 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

393 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

394 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

395 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

396 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

397 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

398 
	#__LDBL_REDIR_DECL
(
«me
) \

399 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

400 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

401 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

402 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

403 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

406 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


407 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

408 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

409 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

410 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

411 
	#__LDBL_REDIR_DECL
(
«me
)

	)

412 #ifde‡
__REDIRECT


413 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

414 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

415 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/poll.h

19 #i‚def 
_SYS_POLL_H


20 
	#_SYS_POLL_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/pﬁl.h
>

26 #ifde‡
__USE_GNU


28 
	~<bôs/sig£t.h
>

30 
	#__√ed_time•ec


	)

31 
	~<time.h
>

36 
	tnfds_t
;

39 
	spﬁlfd


41 
	mfd
;

42 
	mevíts
;

43 
	mªvíts
;

47 
__BEGIN_DECLS


57 
pﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
);

59 #ifde‡
__USE_GNU


66 
µﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

67 c⁄° 
time•ec
 *
__timeout
,

68 c⁄° 
__sig£t_t
 *
__ss
);

71 
	g__END_DECLS


75 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


76 
	~<bôs/pﬁl2.h
>

	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

18 #i‚de‡
_SYS_UCONTEXT_H


19 
	#_SYS_UCONTEXT_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sig«l.h
>

26 
	~<bôs/sigc⁄ãxt.h
>

28 #ifde‡
__x86_64__


31 
__exãnsi⁄__
 
	tgªg_t
;

34 
	#NGREG
 23

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_R8
 = 0,

44 
	#REG_R8
 
REG_R8


	)

45 
	mREG_R9
,

46 
	#REG_R9
 
REG_R9


	)

47 
	mREG_R10
,

48 
	#REG_R10
 
REG_R10


	)

49 
	mREG_R11
,

50 
	#REG_R11
 
REG_R11


	)

51 
	mREG_R12
,

52 
	#REG_R12
 
REG_R12


	)

53 
	mREG_R13
,

54 
	#REG_R13
 
REG_R13


	)

55 
	mREG_R14
,

56 
	#REG_R14
 
REG_R14


	)

57 
	mREG_R15
,

58 
	#REG_R15
 
REG_R15


	)

59 
	mREG_RDI
,

60 
	#REG_RDI
 
REG_RDI


	)

61 
	mREG_RSI
,

62 
	#REG_RSI
 
REG_RSI


	)

63 
	mREG_RBP
,

64 
	#REG_RBP
 
REG_RBP


	)

65 
	mREG_RBX
,

66 
	#REG_RBX
 
REG_RBX


	)

67 
	mREG_RDX
,

68 
	#REG_RDX
 
REG_RDX


	)

69 
	mREG_RAX
,

70 
	#REG_RAX
 
REG_RAX


	)

71 
	mREG_RCX
,

72 
	#REG_RCX
 
REG_RCX


	)

73 
	mREG_RSP
,

74 
	#REG_RSP
 
REG_RSP


	)

75 
	mREG_RIP
,

76 
	#REG_RIP
 
REG_RIP


	)

77 
	mREG_EFL
,

78 
	#REG_EFL
 
REG_EFL


	)

79 
	mREG_CSGSFS
,

80 
	#REG_CSGSFS
 
REG_CSGSFS


	)

81 
	mREG_ERR
,

82 
	#REG_ERR
 
REG_ERR


	)

83 
	mREG_TRAPNO
,

84 
	#REG_TRAPNO
 
REG_TRAPNO


	)

85 
	mREG_OLDMASK
,

86 
	#REG_OLDMASK
 
REG_OLDMASK


	)

87 
	mREG_CR2


88 
	#REG_CR2
 
REG_CR2


	)

92 
	s_libc_Âxªg


94 
	msignifiˇnd
[4];

95 
	mexp⁄ít
;

96 
	m∑ddög
[3];

99 
	s_libc_xmmªg


101 
__uöt32_t
 
	mñemít
[4];

104 
	s_libc_Â°©e


107 
__uöt16_t
 
	mcwd
;

108 
__uöt16_t
 
	mswd
;

109 
__uöt16_t
 
	m·w
;

110 
__uöt16_t
 
	mf›
;

111 
__uöt64_t
 
	mrù
;

112 
__uöt64_t
 
	mrdp
;

113 
__uöt32_t
 
	mmxc§
;

114 
__uöt32_t
 
	mmx¸_mask
;

115 
_libc_Âxªg
 
	m_°
[8];

116 
_libc_xmmªg
 
	m_xmm
[16];

117 
__uöt32_t
 
	m∑ddög
[24];

121 
_libc_Â°©e
 *
	tÂªg£t_t
;

126 
gªg£t_t
 
	mgªgs
;

128 
Âªg£t_t
 
	mÂªgs
;

129 
__exãnsi⁄__
 
	m__ª£rved1
 [8];

130 } 
	tmc⁄ãxt_t
;

133 
	suc⁄ãxt


135 
	muc_Êags
;

136 
uc⁄ãxt
 *
	muc_lök
;

137 
°ack_t
 
	muc_°ack
;

138 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

139 
__sig£t_t
 
	muc_sigmask
;

140 
_libc_Â°©e
 
	m__Âªgs_mem
;

141 } 
	tuc⁄ãxt_t
;

146 
	tgªg_t
;

149 
	#NGREG
 19

	)

152 
gªg_t
 
	tgªg£t_t
[
NGREG
];

154 #ifde‡
__USE_GNU


158 
	mREG_GS
 = 0,

159 
	#REG_GS
 
REG_GS


	)

160 
	mREG_FS
,

161 
	#REG_FS
 
REG_FS


	)

162 
	mREG_ES
,

163 
	#REG_ES
 
REG_ES


	)

164 
	mREG_DS
,

165 
	#REG_DS
 
REG_DS


	)

166 
	mREG_EDI
,

167 
	#REG_EDI
 
REG_EDI


	)

168 
	mREG_ESI
,

169 
	#REG_ESI
 
REG_ESI


	)

170 
	mREG_EBP
,

171 
	#REG_EBP
 
REG_EBP


	)

172 
	mREG_ESP
,

173 
	#REG_ESP
 
REG_ESP


	)

174 
	mREG_EBX
,

175 
	#REG_EBX
 
REG_EBX


	)

176 
	mREG_EDX
,

177 
	#REG_EDX
 
REG_EDX


	)

178 
	mREG_ECX
,

179 
	#REG_ECX
 
REG_ECX


	)

180 
	mREG_EAX
,

181 
	#REG_EAX
 
REG_EAX


	)

182 
	mREG_TRAPNO
,

183 
	#REG_TRAPNO
 
REG_TRAPNO


	)

184 
	mREG_ERR
,

185 
	#REG_ERR
 
REG_ERR


	)

186 
	mREG_EIP
,

187 
	#REG_EIP
 
REG_EIP


	)

188 
	mREG_CS
,

189 
	#REG_CS
 
REG_CS


	)

190 
	mREG_EFL
,

191 
	#REG_EFL
 
REG_EFL


	)

192 
	mREG_UESP
,

193 
	#REG_UESP
 
REG_UESP


	)

194 
	mREG_SS


195 
	#REG_SS
 
REG_SS


	)

200 
	s_libc_Âªg


202 
	msignifiˇnd
[4];

203 
	mexp⁄ít
;

206 
	s_libc_Â°©e


208 
	mcw
;

209 
	msw
;

210 
	mèg
;

211 
	mùoff
;

212 
	mcs£l
;

213 
	md©aoff
;

214 
	md©a£l
;

215 
_libc_Âªg
 
	m_°
[8];

216 
	m°©us
;

220 
_libc_Â°©e
 *
	tÂªg£t_t
;

225 
gªg£t_t
 
	mgªgs
;

228 
Âªg£t_t
 
	mÂªgs
;

229 
	mﬁdmask
;

230 
	m¸2
;

231 } 
	tmc⁄ãxt_t
;

234 
	suc⁄ãxt


236 
	muc_Êags
;

237 
uc⁄ãxt
 *
	muc_lök
;

238 
°ack_t
 
	muc_°ack
;

239 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

240 
__sig£t_t
 
	muc_sigmask
;

241 
_libc_Â°©e
 
	m__Âªgs_mem
;

242 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/uio.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 020200000

	)

103 #i‚de‡
F_GETLK


104 #i‚de‡
__USE_FILE_OFFSET64


105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

124 #ifde‡
__USE_XOPEN2K8


125 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

126 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

127 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

130 #ifde‡
__USE_GNU


131 
	#O_DIRECT
 
__O_DIRECT


	)

132 
	#O_NOATIME
 
__O_NOATIME


	)

133 
	#O_PATH
 
__O_PATH


	)

134 
	#O_TMPFILE
 
__O_TMPFILE


	)

140 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


141 
	#O_DSYNC
 
__O_DSYNC


	)

142 #i‡
deföed
 
__O_RSYNC


143 
	#O_RSYNC
 
__O_RSYNC


	)

145 
	#O_RSYNC
 
O_SYNC


	)

150 
	#F_DUPFD
 0

	)

151 
	#F_GETFD
 1

	)

152 
	#F_SETFD
 2

	)

153 
	#F_GETFL
 3

	)

154 
	#F_SETFL
 4

	)

156 #i‚de‡
__F_SETOWN


157 
	#__F_SETOWN
 8

	)

158 
	#__F_GETOWN
 9

	)

161 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


162 
	#F_SETOWN
 
__F_SETOWN


	)

163 
	#F_GETOWN
 
__F_GETOWN


	)

166 #i‚de‡
__F_SETSIG


167 
	#__F_SETSIG
 10

	)

168 
	#__F_GETSIG
 11

	)

170 #i‚de‡
__F_SETOWN_EX


171 
	#__F_SETOWN_EX
 15

	)

172 
	#__F_GETOWN_EX
 16

	)

175 #ifde‡
__USE_GNU


176 
	#F_SETSIG
 
__F_SETSIG


	)

177 
	#F_GETSIG
 
__F_GETSIG


	)

178 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

179 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

182 #ifde‡
__USE_GNU


183 
	#F_SETLEASE
 1024

	)

184 
	#F_GETLEASE
 1025

	)

185 
	#F_NOTIFY
 1026

	)

186 
	#F_SETPIPE_SZ
 1031

	)

187 
	#F_GETPIPE_SZ
 1032

	)

189 #ifde‡
__USE_XOPEN2K8


190 
	#F_DUPFD_CLOEXEC
 1030

	)

195 
	#FD_CLOEXEC
 1

	)

197 #i‚de‡
F_RDLCK


199 
	#F_RDLCK
 0

	)

200 
	#F_WRLCK
 1

	)

201 
	#F_UNLCK
 2

	)

206 #i‚de‡
F_EXLCK


207 
	#F_EXLCK
 4

	)

208 
	#F_SHLCK
 8

	)

211 #ifde‡
__USE_BSD


213 
	#LOCK_SH
 1

	)

214 
	#LOCK_EX
 2

	)

215 
	#LOCK_NB
 4

	)

217 
	#LOCK_UN
 8

	)

220 #ifde‡
__USE_GNU


221 
	#LOCK_MAND
 32

	)

222 
	#LOCK_READ
 64

	)

223 
	#LOCK_WRITE
 128

	)

224 
	#LOCK_RW
 192

	)

227 #ifde‡
__USE_GNU


229 
	#DN_ACCESS
 0x00000001

	)

230 
	#DN_MODIFY
 0x00000002

	)

231 
	#DN_CREATE
 0x00000004

	)

232 
	#DN_DELETE
 0x00000008

	)

233 
	#DN_RENAME
 0x00000010

	)

234 
	#DN_ATTRIB
 0x00000020

	)

235 
	#DN_MULTISHOT
 0x80000000

	)

239 #ifde‡
__USE_GNU


241 
	e__pid_ty≥


243 
	mF_OWNER_TID
 = 0,

244 
	mF_OWNER_PID
,

245 
	mF_OWNER_PGRP
,

246 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


250 
	sf_ow√r_ex


252 
__pid_ty≥
 
	mty≥
;

253 
__pid_t
 
	mpid
;

259 #ifdef 
__USE_BSD


260 
	#FAPPEND
 
O_APPEND


	)

261 
	#FFSYNC
 
O_FSYNC


	)

262 
	#FASYNC
 
O_ASYNC


	)

263 
	#FNONBLOCK
 
O_NONBLOCK


	)

264 
	#FNDELAY
 
O_NDELAY


	)

267 #i‚de‡
__POSIX_FADV_DONTNEED


268 
	#__POSIX_FADV_DONTNEED
 4

	)

269 
	#__POSIX_FADV_NOREUSE
 5

	)

272 #ifde‡
__USE_XOPEN2K


273 
	#POSIX_FADV_NORMAL
 0

	)

274 
	#POSIX_FADV_RANDOM
 1

	)

275 
	#POSIX_FADV_SEQUENTIAL
 2

	)

276 
	#POSIX_FADV_WILLNEED
 3

	)

277 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

278 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

282 #ifde‡
__USE_GNU


284 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

287 
	#SYNC_FILE_RANGE_WRITE
 2

	)

290 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

295 
	#SPLICE_F_MOVE
 1

	)

296 
	#SPLICE_F_NONBLOCK
 2

	)

299 
	#SPLICE_F_MORE
 4

	)

300 
	#SPLICE_F_GIFT
 8

	)

304 
	#FALLOC_FL_KEEP_SIZE
 1

	)

307 
	#FALLOC_FL_PUNCH_HOLE
 2

	)

311 
	sfûe_h™dÀ


313 
	mh™dÀ_byãs
;

314 
	mh™dÀ_ty≥
;

316 
	mf_h™dÀ
[0];

320 
	#MAX_HANDLE_SZ
 128

	)

324 #ifde‡
__USE_ATFILE


325 
	#AT_FDCWD
 -100

	)

328 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

329 
	#AT_REMOVEDIR
 0x200

	)

331 
	#AT_SYMLINK_FOLLOW
 0x400

	)

332 #ifde‡
__USE_GNU


333 
	#AT_NO_AUTOMOUNT
 0x800

	)

335 
	#AT_EMPTY_PATH
 0x1000

	)

337 
	#AT_EACCESS
 0x200

	)

341 
	g__BEGIN_DECLS


343 #ifde‡
__USE_GNU


346 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

347 
__THROW
;

354 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

355 
__Êags
);

362 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

363 
size_t
 
__cou¡
, 
__Êags
);

369 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

370 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

371 
__Êags
);

377 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

378 
__Êags
);

384 #i‚de‡
__USE_FILE_OFFSET64


385 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

387 #ifde‡
__REDIRECT


388 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

389 
__off64_t
 
__Àn
),

390 
ÁŒoˇã64
);

392 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

397 
__off64_t
 
__Àn
);

402 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

403 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

404 
__Êags
Ë
__THROW
;

410 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

411 
__Êags
);

415 
__END_DECLS


	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/poll.h

18 #i‚de‡
_SYS_POLL_H


25 
	#POLLIN
 0x001

	)

26 
	#POLLPRI
 0x002

	)

27 
	#POLLOUT
 0x004

	)

29 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


31 
	#POLLRDNORM
 0x040

	)

32 
	#POLLRDBAND
 0x080

	)

33 
	#POLLWRNORM
 0x100

	)

34 
	#POLLWRBAND
 0x200

	)

37 #ifde‡
__USE_GNU


39 
	#POLLMSG
 0x400

	)

40 
	#POLLREMOVE
 0x1000

	)

41 
	#POLLRDHUP
 0x2000

	)

47 
	#POLLERR
 0x008

	)

48 
	#POLLHUP
 0x010

	)

49 
	#POLLNVAL
 0x020

	)

	@/usr/include/bits/poll2.h

19 #i‚de‡
_SYS_POLL_H


24 
__BEGIN_DECLS


26 
__REDIRECT
 (
__pﬁl_Æüs
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

27 
__timeout
), 
pﬁl
);

28 
__pﬁl_chk
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
,

29 
__SIZE_TYPE__
 
__fd¶í
);

30 
__REDIRECT
 (
__pﬁl_chk_w¨n
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

31 
__timeout
, 
__SIZE_TYPE__
 
__fd¶í
),

32 
__pﬁl_chk
)

33 
__w¨«âr
 ("poll called with fds bufferÅoo small fileÇfdsÉntries");

35 
__f‹tify_fun˘i⁄
 

36 
	$pﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
)

38 i‡(
	`__bos
 (
__fds
Ë!(
__SIZE_TYPE__
) -1)

40 i‡(! 
	`__buûtö_c⁄°™t_p
 (
__nfds
))

41  
	`__pﬁl_chk
 (
__fds
, 
__nfds
, 
__timeout
, 
	`__bos
 (__fds));

42 i‡(
	`__bos
 (
__fds
Ë/  (*__fdsË< 
__nfds
)

43  
	`__pﬁl_chk_w¨n
 (
__fds
, 
__nfds
, 
__timeout
, 
	`__bos
 (__fds));

46  
	`__pﬁl_Æüs
 (
__fds
, 
__nfds
, 
__timeout
);

47 
	}
}

50 #ifde‡
__USE_GNU


51 
__REDIRECT
 (
__µﬁl_Æüs
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

52 c⁄° 
time•ec
 *
__timeout
,

53 c⁄° 
__sig£t_t
 *
__ss
), 
µﬁl
);

54 
__µﬁl_chk
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

55 c⁄° 
time•ec
 *
__timeout
,

56 c⁄° 
__sig£t_t
 *
__ss
, 
__SIZE_TYPE__
 
__fd¶í
);

57 
__REDIRECT
 (
__µﬁl_chk_w¨n
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

58 c⁄° 
time•ec
 *
__timeout
,

59 c⁄° 
__sig£t_t
 *
__ss
,

60 
__SIZE_TYPE__
 
__fd¶í
),

61 
__µﬁl_chk
)

62 
__w¨«âr
 ("ppoll called with fds bufferÅoo small fileÇfdsÉntries");

64 
__f‹tify_fun˘i⁄
 

65 
	$µﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, c⁄° 
time•ec
 *
__timeout
,

66 c⁄° 
__sig£t_t
 *
__ss
)

68 i‡(
	`__bos
 (
__fds
Ë!(
__SIZE_TYPE__
) -1)

70 i‡(! 
	`__buûtö_c⁄°™t_p
 (
__nfds
))

71  
	`__µﬁl_chk
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
, 
	`__bos
 (__fds));

72 i‡(
	`__bos
 (
__fds
Ë/  (*__fdsË< 
__nfds
)

73  
	`__µﬁl_chk_w¨n
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
,

74 
	`__bos
 (
__fds
));

77  
	`__µﬁl_Æüs
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
);

78 
	}
}

81 
	g__END_DECLS


	@/usr/include/bits/socket_type.h

19 #i‚de‡
_SYS_SOCKET_H


24 
	e__sockë_ty≥


26 
	mSOCK_STREAM
 = 1,

28 
	#SOCK_STREAM
 
SOCK_STREAM


	)

29 
	mSOCK_DGRAM
 = 2,

31 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

32 
	mSOCK_RAW
 = 3,

33 
	#SOCK_RAW
 
SOCK_RAW


	)

34 
	mSOCK_RDM
 = 4,

35 
	#SOCK_RDM
 
SOCK_RDM


	)

36 
	mSOCK_SEQPACKET
 = 5,

38 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

39 
	mSOCK_DCCP
 = 6,

40 
	#SOCK_DCCP
 
SOCK_DCCP


	)

41 
	mSOCK_PACKET
 = 10,

44 
	#SOCK_PACKET
 
SOCK_PACKET


	)

49 
	mSOCK_CLOEXEC
 = 02000000,

51 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

52 
	mSOCK_NONBLOCK
 = 00004000

54 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

	@/usr/include/bits/stdio-lock.h

19 #i‚de‡
_BITS_STDIO_LOCK_H


20 
	#_BITS_STDIO_LOCK_H
 1

	)

22 
	~<bôs/libc-lock.h
>

23 
	~<lowÀvñlock.h
>

27 
	#_IO_lock_öex≥nsive
 1

	)

29 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

31 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

33 
	#_IO_lock_öô
(
_«me
) \

34 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

36 
	#_IO_lock_föi
(
_«me
) \

37 ((Ë0)

	)

39 
	#_IO_lock_lock
(
_«me
) \

41 *
__£lf
 = 
THREAD_SELF
; \

42 i‡((
_«me
).
ow√r
 !
__£lf
) \

44 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

45 (
_«me
).
ow√r
 = 
__£lf
; \

47 ++(
_«me
).
˙t
; \

48 } 0)

	)

50 
	#_IO_lock_åylock
(
_«me
) \

52 
__ªsu…
 = 0; \

53 *
__£lf
 = 
THREAD_SELF
; \

54 i‡((
_«me
).
ow√r
 !
__£lf
) \

56 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

58 (
_«me
).
ow√r
 = 
__£lf
; \

59 (
_«me
).
˙t
 = 1; \

62 
__ªsu…
 = 
EBUSY
; \

65 ++(
_«me
).
˙t
; \

66 
__ªsu…
; \

67 })

	)

69 
	#_IO_lock_u∆ock
(
_«me
) \

71 i‡(--(
_«me
).
˙t
 == 0) \

73 (
_«me
).
ow√r
 = 
NULL
; \

74 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

76 } 0)

	)

80 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

81 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

82 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

83 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

84 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

85 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

87 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


89 #ifde‡
__EXCEPTIONS


90 
	#_IO_acquúe_lock
(
_Â
) \

92 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

93 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

94 (
_Â
); \

95 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

96 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

98 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

99 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

100 (
_Â
); \

101 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

103 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

104 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

106 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 #ifde‡
__x86_64__


79 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

82 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 #i‚de‡
TIOCSRS485


66 
	#TIOCSRS485
 0x542F

	)

68 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

69 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

70 
	#TIOCGDEV
 
	`_IOR
('T', 0x32, Ë

	)

71 
	#TCGETX
 0x5432

	)

72 
	#TCSETX
 0x5433

	)

73 
	#TCSETXF
 0x5434

	)

74 
	#TCSETXW
 0x5435

	)

75 
	#TIOCSIG
 
	`_IOW
('T', 0x36, Ë

	)

76 
	#TIOCVHANGUP
 0x5437

	)

77 
	#TIOCGPKT
 
	`_IOR
('T', 0x38, Ë

	)

78 
	#TIOCGPTLCK
 
	`_IOR
('T', 0x39, Ë

	)

79 
	#TIOCGEXCL
 
	`_IOR
('T', 0x40, Ë

	)

81 
	#FIONCLEX
 0x5450

	)

82 
	#FIOCLEX
 0x5451

	)

83 
	#FIOASYNC
 0x5452

	)

84 
	#TIOCSERCONFIG
 0x5453

	)

85 
	#TIOCSERGWILD
 0x5454

	)

86 
	#TIOCSERSWILD
 0x5455

	)

87 
	#TIOCGLCKTRMIOS
 0x5456

	)

88 
	#TIOCSLCKTRMIOS
 0x5457

	)

89 
	#TIOCSERGSTRUCT
 0x5458

	)

90 
	#TIOCSERGETLSR
 0x5459

	)

91 
	#TIOCSERGETMULTI
 0x545A

	)

92 
	#TIOCSERSETMULTI
 0x545B

	)

94 
	#TIOCMIWAIT
 0x545C

	)

95 
	#TIOCGICOUNT
 0x545D

	)

101 #i‚de‡
FIOQSIZE


102 
	#FIOQSIZE
 0x5460

	)

106 
	#TIOCPKT_DATA
 0

	)

107 
	#TIOCPKT_FLUSHREAD
 1

	)

108 
	#TIOCPKT_FLUSHWRITE
 2

	)

109 
	#TIOCPKT_STOP
 4

	)

110 
	#TIOCPKT_START
 8

	)

111 
	#TIOCPKT_NOSTOP
 16

	)

112 
	#TIOCPKT_DOSTOP
 32

	)

113 
	#TIOCPKT_IOCTL
 64

	)

115 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

25 
	#SO_REUSEPORT
 15

	)

26 #i‚de‡
SO_PASSCRED


27 
	#SO_PASSCRED
 16

	)

28 
	#SO_PEERCRED
 17

	)

29 
	#SO_RCVLOWAT
 18

	)

30 
	#SO_SNDLOWAT
 19

	)

31 
	#SO_RCVTIMEO
 20

	)

32 
	#SO_SNDTIMEO
 21

	)

36 
	#SO_SECURITY_AUTHENTICATION
 22

	)

37 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

38 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

40 
	#SO_BINDTODEVICE
 25

	)

43 
	#SO_ATTACH_FILTER
 26

	)

44 
	#SO_DETACH_FILTER
 27

	)

45 
	#SO_GET_FILTER
 
SO_ATTACH_FILTER


	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

66 
	#SO_RXQ_OVFL
 40

	)

68 
	#SO_WIFI_STATUS
 41

	)

69 
	#SCM_WIFI_STATUS
 
SO_WIFI_STATUS


	)

70 
	#SO_PEEK_OFF
 42

	)

73 
	#SO_NOFCS
 43

	)

75 
	#SO_LOCK_FILTER
 44

	)

77 
	#SO_SELECT_ERR_QUEUE
 45

	)

79 
	#SO_BUSY_POLL
 46

	)

81 
	#SO_MAX_PACING_RATE
 47

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/libc-lock.h

19 #i‚de‡
_BITS_LIBC_LOCK_H


20 
	#_BITS_LIBC_LOCK_H
 1

	)

22 
	~<±hªad.h
>

23 
	#__√ed_NULL


	)

24 
	~<°ddef.h
>

27 #ifde‡
_LIBC


28 
	~<lowÀvñlock.h
>

29 
	~<és.h
>

30 
	~<±hªad-fun˘i⁄s.h
>

31 
	~<î∫o.h
>

32 
	~<gnu/›ti⁄-groups.h
>

36 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


37 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


38 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

40 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

43 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

53 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

54 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

59 #i‡
LLL_LOCK_INITIALIZER
 == 0

60 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

61 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

63 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

64 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

66 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

67 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

69 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

70 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

71 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

72 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

76 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

77 
	#__libc_lock_öô_ªcursive
(
NAME
) \

78 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

80 
	#__libc_lock_öô_ªcursive
(
NAME
) \

82 i‡(
__±hªad_muãx_öô
 !
NULL
) \

84 
±hªad_muãx©å_t
 
__©å
; \

85 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

86 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

87 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

88 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

90 } 0)

	)

94 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

95 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

97 
	#__libc_lock_föi_ªcursive
(
NAME
) \

98 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
).
muãx
), 0)

	)

102 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

103 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

107 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

108 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

110 #i‡
__OPTION_EGLIBC_BIG_MACROS


111 
	#__libc_lock_lock_ªcursive
(
NAME
) \

113 *
£lf
 = 
THREAD_SELF
; \

114 i‡((
NAME
).
ow√r
 !
£lf
) \

116 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

117 (
NAME
).
ow√r
 = 
£lf
; \

119 ++(
NAME
).
˙t
; \

120 } 0)

	)

122 
	#__libc_lock_lock_ªcursive
(
NAME
) \

123 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

126 
	#__libc_lock_lock_ªcursive
(
NAME
) \

127 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

131 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

132 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

136 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

137 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

139 #i‡
__OPTION_EGLIBC_BIG_MACROS


140 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

142 
ªsu…
 = 0; \

143 *
£lf
 = 
THREAD_SELF
; \

144 i‡((
NAME
).
ow√r
 !
£lf
) \

146 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

148 (
NAME
).
ow√r
 = 
£lf
; \

149 (
NAME
).
˙t
 = 1; \

152 
ªsu…
 = 
EBUSY
; \

155 ++(
NAME
).
˙t
; \

156 
ªsu…
; \

157 })

	)

159 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

160 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

163 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

164 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

168 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

169 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

173 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

174 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

176 #i‡
__OPTION_EGLIBC_BIG_MACROS


178 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

180 i‡(--(
NAME
).
˙t
 == 0) \

182 (
NAME
).
ow√r
 = 
NULL
; \

183 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

185 } 0)

	)

187 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

188 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

191 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

192 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

199 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

200 (*
routöe
Ë(*), *
¨g
);

201 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

202 
execuã
);

205 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

206 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

207 
_avaû
; \

208 i‡(
DOIT
) { \

209 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

210 i‡(
_avaû
) { \

211 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

212 
ARG
)); \

214 
_buf„r
.
__routöe
 = (
FCT
); \

215 
_buf„r
.
__¨g
 = (
ARG
); \

218 
_avaû
 = 0; \

219 }

	)

222 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

223 i‡(
_avaû
) { \

224 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

225 } i‡(
DOIT
) \

226 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

227 
	}

	)
}

232 #ifde‡
_LIBC


233 
	~"libc-lockP.h
"

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_¸óã_moduÀ


	)

13 
	#__°ub_Áâach


	)

14 
	#__°ub_fchÊags


	)

15 
	#__°ub_fdëach


	)

16 
	#__°ub_gë_kî√l_syms


	)

17 
	#__°ub_gëmsg


	)

18 
	#__°ub_gây


	)

19 
	#__°ub_lchmod


	)

20 
	#__°ub_nfs£rv˘l


	)

21 
	#__°ub_putmsg


	)

22 
	#__°ub_quîy_moduÀ


	)

23 
	#__°ub_ªvoke


	)

24 
	#__°ub_£éogö


	)

25 
	#__°ub_sigªtu∫


	)

26 
	#__°ub_s°k


	)

27 
	#__°ub_°ty


	)

28 
	#__°ub_u£lib


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LOCALES
 1

	)

34 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

35 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

36 
	#__OPTION_EGLIBC_NIS
 1

	)

37 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

38 
	#__OPTION_EGLIBC_RCMD
 1

	)

39 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

40 
	#__OPTION_EGLIBC_SPAWN
 1

	)

41 
	#__OPTION_EGLIBC_STREAMS
 1

	)

42 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

43 
	#__OPTION_EGLIBC_UTMP
 1

	)

44 
	#__OPTION_EGLIBC_UTMPX
 1

	)

45 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

46 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

47 
	#__OPTION_POSIX_REGEXP
 1

	)

48 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

49 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@
1
.
1
/usr/include
247
6458
config.h
contrib/yaml-0.1.4/config.h
contrib/yaml-0.1.4/include/yaml.h
contrib/yaml-0.1.4/src/api.c
contrib/yaml-0.1.4/src/dumper.c
contrib/yaml-0.1.4/src/emitter.c
contrib/yaml-0.1.4/src/loader.c
contrib/yaml-0.1.4/src/parser.c
contrib/yaml-0.1.4/src/reader.c
contrib/yaml-0.1.4/src/scanner.c
contrib/yaml-0.1.4/src/writer.c
contrib/yaml-0.1.4/src/yaml_private.h
contrib/yaml-0.1.4/tests/example-deconstructor-alt.c
contrib/yaml-0.1.4/tests/example-deconstructor.c
contrib/yaml-0.1.4/tests/example-reformatter-alt.c
contrib/yaml-0.1.4/tests/example-reformatter.c
contrib/yaml-0.1.4/tests/run-dumper.c
contrib/yaml-0.1.4/tests/run-emitter.c
contrib/yaml-0.1.4/tests/run-loader.c
contrib/yaml-0.1.4/tests/run-parser.c
contrib/yaml-0.1.4/tests/run-scanner.c
contrib/yaml-0.1.4/tests/test-reader.c
contrib/yaml-0.1.4/tests/test-version.c
include/nc.h
src/event/nc_epoll.c
src/event/nc_event.h
src/event/nc_evport.c
src/event/nc_kqueue.c
src/hashkit/nc_crc16.c
src/hashkit/nc_crc32.c
src/hashkit/nc_fnv.c
src/hashkit/nc_hashkit.h
src/hashkit/nc_hsieh.c
src/hashkit/nc_jenkins.c
src/hashkit/nc_ketama.c
src/hashkit/nc_md5.c
src/hashkit/nc_modula.c
src/hashkit/nc_murmur.c
src/hashkit/nc_one_at_a_time.c
src/hashkit/nc_random.c
src/hdr_histogram/hdr_atomic.h
src/hdr_histogram/hdr_encoding.c
src/hdr_histogram/hdr_encoding.h
src/hdr_histogram/hdr_endian.h
src/hdr_histogram/hdr_histogram.c
src/hdr_histogram/hdr_histogram.h
src/hdr_histogram/hdr_histogram_log.c
src/hdr_histogram/hdr_histogram_log.h
src/hdr_histogram/hdr_interval_recorder.c
src/hdr_histogram/hdr_interval_recorder.h
src/hdr_histogram/hdr_tests.h
src/hdr_histogram/hdr_thread.c
src/hdr_histogram/hdr_thread.h
src/hdr_histogram/hdr_time.c
src/hdr_histogram/hdr_time.h
src/hdr_histogram/hdr_writer_reader_phaser.c
src/hdr_histogram/hdr_writer_reader_phaser.h
src/main.c
src/nc.c
src/nc_array.c
src/nc_array.h
src/nc_client.c
src/nc_client.h
src/nc_conf.c
src/nc_conf.h
src/nc_connection.c
src/nc_connection.h
src/nc_core.c
src/nc_core.h
src/nc_hcdapi.c
src/nc_hcdapi.h
src/nc_log.c
src/nc_log.h
src/nc_mbuf.c
src/nc_mbuf.h
src/nc_message.c
src/nc_message.h
src/nc_proxy.c
src/nc_proxy.h
src/nc_queue.h
src/nc_rbtree.c
src/nc_rbtree.h
src/nc_request.c
src/nc_response.c
src/nc_server.c
src/nc_server.h
src/nc_signal.c
src/nc_signal.h
src/nc_stats.c
src/nc_stats.h
src/nc_string.c
src/nc_string.h
src/nc_util.c
src/nc_util.h
src/parson/parson.c
src/parson/parson.h
src/proto/nc_memcache.c
src/proto/nc_proto.h
src/proto/nc_redis.c
src/zkutil.c
src/zkutil.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/errno.h
/usr/include/execinfo.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/netinet/tcp.h
/usr/include/poll.h
/usr/include/pthread.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/epoll.h
/usr/include/sys/ioctl.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/uio.h
/usr/include/sys/un.h
/usr/include/sys/utsname.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/zlib.h
/usr/include/zookeeper/zookeeper.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/endian.h
/usr/include/bits/environments.h
/usr/include/bits/epoll.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/math-finite.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/netdb.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/setjmp.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/uio.h
/usr/include/bits/unistd.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/rpc/netdb.h
/usr/include/sys/cdefs.h
/usr/include/sys/poll.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/asm/socket.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/poll.h
/usr/include/bits/poll2.h
/usr/include/bits/socket_type.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/stdc-predef.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm-generic/socket.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/linux/limits.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm/sockios.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/gnu/option-groups.h
/usr/include/linux/ioctl.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/sockios.h
/usr/include/asm/ioctl.h
/usr/include/asm-generic/ioctl.h
